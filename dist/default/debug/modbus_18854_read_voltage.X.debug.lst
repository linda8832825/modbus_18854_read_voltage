

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Feb 24 16:52:10 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18854
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x320,16
    81                           	dabs	1,0x2A0,80
    82                           	dabs	1,0x25C,20
    83                           	dabs	1,0x217C,0,_Coulomb_Data
    84                           	dabs	1,0x7E,2
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 09/04/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18854 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  001C                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  0110                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  018E                     	;# 
   214  018F                     	;# 
   215  0190                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0198                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019C                     	;# 
   225  020C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020F                     	;# 
   230  020F                     	;# 
   231  0210                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0218                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021B                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021C                     	;# 
   253  021D                     	;# 
   254  021D                     	;# 
   255  021E                     	;# 
   256  021F                     	;# 
   257  028C                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028D                     	;# 
   261  028E                     	;# 
   262  028F                     	;# 
   263  0290                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0296                     	;# 
   274  0297                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0317                     	;# 
   299  0318                     	;# 
   300  0318                     	;# 
   301  0319                     	;# 
   302  031A                     	;# 
   303  031B                     	;# 
   304  031C                     	;# 
   305  031C                     	;# 
   306  031D                     	;# 
   307  031E                     	;# 
   308  031F                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  040C                     	;# 
   318  040D                     	;# 
   319  040E                     	;# 
   320  040F                     	;# 
   321  0410                     	;# 
   322  0411                     	;# 
   323  0416                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  0418                     	;# 
   327  0418                     	;# 
   328  0419                     	;# 
   329  041A                     	;# 
   330  041A                     	;# 
   331  041B                     	;# 
   332  041C                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  041F                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  060C                     	;# 
   392  060D                     	;# 
   393  060E                     	;# 
   394  060F                     	;# 
   395  0610                     	;# 
   396  0611                     	;# 
   397  0612                     	;# 
   398  0613                     	;# 
   399  0614                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0618                     	;# 
   403  0619                     	;# 
   404  061A                     	;# 
   405  061B                     	;# 
   406  061C                     	;# 
   407  061D                     	;# 
   408  061E                     	;# 
   409  068C                     	;# 
   410  068D                     	;# 
   411  068E                     	;# 
   412  068F                     	;# 
   413  0690                     	;# 
   414  0691                     	;# 
   415  0692                     	;# 
   416  0693                     	;# 
   417  0694                     	;# 
   418  070C                     	;# 
   419  070D                     	;# 
   420  070E                     	;# 
   421  070F                     	;# 
   422  0710                     	;# 
   423  0711                     	;# 
   424  0712                     	;# 
   425  0713                     	;# 
   426  0714                     	;# 
   427  0716                     	;# 
   428  0717                     	;# 
   429  0718                     	;# 
   430  0719                     	;# 
   431  071A                     	;# 
   432  071B                     	;# 
   433  071C                     	;# 
   434  071D                     	;# 
   435  071E                     	;# 
   436  0796                     	;# 
   437  0797                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  079B                     	;# 
   442  080C                     	;# 
   443  080D                     	;# 
   444  080E                     	;# 
   445  080F                     	;# 
   446  0810                     	;# 
   447  0811                     	;# 
   448  0812                     	;# 
   449  0813                     	;# 
   450  0814                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  098F                     	;# 
   477  098F                     	;# 
   478  0990                     	;# 
   479  0991                     	;# 
   480  0992                     	;# 
   481  0993                     	;# 
   482  0994                     	;# 
   483  0995                     	;# 
   484  0996                     	;# 
   485  0997                     	;# 
   486  0E0F                     	;# 
   487  0E10                     	;# 
   488  0E11                     	;# 
   489  0E12                     	;# 
   490  0E13                     	;# 
   491  0E14                     	;# 
   492  0E15                     	;# 
   493  0E16                     	;# 
   494  0E17                     	;# 
   495  0E18                     	;# 
   496  0E19                     	;# 
   497  0E1A                     	;# 
   498  0E1B                     	;# 
   499  0E1C                     	;# 
   500  0E1D                     	;# 
   501  0E1E                     	;# 
   502  0E1F                     	;# 
   503  0E20                     	;# 
   504  0E21                     	;# 
   505  0E22                     	;# 
   506  0E23                     	;# 
   507  0E24                     	;# 
   508  0E25                     	;# 
   509  0E26                     	;# 
   510  0E27                     	;# 
   511  0E28                     	;# 
   512  0E29                     	;# 
   513  0E2A                     	;# 
   514  0E2B                     	;# 
   515  0E2C                     	;# 
   516  0E2D                     	;# 
   517  0E2E                     	;# 
   518  0E2F                     	;# 
   519  0E30                     	;# 
   520  0E31                     	;# 
   521  0E32                     	;# 
   522  0E33                     	;# 
   523  0E34                     	;# 
   524  0E35                     	;# 
   525  0E36                     	;# 
   526  0E37                     	;# 
   527  0E8F                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E93                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0E96                     	;# 
   535  0E97                     	;# 
   536  0E9C                     	;# 
   537  0E9D                     	;# 
   538  0E9E                     	;# 
   539  0EA1                     	;# 
   540  0EA2                     	;# 
   541  0EA3                     	;# 
   542  0EA4                     	;# 
   543  0EA5                     	;# 
   544  0EA9                     	;# 
   545  0EAA                     	;# 
   546  0EAB                     	;# 
   547  0EAC                     	;# 
   548  0EB1                     	;# 
   549  0EB2                     	;# 
   550  0EB3                     	;# 
   551  0EB8                     	;# 
   552  0EB9                     	;# 
   553  0EBA                     	;# 
   554  0EBB                     	;# 
   555  0EBC                     	;# 
   556  0EBD                     	;# 
   557  0EBE                     	;# 
   558  0EC3                     	;# 
   559  0EC5                     	;# 
   560  0EC6                     	;# 
   561  0EC7                     	;# 
   562  0EC8                     	;# 
   563  0EC9                     	;# 
   564  0ECA                     	;# 
   565  0ECB                     	;# 
   566  0ECC                     	;# 
   567  0F10                     	;# 
   568  0F11                     	;# 
   569  0F12                     	;# 
   570  0F13                     	;# 
   571  0F14                     	;# 
   572  0F15                     	;# 
   573  0F16                     	;# 
   574  0F17                     	;# 
   575  0F18                     	;# 
   576  0F19                     	;# 
   577  0F1A                     	;# 
   578  0F1B                     	;# 
   579  0F1C                     	;# 
   580  0F1D                     	;# 
   581  0F1E                     	;# 
   582  0F1F                     	;# 
   583  0F20                     	;# 
   584  0F21                     	;# 
   585  0F22                     	;# 
   586  0F23                     	;# 
   587  0F24                     	;# 
   588  0F25                     	;# 
   589  0F26                     	;# 
   590  0F27                     	;# 
   591  0F38                     	;# 
   592  0F39                     	;# 
   593  0F3A                     	;# 
   594  0F3B                     	;# 
   595  0F3C                     	;# 
   596  0F3D                     	;# 
   597  0F3E                     	;# 
   598  0F3F                     	;# 
   599  0F40                     	;# 
   600  0F41                     	;# 
   601  0F43                     	;# 
   602  0F44                     	;# 
   603  0F45                     	;# 
   604  0F46                     	;# 
   605  0F47                     	;# 
   606  0F48                     	;# 
   607  0F49                     	;# 
   608  0F4A                     	;# 
   609  0F4B                     	;# 
   610  0F4C                     	;# 
   611  0F4E                     	;# 
   612  0F4F                     	;# 
   613  0F50                     	;# 
   614  0F51                     	;# 
   615  0F52                     	;# 
   616  0F53                     	;# 
   617  0F54                     	;# 
   618  0F55                     	;# 
   619  0F56                     	;# 
   620  0F57                     	;# 
   621  0F65                     	;# 
   622  0F68                     	;# 
   623  0F69                     	;# 
   624  0F6A                     	;# 
   625  0F6B                     	;# 
   626  0FE4                     	;# 
   627  0FE5                     	;# 
   628  0FE6                     	;# 
   629  0FE7                     	;# 
   630  0FE8                     	;# 
   631  0FE9                     	;# 
   632  0FEA                     	;# 
   633  0FEB                     	;# 
   634  0FED                     	;# 
   635  0FEE                     	;# 
   636  0FEF                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000D                     	;# 
   651  000E                     	;# 
   652  0010                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  001C                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001D                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  008C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0090                     	;# 
   673  0091                     	;# 
   674  0093                     	;# 
   675  0094                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  0110                     	;# 
   692  0110                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0112                     	;# 
   696  0113                     	;# 
   697  0114                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0196                     	;# 
   736  0197                     	;# 
   737  0198                     	;# 
   738  0199                     	;# 
   739  019A                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  020C                     	;# 
   743  020C                     	;# 
   744  020D                     	;# 
   745  020E                     	;# 
   746  020F                     	;# 
   747  020F                     	;# 
   748  0210                     	;# 
   749  0210                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0214                     	;# 
   756  0215                     	;# 
   757  0215                     	;# 
   758  0216                     	;# 
   759  0216                     	;# 
   760  0217                     	;# 
   761  0217                     	;# 
   762  0218                     	;# 
   763  0218                     	;# 
   764  0219                     	;# 
   765  021A                     	;# 
   766  021B                     	;# 
   767  021B                     	;# 
   768  021C                     	;# 
   769  021C                     	;# 
   770  021D                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  028C                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  028F                     	;# 
   780  0290                     	;# 
   781  0290                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0292                     	;# 
   785  0293                     	;# 
   786  0293                     	;# 
   787  0294                     	;# 
   788  0295                     	;# 
   789  0296                     	;# 
   790  0296                     	;# 
   791  0297                     	;# 
   792  0298                     	;# 
   793  0298                     	;# 
   794  0299                     	;# 
   795  0299                     	;# 
   796  029A                     	;# 
   797  029B                     	;# 
   798  029C                     	;# 
   799  029C                     	;# 
   800  029D                     	;# 
   801  030C                     	;# 
   802  030C                     	;# 
   803  030D                     	;# 
   804  030E                     	;# 
   805  030F                     	;# 
   806  0310                     	;# 
   807  0310                     	;# 
   808  0311                     	;# 
   809  0312                     	;# 
   810  0313                     	;# 
   811  0314                     	;# 
   812  0314                     	;# 
   813  0315                     	;# 
   814  0316                     	;# 
   815  0317                     	;# 
   816  0318                     	;# 
   817  0318                     	;# 
   818  0319                     	;# 
   819  031A                     	;# 
   820  031B                     	;# 
   821  031C                     	;# 
   822  031C                     	;# 
   823  031D                     	;# 
   824  031E                     	;# 
   825  031F                     	;# 
   826  038C                     	;# 
   827  038C                     	;# 
   828  038D                     	;# 
   829  038E                     	;# 
   830  0390                     	;# 
   831  0390                     	;# 
   832  0391                     	;# 
   833  0392                     	;# 
   834  040C                     	;# 
   835  040D                     	;# 
   836  040E                     	;# 
   837  040F                     	;# 
   838  0410                     	;# 
   839  0411                     	;# 
   840  0416                     	;# 
   841  0416                     	;# 
   842  0417                     	;# 
   843  0418                     	;# 
   844  0418                     	;# 
   845  0419                     	;# 
   846  041A                     	;# 
   847  041A                     	;# 
   848  041B                     	;# 
   849  041C                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  041F                     	;# 
   854  048C                     	;# 
   855  048C                     	;# 
   856  048D                     	;# 
   857  048E                     	;# 
   858  048F                     	;# 
   859  048F                     	;# 
   860  0490                     	;# 
   861  0491                     	;# 
   862  0492                     	;# 
   863  0492                     	;# 
   864  0493                     	;# 
   865  0494                     	;# 
   866  0495                     	;# 
   867  0495                     	;# 
   868  0496                     	;# 
   869  0497                     	;# 
   870  0498                     	;# 
   871  0499                     	;# 
   872  049A                     	;# 
   873  049B                     	;# 
   874  049C                     	;# 
   875  049D                     	;# 
   876  050C                     	;# 
   877  050C                     	;# 
   878  050D                     	;# 
   879  050E                     	;# 
   880  050F                     	;# 
   881  050F                     	;# 
   882  0510                     	;# 
   883  0511                     	;# 
   884  0512                     	;# 
   885  0512                     	;# 
   886  0513                     	;# 
   887  0514                     	;# 
   888  0515                     	;# 
   889  0515                     	;# 
   890  0516                     	;# 
   891  0517                     	;# 
   892  0518                     	;# 
   893  0519                     	;# 
   894  051A                     	;# 
   895  051B                     	;# 
   896  051C                     	;# 
   897  051D                     	;# 
   898  058C                     	;# 
   899  058C                     	;# 
   900  058D                     	;# 
   901  058E                     	;# 
   902  058F                     	;# 
   903  058F                     	;# 
   904  0590                     	;# 
   905  0591                     	;# 
   906  0592                     	;# 
   907  0593                     	;# 
   908  060C                     	;# 
   909  060D                     	;# 
   910  060E                     	;# 
   911  060F                     	;# 
   912  0610                     	;# 
   913  0611                     	;# 
   914  0612                     	;# 
   915  0613                     	;# 
   916  0614                     	;# 
   917  0616                     	;# 
   918  0617                     	;# 
   919  0618                     	;# 
   920  0619                     	;# 
   921  061A                     	;# 
   922  061B                     	;# 
   923  061C                     	;# 
   924  061D                     	;# 
   925  061E                     	;# 
   926  068C                     	;# 
   927  068D                     	;# 
   928  068E                     	;# 
   929  068F                     	;# 
   930  0690                     	;# 
   931  0691                     	;# 
   932  0692                     	;# 
   933  0693                     	;# 
   934  0694                     	;# 
   935  070C                     	;# 
   936  070D                     	;# 
   937  070E                     	;# 
   938  070F                     	;# 
   939  0710                     	;# 
   940  0711                     	;# 
   941  0712                     	;# 
   942  0713                     	;# 
   943  0714                     	;# 
   944  0716                     	;# 
   945  0717                     	;# 
   946  0718                     	;# 
   947  0719                     	;# 
   948  071A                     	;# 
   949  071B                     	;# 
   950  071C                     	;# 
   951  071D                     	;# 
   952  071E                     	;# 
   953  0796                     	;# 
   954  0797                     	;# 
   955  0798                     	;# 
   956  0799                     	;# 
   957  079A                     	;# 
   958  079B                     	;# 
   959  080C                     	;# 
   960  080D                     	;# 
   961  080E                     	;# 
   962  080F                     	;# 
   963  0810                     	;# 
   964  0811                     	;# 
   965  0812                     	;# 
   966  0813                     	;# 
   967  0814                     	;# 
   968  081A                     	;# 
   969  081B                     	;# 
   970  081C                     	;# 
   971  081D                     	;# 
   972  081E                     	;# 
   973  081F                     	;# 
   974  088C                     	;# 
   975  088D                     	;# 
   976  088E                     	;# 
   977  088F                     	;# 
   978  0890                     	;# 
   979  0891                     	;# 
   980  0892                     	;# 
   981  0893                     	;# 
   982  0895                     	;# 
   983  0896                     	;# 
   984  0897                     	;# 
   985  0898                     	;# 
   986  0899                     	;# 
   987  089A                     	;# 
   988  089B                     	;# 
   989  090C                     	;# 
   990  090E                     	;# 
   991  090F                     	;# 
   992  091F                     	;# 
   993  098F                     	;# 
   994  098F                     	;# 
   995  0990                     	;# 
   996  0991                     	;# 
   997  0992                     	;# 
   998  0993                     	;# 
   999  0994                     	;# 
  1000  0995                     	;# 
  1001  0996                     	;# 
  1002  0997                     	;# 
  1003  0E0F                     	;# 
  1004  0E10                     	;# 
  1005  0E11                     	;# 
  1006  0E12                     	;# 
  1007  0E13                     	;# 
  1008  0E14                     	;# 
  1009  0E15                     	;# 
  1010  0E16                     	;# 
  1011  0E17                     	;# 
  1012  0E18                     	;# 
  1013  0E19                     	;# 
  1014  0E1A                     	;# 
  1015  0E1B                     	;# 
  1016  0E1C                     	;# 
  1017  0E1D                     	;# 
  1018  0E1E                     	;# 
  1019  0E1F                     	;# 
  1020  0E20                     	;# 
  1021  0E21                     	;# 
  1022  0E22                     	;# 
  1023  0E23                     	;# 
  1024  0E24                     	;# 
  1025  0E25                     	;# 
  1026  0E26                     	;# 
  1027  0E27                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E2C                     	;# 
  1033  0E2D                     	;# 
  1034  0E2E                     	;# 
  1035  0E2F                     	;# 
  1036  0E30                     	;# 
  1037  0E31                     	;# 
  1038  0E32                     	;# 
  1039  0E33                     	;# 
  1040  0E34                     	;# 
  1041  0E35                     	;# 
  1042  0E36                     	;# 
  1043  0E37                     	;# 
  1044  0E8F                     	;# 
  1045  0E90                     	;# 
  1046  0E91                     	;# 
  1047  0E92                     	;# 
  1048  0E93                     	;# 
  1049  0E94                     	;# 
  1050  0E95                     	;# 
  1051  0E96                     	;# 
  1052  0E97                     	;# 
  1053  0E9C                     	;# 
  1054  0E9D                     	;# 
  1055  0E9E                     	;# 
  1056  0EA1                     	;# 
  1057  0EA2                     	;# 
  1058  0EA3                     	;# 
  1059  0EA4                     	;# 
  1060  0EA5                     	;# 
  1061  0EA9                     	;# 
  1062  0EAA                     	;# 
  1063  0EAB                     	;# 
  1064  0EAC                     	;# 
  1065  0EB1                     	;# 
  1066  0EB2                     	;# 
  1067  0EB3                     	;# 
  1068  0EB8                     	;# 
  1069  0EB9                     	;# 
  1070  0EBA                     	;# 
  1071  0EBB                     	;# 
  1072  0EBC                     	;# 
  1073  0EBD                     	;# 
  1074  0EBE                     	;# 
  1075  0EC3                     	;# 
  1076  0EC5                     	;# 
  1077  0EC6                     	;# 
  1078  0EC7                     	;# 
  1079  0EC8                     	;# 
  1080  0EC9                     	;# 
  1081  0ECA                     	;# 
  1082  0ECB                     	;# 
  1083  0ECC                     	;# 
  1084  0F10                     	;# 
  1085  0F11                     	;# 
  1086  0F12                     	;# 
  1087  0F13                     	;# 
  1088  0F14                     	;# 
  1089  0F15                     	;# 
  1090  0F16                     	;# 
  1091  0F17                     	;# 
  1092  0F18                     	;# 
  1093  0F19                     	;# 
  1094  0F1A                     	;# 
  1095  0F1B                     	;# 
  1096  0F1C                     	;# 
  1097  0F1D                     	;# 
  1098  0F1E                     	;# 
  1099  0F1F                     	;# 
  1100  0F20                     	;# 
  1101  0F21                     	;# 
  1102  0F22                     	;# 
  1103  0F23                     	;# 
  1104  0F24                     	;# 
  1105  0F25                     	;# 
  1106  0F26                     	;# 
  1107  0F27                     	;# 
  1108  0F38                     	;# 
  1109  0F39                     	;# 
  1110  0F3A                     	;# 
  1111  0F3B                     	;# 
  1112  0F3C                     	;# 
  1113  0F3D                     	;# 
  1114  0F3E                     	;# 
  1115  0F3F                     	;# 
  1116  0F40                     	;# 
  1117  0F41                     	;# 
  1118  0F43                     	;# 
  1119  0F44                     	;# 
  1120  0F45                     	;# 
  1121  0F46                     	;# 
  1122  0F47                     	;# 
  1123  0F48                     	;# 
  1124  0F49                     	;# 
  1125  0F4A                     	;# 
  1126  0F4B                     	;# 
  1127  0F4C                     	;# 
  1128  0F4E                     	;# 
  1129  0F4F                     	;# 
  1130  0F50                     	;# 
  1131  0F51                     	;# 
  1132  0F52                     	;# 
  1133  0F53                     	;# 
  1134  0F54                     	;# 
  1135  0F55                     	;# 
  1136  0F56                     	;# 
  1137  0F57                     	;# 
  1138  0F65                     	;# 
  1139  0F68                     	;# 
  1140  0F69                     	;# 
  1141  0F6A                     	;# 
  1142  0F6B                     	;# 
  1143  0FE4                     	;# 
  1144  0FE5                     	;# 
  1145  0FE6                     	;# 
  1146  0FE7                     	;# 
  1147  0FE8                     	;# 
  1148  0FE9                     	;# 
  1149  0FEA                     	;# 
  1150  0FEB                     	;# 
  1151  0FED                     	;# 
  1152  0FEE                     	;# 
  1153  0FEF                     	;# 
  1154  0000                     	;# 
  1155  0001                     	;# 
  1156  0002                     	;# 
  1157  0003                     	;# 
  1158  0004                     	;# 
  1159  0005                     	;# 
  1160  0006                     	;# 
  1161  0007                     	;# 
  1162  0008                     	;# 
  1163  0009                     	;# 
  1164  000A                     	;# 
  1165  000B                     	;# 
  1166  000C                     	;# 
  1167  000D                     	;# 
  1168  000E                     	;# 
  1169  0010                     	;# 
  1170  0011                     	;# 
  1171  0012                     	;# 
  1172  0013                     	;# 
  1173  0016                     	;# 
  1174  0017                     	;# 
  1175  0018                     	;# 
  1176  001C                     	;# 
  1177  001C                     	;# 
  1178  001D                     	;# 
  1179  001D                     	;# 
  1180  001E                     	;# 
  1181  001F                     	;# 
  1182  008C                     	;# 
  1183  008C                     	;# 
  1184  008D                     	;# 
  1185  008E                     	;# 
  1186  008E                     	;# 
  1187  008F                     	;# 
  1188  0090                     	;# 
  1189  0090                     	;# 
  1190  0091                     	;# 
  1191  0093                     	;# 
  1192  0094                     	;# 
  1193  0095                     	;# 
  1194  0096                     	;# 
  1195  0097                     	;# 
  1196  0098                     	;# 
  1197  0099                     	;# 
  1198  009A                     	;# 
  1199  009B                     	;# 
  1200  009C                     	;# 
  1201  009D                     	;# 
  1202  009E                     	;# 
  1203  010C                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  010E                     	;# 
  1207  010F                     	;# 
  1208  0110                     	;# 
  1209  0110                     	;# 
  1210  0111                     	;# 
  1211  0112                     	;# 
  1212  0112                     	;# 
  1213  0113                     	;# 
  1214  0114                     	;# 
  1215  0114                     	;# 
  1216  0115                     	;# 
  1217  0116                     	;# 
  1218  0116                     	;# 
  1219  0117                     	;# 
  1220  0119                     	;# 
  1221  0119                     	;# 
  1222  0119                     	;# 
  1223  011A                     	;# 
  1224  011A                     	;# 
  1225  011A                     	;# 
  1226  011B                     	;# 
  1227  011B                     	;# 
  1228  011B                     	;# 
  1229  011B                     	;# 
  1230  011B                     	;# 
  1231  011C                     	;# 
  1232  011C                     	;# 
  1233  011C                     	;# 
  1234  011D                     	;# 
  1235  011D                     	;# 
  1236  011D                     	;# 
  1237  011E                     	;# 
  1238  011E                     	;# 
  1239  011E                     	;# 
  1240  011F                     	;# 
  1241  011F                     	;# 
  1242  011F                     	;# 
  1243  011F                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  018E                     	;# 
  1248  018F                     	;# 
  1249  0190                     	;# 
  1250  0191                     	;# 
  1251  0192                     	;# 
  1252  0196                     	;# 
  1253  0197                     	;# 
  1254  0198                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  020C                     	;# 
  1260  020C                     	;# 
  1261  020D                     	;# 
  1262  020E                     	;# 
  1263  020F                     	;# 
  1264  020F                     	;# 
  1265  0210                     	;# 
  1266  0210                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0218                     	;# 
  1280  0218                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021B                     	;# 
  1285  021C                     	;# 
  1286  021C                     	;# 
  1287  021D                     	;# 
  1288  021D                     	;# 
  1289  021E                     	;# 
  1290  021F                     	;# 
  1291  028C                     	;# 
  1292  028C                     	;# 
  1293  028D                     	;# 
  1294  028D                     	;# 
  1295  028E                     	;# 
  1296  028F                     	;# 
  1297  0290                     	;# 
  1298  0290                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0296                     	;# 
  1308  0297                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  029B                     	;# 
  1315  029C                     	;# 
  1316  029C                     	;# 
  1317  029D                     	;# 
  1318  030C                     	;# 
  1319  030C                     	;# 
  1320  030D                     	;# 
  1321  030E                     	;# 
  1322  030F                     	;# 
  1323  0310                     	;# 
  1324  0310                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0314                     	;# 
  1329  0314                     	;# 
  1330  0315                     	;# 
  1331  0316                     	;# 
  1332  0317                     	;# 
  1333  0318                     	;# 
  1334  0318                     	;# 
  1335  0319                     	;# 
  1336  031A                     	;# 
  1337  031B                     	;# 
  1338  031C                     	;# 
  1339  031C                     	;# 
  1340  031D                     	;# 
  1341  031E                     	;# 
  1342  031F                     	;# 
  1343  038C                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  038E                     	;# 
  1347  0390                     	;# 
  1348  0390                     	;# 
  1349  0391                     	;# 
  1350  0392                     	;# 
  1351  040C                     	;# 
  1352  040D                     	;# 
  1353  040E                     	;# 
  1354  040F                     	;# 
  1355  0410                     	;# 
  1356  0411                     	;# 
  1357  0416                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041A                     	;# 
  1365  041B                     	;# 
  1366  041C                     	;# 
  1367  041C                     	;# 
  1368  041D                     	;# 
  1369  041E                     	;# 
  1370  041F                     	;# 
  1371  048C                     	;# 
  1372  048C                     	;# 
  1373  048D                     	;# 
  1374  048E                     	;# 
  1375  048F                     	;# 
  1376  048F                     	;# 
  1377  0490                     	;# 
  1378  0491                     	;# 
  1379  0492                     	;# 
  1380  0492                     	;# 
  1381  0493                     	;# 
  1382  0494                     	;# 
  1383  0495                     	;# 
  1384  0495                     	;# 
  1385  0496                     	;# 
  1386  0497                     	;# 
  1387  0498                     	;# 
  1388  0499                     	;# 
  1389  049A                     	;# 
  1390  049B                     	;# 
  1391  049C                     	;# 
  1392  049D                     	;# 
  1393  050C                     	;# 
  1394  050C                     	;# 
  1395  050D                     	;# 
  1396  050E                     	;# 
  1397  050F                     	;# 
  1398  050F                     	;# 
  1399  0510                     	;# 
  1400  0511                     	;# 
  1401  0512                     	;# 
  1402  0512                     	;# 
  1403  0513                     	;# 
  1404  0514                     	;# 
  1405  0515                     	;# 
  1406  0515                     	;# 
  1407  0516                     	;# 
  1408  0517                     	;# 
  1409  0518                     	;# 
  1410  0519                     	;# 
  1411  051A                     	;# 
  1412  051B                     	;# 
  1413  051C                     	;# 
  1414  051D                     	;# 
  1415  058C                     	;# 
  1416  058C                     	;# 
  1417  058D                     	;# 
  1418  058E                     	;# 
  1419  058F                     	;# 
  1420  058F                     	;# 
  1421  0590                     	;# 
  1422  0591                     	;# 
  1423  0592                     	;# 
  1424  0593                     	;# 
  1425  060C                     	;# 
  1426  060D                     	;# 
  1427  060E                     	;# 
  1428  060F                     	;# 
  1429  0610                     	;# 
  1430  0611                     	;# 
  1431  0612                     	;# 
  1432  0613                     	;# 
  1433  0614                     	;# 
  1434  0616                     	;# 
  1435  0617                     	;# 
  1436  0618                     	;# 
  1437  0619                     	;# 
  1438  061A                     	;# 
  1439  061B                     	;# 
  1440  061C                     	;# 
  1441  061D                     	;# 
  1442  061E                     	;# 
  1443  068C                     	;# 
  1444  068D                     	;# 
  1445  068E                     	;# 
  1446  068F                     	;# 
  1447  0690                     	;# 
  1448  0691                     	;# 
  1449  0692                     	;# 
  1450  0693                     	;# 
  1451  0694                     	;# 
  1452  070C                     	;# 
  1453  070D                     	;# 
  1454  070E                     	;# 
  1455  070F                     	;# 
  1456  0710                     	;# 
  1457  0711                     	;# 
  1458  0712                     	;# 
  1459  0713                     	;# 
  1460  0714                     	;# 
  1461  0716                     	;# 
  1462  0717                     	;# 
  1463  0718                     	;# 
  1464  0719                     	;# 
  1465  071A                     	;# 
  1466  071B                     	;# 
  1467  071C                     	;# 
  1468  071D                     	;# 
  1469  071E                     	;# 
  1470  0796                     	;# 
  1471  0797                     	;# 
  1472  0798                     	;# 
  1473  0799                     	;# 
  1474  079A                     	;# 
  1475  079B                     	;# 
  1476  080C                     	;# 
  1477  080D                     	;# 
  1478  080E                     	;# 
  1479  080F                     	;# 
  1480  0810                     	;# 
  1481  0811                     	;# 
  1482  0812                     	;# 
  1483  0813                     	;# 
  1484  0814                     	;# 
  1485  081A                     	;# 
  1486  081B                     	;# 
  1487  081C                     	;# 
  1488  081D                     	;# 
  1489  081E                     	;# 
  1490  081F                     	;# 
  1491  088C                     	;# 
  1492  088D                     	;# 
  1493  088E                     	;# 
  1494  088F                     	;# 
  1495  0890                     	;# 
  1496  0891                     	;# 
  1497  0892                     	;# 
  1498  0893                     	;# 
  1499  0895                     	;# 
  1500  0896                     	;# 
  1501  0897                     	;# 
  1502  0898                     	;# 
  1503  0899                     	;# 
  1504  089A                     	;# 
  1505  089B                     	;# 
  1506  090C                     	;# 
  1507  090E                     	;# 
  1508  090F                     	;# 
  1509  091F                     	;# 
  1510  098F                     	;# 
  1511  098F                     	;# 
  1512  0990                     	;# 
  1513  0991                     	;# 
  1514  0992                     	;# 
  1515  0993                     	;# 
  1516  0994                     	;# 
  1517  0995                     	;# 
  1518  0996                     	;# 
  1519  0997                     	;# 
  1520  0E0F                     	;# 
  1521  0E10                     	;# 
  1522  0E11                     	;# 
  1523  0E12                     	;# 
  1524  0E13                     	;# 
  1525  0E14                     	;# 
  1526  0E15                     	;# 
  1527  0E16                     	;# 
  1528  0E17                     	;# 
  1529  0E18                     	;# 
  1530  0E19                     	;# 
  1531  0E1A                     	;# 
  1532  0E1B                     	;# 
  1533  0E1C                     	;# 
  1534  0E1D                     	;# 
  1535  0E1E                     	;# 
  1536  0E1F                     	;# 
  1537  0E20                     	;# 
  1538  0E21                     	;# 
  1539  0E22                     	;# 
  1540  0E23                     	;# 
  1541  0E24                     	;# 
  1542  0E25                     	;# 
  1543  0E26                     	;# 
  1544  0E27                     	;# 
  1545  0E28                     	;# 
  1546  0E29                     	;# 
  1547  0E2A                     	;# 
  1548  0E2B                     	;# 
  1549  0E2C                     	;# 
  1550  0E2D                     	;# 
  1551  0E2E                     	;# 
  1552  0E2F                     	;# 
  1553  0E30                     	;# 
  1554  0E31                     	;# 
  1555  0E32                     	;# 
  1556  0E33                     	;# 
  1557  0E34                     	;# 
  1558  0E35                     	;# 
  1559  0E36                     	;# 
  1560  0E37                     	;# 
  1561  0E8F                     	;# 
  1562  0E90                     	;# 
  1563  0E91                     	;# 
  1564  0E92                     	;# 
  1565  0E93                     	;# 
  1566  0E94                     	;# 
  1567  0E95                     	;# 
  1568  0E96                     	;# 
  1569  0E97                     	;# 
  1570  0E9C                     	;# 
  1571  0E9D                     	;# 
  1572  0E9E                     	;# 
  1573  0EA1                     	;# 
  1574  0EA2                     	;# 
  1575  0EA3                     	;# 
  1576  0EA4                     	;# 
  1577  0EA5                     	;# 
  1578  0EA9                     	;# 
  1579  0EAA                     	;# 
  1580  0EAB                     	;# 
  1581  0EAC                     	;# 
  1582  0EB1                     	;# 
  1583  0EB2                     	;# 
  1584  0EB3                     	;# 
  1585  0EB8                     	;# 
  1586  0EB9                     	;# 
  1587  0EBA                     	;# 
  1588  0EBB                     	;# 
  1589  0EBC                     	;# 
  1590  0EBD                     	;# 
  1591  0EBE                     	;# 
  1592  0EC3                     	;# 
  1593  0EC5                     	;# 
  1594  0EC6                     	;# 
  1595  0EC7                     	;# 
  1596  0EC8                     	;# 
  1597  0EC9                     	;# 
  1598  0ECA                     	;# 
  1599  0ECB                     	;# 
  1600  0ECC                     	;# 
  1601  0F10                     	;# 
  1602  0F11                     	;# 
  1603  0F12                     	;# 
  1604  0F13                     	;# 
  1605  0F14                     	;# 
  1606  0F15                     	;# 
  1607  0F16                     	;# 
  1608  0F17                     	;# 
  1609  0F18                     	;# 
  1610  0F19                     	;# 
  1611  0F1A                     	;# 
  1612  0F1B                     	;# 
  1613  0F1C                     	;# 
  1614  0F1D                     	;# 
  1615  0F1E                     	;# 
  1616  0F1F                     	;# 
  1617  0F20                     	;# 
  1618  0F21                     	;# 
  1619  0F22                     	;# 
  1620  0F23                     	;# 
  1621  0F24                     	;# 
  1622  0F25                     	;# 
  1623  0F26                     	;# 
  1624  0F27                     	;# 
  1625  0F38                     	;# 
  1626  0F39                     	;# 
  1627  0F3A                     	;# 
  1628  0F3B                     	;# 
  1629  0F3C                     	;# 
  1630  0F3D                     	;# 
  1631  0F3E                     	;# 
  1632  0F3F                     	;# 
  1633  0F40                     	;# 
  1634  0F41                     	;# 
  1635  0F43                     	;# 
  1636  0F44                     	;# 
  1637  0F45                     	;# 
  1638  0F46                     	;# 
  1639  0F47                     	;# 
  1640  0F48                     	;# 
  1641  0F49                     	;# 
  1642  0F4A                     	;# 
  1643  0F4B                     	;# 
  1644  0F4C                     	;# 
  1645  0F4E                     	;# 
  1646  0F4F                     	;# 
  1647  0F50                     	;# 
  1648  0F51                     	;# 
  1649  0F52                     	;# 
  1650  0F53                     	;# 
  1651  0F54                     	;# 
  1652  0F55                     	;# 
  1653  0F56                     	;# 
  1654  0F57                     	;# 
  1655  0F65                     	;# 
  1656  0F68                     	;# 
  1657  0F69                     	;# 
  1658  0F6A                     	;# 
  1659  0F6B                     	;# 
  1660  0FE4                     	;# 
  1661  0FE5                     	;# 
  1662  0FE6                     	;# 
  1663  0FE7                     	;# 
  1664  0FE8                     	;# 
  1665  0FE9                     	;# 
  1666  0FEA                     	;# 
  1667  0FEB                     	;# 
  1668  0FED                     	;# 
  1669  0FEE                     	;# 
  1670  0FEF                     	;# 
  1671  0000                     	;# 
  1672  0001                     	;# 
  1673  0002                     	;# 
  1674  0003                     	;# 
  1675  0004                     	;# 
  1676  0005                     	;# 
  1677  0006                     	;# 
  1678  0007                     	;# 
  1679  0008                     	;# 
  1680  0009                     	;# 
  1681  000A                     	;# 
  1682  000B                     	;# 
  1683  000C                     	;# 
  1684  000D                     	;# 
  1685  000E                     	;# 
  1686  0010                     	;# 
  1687  0011                     	;# 
  1688  0012                     	;# 
  1689  0013                     	;# 
  1690  0016                     	;# 
  1691  0017                     	;# 
  1692  0018                     	;# 
  1693  001C                     	;# 
  1694  001C                     	;# 
  1695  001D                     	;# 
  1696  001D                     	;# 
  1697  001E                     	;# 
  1698  001F                     	;# 
  1699  008C                     	;# 
  1700  008C                     	;# 
  1701  008D                     	;# 
  1702  008E                     	;# 
  1703  008E                     	;# 
  1704  008F                     	;# 
  1705  0090                     	;# 
  1706  0090                     	;# 
  1707  0091                     	;# 
  1708  0093                     	;# 
  1709  0094                     	;# 
  1710  0095                     	;# 
  1711  0096                     	;# 
  1712  0097                     	;# 
  1713  0098                     	;# 
  1714  0099                     	;# 
  1715  009A                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  010E                     	;# 
  1723  010E                     	;# 
  1724  010F                     	;# 
  1725  0110                     	;# 
  1726  0110                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0114                     	;# 
  1733  0115                     	;# 
  1734  0116                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  0119                     	;# 
  1738  0119                     	;# 
  1739  0119                     	;# 
  1740  011A                     	;# 
  1741  011A                     	;# 
  1742  011A                     	;# 
  1743  011B                     	;# 
  1744  011B                     	;# 
  1745  011B                     	;# 
  1746  011B                     	;# 
  1747  011B                     	;# 
  1748  011C                     	;# 
  1749  011C                     	;# 
  1750  011C                     	;# 
  1751  011D                     	;# 
  1752  011D                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  011E                     	;# 
  1756  011E                     	;# 
  1757  011F                     	;# 
  1758  011F                     	;# 
  1759  011F                     	;# 
  1760  011F                     	;# 
  1761  011F                     	;# 
  1762  018C                     	;# 
  1763  018D                     	;# 
  1764  018E                     	;# 
  1765  018F                     	;# 
  1766  0190                     	;# 
  1767  0191                     	;# 
  1768  0192                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0198                     	;# 
  1772  0199                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019C                     	;# 
  1776  020C                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  020E                     	;# 
  1780  020F                     	;# 
  1781  020F                     	;# 
  1782  0210                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0214                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0218                     	;# 
  1797  0218                     	;# 
  1798  0219                     	;# 
  1799  021A                     	;# 
  1800  021B                     	;# 
  1801  021B                     	;# 
  1802  021C                     	;# 
  1803  021C                     	;# 
  1804  021D                     	;# 
  1805  021D                     	;# 
  1806  021E                     	;# 
  1807  021F                     	;# 
  1808  028C                     	;# 
  1809  028C                     	;# 
  1810  028D                     	;# 
  1811  028D                     	;# 
  1812  028E                     	;# 
  1813  028F                     	;# 
  1814  0290                     	;# 
  1815  0290                     	;# 
  1816  0291                     	;# 
  1817  0292                     	;# 
  1818  0292                     	;# 
  1819  0293                     	;# 
  1820  0293                     	;# 
  1821  0294                     	;# 
  1822  0295                     	;# 
  1823  0296                     	;# 
  1824  0296                     	;# 
  1825  0297                     	;# 
  1826  0298                     	;# 
  1827  0298                     	;# 
  1828  0299                     	;# 
  1829  0299                     	;# 
  1830  029A                     	;# 
  1831  029B                     	;# 
  1832  029C                     	;# 
  1833  029C                     	;# 
  1834  029D                     	;# 
  1835  030C                     	;# 
  1836  030C                     	;# 
  1837  030D                     	;# 
  1838  030E                     	;# 
  1839  030F                     	;# 
  1840  0310                     	;# 
  1841  0310                     	;# 
  1842  0311                     	;# 
  1843  0312                     	;# 
  1844  0313                     	;# 
  1845  0314                     	;# 
  1846  0314                     	;# 
  1847  0315                     	;# 
  1848  0316                     	;# 
  1849  0317                     	;# 
  1850  0318                     	;# 
  1851  0318                     	;# 
  1852  0319                     	;# 
  1853  031A                     	;# 
  1854  031B                     	;# 
  1855  031C                     	;# 
  1856  031C                     	;# 
  1857  031D                     	;# 
  1858  031E                     	;# 
  1859  031F                     	;# 
  1860  038C                     	;# 
  1861  038C                     	;# 
  1862  038D                     	;# 
  1863  038E                     	;# 
  1864  0390                     	;# 
  1865  0390                     	;# 
  1866  0391                     	;# 
  1867  0392                     	;# 
  1868  040C                     	;# 
  1869  040D                     	;# 
  1870  040E                     	;# 
  1871  040F                     	;# 
  1872  0410                     	;# 
  1873  0411                     	;# 
  1874  0416                     	;# 
  1875  0416                     	;# 
  1876  0417                     	;# 
  1877  0418                     	;# 
  1878  0418                     	;# 
  1879  0419                     	;# 
  1880  041A                     	;# 
  1881  041A                     	;# 
  1882  041B                     	;# 
  1883  041C                     	;# 
  1884  041C                     	;# 
  1885  041D                     	;# 
  1886  041E                     	;# 
  1887  041F                     	;# 
  1888  048C                     	;# 
  1889  048C                     	;# 
  1890  048D                     	;# 
  1891  048E                     	;# 
  1892  048F                     	;# 
  1893  048F                     	;# 
  1894  0490                     	;# 
  1895  0491                     	;# 
  1896  0492                     	;# 
  1897  0492                     	;# 
  1898  0493                     	;# 
  1899  0494                     	;# 
  1900  0495                     	;# 
  1901  0495                     	;# 
  1902  0496                     	;# 
  1903  0497                     	;# 
  1904  0498                     	;# 
  1905  0499                     	;# 
  1906  049A                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  050C                     	;# 
  1911  050C                     	;# 
  1912  050D                     	;# 
  1913  050E                     	;# 
  1914  050F                     	;# 
  1915  050F                     	;# 
  1916  0510                     	;# 
  1917  0511                     	;# 
  1918  0512                     	;# 
  1919  0512                     	;# 
  1920  0513                     	;# 
  1921  0514                     	;# 
  1922  0515                     	;# 
  1923  0515                     	;# 
  1924  0516                     	;# 
  1925  0517                     	;# 
  1926  0518                     	;# 
  1927  0519                     	;# 
  1928  051A                     	;# 
  1929  051B                     	;# 
  1930  051C                     	;# 
  1931  051D                     	;# 
  1932  058C                     	;# 
  1933  058C                     	;# 
  1934  058D                     	;# 
  1935  058E                     	;# 
  1936  058F                     	;# 
  1937  058F                     	;# 
  1938  0590                     	;# 
  1939  0591                     	;# 
  1940  0592                     	;# 
  1941  0593                     	;# 
  1942  060C                     	;# 
  1943  060D                     	;# 
  1944  060E                     	;# 
  1945  060F                     	;# 
  1946  0610                     	;# 
  1947  0611                     	;# 
  1948  0612                     	;# 
  1949  0613                     	;# 
  1950  0614                     	;# 
  1951  0616                     	;# 
  1952  0617                     	;# 
  1953  0618                     	;# 
  1954  0619                     	;# 
  1955  061A                     	;# 
  1956  061B                     	;# 
  1957  061C                     	;# 
  1958  061D                     	;# 
  1959  061E                     	;# 
  1960  068C                     	;# 
  1961  068D                     	;# 
  1962  068E                     	;# 
  1963  068F                     	;# 
  1964  0690                     	;# 
  1965  0691                     	;# 
  1966  0692                     	;# 
  1967  0693                     	;# 
  1968  0694                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0714                     	;# 
  1978  0716                     	;# 
  1979  0717                     	;# 
  1980  0718                     	;# 
  1981  0719                     	;# 
  1982  071A                     	;# 
  1983  071B                     	;# 
  1984  071C                     	;# 
  1985  071D                     	;# 
  1986  071E                     	;# 
  1987  0796                     	;# 
  1988  0797                     	;# 
  1989  0798                     	;# 
  1990  0799                     	;# 
  1991  079A                     	;# 
  1992  079B                     	;# 
  1993  080C                     	;# 
  1994  080D                     	;# 
  1995  080E                     	;# 
  1996  080F                     	;# 
  1997  0810                     	;# 
  1998  0811                     	;# 
  1999  0812                     	;# 
  2000  0813                     	;# 
  2001  0814                     	;# 
  2002  081A                     	;# 
  2003  081B                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  0897                     	;# 
  2019  0898                     	;# 
  2020  0899                     	;# 
  2021  089A                     	;# 
  2022  089B                     	;# 
  2023  090C                     	;# 
  2024  090E                     	;# 
  2025  090F                     	;# 
  2026  091F                     	;# 
  2027  098F                     	;# 
  2028  098F                     	;# 
  2029  0990                     	;# 
  2030  0991                     	;# 
  2031  0992                     	;# 
  2032  0993                     	;# 
  2033  0994                     	;# 
  2034  0995                     	;# 
  2035  0996                     	;# 
  2036  0997                     	;# 
  2037  0E0F                     	;# 
  2038  0E10                     	;# 
  2039  0E11                     	;# 
  2040  0E12                     	;# 
  2041  0E13                     	;# 
  2042  0E14                     	;# 
  2043  0E15                     	;# 
  2044  0E16                     	;# 
  2045  0E17                     	;# 
  2046  0E18                     	;# 
  2047  0E19                     	;# 
  2048  0E1A                     	;# 
  2049  0E1B                     	;# 
  2050  0E1C                     	;# 
  2051  0E1D                     	;# 
  2052  0E1E                     	;# 
  2053  0E1F                     	;# 
  2054  0E20                     	;# 
  2055  0E21                     	;# 
  2056  0E22                     	;# 
  2057  0E23                     	;# 
  2058  0E24                     	;# 
  2059  0E25                     	;# 
  2060  0E26                     	;# 
  2061  0E27                     	;# 
  2062  0E28                     	;# 
  2063  0E29                     	;# 
  2064  0E2A                     	;# 
  2065  0E2B                     	;# 
  2066  0E2C                     	;# 
  2067  0E2D                     	;# 
  2068  0E2E                     	;# 
  2069  0E2F                     	;# 
  2070  0E30                     	;# 
  2071  0E31                     	;# 
  2072  0E32                     	;# 
  2073  0E33                     	;# 
  2074  0E34                     	;# 
  2075  0E35                     	;# 
  2076  0E36                     	;# 
  2077  0E37                     	;# 
  2078  0E8F                     	;# 
  2079  0E90                     	;# 
  2080  0E91                     	;# 
  2081  0E92                     	;# 
  2082  0E93                     	;# 
  2083  0E94                     	;# 
  2084  0E95                     	;# 
  2085  0E96                     	;# 
  2086  0E97                     	;# 
  2087  0E9C                     	;# 
  2088  0E9D                     	;# 
  2089  0E9E                     	;# 
  2090  0EA1                     	;# 
  2091  0EA2                     	;# 
  2092  0EA3                     	;# 
  2093  0EA4                     	;# 
  2094  0EA5                     	;# 
  2095  0EA9                     	;# 
  2096  0EAA                     	;# 
  2097  0EAB                     	;# 
  2098  0EAC                     	;# 
  2099  0EB1                     	;# 
  2100  0EB2                     	;# 
  2101  0EB3                     	;# 
  2102  0EB8                     	;# 
  2103  0EB9                     	;# 
  2104  0EBA                     	;# 
  2105  0EBB                     	;# 
  2106  0EBC                     	;# 
  2107  0EBD                     	;# 
  2108  0EBE                     	;# 
  2109  0EC3                     	;# 
  2110  0EC5                     	;# 
  2111  0EC6                     	;# 
  2112  0EC7                     	;# 
  2113  0EC8                     	;# 
  2114  0EC9                     	;# 
  2115  0ECA                     	;# 
  2116  0ECB                     	;# 
  2117  0ECC                     	;# 
  2118  0F10                     	;# 
  2119  0F11                     	;# 
  2120  0F12                     	;# 
  2121  0F13                     	;# 
  2122  0F14                     	;# 
  2123  0F15                     	;# 
  2124  0F16                     	;# 
  2125  0F17                     	;# 
  2126  0F18                     	;# 
  2127  0F19                     	;# 
  2128  0F1A                     	;# 
  2129  0F1B                     	;# 
  2130  0F1C                     	;# 
  2131  0F1D                     	;# 
  2132  0F1E                     	;# 
  2133  0F1F                     	;# 
  2134  0F20                     	;# 
  2135  0F21                     	;# 
  2136  0F22                     	;# 
  2137  0F23                     	;# 
  2138  0F24                     	;# 
  2139  0F25                     	;# 
  2140  0F26                     	;# 
  2141  0F27                     	;# 
  2142  0F38                     	;# 
  2143  0F39                     	;# 
  2144  0F3A                     	;# 
  2145  0F3B                     	;# 
  2146  0F3C                     	;# 
  2147  0F3D                     	;# 
  2148  0F3E                     	;# 
  2149  0F3F                     	;# 
  2150  0F40                     	;# 
  2151  0F41                     	;# 
  2152  0F43                     	;# 
  2153  0F44                     	;# 
  2154  0F45                     	;# 
  2155  0F46                     	;# 
  2156  0F47                     	;# 
  2157  0F48                     	;# 
  2158  0F49                     	;# 
  2159  0F4A                     	;# 
  2160  0F4B                     	;# 
  2161  0F4C                     	;# 
  2162  0F4E                     	;# 
  2163  0F4F                     	;# 
  2164  0F50                     	;# 
  2165  0F51                     	;# 
  2166  0F52                     	;# 
  2167  0F53                     	;# 
  2168  0F54                     	;# 
  2169  0F55                     	;# 
  2170  0F56                     	;# 
  2171  0F57                     	;# 
  2172  0F65                     	;# 
  2173  0F68                     	;# 
  2174  0F69                     	;# 
  2175  0F6A                     	;# 
  2176  0F6B                     	;# 
  2177  0FE4                     	;# 
  2178  0FE5                     	;# 
  2179  0FE6                     	;# 
  2180  0FE7                     	;# 
  2181  0FE8                     	;# 
  2182  0FE9                     	;# 
  2183  0FEA                     	;# 
  2184  0FEB                     	;# 
  2185  0FED                     	;# 
  2186  0FEE                     	;# 
  2187  0FEF                     	;# 
  2188  0000                     	;# 
  2189  0001                     	;# 
  2190  0002                     	;# 
  2191  0003                     	;# 
  2192  0004                     	;# 
  2193  0005                     	;# 
  2194  0006                     	;# 
  2195  0007                     	;# 
  2196  0008                     	;# 
  2197  0009                     	;# 
  2198  000A                     	;# 
  2199  000B                     	;# 
  2200  000C                     	;# 
  2201  000D                     	;# 
  2202  000E                     	;# 
  2203  0010                     	;# 
  2204  0011                     	;# 
  2205  0012                     	;# 
  2206  0013                     	;# 
  2207  0016                     	;# 
  2208  0017                     	;# 
  2209  0018                     	;# 
  2210  001C                     	;# 
  2211  001C                     	;# 
  2212  001D                     	;# 
  2213  001D                     	;# 
  2214  001E                     	;# 
  2215  001F                     	;# 
  2216  008C                     	;# 
  2217  008C                     	;# 
  2218  008D                     	;# 
  2219  008E                     	;# 
  2220  008E                     	;# 
  2221  008F                     	;# 
  2222  0090                     	;# 
  2223  0090                     	;# 
  2224  0091                     	;# 
  2225  0093                     	;# 
  2226  0094                     	;# 
  2227  0095                     	;# 
  2228  0096                     	;# 
  2229  0097                     	;# 
  2230  0098                     	;# 
  2231  0099                     	;# 
  2232  009A                     	;# 
  2233  009B                     	;# 
  2234  009C                     	;# 
  2235  009D                     	;# 
  2236  009E                     	;# 
  2237  010C                     	;# 
  2238  010D                     	;# 
  2239  010E                     	;# 
  2240  010E                     	;# 
  2241  010F                     	;# 
  2242  0110                     	;# 
  2243  0110                     	;# 
  2244  0111                     	;# 
  2245  0112                     	;# 
  2246  0112                     	;# 
  2247  0113                     	;# 
  2248  0114                     	;# 
  2249  0114                     	;# 
  2250  0115                     	;# 
  2251  0116                     	;# 
  2252  0116                     	;# 
  2253  0117                     	;# 
  2254  0119                     	;# 
  2255  0119                     	;# 
  2256  0119                     	;# 
  2257  011A                     	;# 
  2258  011A                     	;# 
  2259  011A                     	;# 
  2260  011B                     	;# 
  2261  011B                     	;# 
  2262  011B                     	;# 
  2263  011B                     	;# 
  2264  011B                     	;# 
  2265  011C                     	;# 
  2266  011C                     	;# 
  2267  011C                     	;# 
  2268  011D                     	;# 
  2269  011D                     	;# 
  2270  011D                     	;# 
  2271  011E                     	;# 
  2272  011E                     	;# 
  2273  011E                     	;# 
  2274  011F                     	;# 
  2275  011F                     	;# 
  2276  011F                     	;# 
  2277  011F                     	;# 
  2278  011F                     	;# 
  2279  018C                     	;# 
  2280  018D                     	;# 
  2281  018E                     	;# 
  2282  018F                     	;# 
  2283  0190                     	;# 
  2284  0191                     	;# 
  2285  0192                     	;# 
  2286  0196                     	;# 
  2287  0197                     	;# 
  2288  0198                     	;# 
  2289  0199                     	;# 
  2290  019A                     	;# 
  2291  019B                     	;# 
  2292  019C                     	;# 
  2293  020C                     	;# 
  2294  020C                     	;# 
  2295  020D                     	;# 
  2296  020E                     	;# 
  2297  020F                     	;# 
  2298  020F                     	;# 
  2299  0210                     	;# 
  2300  0210                     	;# 
  2301  0211                     	;# 
  2302  0211                     	;# 
  2303  0212                     	;# 
  2304  0212                     	;# 
  2305  0213                     	;# 
  2306  0214                     	;# 
  2307  0215                     	;# 
  2308  0215                     	;# 
  2309  0216                     	;# 
  2310  0216                     	;# 
  2311  0217                     	;# 
  2312  0217                     	;# 
  2313  0218                     	;# 
  2314  0218                     	;# 
  2315  0219                     	;# 
  2316  021A                     	;# 
  2317  021B                     	;# 
  2318  021B                     	;# 
  2319  021C                     	;# 
  2320  021C                     	;# 
  2321  021D                     	;# 
  2322  021D                     	;# 
  2323  021E                     	;# 
  2324  021F                     	;# 
  2325  028C                     	;# 
  2326  028C                     	;# 
  2327  028D                     	;# 
  2328  028D                     	;# 
  2329  028E                     	;# 
  2330  028F                     	;# 
  2331  0290                     	;# 
  2332  0290                     	;# 
  2333  0291                     	;# 
  2334  0292                     	;# 
  2335  0292                     	;# 
  2336  0293                     	;# 
  2337  0293                     	;# 
  2338  0294                     	;# 
  2339  0295                     	;# 
  2340  0296                     	;# 
  2341  0296                     	;# 
  2342  0297                     	;# 
  2343  0298                     	;# 
  2344  0298                     	;# 
  2345  0299                     	;# 
  2346  0299                     	;# 
  2347  029A                     	;# 
  2348  029B                     	;# 
  2349  029C                     	;# 
  2350  029C                     	;# 
  2351  029D                     	;# 
  2352  030C                     	;# 
  2353  030C                     	;# 
  2354  030D                     	;# 
  2355  030E                     	;# 
  2356  030F                     	;# 
  2357  0310                     	;# 
  2358  0310                     	;# 
  2359  0311                     	;# 
  2360  0312                     	;# 
  2361  0313                     	;# 
  2362  0314                     	;# 
  2363  0314                     	;# 
  2364  0315                     	;# 
  2365  0316                     	;# 
  2366  0317                     	;# 
  2367  0318                     	;# 
  2368  0318                     	;# 
  2369  0319                     	;# 
  2370  031A                     	;# 
  2371  031B                     	;# 
  2372  031C                     	;# 
  2373  031C                     	;# 
  2374  031D                     	;# 
  2375  031E                     	;# 
  2376  031F                     	;# 
  2377  038C                     	;# 
  2378  038C                     	;# 
  2379  038D                     	;# 
  2380  038E                     	;# 
  2381  0390                     	;# 
  2382  0390                     	;# 
  2383  0391                     	;# 
  2384  0392                     	;# 
  2385  040C                     	;# 
  2386  040D                     	;# 
  2387  040E                     	;# 
  2388  040F                     	;# 
  2389  0410                     	;# 
  2390  0411                     	;# 
  2391  0416                     	;# 
  2392  0416                     	;# 
  2393  0417                     	;# 
  2394  0418                     	;# 
  2395  0418                     	;# 
  2396  0419                     	;# 
  2397  041A                     	;# 
  2398  041A                     	;# 
  2399  041B                     	;# 
  2400  041C                     	;# 
  2401  041C                     	;# 
  2402  041D                     	;# 
  2403  041E                     	;# 
  2404  041F                     	;# 
  2405  048C                     	;# 
  2406  048C                     	;# 
  2407  048D                     	;# 
  2408  048E                     	;# 
  2409  048F                     	;# 
  2410  048F                     	;# 
  2411  0490                     	;# 
  2412  0491                     	;# 
  2413  0492                     	;# 
  2414  0492                     	;# 
  2415  0493                     	;# 
  2416  0494                     	;# 
  2417  0495                     	;# 
  2418  0495                     	;# 
  2419  0496                     	;# 
  2420  0497                     	;# 
  2421  0498                     	;# 
  2422  0499                     	;# 
  2423  049A                     	;# 
  2424  049B                     	;# 
  2425  049C                     	;# 
  2426  049D                     	;# 
  2427  050C                     	;# 
  2428  050C                     	;# 
  2429  050D                     	;# 
  2430  050E                     	;# 
  2431  050F                     	;# 
  2432  050F                     	;# 
  2433  0510                     	;# 
  2434  0511                     	;# 
  2435  0512                     	;# 
  2436  0512                     	;# 
  2437  0513                     	;# 
  2438  0514                     	;# 
  2439  0515                     	;# 
  2440  0515                     	;# 
  2441  0516                     	;# 
  2442  0517                     	;# 
  2443  0518                     	;# 
  2444  0519                     	;# 
  2445  051A                     	;# 
  2446  051B                     	;# 
  2447  051C                     	;# 
  2448  051D                     	;# 
  2449  058C                     	;# 
  2450  058C                     	;# 
  2451  058D                     	;# 
  2452  058E                     	;# 
  2453  058F                     	;# 
  2454  058F                     	;# 
  2455  0590                     	;# 
  2456  0591                     	;# 
  2457  0592                     	;# 
  2458  0593                     	;# 
  2459  060C                     	;# 
  2460  060D                     	;# 
  2461  060E                     	;# 
  2462  060F                     	;# 
  2463  0610                     	;# 
  2464  0611                     	;# 
  2465  0612                     	;# 
  2466  0613                     	;# 
  2467  0614                     	;# 
  2468  0616                     	;# 
  2469  0617                     	;# 
  2470  0618                     	;# 
  2471  0619                     	;# 
  2472  061A                     	;# 
  2473  061B                     	;# 
  2474  061C                     	;# 
  2475  061D                     	;# 
  2476  061E                     	;# 
  2477  068C                     	;# 
  2478  068D                     	;# 
  2479  068E                     	;# 
  2480  068F                     	;# 
  2481  0690                     	;# 
  2482  0691                     	;# 
  2483  0692                     	;# 
  2484  0693                     	;# 
  2485  0694                     	;# 
  2486  070C                     	;# 
  2487  070D                     	;# 
  2488  070E                     	;# 
  2489  070F                     	;# 
  2490  0710                     	;# 
  2491  0711                     	;# 
  2492  0712                     	;# 
  2493  0713                     	;# 
  2494  0714                     	;# 
  2495  0716                     	;# 
  2496  0717                     	;# 
  2497  0718                     	;# 
  2498  0719                     	;# 
  2499  071A                     	;# 
  2500  071B                     	;# 
  2501  071C                     	;# 
  2502  071D                     	;# 
  2503  071E                     	;# 
  2504  0796                     	;# 
  2505  0797                     	;# 
  2506  0798                     	;# 
  2507  0799                     	;# 
  2508  079A                     	;# 
  2509  079B                     	;# 
  2510  080C                     	;# 
  2511  080D                     	;# 
  2512  080E                     	;# 
  2513  080F                     	;# 
  2514  0810                     	;# 
  2515  0811                     	;# 
  2516  0812                     	;# 
  2517  0813                     	;# 
  2518  0814                     	;# 
  2519  081A                     	;# 
  2520  081B                     	;# 
  2521  081C                     	;# 
  2522  081D                     	;# 
  2523  081E                     	;# 
  2524  081F                     	;# 
  2525  088C                     	;# 
  2526  088D                     	;# 
  2527  088E                     	;# 
  2528  088F                     	;# 
  2529  0890                     	;# 
  2530  0891                     	;# 
  2531  0892                     	;# 
  2532  0893                     	;# 
  2533  0895                     	;# 
  2534  0896                     	;# 
  2535  0897                     	;# 
  2536  0898                     	;# 
  2537  0899                     	;# 
  2538  089A                     	;# 
  2539  089B                     	;# 
  2540  090C                     	;# 
  2541  090E                     	;# 
  2542  090F                     	;# 
  2543  091F                     	;# 
  2544  098F                     	;# 
  2545  098F                     	;# 
  2546  0990                     	;# 
  2547  0991                     	;# 
  2548  0992                     	;# 
  2549  0993                     	;# 
  2550  0994                     	;# 
  2551  0995                     	;# 
  2552  0996                     	;# 
  2553  0997                     	;# 
  2554  0E0F                     	;# 
  2555  0E10                     	;# 
  2556  0E11                     	;# 
  2557  0E12                     	;# 
  2558  0E13                     	;# 
  2559  0E14                     	;# 
  2560  0E15                     	;# 
  2561  0E16                     	;# 
  2562  0E17                     	;# 
  2563  0E18                     	;# 
  2564  0E19                     	;# 
  2565  0E1A                     	;# 
  2566  0E1B                     	;# 
  2567  0E1C                     	;# 
  2568  0E1D                     	;# 
  2569  0E1E                     	;# 
  2570  0E1F                     	;# 
  2571  0E20                     	;# 
  2572  0E21                     	;# 
  2573  0E22                     	;# 
  2574  0E23                     	;# 
  2575  0E24                     	;# 
  2576  0E25                     	;# 
  2577  0E26                     	;# 
  2578  0E27                     	;# 
  2579  0E28                     	;# 
  2580  0E29                     	;# 
  2581  0E2A                     	;# 
  2582  0E2B                     	;# 
  2583  0E2C                     	;# 
  2584  0E2D                     	;# 
  2585  0E2E                     	;# 
  2586  0E2F                     	;# 
  2587  0E30                     	;# 
  2588  0E31                     	;# 
  2589  0E32                     	;# 
  2590  0E33                     	;# 
  2591  0E34                     	;# 
  2592  0E35                     	;# 
  2593  0E36                     	;# 
  2594  0E37                     	;# 
  2595  0E8F                     	;# 
  2596  0E90                     	;# 
  2597  0E91                     	;# 
  2598  0E92                     	;# 
  2599  0E93                     	;# 
  2600  0E94                     	;# 
  2601  0E95                     	;# 
  2602  0E96                     	;# 
  2603  0E97                     	;# 
  2604  0E9C                     	;# 
  2605  0E9D                     	;# 
  2606  0E9E                     	;# 
  2607  0EA1                     	;# 
  2608  0EA2                     	;# 
  2609  0EA3                     	;# 
  2610  0EA4                     	;# 
  2611  0EA5                     	;# 
  2612  0EA9                     	;# 
  2613  0EAA                     	;# 
  2614  0EAB                     	;# 
  2615  0EAC                     	;# 
  2616  0EB1                     	;# 
  2617  0EB2                     	;# 
  2618  0EB3                     	;# 
  2619  0EB8                     	;# 
  2620  0EB9                     	;# 
  2621  0EBA                     	;# 
  2622  0EBB                     	;# 
  2623  0EBC                     	;# 
  2624  0EBD                     	;# 
  2625  0EBE                     	;# 
  2626  0EC3                     	;# 
  2627  0EC5                     	;# 
  2628  0EC6                     	;# 
  2629  0EC7                     	;# 
  2630  0EC8                     	;# 
  2631  0EC9                     	;# 
  2632  0ECA                     	;# 
  2633  0ECB                     	;# 
  2634  0ECC                     	;# 
  2635  0F10                     	;# 
  2636  0F11                     	;# 
  2637  0F12                     	;# 
  2638  0F13                     	;# 
  2639  0F14                     	;# 
  2640  0F15                     	;# 
  2641  0F16                     	;# 
  2642  0F17                     	;# 
  2643  0F18                     	;# 
  2644  0F19                     	;# 
  2645  0F1A                     	;# 
  2646  0F1B                     	;# 
  2647  0F1C                     	;# 
  2648  0F1D                     	;# 
  2649  0F1E                     	;# 
  2650  0F1F                     	;# 
  2651  0F20                     	;# 
  2652  0F21                     	;# 
  2653  0F22                     	;# 
  2654  0F23                     	;# 
  2655  0F24                     	;# 
  2656  0F25                     	;# 
  2657  0F26                     	;# 
  2658  0F27                     	;# 
  2659  0F38                     	;# 
  2660  0F39                     	;# 
  2661  0F3A                     	;# 
  2662  0F3B                     	;# 
  2663  0F3C                     	;# 
  2664  0F3D                     	;# 
  2665  0F3E                     	;# 
  2666  0F3F                     	;# 
  2667  0F40                     	;# 
  2668  0F41                     	;# 
  2669  0F43                     	;# 
  2670  0F44                     	;# 
  2671  0F45                     	;# 
  2672  0F46                     	;# 
  2673  0F47                     	;# 
  2674  0F48                     	;# 
  2675  0F49                     	;# 
  2676  0F4A                     	;# 
  2677  0F4B                     	;# 
  2678  0F4C                     	;# 
  2679  0F4E                     	;# 
  2680  0F4F                     	;# 
  2681  0F50                     	;# 
  2682  0F51                     	;# 
  2683  0F52                     	;# 
  2684  0F53                     	;# 
  2685  0F54                     	;# 
  2686  0F55                     	;# 
  2687  0F56                     	;# 
  2688  0F57                     	;# 
  2689  0F65                     	;# 
  2690  0F68                     	;# 
  2691  0F69                     	;# 
  2692  0F6A                     	;# 
  2693  0F6B                     	;# 
  2694  0FE4                     	;# 
  2695  0FE5                     	;# 
  2696  0FE6                     	;# 
  2697  0FE7                     	;# 
  2698  0FE8                     	;# 
  2699  0FE9                     	;# 
  2700  0FEA                     	;# 
  2701  0FEB                     	;# 
  2702  0FED                     	;# 
  2703  0FEE                     	;# 
  2704  0FEF                     	;# 
  2705  0000                     	;# 
  2706  0001                     	;# 
  2707  0002                     	;# 
  2708  0003                     	;# 
  2709  0004                     	;# 
  2710  0005                     	;# 
  2711  0006                     	;# 
  2712  0007                     	;# 
  2713  0008                     	;# 
  2714  0009                     	;# 
  2715  000A                     	;# 
  2716  000B                     	;# 
  2717  000C                     	;# 
  2718  000D                     	;# 
  2719  000E                     	;# 
  2720  0010                     	;# 
  2721  0011                     	;# 
  2722  0012                     	;# 
  2723  0013                     	;# 
  2724  0016                     	;# 
  2725  0017                     	;# 
  2726  0018                     	;# 
  2727  001C                     	;# 
  2728  001C                     	;# 
  2729  001D                     	;# 
  2730  001D                     	;# 
  2731  001E                     	;# 
  2732  001F                     	;# 
  2733  008C                     	;# 
  2734  008C                     	;# 
  2735  008D                     	;# 
  2736  008E                     	;# 
  2737  008E                     	;# 
  2738  008F                     	;# 
  2739  0090                     	;# 
  2740  0090                     	;# 
  2741  0091                     	;# 
  2742  0093                     	;# 
  2743  0094                     	;# 
  2744  0095                     	;# 
  2745  0096                     	;# 
  2746  0097                     	;# 
  2747  0098                     	;# 
  2748  0099                     	;# 
  2749  009A                     	;# 
  2750  009B                     	;# 
  2751  009C                     	;# 
  2752  009D                     	;# 
  2753  009E                     	;# 
  2754  010C                     	;# 
  2755  010D                     	;# 
  2756  010E                     	;# 
  2757  010E                     	;# 
  2758  010F                     	;# 
  2759  0110                     	;# 
  2760  0110                     	;# 
  2761  0111                     	;# 
  2762  0112                     	;# 
  2763  0112                     	;# 
  2764  0113                     	;# 
  2765  0114                     	;# 
  2766  0114                     	;# 
  2767  0115                     	;# 
  2768  0116                     	;# 
  2769  0116                     	;# 
  2770  0117                     	;# 
  2771  0119                     	;# 
  2772  0119                     	;# 
  2773  0119                     	;# 
  2774  011A                     	;# 
  2775  011A                     	;# 
  2776  011A                     	;# 
  2777  011B                     	;# 
  2778  011B                     	;# 
  2779  011B                     	;# 
  2780  011B                     	;# 
  2781  011B                     	;# 
  2782  011C                     	;# 
  2783  011C                     	;# 
  2784  011C                     	;# 
  2785  011D                     	;# 
  2786  011D                     	;# 
  2787  011D                     	;# 
  2788  011E                     	;# 
  2789  011E                     	;# 
  2790  011E                     	;# 
  2791  011F                     	;# 
  2792  011F                     	;# 
  2793  011F                     	;# 
  2794  011F                     	;# 
  2795  011F                     	;# 
  2796  018C                     	;# 
  2797  018D                     	;# 
  2798  018E                     	;# 
  2799  018F                     	;# 
  2800  0190                     	;# 
  2801  0191                     	;# 
  2802  0192                     	;# 
  2803  0196                     	;# 
  2804  0197                     	;# 
  2805  0198                     	;# 
  2806  0199                     	;# 
  2807  019A                     	;# 
  2808  019B                     	;# 
  2809  019C                     	;# 
  2810  020C                     	;# 
  2811  020C                     	;# 
  2812  020D                     	;# 
  2813  020E                     	;# 
  2814  020F                     	;# 
  2815  020F                     	;# 
  2816  0210                     	;# 
  2817  0210                     	;# 
  2818  0211                     	;# 
  2819  0211                     	;# 
  2820  0212                     	;# 
  2821  0212                     	;# 
  2822  0213                     	;# 
  2823  0214                     	;# 
  2824  0215                     	;# 
  2825  0215                     	;# 
  2826  0216                     	;# 
  2827  0216                     	;# 
  2828  0217                     	;# 
  2829  0217                     	;# 
  2830  0218                     	;# 
  2831  0218                     	;# 
  2832  0219                     	;# 
  2833  021A                     	;# 
  2834  021B                     	;# 
  2835  021B                     	;# 
  2836  021C                     	;# 
  2837  021C                     	;# 
  2838  021D                     	;# 
  2839  021D                     	;# 
  2840  021E                     	;# 
  2841  021F                     	;# 
  2842  028C                     	;# 
  2843  028C                     	;# 
  2844  028D                     	;# 
  2845  028D                     	;# 
  2846  028E                     	;# 
  2847  028F                     	;# 
  2848  0290                     	;# 
  2849  0290                     	;# 
  2850  0291                     	;# 
  2851  0292                     	;# 
  2852  0292                     	;# 
  2853  0293                     	;# 
  2854  0293                     	;# 
  2855  0294                     	;# 
  2856  0295                     	;# 
  2857  0296                     	;# 
  2858  0296                     	;# 
  2859  0297                     	;# 
  2860  0298                     	;# 
  2861  0298                     	;# 
  2862  0299                     	;# 
  2863  0299                     	;# 
  2864  029A                     	;# 
  2865  029B                     	;# 
  2866  029C                     	;# 
  2867  029C                     	;# 
  2868  029D                     	;# 
  2869  030C                     	;# 
  2870  030C                     	;# 
  2871  030D                     	;# 
  2872  030E                     	;# 
  2873  030F                     	;# 
  2874  0310                     	;# 
  2875  0310                     	;# 
  2876  0311                     	;# 
  2877  0312                     	;# 
  2878  0313                     	;# 
  2879  0314                     	;# 
  2880  0314                     	;# 
  2881  0315                     	;# 
  2882  0316                     	;# 
  2883  0317                     	;# 
  2884  0318                     	;# 
  2885  0318                     	;# 
  2886  0319                     	;# 
  2887  031A                     	;# 
  2888  031B                     	;# 
  2889  031C                     	;# 
  2890  031C                     	;# 
  2891  031D                     	;# 
  2892  031E                     	;# 
  2893  031F                     	;# 
  2894  038C                     	;# 
  2895  038C                     	;# 
  2896  038D                     	;# 
  2897  038E                     	;# 
  2898  0390                     	;# 
  2899  0390                     	;# 
  2900  0391                     	;# 
  2901  0392                     	;# 
  2902  040C                     	;# 
  2903  040D                     	;# 
  2904  040E                     	;# 
  2905  040F                     	;# 
  2906  0410                     	;# 
  2907  0411                     	;# 
  2908  0416                     	;# 
  2909  0416                     	;# 
  2910  0417                     	;# 
  2911  0418                     	;# 
  2912  0418                     	;# 
  2913  0419                     	;# 
  2914  041A                     	;# 
  2915  041A                     	;# 
  2916  041B                     	;# 
  2917  041C                     	;# 
  2918  041C                     	;# 
  2919  041D                     	;# 
  2920  041E                     	;# 
  2921  041F                     	;# 
  2922  048C                     	;# 
  2923  048C                     	;# 
  2924  048D                     	;# 
  2925  048E                     	;# 
  2926  048F                     	;# 
  2927  048F                     	;# 
  2928  0490                     	;# 
  2929  0491                     	;# 
  2930  0492                     	;# 
  2931  0492                     	;# 
  2932  0493                     	;# 
  2933  0494                     	;# 
  2934  0495                     	;# 
  2935  0495                     	;# 
  2936  0496                     	;# 
  2937  0497                     	;# 
  2938  0498                     	;# 
  2939  0499                     	;# 
  2940  049A                     	;# 
  2941  049B                     	;# 
  2942  049C                     	;# 
  2943  049D                     	;# 
  2944  050C                     	;# 
  2945  050C                     	;# 
  2946  050D                     	;# 
  2947  050E                     	;# 
  2948  050F                     	;# 
  2949  050F                     	;# 
  2950  0510                     	;# 
  2951  0511                     	;# 
  2952  0512                     	;# 
  2953  0512                     	;# 
  2954  0513                     	;# 
  2955  0514                     	;# 
  2956  0515                     	;# 
  2957  0515                     	;# 
  2958  0516                     	;# 
  2959  0517                     	;# 
  2960  0518                     	;# 
  2961  0519                     	;# 
  2962  051A                     	;# 
  2963  051B                     	;# 
  2964  051C                     	;# 
  2965  051D                     	;# 
  2966  058C                     	;# 
  2967  058C                     	;# 
  2968  058D                     	;# 
  2969  058E                     	;# 
  2970  058F                     	;# 
  2971  058F                     	;# 
  2972  0590                     	;# 
  2973  0591                     	;# 
  2974  0592                     	;# 
  2975  0593                     	;# 
  2976  060C                     	;# 
  2977  060D                     	;# 
  2978  060E                     	;# 
  2979  060F                     	;# 
  2980  0610                     	;# 
  2981  0611                     	;# 
  2982  0612                     	;# 
  2983  0613                     	;# 
  2984  0614                     	;# 
  2985  0616                     	;# 
  2986  0617                     	;# 
  2987  0618                     	;# 
  2988  0619                     	;# 
  2989  061A                     	;# 
  2990  061B                     	;# 
  2991  061C                     	;# 
  2992  061D                     	;# 
  2993  061E                     	;# 
  2994  068C                     	;# 
  2995  068D                     	;# 
  2996  068E                     	;# 
  2997  068F                     	;# 
  2998  0690                     	;# 
  2999  0691                     	;# 
  3000  0692                     	;# 
  3001  0693                     	;# 
  3002  0694                     	;# 
  3003  070C                     	;# 
  3004  070D                     	;# 
  3005  070E                     	;# 
  3006  070F                     	;# 
  3007  0710                     	;# 
  3008  0711                     	;# 
  3009  0712                     	;# 
  3010  0713                     	;# 
  3011  0714                     	;# 
  3012  0716                     	;# 
  3013  0717                     	;# 
  3014  0718                     	;# 
  3015  0719                     	;# 
  3016  071A                     	;# 
  3017  071B                     	;# 
  3018  071C                     	;# 
  3019  071D                     	;# 
  3020  071E                     	;# 
  3021  0796                     	;# 
  3022  0797                     	;# 
  3023  0798                     	;# 
  3024  0799                     	;# 
  3025  079A                     	;# 
  3026  079B                     	;# 
  3027  080C                     	;# 
  3028  080D                     	;# 
  3029  080E                     	;# 
  3030  080F                     	;# 
  3031  0810                     	;# 
  3032  0811                     	;# 
  3033  0812                     	;# 
  3034  0813                     	;# 
  3035  0814                     	;# 
  3036  081A                     	;# 
  3037  081B                     	;# 
  3038  081C                     	;# 
  3039  081D                     	;# 
  3040  081E                     	;# 
  3041  081F                     	;# 
  3042  088C                     	;# 
  3043  088D                     	;# 
  3044  088E                     	;# 
  3045  088F                     	;# 
  3046  0890                     	;# 
  3047  0891                     	;# 
  3048  0892                     	;# 
  3049  0893                     	;# 
  3050  0895                     	;# 
  3051  0896                     	;# 
  3052  0897                     	;# 
  3053  0898                     	;# 
  3054  0899                     	;# 
  3055  089A                     	;# 
  3056  089B                     	;# 
  3057  090C                     	;# 
  3058  090E                     	;# 
  3059  090F                     	;# 
  3060  091F                     	;# 
  3061  098F                     	;# 
  3062  098F                     	;# 
  3063  0990                     	;# 
  3064  0991                     	;# 
  3065  0992                     	;# 
  3066  0993                     	;# 
  3067  0994                     	;# 
  3068  0995                     	;# 
  3069  0996                     	;# 
  3070  0997                     	;# 
  3071  0E0F                     	;# 
  3072  0E10                     	;# 
  3073  0E11                     	;# 
  3074  0E12                     	;# 
  3075  0E13                     	;# 
  3076  0E14                     	;# 
  3077  0E15                     	;# 
  3078  0E16                     	;# 
  3079  0E17                     	;# 
  3080  0E18                     	;# 
  3081  0E19                     	;# 
  3082  0E1A                     	;# 
  3083  0E1B                     	;# 
  3084  0E1C                     	;# 
  3085  0E1D                     	;# 
  3086  0E1E                     	;# 
  3087  0E1F                     	;# 
  3088  0E20                     	;# 
  3089  0E21                     	;# 
  3090  0E22                     	;# 
  3091  0E23                     	;# 
  3092  0E24                     	;# 
  3093  0E25                     	;# 
  3094  0E26                     	;# 
  3095  0E27                     	;# 
  3096  0E28                     	;# 
  3097  0E29                     	;# 
  3098  0E2A                     	;# 
  3099  0E2B                     	;# 
  3100  0E2C                     	;# 
  3101  0E2D                     	;# 
  3102  0E2E                     	;# 
  3103  0E2F                     	;# 
  3104  0E30                     	;# 
  3105  0E31                     	;# 
  3106  0E32                     	;# 
  3107  0E33                     	;# 
  3108  0E34                     	;# 
  3109  0E35                     	;# 
  3110  0E36                     	;# 
  3111  0E37                     	;# 
  3112  0E8F                     	;# 
  3113  0E90                     	;# 
  3114  0E91                     	;# 
  3115  0E92                     	;# 
  3116  0E93                     	;# 
  3117  0E94                     	;# 
  3118  0E95                     	;# 
  3119  0E96                     	;# 
  3120  0E97                     	;# 
  3121  0E9C                     	;# 
  3122  0E9D                     	;# 
  3123  0E9E                     	;# 
  3124  0EA1                     	;# 
  3125  0EA2                     	;# 
  3126  0EA3                     	;# 
  3127  0EA4                     	;# 
  3128  0EA5                     	;# 
  3129  0EA9                     	;# 
  3130  0EAA                     	;# 
  3131  0EAB                     	;# 
  3132  0EAC                     	;# 
  3133  0EB1                     	;# 
  3134  0EB2                     	;# 
  3135  0EB3                     	;# 
  3136  0EB8                     	;# 
  3137  0EB9                     	;# 
  3138  0EBA                     	;# 
  3139  0EBB                     	;# 
  3140  0EBC                     	;# 
  3141  0EBD                     	;# 
  3142  0EBE                     	;# 
  3143  0EC3                     	;# 
  3144  0EC5                     	;# 
  3145  0EC6                     	;# 
  3146  0EC7                     	;# 
  3147  0EC8                     	;# 
  3148  0EC9                     	;# 
  3149  0ECA                     	;# 
  3150  0ECB                     	;# 
  3151  0ECC                     	;# 
  3152  0F10                     	;# 
  3153  0F11                     	;# 
  3154  0F12                     	;# 
  3155  0F13                     	;# 
  3156  0F14                     	;# 
  3157  0F15                     	;# 
  3158  0F16                     	;# 
  3159  0F17                     	;# 
  3160  0F18                     	;# 
  3161  0F19                     	;# 
  3162  0F1A                     	;# 
  3163  0F1B                     	;# 
  3164  0F1C                     	;# 
  3165  0F1D                     	;# 
  3166  0F1E                     	;# 
  3167  0F1F                     	;# 
  3168  0F20                     	;# 
  3169  0F21                     	;# 
  3170  0F22                     	;# 
  3171  0F23                     	;# 
  3172  0F24                     	;# 
  3173  0F25                     	;# 
  3174  0F26                     	;# 
  3175  0F27                     	;# 
  3176  0F38                     	;# 
  3177  0F39                     	;# 
  3178  0F3A                     	;# 
  3179  0F3B                     	;# 
  3180  0F3C                     	;# 
  3181  0F3D                     	;# 
  3182  0F3E                     	;# 
  3183  0F3F                     	;# 
  3184  0F40                     	;# 
  3185  0F41                     	;# 
  3186  0F43                     	;# 
  3187  0F44                     	;# 
  3188  0F45                     	;# 
  3189  0F46                     	;# 
  3190  0F47                     	;# 
  3191  0F48                     	;# 
  3192  0F49                     	;# 
  3193  0F4A                     	;# 
  3194  0F4B                     	;# 
  3195  0F4C                     	;# 
  3196  0F4E                     	;# 
  3197  0F4F                     	;# 
  3198  0F50                     	;# 
  3199  0F51                     	;# 
  3200  0F52                     	;# 
  3201  0F53                     	;# 
  3202  0F54                     	;# 
  3203  0F55                     	;# 
  3204  0F56                     	;# 
  3205  0F57                     	;# 
  3206  0F65                     	;# 
  3207  0F68                     	;# 
  3208  0F69                     	;# 
  3209  0F6A                     	;# 
  3210  0F6B                     	;# 
  3211  0FE4                     	;# 
  3212  0FE5                     	;# 
  3213  0FE6                     	;# 
  3214  0FE7                     	;# 
  3215  0FE8                     	;# 
  3216  0FE9                     	;# 
  3217  0FEA                     	;# 
  3218  0FEB                     	;# 
  3219  0FED                     	;# 
  3220  0FEE                     	;# 
  3221  0FEF                     	;# 
  3222  0000                     	;# 
  3223  0001                     	;# 
  3224  0002                     	;# 
  3225  0003                     	;# 
  3226  0004                     	;# 
  3227  0005                     	;# 
  3228  0006                     	;# 
  3229  0007                     	;# 
  3230  0008                     	;# 
  3231  0009                     	;# 
  3232  000A                     	;# 
  3233  000B                     	;# 
  3234  000C                     	;# 
  3235  000D                     	;# 
  3236  000E                     	;# 
  3237  0010                     	;# 
  3238  0011                     	;# 
  3239  0012                     	;# 
  3240  0013                     	;# 
  3241  0016                     	;# 
  3242  0017                     	;# 
  3243  0018                     	;# 
  3244  001C                     	;# 
  3245  001C                     	;# 
  3246  001D                     	;# 
  3247  001D                     	;# 
  3248  001E                     	;# 
  3249  001F                     	;# 
  3250  008C                     	;# 
  3251  008C                     	;# 
  3252  008D                     	;# 
  3253  008E                     	;# 
  3254  008E                     	;# 
  3255  008F                     	;# 
  3256  0090                     	;# 
  3257  0090                     	;# 
  3258  0091                     	;# 
  3259  0093                     	;# 
  3260  0094                     	;# 
  3261  0095                     	;# 
  3262  0096                     	;# 
  3263  0097                     	;# 
  3264  0098                     	;# 
  3265  0099                     	;# 
  3266  009A                     	;# 
  3267  009B                     	;# 
  3268  009C                     	;# 
  3269  009D                     	;# 
  3270  009E                     	;# 
  3271  010C                     	;# 
  3272  010D                     	;# 
  3273  010E                     	;# 
  3274  010E                     	;# 
  3275  010F                     	;# 
  3276  0110                     	;# 
  3277  0110                     	;# 
  3278  0111                     	;# 
  3279  0112                     	;# 
  3280  0112                     	;# 
  3281  0113                     	;# 
  3282  0114                     	;# 
  3283  0114                     	;# 
  3284  0115                     	;# 
  3285  0116                     	;# 
  3286  0116                     	;# 
  3287  0117                     	;# 
  3288  0119                     	;# 
  3289  0119                     	;# 
  3290  0119                     	;# 
  3291  011A                     	;# 
  3292  011A                     	;# 
  3293  011A                     	;# 
  3294  011B                     	;# 
  3295  011B                     	;# 
  3296  011B                     	;# 
  3297  011B                     	;# 
  3298  011B                     	;# 
  3299  011C                     	;# 
  3300  011C                     	;# 
  3301  011C                     	;# 
  3302  011D                     	;# 
  3303  011D                     	;# 
  3304  011D                     	;# 
  3305  011E                     	;# 
  3306  011E                     	;# 
  3307  011E                     	;# 
  3308  011F                     	;# 
  3309  011F                     	;# 
  3310  011F                     	;# 
  3311  011F                     	;# 
  3312  011F                     	;# 
  3313  018C                     	;# 
  3314  018D                     	;# 
  3315  018E                     	;# 
  3316  018F                     	;# 
  3317  0190                     	;# 
  3318  0191                     	;# 
  3319  0192                     	;# 
  3320  0196                     	;# 
  3321  0197                     	;# 
  3322  0198                     	;# 
  3323  0199                     	;# 
  3324  019A                     	;# 
  3325  019B                     	;# 
  3326  019C                     	;# 
  3327  020C                     	;# 
  3328  020C                     	;# 
  3329  020D                     	;# 
  3330  020E                     	;# 
  3331  020F                     	;# 
  3332  020F                     	;# 
  3333  0210                     	;# 
  3334  0210                     	;# 
  3335  0211                     	;# 
  3336  0211                     	;# 
  3337  0212                     	;# 
  3338  0212                     	;# 
  3339  0213                     	;# 
  3340  0214                     	;# 
  3341  0215                     	;# 
  3342  0215                     	;# 
  3343  0216                     	;# 
  3344  0216                     	;# 
  3345  0217                     	;# 
  3346  0217                     	;# 
  3347  0218                     	;# 
  3348  0218                     	;# 
  3349  0219                     	;# 
  3350  021A                     	;# 
  3351  021B                     	;# 
  3352  021B                     	;# 
  3353  021C                     	;# 
  3354  021C                     	;# 
  3355  021D                     	;# 
  3356  021D                     	;# 
  3357  021E                     	;# 
  3358  021F                     	;# 
  3359  028C                     	;# 
  3360  028C                     	;# 
  3361  028D                     	;# 
  3362  028D                     	;# 
  3363  028E                     	;# 
  3364  028F                     	;# 
  3365  0290                     	;# 
  3366  0290                     	;# 
  3367  0291                     	;# 
  3368  0292                     	;# 
  3369  0292                     	;# 
  3370  0293                     	;# 
  3371  0293                     	;# 
  3372  0294                     	;# 
  3373  0295                     	;# 
  3374  0296                     	;# 
  3375  0296                     	;# 
  3376  0297                     	;# 
  3377  0298                     	;# 
  3378  0298                     	;# 
  3379  0299                     	;# 
  3380  0299                     	;# 
  3381  029A                     	;# 
  3382  029B                     	;# 
  3383  029C                     	;# 
  3384  029C                     	;# 
  3385  029D                     	;# 
  3386  030C                     	;# 
  3387  030C                     	;# 
  3388  030D                     	;# 
  3389  030E                     	;# 
  3390  030F                     	;# 
  3391  0310                     	;# 
  3392  0310                     	;# 
  3393  0311                     	;# 
  3394  0312                     	;# 
  3395  0313                     	;# 
  3396  0314                     	;# 
  3397  0314                     	;# 
  3398  0315                     	;# 
  3399  0316                     	;# 
  3400  0317                     	;# 
  3401  0318                     	;# 
  3402  0318                     	;# 
  3403  0319                     	;# 
  3404  031A                     	;# 
  3405  031B                     	;# 
  3406  031C                     	;# 
  3407  031C                     	;# 
  3408  031D                     	;# 
  3409  031E                     	;# 
  3410  031F                     	;# 
  3411  038C                     	;# 
  3412  038C                     	;# 
  3413  038D                     	;# 
  3414  038E                     	;# 
  3415  0390                     	;# 
  3416  0390                     	;# 
  3417  0391                     	;# 
  3418  0392                     	;# 
  3419  040C                     	;# 
  3420  040D                     	;# 
  3421  040E                     	;# 
  3422  040F                     	;# 
  3423  0410                     	;# 
  3424  0411                     	;# 
  3425  0416                     	;# 
  3426  0416                     	;# 
  3427  0417                     	;# 
  3428  0418                     	;# 
  3429  0418                     	;# 
  3430  0419                     	;# 
  3431  041A                     	;# 
  3432  041A                     	;# 
  3433  041B                     	;# 
  3434  041C                     	;# 
  3435  041C                     	;# 
  3436  041D                     	;# 
  3437  041E                     	;# 
  3438  041F                     	;# 
  3439  048C                     	;# 
  3440  048C                     	;# 
  3441  048D                     	;# 
  3442  048E                     	;# 
  3443  048F                     	;# 
  3444  048F                     	;# 
  3445  0490                     	;# 
  3446  0491                     	;# 
  3447  0492                     	;# 
  3448  0492                     	;# 
  3449  0493                     	;# 
  3450  0494                     	;# 
  3451  0495                     	;# 
  3452  0495                     	;# 
  3453  0496                     	;# 
  3454  0497                     	;# 
  3455  0498                     	;# 
  3456  0499                     	;# 
  3457  049A                     	;# 
  3458  049B                     	;# 
  3459  049C                     	;# 
  3460  049D                     	;# 
  3461  050C                     	;# 
  3462  050C                     	;# 
  3463  050D                     	;# 
  3464  050E                     	;# 
  3465  050F                     	;# 
  3466  050F                     	;# 
  3467  0510                     	;# 
  3468  0511                     	;# 
  3469  0512                     	;# 
  3470  0512                     	;# 
  3471  0513                     	;# 
  3472  0514                     	;# 
  3473  0515                     	;# 
  3474  0515                     	;# 
  3475  0516                     	;# 
  3476  0517                     	;# 
  3477  0518                     	;# 
  3478  0519                     	;# 
  3479  051A                     	;# 
  3480  051B                     	;# 
  3481  051C                     	;# 
  3482  051D                     	;# 
  3483  058C                     	;# 
  3484  058C                     	;# 
  3485  058D                     	;# 
  3486  058E                     	;# 
  3487  058F                     	;# 
  3488  058F                     	;# 
  3489  0590                     	;# 
  3490  0591                     	;# 
  3491  0592                     	;# 
  3492  0593                     	;# 
  3493  060C                     	;# 
  3494  060D                     	;# 
  3495  060E                     	;# 
  3496  060F                     	;# 
  3497  0610                     	;# 
  3498  0611                     	;# 
  3499  0612                     	;# 
  3500  0613                     	;# 
  3501  0614                     	;# 
  3502  0616                     	;# 
  3503  0617                     	;# 
  3504  0618                     	;# 
  3505  0619                     	;# 
  3506  061A                     	;# 
  3507  061B                     	;# 
  3508  061C                     	;# 
  3509  061D                     	;# 
  3510  061E                     	;# 
  3511  068C                     	;# 
  3512  068D                     	;# 
  3513  068E                     	;# 
  3514  068F                     	;# 
  3515  0690                     	;# 
  3516  0691                     	;# 
  3517  0692                     	;# 
  3518  0693                     	;# 
  3519  0694                     	;# 
  3520  070C                     	;# 
  3521  070D                     	;# 
  3522  070E                     	;# 
  3523  070F                     	;# 
  3524  0710                     	;# 
  3525  0711                     	;# 
  3526  0712                     	;# 
  3527  0713                     	;# 
  3528  0714                     	;# 
  3529  0716                     	;# 
  3530  0717                     	;# 
  3531  0718                     	;# 
  3532  0719                     	;# 
  3533  071A                     	;# 
  3534  071B                     	;# 
  3535  071C                     	;# 
  3536  071D                     	;# 
  3537  071E                     	;# 
  3538  0796                     	;# 
  3539  0797                     	;# 
  3540  0798                     	;# 
  3541  0799                     	;# 
  3542  079A                     	;# 
  3543  079B                     	;# 
  3544  080C                     	;# 
  3545  080D                     	;# 
  3546  080E                     	;# 
  3547  080F                     	;# 
  3548  0810                     	;# 
  3549  0811                     	;# 
  3550  0812                     	;# 
  3551  0813                     	;# 
  3552  0814                     	;# 
  3553  081A                     	;# 
  3554  081B                     	;# 
  3555  081C                     	;# 
  3556  081D                     	;# 
  3557  081E                     	;# 
  3558  081F                     	;# 
  3559  088C                     	;# 
  3560  088D                     	;# 
  3561  088E                     	;# 
  3562  088F                     	;# 
  3563  0890                     	;# 
  3564  0891                     	;# 
  3565  0892                     	;# 
  3566  0893                     	;# 
  3567  0895                     	;# 
  3568  0896                     	;# 
  3569  0897                     	;# 
  3570  0898                     	;# 
  3571  0899                     	;# 
  3572  089A                     	;# 
  3573  089B                     	;# 
  3574  090C                     	;# 
  3575  090E                     	;# 
  3576  090F                     	;# 
  3577  091F                     	;# 
  3578  098F                     	;# 
  3579  098F                     	;# 
  3580  0990                     	;# 
  3581  0991                     	;# 
  3582  0992                     	;# 
  3583  0993                     	;# 
  3584  0994                     	;# 
  3585  0995                     	;# 
  3586  0996                     	;# 
  3587  0997                     	;# 
  3588  0E0F                     	;# 
  3589  0E10                     	;# 
  3590  0E11                     	;# 
  3591  0E12                     	;# 
  3592  0E13                     	;# 
  3593  0E14                     	;# 
  3594  0E15                     	;# 
  3595  0E16                     	;# 
  3596  0E17                     	;# 
  3597  0E18                     	;# 
  3598  0E19                     	;# 
  3599  0E1A                     	;# 
  3600  0E1B                     	;# 
  3601  0E1C                     	;# 
  3602  0E1D                     	;# 
  3603  0E1E                     	;# 
  3604  0E1F                     	;# 
  3605  0E20                     	;# 
  3606  0E21                     	;# 
  3607  0E22                     	;# 
  3608  0E23                     	;# 
  3609  0E24                     	;# 
  3610  0E25                     	;# 
  3611  0E26                     	;# 
  3612  0E27                     	;# 
  3613  0E28                     	;# 
  3614  0E29                     	;# 
  3615  0E2A                     	;# 
  3616  0E2B                     	;# 
  3617  0E2C                     	;# 
  3618  0E2D                     	;# 
  3619  0E2E                     	;# 
  3620  0E2F                     	;# 
  3621  0E30                     	;# 
  3622  0E31                     	;# 
  3623  0E32                     	;# 
  3624  0E33                     	;# 
  3625  0E34                     	;# 
  3626  0E35                     	;# 
  3627  0E36                     	;# 
  3628  0E37                     	;# 
  3629  0E8F                     	;# 
  3630  0E90                     	;# 
  3631  0E91                     	;# 
  3632  0E92                     	;# 
  3633  0E93                     	;# 
  3634  0E94                     	;# 
  3635  0E95                     	;# 
  3636  0E96                     	;# 
  3637  0E97                     	;# 
  3638  0E9C                     	;# 
  3639  0E9D                     	;# 
  3640  0E9E                     	;# 
  3641  0EA1                     	;# 
  3642  0EA2                     	;# 
  3643  0EA3                     	;# 
  3644  0EA4                     	;# 
  3645  0EA5                     	;# 
  3646  0EA9                     	;# 
  3647  0EAA                     	;# 
  3648  0EAB                     	;# 
  3649  0EAC                     	;# 
  3650  0EB1                     	;# 
  3651  0EB2                     	;# 
  3652  0EB3                     	;# 
  3653  0EB8                     	;# 
  3654  0EB9                     	;# 
  3655  0EBA                     	;# 
  3656  0EBB                     	;# 
  3657  0EBC                     	;# 
  3658  0EBD                     	;# 
  3659  0EBE                     	;# 
  3660  0EC3                     	;# 
  3661  0EC5                     	;# 
  3662  0EC6                     	;# 
  3663  0EC7                     	;# 
  3664  0EC8                     	;# 
  3665  0EC9                     	;# 
  3666  0ECA                     	;# 
  3667  0ECB                     	;# 
  3668  0ECC                     	;# 
  3669  0F10                     	;# 
  3670  0F11                     	;# 
  3671  0F12                     	;# 
  3672  0F13                     	;# 
  3673  0F14                     	;# 
  3674  0F15                     	;# 
  3675  0F16                     	;# 
  3676  0F17                     	;# 
  3677  0F18                     	;# 
  3678  0F19                     	;# 
  3679  0F1A                     	;# 
  3680  0F1B                     	;# 
  3681  0F1C                     	;# 
  3682  0F1D                     	;# 
  3683  0F1E                     	;# 
  3684  0F1F                     	;# 
  3685  0F20                     	;# 
  3686  0F21                     	;# 
  3687  0F22                     	;# 
  3688  0F23                     	;# 
  3689  0F24                     	;# 
  3690  0F25                     	;# 
  3691  0F26                     	;# 
  3692  0F27                     	;# 
  3693  0F38                     	;# 
  3694  0F39                     	;# 
  3695  0F3A                     	;# 
  3696  0F3B                     	;# 
  3697  0F3C                     	;# 
  3698  0F3D                     	;# 
  3699  0F3E                     	;# 
  3700  0F3F                     	;# 
  3701  0F40                     	;# 
  3702  0F41                     	;# 
  3703  0F43                     	;# 
  3704  0F44                     	;# 
  3705  0F45                     	;# 
  3706  0F46                     	;# 
  3707  0F47                     	;# 
  3708  0F48                     	;# 
  3709  0F49                     	;# 
  3710  0F4A                     	;# 
  3711  0F4B                     	;# 
  3712  0F4C                     	;# 
  3713  0F4E                     	;# 
  3714  0F4F                     	;# 
  3715  0F50                     	;# 
  3716  0F51                     	;# 
  3717  0F52                     	;# 
  3718  0F53                     	;# 
  3719  0F54                     	;# 
  3720  0F55                     	;# 
  3721  0F56                     	;# 
  3722  0F57                     	;# 
  3723  0F65                     	;# 
  3724  0F68                     	;# 
  3725  0F69                     	;# 
  3726  0F6A                     	;# 
  3727  0F6B                     	;# 
  3728  0FE4                     	;# 
  3729  0FE5                     	;# 
  3730  0FE6                     	;# 
  3731  0FE7                     	;# 
  3732  0FE8                     	;# 
  3733  0FE9                     	;# 
  3734  0FEA                     	;# 
  3735  0FEB                     	;# 
  3736  0FED                     	;# 
  3737  0FEE                     	;# 
  3738  0FEF                     	;# 
  3739  0000                     	;# 
  3740  0001                     	;# 
  3741  0002                     	;# 
  3742  0003                     	;# 
  3743  0004                     	;# 
  3744  0005                     	;# 
  3745  0006                     	;# 
  3746  0007                     	;# 
  3747  0008                     	;# 
  3748  0009                     	;# 
  3749  000A                     	;# 
  3750  000B                     	;# 
  3751  000C                     	;# 
  3752  000D                     	;# 
  3753  000E                     	;# 
  3754  0010                     	;# 
  3755  0011                     	;# 
  3756  0012                     	;# 
  3757  0013                     	;# 
  3758  0016                     	;# 
  3759  0017                     	;# 
  3760  0018                     	;# 
  3761  001C                     	;# 
  3762  001C                     	;# 
  3763  001D                     	;# 
  3764  001D                     	;# 
  3765  001E                     	;# 
  3766  001F                     	;# 
  3767  008C                     	;# 
  3768  008C                     	;# 
  3769  008D                     	;# 
  3770  008E                     	;# 
  3771  008E                     	;# 
  3772  008F                     	;# 
  3773  0090                     	;# 
  3774  0090                     	;# 
  3775  0091                     	;# 
  3776  0093                     	;# 
  3777  0094                     	;# 
  3778  0095                     	;# 
  3779  0096                     	;# 
  3780  0097                     	;# 
  3781  0098                     	;# 
  3782  0099                     	;# 
  3783  009A                     	;# 
  3784  009B                     	;# 
  3785  009C                     	;# 
  3786  009D                     	;# 
  3787  009E                     	;# 
  3788  010C                     	;# 
  3789  010D                     	;# 
  3790  010E                     	;# 
  3791  010E                     	;# 
  3792  010F                     	;# 
  3793  0110                     	;# 
  3794  0110                     	;# 
  3795  0111                     	;# 
  3796  0112                     	;# 
  3797  0112                     	;# 
  3798  0113                     	;# 
  3799  0114                     	;# 
  3800  0114                     	;# 
  3801  0115                     	;# 
  3802  0116                     	;# 
  3803  0116                     	;# 
  3804  0117                     	;# 
  3805  0119                     	;# 
  3806  0119                     	;# 
  3807  0119                     	;# 
  3808  011A                     	;# 
  3809  011A                     	;# 
  3810  011A                     	;# 
  3811  011B                     	;# 
  3812  011B                     	;# 
  3813  011B                     	;# 
  3814  011B                     	;# 
  3815  011B                     	;# 
  3816  011C                     	;# 
  3817  011C                     	;# 
  3818  011C                     	;# 
  3819  011D                     	;# 
  3820  011D                     	;# 
  3821  011D                     	;# 
  3822  011E                     	;# 
  3823  011E                     	;# 
  3824  011E                     	;# 
  3825  011F                     	;# 
  3826  011F                     	;# 
  3827  011F                     	;# 
  3828  011F                     	;# 
  3829  011F                     	;# 
  3830  018C                     	;# 
  3831  018D                     	;# 
  3832  018E                     	;# 
  3833  018F                     	;# 
  3834  0190                     	;# 
  3835  0191                     	;# 
  3836  0192                     	;# 
  3837  0196                     	;# 
  3838  0197                     	;# 
  3839  0198                     	;# 
  3840  0199                     	;# 
  3841  019A                     	;# 
  3842  019B                     	;# 
  3843  019C                     	;# 
  3844  020C                     	;# 
  3845  020C                     	;# 
  3846  020D                     	;# 
  3847  020E                     	;# 
  3848  020F                     	;# 
  3849  020F                     	;# 
  3850  0210                     	;# 
  3851  0210                     	;# 
  3852  0211                     	;# 
  3853  0211                     	;# 
  3854  0212                     	;# 
  3855  0212                     	;# 
  3856  0213                     	;# 
  3857  0214                     	;# 
  3858  0215                     	;# 
  3859  0215                     	;# 
  3860  0216                     	;# 
  3861  0216                     	;# 
  3862  0217                     	;# 
  3863  0217                     	;# 
  3864  0218                     	;# 
  3865  0218                     	;# 
  3866  0219                     	;# 
  3867  021A                     	;# 
  3868  021B                     	;# 
  3869  021B                     	;# 
  3870  021C                     	;# 
  3871  021C                     	;# 
  3872  021D                     	;# 
  3873  021D                     	;# 
  3874  021E                     	;# 
  3875  021F                     	;# 
  3876  028C                     	;# 
  3877  028C                     	;# 
  3878  028D                     	;# 
  3879  028D                     	;# 
  3880  028E                     	;# 
  3881  028F                     	;# 
  3882  0290                     	;# 
  3883  0290                     	;# 
  3884  0291                     	;# 
  3885  0292                     	;# 
  3886  0292                     	;# 
  3887  0293                     	;# 
  3888  0293                     	;# 
  3889  0294                     	;# 
  3890  0295                     	;# 
  3891  0296                     	;# 
  3892  0296                     	;# 
  3893  0297                     	;# 
  3894  0298                     	;# 
  3895  0298                     	;# 
  3896  0299                     	;# 
  3897  0299                     	;# 
  3898  029A                     	;# 
  3899  029B                     	;# 
  3900  029C                     	;# 
  3901  029C                     	;# 
  3902  029D                     	;# 
  3903  030C                     	;# 
  3904  030C                     	;# 
  3905  030D                     	;# 
  3906  030E                     	;# 
  3907  030F                     	;# 
  3908  0310                     	;# 
  3909  0310                     	;# 
  3910  0311                     	;# 
  3911  0312                     	;# 
  3912  0313                     	;# 
  3913  0314                     	;# 
  3914  0314                     	;# 
  3915  0315                     	;# 
  3916  0316                     	;# 
  3917  0317                     	;# 
  3918  0318                     	;# 
  3919  0318                     	;# 
  3920  0319                     	;# 
  3921  031A                     	;# 
  3922  031B                     	;# 
  3923  031C                     	;# 
  3924  031C                     	;# 
  3925  031D                     	;# 
  3926  031E                     	;# 
  3927  031F                     	;# 
  3928  038C                     	;# 
  3929  038C                     	;# 
  3930  038D                     	;# 
  3931  038E                     	;# 
  3932  0390                     	;# 
  3933  0390                     	;# 
  3934  0391                     	;# 
  3935  0392                     	;# 
  3936  040C                     	;# 
  3937  040D                     	;# 
  3938  040E                     	;# 
  3939  040F                     	;# 
  3940  0410                     	;# 
  3941  0411                     	;# 
  3942  0416                     	;# 
  3943  0416                     	;# 
  3944  0417                     	;# 
  3945  0418                     	;# 
  3946  0418                     	;# 
  3947  0419                     	;# 
  3948  041A                     	;# 
  3949  041A                     	;# 
  3950  041B                     	;# 
  3951  041C                     	;# 
  3952  041C                     	;# 
  3953  041D                     	;# 
  3954  041E                     	;# 
  3955  041F                     	;# 
  3956  048C                     	;# 
  3957  048C                     	;# 
  3958  048D                     	;# 
  3959  048E                     	;# 
  3960  048F                     	;# 
  3961  048F                     	;# 
  3962  0490                     	;# 
  3963  0491                     	;# 
  3964  0492                     	;# 
  3965  0492                     	;# 
  3966  0493                     	;# 
  3967  0494                     	;# 
  3968  0495                     	;# 
  3969  0495                     	;# 
  3970  0496                     	;# 
  3971  0497                     	;# 
  3972  0498                     	;# 
  3973  0499                     	;# 
  3974  049A                     	;# 
  3975  049B                     	;# 
  3976  049C                     	;# 
  3977  049D                     	;# 
  3978  050C                     	;# 
  3979  050C                     	;# 
  3980  050D                     	;# 
  3981  050E                     	;# 
  3982  050F                     	;# 
  3983  050F                     	;# 
  3984  0510                     	;# 
  3985  0511                     	;# 
  3986  0512                     	;# 
  3987  0512                     	;# 
  3988  0513                     	;# 
  3989  0514                     	;# 
  3990  0515                     	;# 
  3991  0515                     	;# 
  3992  0516                     	;# 
  3993  0517                     	;# 
  3994  0518                     	;# 
  3995  0519                     	;# 
  3996  051A                     	;# 
  3997  051B                     	;# 
  3998  051C                     	;# 
  3999  051D                     	;# 
  4000  058C                     	;# 
  4001  058C                     	;# 
  4002  058D                     	;# 
  4003  058E                     	;# 
  4004  058F                     	;# 
  4005  058F                     	;# 
  4006  0590                     	;# 
  4007  0591                     	;# 
  4008  0592                     	;# 
  4009  0593                     	;# 
  4010  060C                     	;# 
  4011  060D                     	;# 
  4012  060E                     	;# 
  4013  060F                     	;# 
  4014  0610                     	;# 
  4015  0611                     	;# 
  4016  0612                     	;# 
  4017  0613                     	;# 
  4018  0614                     	;# 
  4019  0616                     	;# 
  4020  0617                     	;# 
  4021  0618                     	;# 
  4022  0619                     	;# 
  4023  061A                     	;# 
  4024  061B                     	;# 
  4025  061C                     	;# 
  4026  061D                     	;# 
  4027  061E                     	;# 
  4028  068C                     	;# 
  4029  068D                     	;# 
  4030  068E                     	;# 
  4031  068F                     	;# 
  4032  0690                     	;# 
  4033  0691                     	;# 
  4034  0692                     	;# 
  4035  0693                     	;# 
  4036  0694                     	;# 
  4037  070C                     	;# 
  4038  070D                     	;# 
  4039  070E                     	;# 
  4040  070F                     	;# 
  4041  0710                     	;# 
  4042  0711                     	;# 
  4043  0712                     	;# 
  4044  0713                     	;# 
  4045  0714                     	;# 
  4046  0716                     	;# 
  4047  0717                     	;# 
  4048  0718                     	;# 
  4049  0719                     	;# 
  4050  071A                     	;# 
  4051  071B                     	;# 
  4052  071C                     	;# 
  4053  071D                     	;# 
  4054  071E                     	;# 
  4055  0796                     	;# 
  4056  0797                     	;# 
  4057  0798                     	;# 
  4058  0799                     	;# 
  4059  079A                     	;# 
  4060  079B                     	;# 
  4061  080C                     	;# 
  4062  080D                     	;# 
  4063  080E                     	;# 
  4064  080F                     	;# 
  4065  0810                     	;# 
  4066  0811                     	;# 
  4067  0812                     	;# 
  4068  0813                     	;# 
  4069  0814                     	;# 
  4070  081A                     	;# 
  4071  081B                     	;# 
  4072  081C                     	;# 
  4073  081D                     	;# 
  4074  081E                     	;# 
  4075  081F                     	;# 
  4076  088C                     	;# 
  4077  088D                     	;# 
  4078  088E                     	;# 
  4079  088F                     	;# 
  4080  0890                     	;# 
  4081  0891                     	;# 
  4082  0892                     	;# 
  4083  0893                     	;# 
  4084  0895                     	;# 
  4085  0896                     	;# 
  4086  0897                     	;# 
  4087  0898                     	;# 
  4088  0899                     	;# 
  4089  089A                     	;# 
  4090  089B                     	;# 
  4091  090C                     	;# 
  4092  090E                     	;# 
  4093  090F                     	;# 
  4094  091F                     	;# 
  4095  098F                     	;# 
  4096  098F                     	;# 
  4097  0990                     	;# 
  4098  0991                     	;# 
  4099  0992                     	;# 
  4100  0993                     	;# 
  4101  0994                     	;# 
  4102  0995                     	;# 
  4103  0996                     	;# 
  4104  0997                     	;# 
  4105  0E0F                     	;# 
  4106  0E10                     	;# 
  4107  0E11                     	;# 
  4108  0E12                     	;# 
  4109  0E13                     	;# 
  4110  0E14                     	;# 
  4111  0E15                     	;# 
  4112  0E16                     	;# 
  4113  0E17                     	;# 
  4114  0E18                     	;# 
  4115  0E19                     	;# 
  4116  0E1A                     	;# 
  4117  0E1B                     	;# 
  4118  0E1C                     	;# 
  4119  0E1D                     	;# 
  4120  0E1E                     	;# 
  4121  0E1F                     	;# 
  4122  0E20                     	;# 
  4123  0E21                     	;# 
  4124  0E22                     	;# 
  4125  0E23                     	;# 
  4126  0E24                     	;# 
  4127  0E25                     	;# 
  4128  0E26                     	;# 
  4129  0E27                     	;# 
  4130  0E28                     	;# 
  4131  0E29                     	;# 
  4132  0E2A                     	;# 
  4133  0E2B                     	;# 
  4134  0E2C                     	;# 
  4135  0E2D                     	;# 
  4136  0E2E                     	;# 
  4137  0E2F                     	;# 
  4138  0E30                     	;# 
  4139  0E31                     	;# 
  4140  0E32                     	;# 
  4141  0E33                     	;# 
  4142  0E34                     	;# 
  4143  0E35                     	;# 
  4144  0E36                     	;# 
  4145  0E37                     	;# 
  4146  0E8F                     	;# 
  4147  0E90                     	;# 
  4148  0E91                     	;# 
  4149  0E92                     	;# 
  4150  0E93                     	;# 
  4151  0E94                     	;# 
  4152  0E95                     	;# 
  4153  0E96                     	;# 
  4154  0E97                     	;# 
  4155  0E9C                     	;# 
  4156  0E9D                     	;# 
  4157  0E9E                     	;# 
  4158  0EA1                     	;# 
  4159  0EA2                     	;# 
  4160  0EA3                     	;# 
  4161  0EA4                     	;# 
  4162  0EA5                     	;# 
  4163  0EA9                     	;# 
  4164  0EAA                     	;# 
  4165  0EAB                     	;# 
  4166  0EAC                     	;# 
  4167  0EB1                     	;# 
  4168  0EB2                     	;# 
  4169  0EB3                     	;# 
  4170  0EB8                     	;# 
  4171  0EB9                     	;# 
  4172  0EBA                     	;# 
  4173  0EBB                     	;# 
  4174  0EBC                     	;# 
  4175  0EBD                     	;# 
  4176  0EBE                     	;# 
  4177  0EC3                     	;# 
  4178  0EC5                     	;# 
  4179  0EC6                     	;# 
  4180  0EC7                     	;# 
  4181  0EC8                     	;# 
  4182  0EC9                     	;# 
  4183  0ECA                     	;# 
  4184  0ECB                     	;# 
  4185  0ECC                     	;# 
  4186  0F10                     	;# 
  4187  0F11                     	;# 
  4188  0F12                     	;# 
  4189  0F13                     	;# 
  4190  0F14                     	;# 
  4191  0F15                     	;# 
  4192  0F16                     	;# 
  4193  0F17                     	;# 
  4194  0F18                     	;# 
  4195  0F19                     	;# 
  4196  0F1A                     	;# 
  4197  0F1B                     	;# 
  4198  0F1C                     	;# 
  4199  0F1D                     	;# 
  4200  0F1E                     	;# 
  4201  0F1F                     	;# 
  4202  0F20                     	;# 
  4203  0F21                     	;# 
  4204  0F22                     	;# 
  4205  0F23                     	;# 
  4206  0F24                     	;# 
  4207  0F25                     	;# 
  4208  0F26                     	;# 
  4209  0F27                     	;# 
  4210  0F38                     	;# 
  4211  0F39                     	;# 
  4212  0F3A                     	;# 
  4213  0F3B                     	;# 
  4214  0F3C                     	;# 
  4215  0F3D                     	;# 
  4216  0F3E                     	;# 
  4217  0F3F                     	;# 
  4218  0F40                     	;# 
  4219  0F41                     	;# 
  4220  0F43                     	;# 
  4221  0F44                     	;# 
  4222  0F45                     	;# 
  4223  0F46                     	;# 
  4224  0F47                     	;# 
  4225  0F48                     	;# 
  4226  0F49                     	;# 
  4227  0F4A                     	;# 
  4228  0F4B                     	;# 
  4229  0F4C                     	;# 
  4230  0F4E                     	;# 
  4231  0F4F                     	;# 
  4232  0F50                     	;# 
  4233  0F51                     	;# 
  4234  0F52                     	;# 
  4235  0F53                     	;# 
  4236  0F54                     	;# 
  4237  0F55                     	;# 
  4238  0F56                     	;# 
  4239  0F57                     	;# 
  4240  0F65                     	;# 
  4241  0F68                     	;# 
  4242  0F69                     	;# 
  4243  0F6A                     	;# 
  4244  0F6B                     	;# 
  4245  0FE4                     	;# 
  4246  0FE5                     	;# 
  4247  0FE6                     	;# 
  4248  0FE7                     	;# 
  4249  0FE8                     	;# 
  4250  0FE9                     	;# 
  4251  0FEA                     	;# 
  4252  0FEB                     	;# 
  4253  0FED                     	;# 
  4254  0FEE                     	;# 
  4255  0FEF                     	;_Coulomb_Data
  4256                           
  4257                           	psect	idataBANK2
  4258  0914                     __pidataBANK2:
  4259                           
  4260                           ;initializer for main@F12104
  4261  0914  3401               	retlw	1
  4262  0915  3403               	retlw	3
  4263  0916  3400               	retlw	0
  4264  0917  3403               	retlw	3
  4265  0918  3400               	retlw	0
  4266  0919  3411               	retlw	17
  4267  091A  3475               	retlw	117
  4268  091B  34C6               	retlw	198
  4269                           
  4270                           	psect	idataBANK4
  4271  0003                     __pidataBANK4:
  4272                           
  4273                           ;initializer for _BackLight_State
  4274  0003  3408               	retlw	8
  4275                           
  4276                           	psect	nvBANK4
  4277  0247                     __pnvBANK4:
  4278  0247                     _EUSART_ErrorHandler:
  4279  0247                     	ds	2
  4280  0249                     _EUSART_OverrunErrorHandler:
  4281  0249                     	ds	2
  4282  024B                     _EUSART_FramingErrorHandler:
  4283  024B                     	ds	2
  4284  024D                     _EUSART_RxDefaultInterruptHandler:
  4285  024D                     	ds	2
  4286  000C                     _PORTAbits	set	12
  4287  0016                     _LATAbits	set	22
  4288  000B                     _INTCONbits	set	11
  4289  001E                     _T0CON0bits	set	30
  4290  001E                     _T0CON0	set	30
  4291  001C                     _TMR0L	set	28
  4292  001D                     _TMR0H	set	29
  4293  001F                     _T0CON1	set	31
  4294  0013                     _TRISC	set	19
  4295  0012                     _TRISB	set	18
  4296  0011                     _TRISA	set	17
  4297  0018                     _LATC	set	24
  4298  0017                     _LATB	set	23
  4299  0016                     _LATA	set	22
  4300  000C                     _PORTA	set	12
  4301  0119                     _RC1REG	set	281
  4302  011D                     _RC1STAbits	set	285
  4303  011A                     _TX1REG	set	282
  4304  011E                     _TX1STAbits	set	286
  4305  011C                     _SP1BRGH	set	284
  4306  011B                     _SP1BRGL	set	283
  4307  011E                     _TX1STA	set	286
  4308  011D                     _RC1STA	set	285
  4309  011F                     _BAUD1CON	set	287
  4310  018C                     _SSP1BUF	set	396
  4311  0191                     _SSP1CON2bits	set	401
  4312  018F                     _SSP1STAT	set	399
  4313  018E                     _SSP1MSK	set	398
  4314  018D                     _SSP1ADD	set	397
  4315  018F                     _SSP1STATbits	set	399
  4316  0191                     _SSP1CON2	set	401
  4317  0190                     _SSP1CON1	set	400
  4318  070C                     _PIR0bits	set	1804
  4319  070F                     _PIR3bits	set	1807
  4320  0719                     _PIE3bits	set	1817
  4321  079B                     _PMD5	set	1947
  4322  079A                     _PMD4	set	1946
  4323  0799                     _PMD3	set	1945
  4324  0798                     _PMD2	set	1944
  4325  0797                     _PMD1	set	1943
  4326  0796                     _PMD0	set	1942
  4327  0892                     _OSCTUNE	set	2194
  4328  0893                     _OSCFRQ	set	2195
  4329  0891                     _OSCEN	set	2193
  4330  088F                     _OSCCON3	set	2191
  4331  088D                     _OSCCON1	set	2189
  4332  0EC6                     _SSP1DATPPS	set	3782
  4333  0EC5                     _SSP1CLKPPS	set	3781
  4334  0ECB                     _RXPPS	set	3787
  4335  0F24                     _RC4PPS	set	3876
  4336  0F23                     _RC3PPS	set	3875
  4337  0F26                     _RC6PPS	set	3878
  4338  0F68                     _INLVLE	set	3944
  4339  0F52                     _INLVLC	set	3922
  4340  0F47                     _INLVLB	set	3911
  4341  0F3C                     _INLVLA	set	3900
  4342  0F51                     _SLRCONC	set	3921
  4343  0F46                     _SLRCONB	set	3910
  4344  0F3B                     _SLRCONA	set	3899
  4345  0F50                     _ODCONC	set	3920
  4346  0F45                     _ODCONB	set	3909
  4347  0F3A                     _ODCONA	set	3898
  4348  0F4F                     _WPUC	set	3919
  4349  0F39                     _WPUA	set	3897
  4350  0F44                     _WPUB	set	3908
  4351  0F65                     _WPUE	set	3941
  4352  0F38                     _ANSELA	set	3896
  4353  0F43                     _ANSELB	set	3907
  4354  0F4E                     _ANSELC	set	3918
  4355                           
  4356                           	psect	stringtext1
  4357  0800                     __pstringtext1:
  4358  0800                     STR_13:
  4359  0800  3430               	retlw	48	;'0'
  4360  0801  3430               	retlw	48	;'0'
  4361  0802  3400               	retlw	0
  4362                           
  4363                           	psect	stringtext2
  4364  0803                     __pstringtext2:
  4365  0803                     STR_2:
  4366  0803  3425               	retlw	37	;'%'
  4367  0804  3464               	retlw	100	;'d'
  4368  0805  3400               	retlw	0
  4369                           
  4370                           	psect	stringtext3
  4371  0806                     __pstringtext3:
  4372  0806                     STR_1:
  4373  0806  344E               	retlw	78	;'N'
  4374  0807  346F               	retlw	111	;'o'
  4375  0808  3400               	retlw	0
  4376                           
  4377                           	psect	stringtext4
  4378  0809                     __pstringtext4:
  4379  0809                     STR_5:
  4380  0809  342E               	retlw	46	;'.'
  4381  080A  3400               	retlw	0
  4382                           
  4383                           	psect	stringtext5
  4384  080B                     __pstringtext5:
  4385  080B                     STR_3:
  4386  080B  343A               	retlw	58	;':'
  4387  080C  3400               	retlw	0
  4388                           
  4389                           	psect	stringtext6
  4390  080D                     __pstringtext6:
  4391  080D                     STR_8:
  4392  080D  345E               	retlw	94	;'^'
  4393  080E  3400               	retlw	0
  4394                           
  4395                           	psect	stringtext7
  4396  080F                     __pstringtext7:
  4397  080F                     STR_7:
  4398  080F  3476               	retlw	118	;'v'
  4399  0810  3400               	retlw	0
  4400                           
  4401                           	psect	stringtext8
  4402  0000                     __pstringtext8:
  4403  0809                     
  4404                           	psect	cinit
  4405  0029                     start_initialization:	
  4406                           ; #config settings
  4407                           
  4408  0029                     __initialization:	;BIGRAM
  4409                           
  4410                           ; Initialize objects allocated to BANK2
  4411  0029  3014               	movlw	low __pidataBANK2
  4412  002A  0084               	movwf	4
  4413  002B  3089               	movlw	(high __pidataBANK2)| (0+128)
  4414  002C  0085               	movwf	5
  4415  002D  0022               	movlb	2	; select bank2
  4416  002E  0012               	moviw fsr0++
  4417  002F  00E8               	movwf	__pdataBANK2& (0+127)
  4418  0030  0012               	moviw fsr0++
  4419  0031  00E9               	movwf	(__pdataBANK2+1)& (0+127)
  4420  0032  0012               	moviw fsr0++
  4421  0033  00EA               	movwf	(__pdataBANK2+2)& (0+127)
  4422  0034  0012               	moviw fsr0++
  4423  0035  00EB               	movwf	(__pdataBANK2+3)& (0+127)
  4424  0036  0012               	moviw fsr0++
  4425  0037  00EC               	movwf	(__pdataBANK2+4)& (0+127)
  4426  0038  0012               	moviw fsr0++
  4427  0039  00ED               	movwf	(__pdataBANK2+5)& (0+127)
  4428  003A  0012               	moviw fsr0++
  4429  003B  00EE               	movwf	(__pdataBANK2+6)& (0+127)
  4430  003C  0012               	moviw fsr0++
  4431  003D  00EF               	movwf	(__pdataBANK2+7)& (0+127)
  4432                           
  4433                           ; Initialize objects allocated to BANK4
  4434  003E  0024               	movlb	4	; select bank4
  4435  003F  3180  2003  3180   	fcall	__pidataBANK4	;fetch initializer
  4436  0042  00D1               	movwf	__pdataBANK4& (0+127)
  4437                           
  4438                           ; Clear objects allocated to BIGRAM
  4439  0043  307C               	movlw	low (0+8572)
  4440  0044  0084               	movwf	4
  4441  0045  3021               	movlw	high (0+8572)
  4442  0046  0085               	movwf	5
  4443  0047  3074               	movlw	116
  4444  0048  00FE               	movwf	btemp
  4445  0049  3000               	movlw	0
  4446  004A  00FF               	movwf	btemp+1
  4447  004B  3189  216A  3180   	fcall	clear_ram0
  4448                           
  4449                           ; Clear objects allocated to COMMON
  4450  004E  01F8               	clrf	__pbssCOMMON& (0+127)
  4451  004F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4452  0050  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4453                           
  4454                           ; Clear objects allocated to BANK1
  4455  0051  30A0               	movlw	low __pbssBANK1
  4456  0052  0084               	movwf	4
  4457  0053  3000               	movlw	high __pbssBANK1
  4458  0054  0085               	movwf	5
  4459  0055  3028               	movlw	40
  4460  0056  00FE               	movwf	btemp
  4461  0057  3000               	movlw	0
  4462  0058  00FF               	movwf	btemp+1
  4463  0059  3189  216A  3180   	fcall	clear_ram0
  4464                           
  4465                           ; Clear objects allocated to BANK2
  4466  005C  3020               	movlw	low __pbssBANK2
  4467  005D  0084               	movwf	4
  4468  005E  3001               	movlw	high __pbssBANK2
  4469  005F  0085               	movwf	5
  4470  0060  3048               	movlw	72
  4471  0061  00FE               	movwf	btemp
  4472  0062  3000               	movlw	0
  4473  0063  00FF               	movwf	btemp+1
  4474  0064  3189  216A  3180   	fcall	clear_ram0
  4475                           
  4476                           ; Clear objects allocated to BANK3
  4477  0067  30A0               	movlw	low __pbssBANK3
  4478  0068  0084               	movwf	4
  4479  0069  3001               	movlw	high __pbssBANK3
  4480  006A  0085               	movwf	5
  4481  006B  3050               	movlw	80
  4482  006C  00FE               	movwf	btemp
  4483  006D  3000               	movlw	0
  4484  006E  00FF               	movwf	btemp+1
  4485  006F  3189  216A  3180   	fcall	clear_ram0
  4486                           
  4487                           ; Clear objects allocated to BANK4
  4488  0072  3020               	movlw	low __pbssBANK4
  4489  0073  0084               	movwf	4
  4490  0074  3002               	movlw	high __pbssBANK4
  4491  0075  0085               	movwf	5
  4492  0076  3027               	movlw	39
  4493  0077  00FE               	movwf	btemp
  4494  0078  3000               	movlw	0
  4495  0079  00FF               	movwf	btemp+1
  4496  007A  3189  216A  3180   	fcall	clear_ram0
  4497  007D                     end_of_initialization:	
  4498                           ;End of C runtime variable initialization code
  4499                           
  4500  007D                     __end_of__initialization:
  4501  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4502  007E  0020               	movlb	0
  4503  007F  3180  2881         	ljmp	_main	;jump to C main() function
  4504                           
  4505                           	psect	bssCOMMON
  4506  0078                     __pbssCOMMON:
  4507  0078                     _eusartRxCount:
  4508  0078                     	ds	1
  4509  0079                     _eusartRxTail:
  4510  0079                     	ds	1
  4511  007A                     _eusartRxHead:
  4512  007A                     	ds	1
  4513                           
  4514                           	psect	bssBANK1
  4515  00A0                     __pbssBANK1:
  4516  00A0                     _badBettery:
  4517  00A0                     	ds	34
  4518  00C2                     _i:
  4519  00C2                     	ds	2
  4520  00C4                     _ShowbadBettery:
  4521  00C4                     	ds	4
  4522                           
  4523                           	psect	bssBANK2
  4524  0120                     __pbssBANK2:
  4525  0120                     _diffBettery:
  4526  0120                     	ds	34
  4527  0142                     _Voltage_sort:
  4528  0142                     	ds	34
  4529  0164                     _flags:
  4530  0164                     	ds	2
  4531  0166                     _ch:
  4532  0166                     	ds	1
  4533  0167                     _eusartRxLastError:
  4534  0167                     	ds	1
  4535                           
  4536                           	psect	dataBANK2
  4537  0168                     __pdataBANK2:
  4538  0168                     main@F12104:
  4539  0168                     	ds	8
  4540                           
  4541                           	psect	bssBANK3
  4542  01A0                     __pbssBANK3:
  4543  01A0                     _eusartRxStatusBuffer:
  4544  01A0                     	ds	39
  4545  01C7                     _nout:
  4546  01C7                     	ds	2
  4547  01C9                     _width:
  4548  01C9                     	ds	2
  4549  01CB                     _prec:
  4550  01CB                     	ds	2
  4551  01CD                     _i2c_add:
  4552  01CD                     	ds	1
  4553  01CE                     _RS:
  4554  01CE                     	ds	1
  4555  01CF                     _dbuf:
  4556  01CF                     	ds	32
  4557  01EF                     _no:
  4558  01EF                     	ds	1
  4559                           
  4560                           	psect	bssBANK4
  4561  0220                     __pbssBANK4:
  4562  0220                     _eusartRxBuffer:
  4563  0220                     	ds	39
  4564                           
  4565                           	psect	dataBANK4
  4566  0251                     __pdataBANK4:
  4567  0251                     _BackLight_State:
  4568  0251                     	ds	1
  4569                           
  4570                           	psect	clrtext
  4571  096A                     clear_ram0:	
  4572                           ;	Called with FSR0 containing the base address, and
  4573                           ;	btemp/btemp+1 has the size to clear
  4574                           
  4575  096A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4576  096B                     clrloop0:
  4577  096B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4578  096C  3101               	addfsr 0,1
  4579  096D  3001               	movlw	1
  4580  096E  02FE               	subwf	btemp,f
  4581  096F  3000               	movlw	0
  4582  0970  3BFF               	subwfb	btemp+1,f
  4583  0971  087F               	movf	btemp+1,w
  4584  0972  047E               	iorwf	btemp,w
  4585  0973  1D03               	skipz
  4586  0974  296B               	goto	clrloop0	;have we reached the end yet?
  4587  0975  3400               	retlw	0	;all done for this memory range, return
  4588                           
  4589                           	psect	cstackBANK4
  4590  024F                     __pcstackBANK4:
  4591  024F                     main@j:
  4592                           
  4593                           ; 2 bytes @ 0x0
  4594  024F                     	ds	2
  4595                           
  4596                           	psect	cstackBANK1
  4597  00C8                     __pcstackBANK1:
  4598  00C8                     ?_sprintf:
  4599  00C8                     sprintf@s:	
  4600                           ; 2 bytes @ 0x0
  4601                           
  4602                           
  4603                           ; 2 bytes @ 0x0
  4604  00C8                     	ds	2
  4605  00CA                     sprintf@fmt:
  4606                           
  4607                           ; 2 bytes @ 0x2
  4608  00CA                     	ds	4
  4609  00CE                     ??_sprintf:
  4610                           
  4611                           ; 1 bytes @ 0x6
  4612  00CE                     	ds	3
  4613  00D1                     sprintf@ap:
  4614                           
  4615                           ; 1 bytes @ 0x9
  4616  00D1                     	ds	1
  4617  00D2                     sprintf@f:
  4618                           
  4619                           ; 6 bytes @ 0xA
  4620  00D2                     	ds	6
  4621  00D8                     ??_main:
  4622                           
  4623                           ; 1 bytes @ 0x10
  4624  00D8                     	ds	6
  4625  00DE                     main@out:
  4626                           
  4627                           ; 8 bytes @ 0x16
  4628  00DE                     	ds	8
  4629  00E6                     main@index_V_H:
  4630                           
  4631                           ; 2 bytes @ 0x1E
  4632  00E6                     	ds	2
  4633  00E8                     main@index:
  4634                           
  4635                           ; 2 bytes @ 0x20
  4636  00E8                     	ds	2
  4637  00EA                     main@index_V_L:
  4638                           
  4639                           ; 2 bytes @ 0x22
  4640  00EA                     	ds	2
  4641  00EC                     main@i:
  4642                           
  4643                           ; 2 bytes @ 0x24
  4644  00EC                     	ds	2
  4645  00EE                     main@H_L_counter:
  4646                           
  4647                           ; 2 bytes @ 0x26
  4648  00EE                     	ds	2
  4649                           
  4650                           	psect	cstackCOMMON
  4651  0070                     __pcstackCOMMON:
  4652  0070                     ?_EUSART_Receive_ISR:
  4653  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  4654                           ; 1 bytes @ 0x0
  4655                           
  4656  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  4657                           ; 1 bytes @ 0x0
  4658                           
  4659  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  4660                           ; 1 bytes @ 0x0
  4661                           
  4662  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  4663                           ; 1 bytes @ 0x0
  4664                           
  4665  0070                     ?_EUSART_DefaultErrorHandler:	
  4666                           ; 1 bytes @ 0x0
  4667                           
  4668  0070                     ?_EUSART_RxDataHandler:	
  4669                           ; 1 bytes @ 0x0
  4670                           
  4671  0070                     ??_EUSART_RxDataHandler:	
  4672                           ; 1 bytes @ 0x0
  4673                           
  4674  0070                     ?_PMD_Initialize:	
  4675                           ; 1 bytes @ 0x0
  4676                           
  4677  0070                     ?_PIN_MANAGER_Initialize:	
  4678                           ; 1 bytes @ 0x0
  4679                           
  4680  0070                     ?_OSCILLATOR_Initialize:	
  4681                           ; 1 bytes @ 0x0
  4682                           
  4683  0070                     ?_TMR0_Initialize:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0070                     ?_master_init:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0070                     ?_BadBetteryFilter:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0070                     ?_LCD_Init:	
  4693                           ; 1 bytes @ 0x0
  4694                           
  4695  0070                     ?_LCD_Clear:	
  4696                           ; 1 bytes @ 0x0
  4697                           
  4698  0070                     ?_IO_Expander_Write:	
  4699                           ; 1 bytes @ 0x0
  4700                           
  4701  0070                     ?_LCD_CMD:	
  4702                           ; 1 bytes @ 0x0
  4703                           
  4704  0070                     ?_EUSART_Initialize:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707  0070                     ?_EUSART_Read:	
  4708                           ; 1 bytes @ 0x0
  4709                           
  4710  0070                     ?_EUSART_Write:	
  4711                           ; 1 bytes @ 0x0
  4712                           
  4713  0070                     ?_putch:	
  4714                           ; 1 bytes @ 0x0
  4715                           
  4716  0070                     ?_SYSTEM_Initialize:	
  4717                           ; 1 bytes @ 0x0
  4718                           
  4719  0070                     ?_TMR0_ReadTimer:	
  4720                           ; 1 bytes @ 0x0
  4721                           
  4722  0070                     ?_INTERRUPT_InterruptManager:	
  4723                           ; 1 bytes @ 0x0
  4724                           
  4725  0070                     ?_main:	
  4726                           ; 1 bytes @ 0x0
  4727                           
  4728  0070                     ?_Sort:	
  4729                           ; 1 bytes @ 0x0
  4730                           
  4731  0070                     ?_I2C_Master_Wait:	
  4732                           ; 1 bytes @ 0x0
  4733                           
  4734  0070                     ?_I2C_Master_Start:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0070                     ?_I2C_Master_Stop:	
  4738                           ; 1 bytes @ 0x0
  4739                           
  4740  0070                     ?_I2C_Master_Write:	
  4741                           ; 1 bytes @ 0x0
  4742                           
  4743  0070                     ?_LCD_Write_4Bit:	
  4744                           ; 1 bytes @ 0x0
  4745                           
  4746  0070                     ?_LCD_Write_Char:	
  4747                           ; 1 bytes @ 0x0
  4748                           
  4749                           
  4750                           ; 1 bytes @ 0x0
  4751  0070                     	ds	3
  4752  0073                     ?_EUSART_SetRxInterruptHandler:
  4753  0073                     ??_EUSART_Receive_ISR:	
  4754                           ; 1 bytes @ 0x3
  4755                           
  4756  0073                     ?_EUSART_SetFramingErrorHandler:	
  4757                           ; 1 bytes @ 0x3
  4758                           
  4759  0073                     ?_EUSART_SetOverrunErrorHandler:	
  4760                           ; 1 bytes @ 0x3
  4761                           
  4762  0073                     ?_EUSART_SetErrorHandler:	
  4763                           ; 1 bytes @ 0x3
  4764                           
  4765  0073                     ??_EUSART_DefaultErrorHandler:	
  4766                           ; 1 bytes @ 0x3
  4767                           
  4768  0073                     ??_PMD_Initialize:	
  4769                           ; 1 bytes @ 0x3
  4770                           
  4771  0073                     ??_PIN_MANAGER_Initialize:	
  4772                           ; 1 bytes @ 0x3
  4773                           
  4774  0073                     ??_OSCILLATOR_Initialize:	
  4775                           ; 1 bytes @ 0x3
  4776                           
  4777  0073                     ??_TMR0_Initialize:	
  4778                           ; 1 bytes @ 0x3
  4779                           
  4780  0073                     ??_master_init:	
  4781                           ; 1 bytes @ 0x3
  4782                           
  4783  0073                     ?_Delay:	
  4784                           ; 1 bytes @ 0x3
  4785                           
  4786  0073                     ??_EUSART_Read:	
  4787                           ; 1 bytes @ 0x3
  4788                           
  4789  0073                     ??_EUSART_Write:	
  4790                           ; 1 bytes @ 0x3
  4791                           
  4792  0073                     ??_TMR0_ReadTimer:	
  4793                           ; 1 bytes @ 0x3
  4794                           
  4795  0073                     ??_INTERRUPT_InterruptManager:	
  4796                           ; 1 bytes @ 0x3
  4797                           
  4798  0073                     ??_Sort:	
  4799                           ; 1 bytes @ 0x3
  4800                           
  4801  0073                     ??_I2C_Master_Wait:	
  4802                           ; 1 bytes @ 0x3
  4803                           
  4804  0073                     ??_I2C_Master_Start:	
  4805                           ; 1 bytes @ 0x3
  4806                           
  4807  0073                     ??_I2C_Master_Stop:	
  4808                           ; 1 bytes @ 0x3
  4809                           
  4810  0073                     ??_I2C_Master_Write:	
  4811                           ; 1 bytes @ 0x3
  4812                           
  4813  0073                     ??___aodiv:	
  4814                           ; 1 bytes @ 0x3
  4815                           
  4816  0073                     ??___aomod:	
  4817                           ; 1 bytes @ 0x3
  4818                           
  4819  0073                     ?_strlen:	
  4820                           ; 1 bytes @ 0x3
  4821                           
  4822  0073                     ?___lwdiv:	
  4823                           ; 2 bytes @ 0x3
  4824                           
  4825  0073                     ?___lwmod:	
  4826                           ; 2 bytes @ 0x3
  4827                           
  4828  0073                     EUSART_Write@txData:	
  4829                           ; 2 bytes @ 0x3
  4830                           
  4831  0073                     I2C_Master_Write@data:	
  4832                           ; 1 bytes @ 0x3
  4833                           
  4834  0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4835                           ; 1 bytes @ 0x3
  4836                           
  4837  0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4838                           ; 2 bytes @ 0x3
  4839                           
  4840  0073                     EUSART_SetErrorHandler@interruptHandler:	
  4841                           ; 2 bytes @ 0x3
  4842                           
  4843  0073                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4844                           ; 2 bytes @ 0x3
  4845                           
  4846  0073                     Delay@counter:	
  4847                           ; 2 bytes @ 0x3
  4848                           
  4849  0073                     ___lwdiv@divisor:	
  4850                           ; 2 bytes @ 0x3
  4851                           
  4852  0073                     ___lwmod@divisor:	
  4853                           ; 2 bytes @ 0x3
  4854                           
  4855                           
  4856                           ; 2 bytes @ 0x3
  4857  0073                     	ds	1
  4858  0074                     ??_IO_Expander_Write:
  4859  0074                     ??_putch:	
  4860                           ; 1 bytes @ 0x4
  4861                           
  4862  0074                     EUSART_Read@readValue:	
  4863                           ; 1 bytes @ 0x4
  4864                           
  4865  0074                     putch@txData:	
  4866                           ; 1 bytes @ 0x4
  4867                           
  4868  0074                     TMR0_ReadTimer@readVal:	
  4869                           ; 1 bytes @ 0x4
  4870                           
  4871  0074                     IO_Expander_Write@Data:	
  4872                           ; 1 bytes @ 0x4
  4873                           
  4874  0074                     ___aomod@counter:	
  4875                           ; 1 bytes @ 0x4
  4876                           
  4877                           
  4878                           ; 1 bytes @ 0x4
  4879  0074                     	ds	1
  4880  0075                     ??_EUSART_SetRxInterruptHandler:
  4881  0075                     ??_EUSART_SetFramingErrorHandler:	
  4882                           ; 1 bytes @ 0x5
  4883                           
  4884  0075                     ??_EUSART_SetOverrunErrorHandler:	
  4885                           ; 1 bytes @ 0x5
  4886                           
  4887  0075                     ??_EUSART_SetErrorHandler:	
  4888                           ; 1 bytes @ 0x5
  4889                           
  4890  0075                     ??_Delay:	
  4891                           ; 1 bytes @ 0x5
  4892                           
  4893  0075                     ??_strlen:	
  4894                           ; 1 bytes @ 0x5
  4895                           
  4896  0075                     ??_EUSART_Initialize:	
  4897                           ; 1 bytes @ 0x5
  4898                           
  4899  0075                     ??_SYSTEM_Initialize:	
  4900                           ; 1 bytes @ 0x5
  4901                           
  4902  0075                     ??_LCD_Write_4Bit:	
  4903                           ; 1 bytes @ 0x5
  4904                           
  4905  0075                     ?_fputc:	
  4906                           ; 1 bytes @ 0x5
  4907                           
  4908  0075                     ___aomod@sign:	
  4909                           ; 2 bytes @ 0x5
  4910                           
  4911  0075                     ___lwdiv@dividend:	
  4912                           ; 1 bytes @ 0x5
  4913                           
  4914  0075                     ___lwmod@dividend:	
  4915                           ; 2 bytes @ 0x5
  4916                           
  4917  0075                     fputc@c:	
  4918                           ; 2 bytes @ 0x5
  4919                           
  4920                           
  4921                           ; 2 bytes @ 0x5
  4922  0075                     	ds	1
  4923  0076                     ?_abs:
  4924  0076                     LCD_Write_4Bit@Nibble:	
  4925                           ; 2 bytes @ 0x6
  4926                           
  4927  0076                     strlen@a:	
  4928                           ; 1 bytes @ 0x6
  4929                           
  4930  0076                     abs@a:	
  4931                           ; 1 bytes @ 0x6
  4932                           
  4933                           
  4934                           ; 2 bytes @ 0x6
  4935  0076                     	ds	1
  4936  0077                     ??_LCD_CMD:
  4937  0077                     ??_LCD_Write_Char:	
  4938                           ; 1 bytes @ 0x7
  4939                           
  4940  0077                     ??___lwdiv:	
  4941                           ; 1 bytes @ 0x7
  4942                           
  4943  0077                     ??___lwmod:	
  4944                           ; 1 bytes @ 0x7
  4945                           
  4946  0077                     fputc@fp:	
  4947                           ; 1 bytes @ 0x7
  4948                           
  4949  0077                     strlen@s:	
  4950                           ; 1 bytes @ 0x7
  4951                           
  4952                           
  4953                           ; 1 bytes @ 0x7
  4954  0077                     	ds	1
  4955  0078                     ??_LCD_Clear:
  4956                           
  4957                           	psect	cstackBANK0
  4958  0020                     __pcstackBANK0:	
  4959                           ; 1 bytes @ 0x8
  4960                           
  4961  0020                     ??_fputc:
  4962  0020                     ?___aodiv:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0020                     ?___aomod:	
  4966                           ; 8 bytes @ 0x0
  4967                           
  4968  0020                     LCD_CMD@CMD:	
  4969                           ; 8 bytes @ 0x0
  4970                           
  4971  0020                     LCD_Write_Char@Data:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0020                     ___lwdiv@counter:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0020                     ___lwmod@counter:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0020                     Sort@tmp:	
  4981                           ; 1 bytes @ 0x0
  4982                           
  4983  0020                     ___aodiv@divisor:	
  4984                           ; 2 bytes @ 0x0
  4985                           
  4986  0020                     ___aomod@divisor:	
  4987                           ; 8 bytes @ 0x0
  4988                           
  4989                           
  4990                           ; 8 bytes @ 0x0
  4991  0020                     	ds	1
  4992  0021                     ??_LCD_Init:
  4993  0021                     ?_LCD_Set_Cursor:	
  4994                           ; 1 bytes @ 0x1
  4995                           
  4996  0021                     ?_LCD_Write_String:	
  4997                           ; 1 bytes @ 0x1
  4998                           
  4999  0021                     LCD_Set_Cursor@COL:	
  5000                           ; 1 bytes @ 0x1
  5001                           
  5002  0021                     LCD_Write_String@Str:	
  5003                           ; 1 bytes @ 0x1
  5004                           
  5005  0021                     ___lwdiv@quotient:	
  5006                           ; 2 bytes @ 0x1
  5007                           
  5008                           
  5009                           ; 2 bytes @ 0x1
  5010  0021                     	ds	1
  5011  0022                     ??_LCD_Set_Cursor:
  5012  0022                     LCD_Init@I2C_Add:	
  5013                           ; 1 bytes @ 0x2
  5014                           
  5015                           
  5016                           ; 1 bytes @ 0x2
  5017  0022                     	ds	1
  5018  0023                     ?_Get_Voltage:
  5019  0023                     ??_LCD_Write_String:	
  5020                           ; 1 bytes @ 0x3
  5021                           
  5022  0023                     Get_Voltage@k:	
  5023                           ; 1 bytes @ 0x3
  5024                           
  5025                           
  5026                           ; 2 bytes @ 0x3
  5027  0023                     	ds	1
  5028  0024                     LCD_Set_Cursor@ROW:
  5029  0024                     Sort@i:	
  5030                           ; 1 bytes @ 0x4
  5031                           
  5032  0024                     LCD_Write_String@i:	
  5033                           ; 2 bytes @ 0x4
  5034                           
  5035                           
  5036                           ; 2 bytes @ 0x4
  5037  0024                     	ds	1
  5038  0025                     ??_Get_Voltage:
  5039  0025                     ?_fputs:	
  5040                           ; 1 bytes @ 0x5
  5041                           
  5042  0025                     fputs@fp:	
  5043                           ; 2 bytes @ 0x5
  5044                           
  5045                           
  5046                           ; 1 bytes @ 0x5
  5047  0025                     	ds	1
  5048  0026                     ??_fputs:
  5049  0026                     Sort@j:	
  5050                           ; 1 bytes @ 0x6
  5051                           
  5052                           
  5053                           ; 2 bytes @ 0x6
  5054  0026                     	ds	2
  5055  0028                     ??_BadBetteryFilter:
  5056  0028                     ___aodiv@dividend:	
  5057                           ; 1 bytes @ 0x8
  5058                           
  5059  0028                     ___aomod@dividend:	
  5060                           ; 8 bytes @ 0x8
  5061                           
  5062                           
  5063                           ; 8 bytes @ 0x8
  5064  0028                     	ds	1
  5065  0029                     fputs@c:
  5066                           
  5067                           ; 1 bytes @ 0x9
  5068  0029                     	ds	1
  5069  002A                     fputs@i:
  5070                           
  5071                           ; 2 bytes @ 0xA
  5072  002A                     	ds	2
  5073  002C                     fputs@s:
  5074                           
  5075                           ; 1 bytes @ 0xC
  5076  002C                     	ds	1
  5077  002D                     ?_pad:
  5078  002D                     pad@buf:	
  5079                           ; 2 bytes @ 0xD
  5080                           
  5081                           
  5082                           ; 1 bytes @ 0xD
  5083  002D                     	ds	1
  5084  002E                     BadBetteryFilter@k:
  5085  002E                     pad@p:	
  5086                           ; 2 bytes @ 0xE
  5087                           
  5088                           
  5089                           ; 2 bytes @ 0xE
  5090  002E                     	ds	2
  5091  0030                     ??_abs:
  5092  0030                     ??_pad:	
  5093                           ; 1 bytes @ 0x10
  5094                           
  5095  0030                     ___aodiv@counter:	
  5096                           ; 1 bytes @ 0x10
  5097                           
  5098                           
  5099                           ; 1 bytes @ 0x10
  5100  0030                     	ds	1
  5101  0031                     ___aodiv@sign:
  5102  0031                     pad@i:	
  5103                           ; 1 bytes @ 0x11
  5104                           
  5105                           
  5106                           ; 2 bytes @ 0x11
  5107  0031                     	ds	1
  5108  0032                     ___aodiv@quotient:
  5109                           
  5110                           ; 8 bytes @ 0x12
  5111  0032                     	ds	1
  5112  0033                     pad@w:
  5113                           
  5114                           ; 2 bytes @ 0x13
  5115  0033                     	ds	2
  5116  0035                     pad@fp:
  5117                           
  5118                           ; 1 bytes @ 0x15
  5119  0035                     	ds	5
  5120  003A                     ?_dtoa:
  5121  003A                     dtoa@d:	
  5122                           ; 2 bytes @ 0x1A
  5123                           
  5124                           
  5125                           ; 8 bytes @ 0x1A
  5126  003A                     	ds	8
  5127  0042                     ??_dtoa:
  5128                           
  5129                           ; 1 bytes @ 0x22
  5130  0042                     	ds	3
  5131  0045                     dtoa@fp:
  5132                           
  5133                           ; 1 bytes @ 0x25
  5134  0045                     	ds	1
  5135  0046                     _dtoa$1489:
  5136                           
  5137                           ; 2 bytes @ 0x26
  5138  0046                     	ds	2
  5139  0048                     dtoa@p:
  5140                           
  5141                           ; 2 bytes @ 0x28
  5142  0048                     	ds	2
  5143  004A                     dtoa@w:
  5144                           
  5145                           ; 2 bytes @ 0x2A
  5146  004A                     	ds	2
  5147  004C                     dtoa@s:
  5148                           
  5149                           ; 2 bytes @ 0x2C
  5150  004C                     	ds	2
  5151  004E                     dtoa@n:
  5152                           
  5153                           ; 8 bytes @ 0x2E
  5154  004E                     	ds	8
  5155  0056                     dtoa@i:
  5156                           
  5157                           ; 2 bytes @ 0x36
  5158  0056                     	ds	2
  5159  0058                     ?_vfpfcnvrt:
  5160  0058                     vfpfcnvrt@fmt:	
  5161                           ; 2 bytes @ 0x38
  5162                           
  5163                           
  5164                           ; 1 bytes @ 0x38
  5165  0058                     	ds	1
  5166  0059                     vfpfcnvrt@ap:
  5167                           
  5168                           ; 1 bytes @ 0x39
  5169  0059                     	ds	1
  5170  005A                     ??_vfpfcnvrt:
  5171                           
  5172                           ; 1 bytes @ 0x3A
  5173  005A                     	ds	5
  5174  005F                     vfpfcnvrt@ll:
  5175                           
  5176                           ; 8 bytes @ 0x3F
  5177  005F                     	ds	8
  5178  0067                     vfpfcnvrt@fp:
  5179                           
  5180                           ; 1 bytes @ 0x47
  5181  0067                     	ds	1
  5182  0068                     ?_vfprintf:
  5183  0068                     vfprintf@fmt:	
  5184                           ; 2 bytes @ 0x48
  5185                           
  5186                           
  5187                           ; 2 bytes @ 0x48
  5188  0068                     	ds	2
  5189  006A                     vfprintf@ap:
  5190                           
  5191                           ; 1 bytes @ 0x4A
  5192  006A                     	ds	1
  5193  006B                     ??_vfprintf:
  5194                           
  5195                           ; 1 bytes @ 0x4B
  5196  006B                     	ds	2
  5197  006D                     vfprintf@fp:
  5198                           
  5199                           ; 1 bytes @ 0x4D
  5200  006D                     	ds	1
  5201  006E                     vfprintf@cfmt:
  5202                           
  5203                           ; 2 bytes @ 0x4E
  5204  006E                     	ds	2
  5205                           
  5206                           	psect	maintext
  5207  0081                     __pmaintext:	
  5208 ;;
  5209 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  5210 ;;
  5211 ;; *************** function _main *****************
  5212 ;; Defined at:
  5213 ;;		line 52 in file "main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  index_V_L       2   34[BANK1 ] PTR unsigned int 
  5218 ;;		 -> Coulomb_Data.Voltage_L(34), Coulomb_Data(116), 
  5219 ;;  index           2   32[BANK1 ] PTR unsigned int 
  5220 ;;		 -> Coulomb_Data.Voltage_L(34), Coulomb_Data.Voltage_H(34), Coulomb_Data.ID(2), Coulomb_Data(116), 
  5221 ;;  index_V_H       2   30[BANK1 ] PTR unsigned int 
  5222 ;;		 -> Coulomb_Data.Voltage_H(34), Coulomb_Data(116), 
  5223 ;;  out             8   22[BANK1 ] unsigned char [8]
  5224 ;;  j               2    0[BANK4 ] int 
  5225 ;;  H_L_counter     2   38[BANK1 ] int 
  5226 ;;  i               2   36[BANK1 ] int 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : B1F/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5236 ;;      Params:         0       0       0       0       0       0       0       0
  5237 ;;      Locals:         0       0      18       0       0       2       0       0
  5238 ;;      Temps:          0       0       6       0       0       0       0       0
  5239 ;;      Totals:         0       0      24       0       0       2       0       0
  5240 ;;Total ram usage:       26 bytes
  5241 ;; Hardware stack levels required when called:   13
  5242 ;; This function calls:
  5243 ;;		_BadBetteryFilter
  5244 ;;		_Delay
  5245 ;;		_EUSART_Read
  5246 ;;		_EUSART_Write
  5247 ;;		_Get_Voltage
  5248 ;;		_LCD_Clear
  5249 ;;		_LCD_Init
  5250 ;;		_LCD_Set_Cursor
  5251 ;;		_LCD_Write_String
  5252 ;;		_SYSTEM_Initialize
  5253 ;;		_TMR0_ReadTimer
  5254 ;;		___lwdiv
  5255 ;;		___lwmod
  5256 ;;		_sprintf
  5257 ;; This function is called by:
  5258 ;;		Startup code after reset
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _main
  5264  0081                     _main:
  5265  0081                     l3719:	
  5266                           ;incstack = 0
  5267                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5268                           
  5269                           
  5270                           ;main.c: 54:     SYSTEM_Initialize();
  5271  0081  3189  2199  3180   	fcall	_SYSTEM_Initialize
  5272  0084                     l3721:
  5273                           
  5274                           ;main.c: 55:     (INTCONbits.GIE = 1);
  5275  0084  178B               	bsf	11,7	;volatile
  5276  0085                     l3723:
  5277                           
  5278                           ;main.c: 56:     (INTCONbits.PEIE = 1);
  5279  0085  170B               	bsf	11,6	;volatile
  5280  0086                     l3725:
  5281                           
  5282                           ;main.c: 58:     unsigned char out[8]={0x01,0x03,0x00,0x03,0x00,0x11,0x75,0xC6};
  5283  0086  3068               	movlw	low main@F12104
  5284  0087  0086               	movwf	6
  5285  0088  3001               	movlw	high main@F12104
  5286  0089  0087               	movwf	7
  5287  008A  30DE               	movlw	low main@out
  5288  008B  0084               	movwf	4
  5289  008C  3000               	movlw	high main@out
  5290  008D  0085               	movwf	5
  5291  008E  3008               	movlw	8
  5292  008F  0021               	movlb	1	; select bank1
  5293  0090  00D8               	movwf	??_main^(0+128)
  5294  0091                     u3180:
  5295  0091  0016               	moviw fsr1++
  5296  0092  001A               	movwi fsr0++
  5297  0093  0BD8               	decfsz	??_main^(0+128),f
  5298  0094  2891               	goto	u3180
  5299  0095                     l3727:
  5300  0095                     l3729:
  5301                           
  5302                           ;main.c: 62:         H_L_counter=0;
  5303  0095  0021               	movlb	1	; select bank1
  5304  0096  01EE               	clrf	main@H_L_counter^(0+128)
  5305  0097  01EF               	clrf	(main@H_L_counter+1)^(0+128)
  5306  0098                     l3731:
  5307                           
  5308                           ;main.c: 63:         if(TMR0_ReadTimer()==0){
  5309  0098  3189  2105  3180   	fcall	_TMR0_ReadTimer
  5310  009B  3A00               	xorlw	0
  5311  009C  1D03               	skipz
  5312  009D  289F               	goto	u3191
  5313  009E  28A0               	goto	u3190
  5314  009F                     u3191:
  5315  009F  28BF               	goto	l3747
  5316  00A0                     u3190:
  5317  00A0                     l3733:
  5318                           
  5319                           ;main.c: 64:             for(i=0;i<8;i++){
  5320  00A0  0021               	movlb	1	; select bank1
  5321  00A1  01EC               	clrf	main@i^(0+128)
  5322  00A2  01ED               	clrf	(main@i+1)^(0+128)
  5323  00A3                     l3739:
  5324                           
  5325                           ;main.c: 65:                 EUSART_Write(out[i]);
  5326  00A3  0021               	movlb	1	; select bank1
  5327  00A4  086C               	movf	main@i^(0+128),w
  5328  00A5  3EDE               	addlw	(low (main@out| 0))& (0+255)
  5329  00A6  0086               	movwf	6
  5330  00A7  0187               	clrf	7
  5331  00A8  0801               	movf	1,w
  5332  00A9  3189  2125  3180   	fcall	_EUSART_Write
  5333  00AC                     l3741:
  5334                           
  5335                           ;main.c: 66:                 __nop();
  5336  00AC  0000               	nop
  5337  00AD                     l3743:
  5338                           
  5339                           ;main.c: 67:             }
  5340  00AD  3001               	movlw	1
  5341  00AE  0021               	movlb	1	; select bank1
  5342  00AF  07EC               	addwf	main@i^(0+128),f
  5343  00B0  3000               	movlw	0
  5344  00B1  3DED               	addwfc	(main@i+1)^(0+128),f
  5345  00B2                     l3745:
  5346  00B2  086D               	movf	(main@i+1)^(0+128),w
  5347  00B3  3A80               	xorlw	128
  5348  00B4  00D8               	movwf	??_main^(0+128)
  5349  00B5  3080               	movlw	128
  5350  00B6  0258               	subwf	??_main^(0+128),w
  5351  00B7  1D03               	skipz
  5352  00B8  28BB               	goto	u3205
  5353  00B9  3008               	movlw	8
  5354  00BA  026C               	subwf	main@i^(0+128),w
  5355  00BB                     u3205:
  5356  00BB  1C03               	skipc
  5357  00BC  28BE               	goto	u3201
  5358  00BD  28BF               	goto	u3200
  5359  00BE                     u3201:
  5360  00BE  28A3               	goto	l3739
  5361  00BF                     u3200:
  5362  00BF                     l3747:
  5363                           
  5364                           ;main.c: 69:         if(eusartRxCount == 39){
  5365  00BF  3027               	movlw	39
  5366  00C0  0678               	xorwf	_eusartRxCount,w	;volatile
  5367  00C1  1D03               	btfss	3,2
  5368  00C2  28C4               	goto	u3211
  5369  00C3  28C5               	goto	u3210
  5370  00C4                     u3211:
  5371  00C4  2895               	goto	l3729
  5372  00C5                     u3210:
  5373  00C5                     l3749:
  5374                           
  5375                           ;main.c: 70:             unsigned int *index;;main.c: 71:             unsigned int *inde
      +                          x_V_H;;main.c: 72:             unsigned int *index_V_L;;main.c: 73:             index=&C
      +                          oulomb_Data.ID;
  5376  00C5  307C               	movlw	124
  5377  00C6  0021               	movlb	1	; select bank1
  5378  00C7  00E8               	movwf	main@index^(0+128)
  5379  00C8  3021               	movlw	33
  5380  00C9  00E9               	movwf	(main@index^(0+128)+1)
  5381  00CA                     l3751:
  5382                           
  5383                           ;main.c: 74:             index_V_H=&Coulomb_Data.Voltage_H[0];
  5384  00CA  3082               	movlw	130
  5385  00CB  00E6               	movwf	main@index_V_H^(0+128)
  5386  00CC  3021               	movlw	33
  5387  00CD  00E7               	movwf	(main@index_V_H^(0+128)+1)
  5388  00CE                     l3753:
  5389                           
  5390                           ;main.c: 75:             index_V_L=&Coulomb_Data.Voltage_L[0];
  5391  00CE  30A4               	movlw	164
  5392  00CF  00EA               	movwf	main@index_V_L^(0+128)
  5393  00D0  3021               	movlw	33
  5394  00D1  00EB               	movwf	(main@index_V_L^(0+128)+1)
  5395                           
  5396                           ;main.c: 76:             while(eusartRxCount != 0){
  5397  00D2  2928               	goto	l3773
  5398  00D3                     l3755:
  5399                           
  5400                           ;main.c: 77:                 *index = EUSART_Read();
  5401  00D3  318A  2275  3180   	fcall	_EUSART_Read
  5402  00D6  0021               	movlb	1	; select bank1
  5403  00D7  00D8               	movwf	??_main^(0+128)
  5404  00D8  01D9               	clrf	(??_main^(0+128)+1)
  5405  00D9  0868               	movf	main@index^(0+128),w
  5406  00DA  0086               	movwf	6
  5407  00DB  0869               	movf	(main@index+1)^(0+128),w
  5408  00DC  0087               	movwf	7
  5409  00DD  0858               	movf	??_main^(0+128),w
  5410  00DE  3FC0               	movwi [0]fsr1
  5411  00DF  0859               	movf	(??_main+1)^(0+128),w
  5412  00E0  3FC1               	movwi [1]fsr1
  5413  00E1                     l3757:
  5414                           
  5415                           ;main.c: 78:                 H_L_counter++;
  5416  00E1  3001               	movlw	1
  5417  00E2  07EE               	addwf	main@H_L_counter^(0+128),f
  5418  00E3  3000               	movlw	0
  5419  00E4  3DEF               	addwfc	(main@H_L_counter+1)^(0+128),f
  5420  00E5                     l3759:
  5421                           
  5422                           ;main.c: 79:                 if((H_L_counter<=3)||(H_L_counter>=0x27)) index++;
  5423  00E5  086F               	movf	(main@H_L_counter+1)^(0+128),w
  5424  00E6  3A80               	xorlw	128
  5425  00E7  00D8               	movwf	??_main^(0+128)
  5426  00E8  3080               	movlw	128
  5427  00E9  0258               	subwf	??_main^(0+128),w
  5428  00EA  1D03               	skipz
  5429  00EB  28EE               	goto	u3225
  5430  00EC  3004               	movlw	4
  5431  00ED  026E               	subwf	main@H_L_counter^(0+128),w
  5432  00EE                     u3225:
  5433  00EE  1C03               	skipc
  5434  00EF  28F1               	goto	u3221
  5435  00F0  28F2               	goto	u3220
  5436  00F1                     u3221:
  5437  00F1  2900               	goto	l3763
  5438  00F2                     u3220:
  5439  00F2                     l3761:
  5440  00F2  0021               	movlb	1	; select bank1
  5441  00F3  086F               	movf	(main@H_L_counter+1)^(0+128),w
  5442  00F4  3A80               	xorlw	128
  5443  00F5  00D8               	movwf	??_main^(0+128)
  5444  00F6  3080               	movlw	128
  5445  00F7  0258               	subwf	??_main^(0+128),w
  5446  00F8  1D03               	skipz
  5447  00F9  28FC               	goto	u3235
  5448  00FA  3027               	movlw	39
  5449  00FB  026E               	subwf	main@H_L_counter^(0+128),w
  5450  00FC                     u3235:
  5451  00FC  1C03               	skipc
  5452  00FD  28FF               	goto	u3231
  5453  00FE  2900               	goto	u3230
  5454  00FF                     u3231:
  5455  00FF  2906               	goto	l3765
  5456  0100                     u3230:
  5457  0100                     l3763:
  5458  0100  3002               	movlw	2
  5459  0101  0021               	movlb	1	; select bank1
  5460  0102  07E8               	addwf	main@index^(0+128),f
  5461  0103  3000               	movlw	0
  5462  0104  3DE9               	addwfc	(main@index+1)^(0+128),f
  5463  0105  2928               	goto	l3773
  5464  0106                     l3765:
  5465                           
  5466                           ;main.c: 81:                     if(H_L_counter==4) index=index_V_L;
  5467  0106  3004               	movlw	4
  5468  0107  0021               	movlb	1	; select bank1
  5469  0108  066E               	xorwf	main@H_L_counter^(0+128),w
  5470  0109  046F               	iorwf	(main@H_L_counter+1)^(0+128),w
  5471  010A  1D03               	btfss	3,2
  5472  010B  290D               	goto	u3241
  5473  010C  290E               	goto	u3240
  5474  010D                     u3241:
  5475  010D  2913               	goto	l370
  5476  010E                     u3240:
  5477  010E                     l3767:
  5478  010E  086B               	movf	(main@index_V_L+1)^(0+128),w
  5479  010F  00E9               	movwf	(main@index+1)^(0+128)
  5480  0110  086A               	movf	main@index_V_L^(0+128),w
  5481  0111  00E8               	movwf	main@index^(0+128)
  5482  0112  2928               	goto	l3773
  5483  0113                     l370:	
  5484                           ;main.c: 82:                     else if((H_L_counter%2)==0){
  5485                           
  5486  0113  186E               	btfsc	main@H_L_counter^(0+128),0
  5487  0114  2916               	goto	u3251
  5488  0115  2917               	goto	u3250
  5489  0116                     u3251:
  5490  0116  2920               	goto	l3771
  5491  0117                     u3250:
  5492  0117                     l3769:
  5493                           
  5494                           ;main.c: 83:                         index_V_L++;
  5495  0117  3002               	movlw	2
  5496  0118  07EA               	addwf	main@index_V_L^(0+128),f
  5497  0119  3000               	movlw	0
  5498  011A  3DEB               	addwfc	(main@index_V_L+1)^(0+128),f
  5499                           
  5500                           ;main.c: 84:                         index=index_V_L;
  5501  011B  086B               	movf	(main@index_V_L+1)^(0+128),w
  5502  011C  00E9               	movwf	(main@index+1)^(0+128)
  5503  011D  086A               	movf	main@index_V_L^(0+128),w
  5504  011E  00E8               	movwf	main@index^(0+128)
  5505                           
  5506                           ;main.c: 85:                     }
  5507  011F  2928               	goto	l3773
  5508  0120                     l3771:
  5509                           
  5510                           ;main.c: 87:                         index_V_H++;
  5511  0120  3002               	movlw	2
  5512  0121  07E6               	addwf	main@index_V_H^(0+128),f
  5513  0122  3000               	movlw	0
  5514  0123  3DE7               	addwfc	(main@index_V_H+1)^(0+128),f
  5515                           
  5516                           ;main.c: 88:                         index=index_V_H;
  5517  0124  0867               	movf	(main@index_V_H+1)^(0+128),w
  5518  0125  00E9               	movwf	(main@index+1)^(0+128)
  5519  0126  0866               	movf	main@index_V_H^(0+128),w
  5520  0127  00E8               	movwf	main@index^(0+128)
  5521  0128                     l3773:
  5522                           
  5523                           ;main.c: 76:             while(eusartRxCount != 0){
  5524  0128  0878               	movf	_eusartRxCount,w	;volatile
  5525  0129  1D03               	btfss	3,2
  5526  012A  292C               	goto	u3261
  5527  012B  292D               	goto	u3260
  5528  012C                     u3261:
  5529  012C  28D3               	goto	l3755
  5530  012D                     u3260:
  5531  012D                     l3775:
  5532                           
  5533                           ;main.c: 92:             for(j=0;j<=16;j++) {
  5534  012D  0024               	movlb	4	; select bank4
  5535  012E  01CF               	clrf	main@j^(0+512)
  5536  012F  01D0               	clrf	(main@j+1)^(0+512)
  5537  0130                     l3781:
  5538                           
  5539                           ;main.c: 93:                 Get_Voltage(j);
  5540  0130  0024               	movlb	4	; select bank4
  5541  0131  0850               	movf	(main@j+1)^(0+512),w
  5542  0132  0020               	movlb	0	; select bank0
  5543  0133  00A4               	movwf	Get_Voltage@k+1
  5544  0134  0024               	movlb	4	; select bank4
  5545  0135  084F               	movf	main@j^(0+512),w
  5546  0136  0020               	movlb	0	; select bank0
  5547  0137  00A3               	movwf	Get_Voltage@k
  5548  0138  3185  25B1  3180   	fcall	_Get_Voltage
  5549  013B                     l3783:
  5550                           
  5551                           ;main.c: 94:                 Voltage_sort[j] = Coulomb_Data.Voltage[j];
  5552  013B  0024               	movlb	4	; select bank4
  5553  013C  0850               	movf	(main@j+1)^(0+512),w
  5554  013D  0021               	movlb	1	; select bank1
  5555  013E  00D9               	movwf	(??_main^(0+128)+1)
  5556  013F  0024               	movlb	4	; select bank4
  5557  0140  084F               	movf	main@j^(0+512),w
  5558  0141  0021               	movlb	1	; select bank1
  5559  0142  00D8               	movwf	??_main^(0+128)
  5560  0143  35D8               	lslf	??_main^(0+128),f
  5561  0144  0DD9               	rlf	(??_main^(0+128)+1),f
  5562  0145  30CE               	movlw	206
  5563  0146  00DA               	movwf	(??_main+2)^(0+128)
  5564  0147  3021               	movlw	33
  5565  0148  00DB               	movwf	((??_main+2)^(0+128)+1)
  5566  0149  0858               	movf	??_main^(0+128),w
  5567  014A  075A               	addwf	(??_main+2)^(0+128),w
  5568  014B  0086               	movwf	6
  5569  014C  0859               	movf	(??_main+1)^(0+128),w
  5570  014D  3D5B               	addwfc	(??_main+3)^(0+128),w
  5571  014E  0087               	movwf	7
  5572  014F  0024               	movlb	4	; select bank4
  5573  0150  354F               	lslf	main@j^(0+512),w
  5574  0151  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
  5575  0152  0084               	movwf	4
  5576  0153  3001               	movlw	1	; select bank2/3
  5577  0154  0085               	movwf	5
  5578  0155  3F40               	moviw [0]fsr1
  5579  0156  3F80               	movwi [0]fsr0
  5580  0157  3F41               	moviw [1]fsr1
  5581  0158  3F81               	movwi [1]fsr0
  5582  0159                     l3785:
  5583                           
  5584                           ;main.c: 95:             }
  5585  0159  3001               	movlw	1
  5586  015A  07CF               	addwf	main@j^(0+512),f
  5587  015B  3000               	movlw	0
  5588  015C  3DD0               	addwfc	(main@j+1)^(0+512),f
  5589  015D                     l3787:
  5590  015D  0850               	movf	(main@j+1)^(0+512),w
  5591  015E  3A80               	xorlw	128
  5592  015F  0021               	movlb	1	; select bank1
  5593  0160  00D8               	movwf	??_main^(0+128)
  5594  0161  3080               	movlw	128
  5595  0162  0258               	subwf	??_main^(0+128),w
  5596  0163  1D03               	skipz
  5597  0164  2968               	goto	u3275
  5598  0165  3011               	movlw	17
  5599  0166  0024               	movlb	4	; select bank4
  5600  0167  024F               	subwf	main@j^(0+512),w
  5601  0168                     u3275:
  5602  0168  1C03               	skipc
  5603  0169  296B               	goto	u3271
  5604  016A  296C               	goto	u3270
  5605  016B                     u3271:
  5606  016B  2930               	goto	l3781
  5607  016C                     u3270:
  5608  016C                     l3789:
  5609                           
  5610                           ;main.c: 96:             for(j=0;j<=16;j++){
  5611  016C  0024               	movlb	4	; select bank4
  5612  016D  01CF               	clrf	main@j^(0+512)
  5613  016E  01D0               	clrf	(main@j+1)^(0+512)
  5614  016F                     l3795:
  5615                           
  5616                           ;main.c: 97:                 if(Coulomb_Data.Voltage[j]>=3500) PORTAbits.RA2=1;
  5617  016F  0024               	movlb	4	; select bank4
  5618  0170  0850               	movf	(main@j+1)^(0+512),w
  5619  0171  0021               	movlb	1	; select bank1
  5620  0172  00D9               	movwf	(??_main^(0+128)+1)
  5621  0173  0024               	movlb	4	; select bank4
  5622  0174  084F               	movf	main@j^(0+512),w
  5623  0175  0021               	movlb	1	; select bank1
  5624  0176  00D8               	movwf	??_main^(0+128)
  5625  0177  35D8               	lslf	??_main^(0+128),f
  5626  0178  0DD9               	rlf	(??_main^(0+128)+1),f
  5627  0179  30CE               	movlw	206
  5628  017A  00DA               	movwf	(??_main+2)^(0+128)
  5629  017B  3021               	movlw	33
  5630  017C  00DB               	movwf	((??_main+2)^(0+128)+1)
  5631  017D  0858               	movf	??_main^(0+128),w
  5632  017E  075A               	addwf	(??_main+2)^(0+128),w
  5633  017F  0086               	movwf	6
  5634  0180  0859               	movf	(??_main+1)^(0+128),w
  5635  0181  3D5B               	addwfc	(??_main+3)^(0+128),w
  5636  0182  0087               	movwf	7
  5637  0183  3F40               	moviw [0]fsr1
  5638  0184  00DC               	movwf	(??_main+4)^(0+128)
  5639  0185  3F41               	moviw [1]fsr1
  5640  0186  00DD               	movwf	((??_main+4)^(0+128)+1)
  5641  0187  300D               	movlw	13
  5642  0188  025D               	subwf	(??_main+5)^(0+128),w
  5643  0189  30AC               	movlw	172
  5644  018A  1903               	skipnz
  5645  018B  025C               	subwf	(??_main+4)^(0+128),w
  5646  018C  1C03               	skipc
  5647  018D  298F               	goto	u3281
  5648  018E  2990               	goto	u3280
  5649  018F                     u3281:
  5650  018F  2992               	goto	l3799
  5651  0190                     u3280:
  5652  0190                     l3797:
  5653  0190  0020               	movlb	0	; select bank0
  5654  0191  150C               	bsf	12,2	;volatile
  5655  0192                     l3799:
  5656                           
  5657                           ;main.c: 98:                 if(Coulomb_Data.Voltage[j]<=2500) PORTAbits.RA3=1;
  5658  0192  0024               	movlb	4	; select bank4
  5659  0193  0850               	movf	(main@j+1)^(0+512),w
  5660  0194  0021               	movlb	1	; select bank1
  5661  0195  00D9               	movwf	(??_main^(0+128)+1)
  5662  0196  0024               	movlb	4	; select bank4
  5663  0197  084F               	movf	main@j^(0+512),w
  5664  0198  0021               	movlb	1	; select bank1
  5665  0199  00D8               	movwf	??_main^(0+128)
  5666  019A  35D8               	lslf	??_main^(0+128),f
  5667  019B  0DD9               	rlf	(??_main^(0+128)+1),f
  5668  019C  30CE               	movlw	206
  5669  019D  00DA               	movwf	(??_main+2)^(0+128)
  5670  019E  3021               	movlw	33
  5671  019F  00DB               	movwf	((??_main+2)^(0+128)+1)
  5672  01A0  0858               	movf	??_main^(0+128),w
  5673  01A1  075A               	addwf	(??_main+2)^(0+128),w
  5674  01A2  0086               	movwf	6
  5675  01A3  0859               	movf	(??_main+1)^(0+128),w
  5676  01A4  3D5B               	addwfc	(??_main+3)^(0+128),w
  5677  01A5  0087               	movwf	7
  5678  01A6  3F40               	moviw [0]fsr1
  5679  01A7  00DC               	movwf	(??_main+4)^(0+128)
  5680  01A8  3F41               	moviw [1]fsr1
  5681  01A9  00DD               	movwf	((??_main+4)^(0+128)+1)
  5682  01AA  3009               	movlw	9
  5683  01AB  025D               	subwf	(??_main+5)^(0+128),w
  5684  01AC  30C5               	movlw	197
  5685  01AD  1903               	skipnz
  5686  01AE  025C               	subwf	(??_main+4)^(0+128),w
  5687  01AF  1803               	skipnc
  5688  01B0  29B2               	goto	u3291
  5689  01B1  29B3               	goto	u3290
  5690  01B2                     u3291:
  5691  01B2  29B5               	goto	l3803
  5692  01B3                     u3290:
  5693  01B3                     l3801:
  5694  01B3  0020               	movlb	0	; select bank0
  5695  01B4  158C               	bsf	12,3	;volatile
  5696  01B5                     l3803:
  5697                           
  5698                           ;main.c: 99:             }
  5699  01B5  3001               	movlw	1
  5700  01B6  0024               	movlb	4	; select bank4
  5701  01B7  07CF               	addwf	main@j^(0+512),f
  5702  01B8  3000               	movlw	0
  5703  01B9  3DD0               	addwfc	(main@j+1)^(0+512),f
  5704  01BA  0850               	movf	(main@j+1)^(0+512),w
  5705  01BB  3A80               	xorlw	128
  5706  01BC  0021               	movlb	1	; select bank1
  5707  01BD  00D8               	movwf	??_main^(0+128)
  5708  01BE  3080               	movlw	128
  5709  01BF  0258               	subwf	??_main^(0+128),w
  5710  01C0  1D03               	skipz
  5711  01C1  29C5               	goto	u3305
  5712  01C2  3011               	movlw	17
  5713  01C3  0024               	movlb	4	; select bank4
  5714  01C4  024F               	subwf	main@j^(0+512),w
  5715  01C5                     u3305:
  5716  01C5  1C03               	skipc
  5717  01C6  29C8               	goto	u3301
  5718  01C7  29C9               	goto	u3300
  5719  01C8                     u3301:
  5720  01C8  296F               	goto	l3795
  5721  01C9                     u3300:
  5722  01C9                     l3805:
  5723                           
  5724                           ;main.c: 100:             BadBetteryFilter();
  5725  01C9  318C  24F2  3180   	fcall	_BadBetteryFilter
  5726  01CC                     l3807:
  5727                           
  5728                           ;main.c: 101:             LCD_Init(0x4E);
  5729  01CC  304E               	movlw	78
  5730  01CD  318D  255D  3180   	fcall	_LCD_Init
  5731  01D0                     l3809:
  5732                           
  5733                           ;main.c: 104:             for(j=1; j<=17 ;j++){
  5734  01D0  3001               	movlw	1
  5735  01D1  0024               	movlb	4	; select bank4
  5736  01D2  00CF               	movwf	main@j^(0+512)
  5737  01D3  3000               	movlw	0
  5738  01D4  00D0               	movwf	(main@j^(0+512)+1)
  5739  01D5                     l3815:
  5740                           
  5741                           ;main.c: 105:                 LCD_Clear();
  5742  01D5  3189  2152  3180   	fcall	_LCD_Clear
  5743  01D8                     l3817:
  5744                           
  5745                           ;main.c: 106:                 LCD_Set_Cursor(1, 1);
  5746  01D8  0020               	movlb	0	; select bank0
  5747  01D9  01A1               	clrf	LCD_Set_Cursor@COL
  5748  01DA  0AA1               	incf	LCD_Set_Cursor@COL,f
  5749  01DB  3001               	movlw	1
  5750  01DC  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5751  01DF                     l3819:
  5752                           
  5753                           ;main.c: 107:                 LCD_Write_String("No");
  5754  01DF  3006               	movlw	low (STR_1| (0+32768))
  5755  01E0  0020               	movlb	0	; select bank0
  5756  01E1  00A1               	movwf	LCD_Write_String@Str
  5757  01E2  3088               	movlw	high (STR_1| (0+32768))
  5758  01E3  00A2               	movwf	LCD_Write_String@Str+1
  5759  01E4  318A  222D  3180   	fcall	_LCD_Write_String
  5760  01E7                     l3821:
  5761                           
  5762                           ;main.c: 108:                 LCD_Set_Cursor(1, 3);
  5763  01E7  3003               	movlw	3
  5764  01E8  0021               	movlb	1	; select bank1
  5765  01E9  00D8               	movwf	??_main^(0+128)
  5766  01EA  0858               	movf	??_main^(0+128),w
  5767  01EB  0020               	movlb	0	; select bank0
  5768  01EC  00A1               	movwf	LCD_Set_Cursor@COL
  5769  01ED  3001               	movlw	1
  5770  01EE  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5771  01F1                     l3823:
  5772                           
  5773                           ;main.c: 109:                 sprintf(&no, "%d", j);
  5774  01F1  30EF               	movlw	low _no
  5775  01F2  0021               	movlb	1	; select bank1
  5776  01F3  00C8               	movwf	sprintf@s^(0+128)
  5777  01F4  3001               	movlw	high _no
  5778  01F5  00C9               	movwf	(sprintf@s+1)^(0+128)
  5779  01F6  3003               	movlw	low (STR_2| (0+32768))
  5780  01F7  00CA               	movwf	sprintf@fmt^(0+128)
  5781  01F8  3088               	movlw	high (STR_2| (0+32768))
  5782  01F9  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5783  01FA  0024               	movlb	4	; select bank4
  5784  01FB  0850               	movf	(main@j+1)^(0+512),w
  5785  01FC  0021               	movlb	1	; select bank1
  5786  01FD  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5787  01FE  0024               	movlb	4	; select bank4
  5788  01FF  084F               	movf	main@j^(0+512),w
  5789  0200  0021               	movlb	1	; select bank1
  5790  0201  00CC               	movwf	(?_sprintf^(0+128)+4)
  5791  0202  318A  229F  3180   	fcall	_sprintf
  5792  0205                     l3825:
  5793                           
  5794                           ;main.c: 110:                 LCD_Write_String(&no);
  5795  0205  30EF               	movlw	low _no
  5796  0206  0020               	movlb	0	; select bank0
  5797  0207  00A1               	movwf	LCD_Write_String@Str
  5798  0208  3001               	movlw	high _no
  5799  0209  00A2               	movwf	LCD_Write_String@Str+1
  5800  020A  318A  222D  3180   	fcall	_LCD_Write_String
  5801  020D                     l3827:
  5802                           
  5803                           ;main.c: 111:                 LCD_Set_Cursor(1, 5);
  5804  020D  3005               	movlw	5
  5805  020E  0021               	movlb	1	; select bank1
  5806  020F  00D8               	movwf	??_main^(0+128)
  5807  0210  0858               	movf	??_main^(0+128),w
  5808  0211  0020               	movlb	0	; select bank0
  5809  0212  00A1               	movwf	LCD_Set_Cursor@COL
  5810  0213  3001               	movlw	1
  5811  0214  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5812  0217                     l3829:
  5813                           
  5814                           ;main.c: 112:                 LCD_Write_String(":");
  5815  0217  300B               	movlw	low (STR_3| (0+32768))
  5816  0218  0020               	movlb	0	; select bank0
  5817  0219  00A1               	movwf	LCD_Write_String@Str
  5818  021A  3088               	movlw	high (STR_3| (0+32768))
  5819  021B  00A2               	movwf	LCD_Write_String@Str+1
  5820  021C  318A  222D  3180   	fcall	_LCD_Write_String
  5821  021F                     l3831:
  5822                           
  5823                           ;main.c: 113:                 LCD_Set_Cursor(1, 6);
  5824  021F  3006               	movlw	6
  5825  0220  0021               	movlb	1	; select bank1
  5826  0221  00D8               	movwf	??_main^(0+128)
  5827  0222  0858               	movf	??_main^(0+128),w
  5828  0223  0020               	movlb	0	; select bank0
  5829  0224  00A1               	movwf	LCD_Set_Cursor@COL
  5830  0225  3001               	movlw	1
  5831  0226  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5832  0229                     l3833:
  5833                           
  5834                           ;main.c: 114:                 sprintf(ShowbadBettery, "%d", (Coulomb_Data.Voltage[j-1]/1
      +                          000));
  5835  0229  30C4               	movlw	low _ShowbadBettery
  5836  022A  0021               	movlb	1	; select bank1
  5837  022B  00C8               	movwf	sprintf@s^(0+128)
  5838  022C  3000               	movlw	high _ShowbadBettery
  5839  022D  00C9               	movwf	(sprintf@s+1)^(0+128)
  5840  022E  3003               	movlw	low (STR_2| (0+32768))
  5841  022F  00CA               	movwf	sprintf@fmt^(0+128)
  5842  0230  3088               	movlw	high (STR_2| (0+32768))
  5843  0231  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5844  0232  30E8               	movlw	232
  5845  0233  00F3               	movwf	___lwdiv@divisor
  5846  0234  3003               	movlw	3
  5847  0235  00F4               	movwf	___lwdiv@divisor+1
  5848  0236  0024               	movlb	4	; select bank4
  5849  0237  0850               	movf	(main@j+1)^(0+512),w
  5850  0238  0021               	movlb	1	; select bank1
  5851  0239  00D9               	movwf	(??_main^(0+128)+1)
  5852  023A  0024               	movlb	4	; select bank4
  5853  023B  084F               	movf	main@j^(0+512),w
  5854  023C  0021               	movlb	1	; select bank1
  5855  023D  00D8               	movwf	??_main^(0+128)
  5856  023E  35D8               	lslf	??_main^(0+128),f
  5857  023F  0DD9               	rlf	(??_main^(0+128)+1),f
  5858  0240  30CC               	movlw	204
  5859  0241  00DA               	movwf	(??_main+2)^(0+128)
  5860  0242  3021               	movlw	33
  5861  0243  00DB               	movwf	((??_main+2)^(0+128)+1)
  5862  0244  0858               	movf	??_main^(0+128),w
  5863  0245  075A               	addwf	(??_main+2)^(0+128),w
  5864  0246  0086               	movwf	6
  5865  0247  0859               	movf	(??_main+1)^(0+128),w
  5866  0248  3D5B               	addwfc	(??_main+3)^(0+128),w
  5867  0249  0087               	movwf	7
  5868  024A  3F40               	moviw [0]fsr1
  5869  024B  00F5               	movwf	___lwdiv@dividend
  5870  024C  3F41               	moviw [1]fsr1
  5871  024D  00F6               	movwf	___lwdiv@dividend+1
  5872  024E  318C  2405  3180   	fcall	___lwdiv
  5873  0251  0874               	movf	?___lwdiv+1,w
  5874  0252  0021               	movlb	1	; select bank1
  5875  0253  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5876  0254  0873               	movf	?___lwdiv,w
  5877  0255  00CC               	movwf	(?_sprintf^(0+128)+4)
  5878  0256  318A  229F  3180   	fcall	_sprintf
  5879  0259                     l3835:
  5880                           
  5881                           ;main.c: 115:                 LCD_Write_String(ShowbadBettery);
  5882  0259  30C4               	movlw	low _ShowbadBettery
  5883  025A  0020               	movlb	0	; select bank0
  5884  025B  00A1               	movwf	LCD_Write_String@Str
  5885  025C  3000               	movlw	high _ShowbadBettery
  5886  025D  00A2               	movwf	LCD_Write_String@Str+1
  5887  025E  318A  222D  3180   	fcall	_LCD_Write_String
  5888  0261                     l3837:
  5889                           
  5890                           ;main.c: 116:                 LCD_Set_Cursor(1, 7);
  5891  0261  3007               	movlw	7
  5892  0262  0021               	movlb	1	; select bank1
  5893  0263  00D8               	movwf	??_main^(0+128)
  5894  0264  0858               	movf	??_main^(0+128),w
  5895  0265  0020               	movlb	0	; select bank0
  5896  0266  00A1               	movwf	LCD_Set_Cursor@COL
  5897  0267  3001               	movlw	1
  5898  0268  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5899  026B                     l3839:
  5900                           
  5901                           ;main.c: 117:                 LCD_Write_String(".");
  5902  026B  3009               	movlw	low (STR_5| (0+32768))
  5903  026C  0020               	movlb	0	; select bank0
  5904  026D  00A1               	movwf	LCD_Write_String@Str
  5905  026E  3088               	movlw	high (STR_5| (0+32768))
  5906  026F  00A2               	movwf	LCD_Write_String@Str+1
  5907  0270  318A  222D  3180   	fcall	_LCD_Write_String
  5908  0273                     l3841:
  5909                           
  5910                           ;main.c: 118:                 LCD_Set_Cursor(1, 8);
  5911  0273  3008               	movlw	8
  5912  0274  0021               	movlb	1	; select bank1
  5913  0275  00D8               	movwf	??_main^(0+128)
  5914  0276  0858               	movf	??_main^(0+128),w
  5915  0277  0020               	movlb	0	; select bank0
  5916  0278  00A1               	movwf	LCD_Set_Cursor@COL
  5917  0279  3001               	movlw	1
  5918  027A  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5919  027D                     l3843:
  5920                           
  5921                           ;main.c: 119:                 sprintf(ShowbadBettery, "%d", (Coulomb_Data.Voltage[j-1]%1
      +                          000));
  5922  027D  30C4               	movlw	low _ShowbadBettery
  5923  027E  0021               	movlb	1	; select bank1
  5924  027F  00C8               	movwf	sprintf@s^(0+128)
  5925  0280  3000               	movlw	high _ShowbadBettery
  5926  0281  00C9               	movwf	(sprintf@s+1)^(0+128)
  5927  0282  3003               	movlw	low (STR_2| (0+32768))
  5928  0283  00CA               	movwf	sprintf@fmt^(0+128)
  5929  0284  3088               	movlw	high (STR_2| (0+32768))
  5930  0285  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5931  0286  30E8               	movlw	232
  5932  0287  00F3               	movwf	___lwmod@divisor
  5933  0288  3003               	movlw	3
  5934  0289  00F4               	movwf	___lwmod@divisor+1
  5935  028A  0024               	movlb	4	; select bank4
  5936  028B  0850               	movf	(main@j+1)^(0+512),w
  5937  028C  0021               	movlb	1	; select bank1
  5938  028D  00D9               	movwf	(??_main^(0+128)+1)
  5939  028E  0024               	movlb	4	; select bank4
  5940  028F  084F               	movf	main@j^(0+512),w
  5941  0290  0021               	movlb	1	; select bank1
  5942  0291  00D8               	movwf	??_main^(0+128)
  5943  0292  35D8               	lslf	??_main^(0+128),f
  5944  0293  0DD9               	rlf	(??_main^(0+128)+1),f
  5945  0294  30CC               	movlw	204
  5946  0295  00DA               	movwf	(??_main+2)^(0+128)
  5947  0296  3021               	movlw	33
  5948  0297  00DB               	movwf	((??_main+2)^(0+128)+1)
  5949  0298  0858               	movf	??_main^(0+128),w
  5950  0299  075A               	addwf	(??_main+2)^(0+128),w
  5951  029A  0086               	movwf	6
  5952  029B  0859               	movf	(??_main+1)^(0+128),w
  5953  029C  3D5B               	addwfc	(??_main+3)^(0+128),w
  5954  029D  0087               	movwf	7
  5955  029E  3F40               	moviw [0]fsr1
  5956  029F  00F5               	movwf	___lwmod@dividend
  5957  02A0  3F41               	moviw [1]fsr1
  5958  02A1  00F6               	movwf	___lwmod@dividend+1
  5959  02A2  318B  235A  3180   	fcall	___lwmod
  5960  02A5  0874               	movf	?___lwmod+1,w
  5961  02A6  0021               	movlb	1	; select bank1
  5962  02A7  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5963  02A8  0873               	movf	?___lwmod,w
  5964  02A9  00CC               	movwf	(?_sprintf^(0+128)+4)
  5965  02AA  318A  229F  3180   	fcall	_sprintf
  5966  02AD                     l3845:
  5967                           
  5968                           ;main.c: 120:                 LCD_Write_String(ShowbadBettery);
  5969  02AD  30C4               	movlw	low _ShowbadBettery
  5970  02AE  0020               	movlb	0	; select bank0
  5971  02AF  00A1               	movwf	LCD_Write_String@Str
  5972  02B0  3000               	movlw	high _ShowbadBettery
  5973  02B1  00A2               	movwf	LCD_Write_String@Str+1
  5974  02B2  318A  222D  3180   	fcall	_LCD_Write_String
  5975  02B5                     l3847:
  5976                           
  5977                           ;main.c: 121:                 LCD_Set_Cursor(1, 11);
  5978  02B5  300B               	movlw	11
  5979  02B6  0021               	movlb	1	; select bank1
  5980  02B7  00D8               	movwf	??_main^(0+128)
  5981  02B8  0858               	movf	??_main^(0+128),w
  5982  02B9  0020               	movlb	0	; select bank0
  5983  02BA  00A1               	movwf	LCD_Set_Cursor@COL
  5984  02BB  3001               	movlw	1
  5985  02BC  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5986  02BF                     l3849:
  5987                           
  5988                           ;main.c: 122:                 LCD_Write_String("v");
  5989  02BF  300F               	movlw	low (STR_7| (0+32768))
  5990  02C0  0020               	movlb	0	; select bank0
  5991  02C1  00A1               	movwf	LCD_Write_String@Str
  5992  02C2  3088               	movlw	high (STR_7| (0+32768))
  5993  02C3  00A2               	movwf	LCD_Write_String@Str+1
  5994  02C4  318A  222D  3180   	fcall	_LCD_Write_String
  5995  02C7                     l3851:
  5996                           
  5997                           ;main.c: 124:                 LCD_Set_Cursor(2, 1);
  5998  02C7  0020               	movlb	0	; select bank0
  5999  02C8  01A1               	clrf	LCD_Set_Cursor@COL
  6000  02C9  0AA1               	incf	LCD_Set_Cursor@COL,f
  6001  02CA  3002               	movlw	2
  6002  02CB  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6003  02CE                     l3853:
  6004                           
  6005                           ;main.c: 125:                 LCD_Write_String("^");
  6006  02CE  300D               	movlw	low (STR_8| (0+32768))
  6007  02CF  0020               	movlb	0	; select bank0
  6008  02D0  00A1               	movwf	LCD_Write_String@Str
  6009  02D1  3088               	movlw	high (STR_8| (0+32768))
  6010  02D2  00A2               	movwf	LCD_Write_String@Str+1
  6011  02D3  318A  222D  3180   	fcall	_LCD_Write_String
  6012  02D6                     l3855:
  6013                           
  6014                           ;main.c: 126:                 LCD_Set_Cursor(2, 2);
  6015  02D6  3002               	movlw	2
  6016  02D7  0021               	movlb	1	; select bank1
  6017  02D8  00D8               	movwf	??_main^(0+128)
  6018  02D9  0858               	movf	??_main^(0+128),w
  6019  02DA  0020               	movlb	0	; select bank0
  6020  02DB  00A1               	movwf	LCD_Set_Cursor@COL
  6021  02DC  3002               	movlw	2
  6022  02DD  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6023  02E0                     l3857:
  6024                           
  6025                           ;main.c: 127:                 LCD_Write_String(&no);
  6026  02E0  30EF               	movlw	low _no
  6027  02E1  0020               	movlb	0	; select bank0
  6028  02E2  00A1               	movwf	LCD_Write_String@Str
  6029  02E3  3001               	movlw	high _no
  6030  02E4  00A2               	movwf	LCD_Write_String@Str+1
  6031  02E5  318A  222D  3180   	fcall	_LCD_Write_String
  6032  02E8                     l3859:
  6033                           
  6034                           ;main.c: 128:                 LCD_Set_Cursor(2, 4);
  6035  02E8  3004               	movlw	4
  6036  02E9  0021               	movlb	1	; select bank1
  6037  02EA  00D8               	movwf	??_main^(0+128)
  6038  02EB  0858               	movf	??_main^(0+128),w
  6039  02EC  0020               	movlb	0	; select bank0
  6040  02ED  00A1               	movwf	LCD_Set_Cursor@COL
  6041  02EE  3002               	movlw	2
  6042  02EF  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6043  02F2                     l3861:
  6044                           
  6045                           ;main.c: 129:                 LCD_Write_String(":");
  6046  02F2  300B               	movlw	low (STR_3| (0+32768))
  6047  02F3  0020               	movlb	0	; select bank0
  6048  02F4  00A1               	movwf	LCD_Write_String@Str
  6049  02F5  3088               	movlw	high (STR_3| (0+32768))
  6050  02F6  00A2               	movwf	LCD_Write_String@Str+1
  6051  02F7  318A  222D  3180   	fcall	_LCD_Write_String
  6052  02FA                     l3863:
  6053                           
  6054                           ;main.c: 130:                 LCD_Set_Cursor(2, 5);
  6055  02FA  3005               	movlw	5
  6056  02FB  0021               	movlb	1	; select bank1
  6057  02FC  00D8               	movwf	??_main^(0+128)
  6058  02FD  0858               	movf	??_main^(0+128),w
  6059  02FE  0020               	movlb	0	; select bank0
  6060  02FF  00A1               	movwf	LCD_Set_Cursor@COL
  6061  0300  3002               	movlw	2
  6062  0301  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6063  0304                     l3865:
  6064                           
  6065                           ;main.c: 131:                 sprintf(ShowbadBettery, "%d", (diffBettery[j-1]/1000));
  6066  0304  30C4               	movlw	low _ShowbadBettery
  6067  0305  0021               	movlb	1	; select bank1
  6068  0306  00C8               	movwf	sprintf@s^(0+128)
  6069  0307  3000               	movlw	high _ShowbadBettery
  6070  0308  00C9               	movwf	(sprintf@s+1)^(0+128)
  6071  0309  3003               	movlw	low (STR_2| (0+32768))
  6072  030A  00CA               	movwf	sprintf@fmt^(0+128)
  6073  030B  3088               	movlw	high (STR_2| (0+32768))
  6074  030C  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  6075  030D  30E8               	movlw	232
  6076  030E  00F3               	movwf	___lwdiv@divisor
  6077  030F  3003               	movlw	3
  6078  0310  00F4               	movwf	___lwdiv@divisor+1
  6079  0311  0024               	movlb	4	; select bank4
  6080  0312  354F               	lslf	main@j^(0+512),w
  6081  0313  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6082  0314  0086               	movwf	6
  6083  0315  3001               	movlw	1	; select bank2/3
  6084  0316  0087               	movwf	7
  6085  0317  3F40               	moviw [0]fsr1
  6086  0318  00F5               	movwf	___lwdiv@dividend
  6087  0319  3F41               	moviw [1]fsr1
  6088  031A  00F6               	movwf	___lwdiv@dividend+1
  6089  031B  318C  2405  3180   	fcall	___lwdiv
  6090  031E  0874               	movf	?___lwdiv+1,w
  6091  031F  0021               	movlb	1	; select bank1
  6092  0320  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  6093  0321  0873               	movf	?___lwdiv,w
  6094  0322  00CC               	movwf	(?_sprintf^(0+128)+4)
  6095  0323  318A  229F  3180   	fcall	_sprintf
  6096  0326                     l3867:
  6097                           
  6098                           ;main.c: 132:                 LCD_Write_String(ShowbadBettery);
  6099  0326  30C4               	movlw	low _ShowbadBettery
  6100  0327  0020               	movlb	0	; select bank0
  6101  0328  00A1               	movwf	LCD_Write_String@Str
  6102  0329  3000               	movlw	high _ShowbadBettery
  6103  032A  00A2               	movwf	LCD_Write_String@Str+1
  6104  032B  318A  222D  3180   	fcall	_LCD_Write_String
  6105  032E                     l3869:
  6106                           
  6107                           ;main.c: 133:                 LCD_Set_Cursor(2, 6);
  6108  032E  3006               	movlw	6
  6109  032F  0021               	movlb	1	; select bank1
  6110  0330  00D8               	movwf	??_main^(0+128)
  6111  0331  0858               	movf	??_main^(0+128),w
  6112  0332  0020               	movlb	0	; select bank0
  6113  0333  00A1               	movwf	LCD_Set_Cursor@COL
  6114  0334  3002               	movlw	2
  6115  0335  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6116  0338                     l3871:
  6117                           
  6118                           ;main.c: 134:                 LCD_Write_String(".");
  6119  0338  3009               	movlw	low (STR_5| (0+32768))
  6120  0339  0020               	movlb	0	; select bank0
  6121  033A  00A1               	movwf	LCD_Write_String@Str
  6122  033B  3088               	movlw	high (STR_5| (0+32768))
  6123  033C  00A2               	movwf	LCD_Write_String@Str+1
  6124  033D  318A  222D  3180   	fcall	_LCD_Write_String
  6125  0340                     l3873:
  6126                           
  6127                           ;main.c: 135:                 LCD_Set_Cursor(2, 7);
  6128  0340  3007               	movlw	7
  6129  0341  0021               	movlb	1	; select bank1
  6130  0342  00D8               	movwf	??_main^(0+128)
  6131  0343  0858               	movf	??_main^(0+128),w
  6132  0344  0020               	movlb	0	; select bank0
  6133  0345  00A1               	movwf	LCD_Set_Cursor@COL
  6134  0346  3002               	movlw	2
  6135  0347  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6136  034A                     l3875:
  6137                           
  6138                           ;main.c: 139:                 if((diffBettery[j-1]/10!=0)&&(diffBettery[j-1]/100==0)&&(d
      +                          iffBettery[j-1]/1000==0))
  6139  034A  300A               	movlw	10
  6140  034B  00F3               	movwf	___lwdiv@divisor
  6141  034C  3000               	movlw	0
  6142  034D  00F4               	movwf	___lwdiv@divisor+1
  6143  034E  0024               	movlb	4	; select bank4
  6144  034F  354F               	lslf	main@j^(0+512),w
  6145  0350  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6146  0351  0086               	movwf	6
  6147  0352  3001               	movlw	1	; select bank2/3
  6148  0353  0087               	movwf	7
  6149  0354  3F40               	moviw [0]fsr1
  6150  0355  00F5               	movwf	___lwdiv@dividend
  6151  0356  3F41               	moviw [1]fsr1
  6152  0357  00F6               	movwf	___lwdiv@dividend+1
  6153  0358  318C  2405  3180   	fcall	___lwdiv
  6154  035B  0873               	movf	?___lwdiv,w
  6155  035C  0474               	iorwf	?___lwdiv+1,w
  6156  035D  1903               	btfsc	3,2
  6157  035E  2B60               	goto	u3311
  6158  035F  2B61               	goto	u3310
  6159  0360                     u3311:
  6160  0360  2B98               	goto	l3883
  6161  0361                     u3310:
  6162  0361                     l3877:
  6163  0361  3064               	movlw	100
  6164  0362  00F3               	movwf	___lwdiv@divisor
  6165  0363  3000               	movlw	0
  6166  0364  00F4               	movwf	___lwdiv@divisor+1
  6167  0365  0024               	movlb	4	; select bank4
  6168  0366  354F               	lslf	main@j^(0+512),w
  6169  0367  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6170  0368  0086               	movwf	6
  6171  0369  3001               	movlw	1	; select bank2/3
  6172  036A  0087               	movwf	7
  6173  036B  3F40               	moviw [0]fsr1
  6174  036C  00F5               	movwf	___lwdiv@dividend
  6175  036D  3F41               	moviw [1]fsr1
  6176  036E  00F6               	movwf	___lwdiv@dividend+1
  6177  036F  318C  2405  3180   	fcall	___lwdiv
  6178  0372  0873               	movf	?___lwdiv,w
  6179  0373  0474               	iorwf	?___lwdiv+1,w
  6180  0374  1D03               	btfss	3,2
  6181  0375  2B77               	goto	u3321
  6182  0376  2B78               	goto	u3320
  6183  0377                     u3321:
  6184  0377  2B98               	goto	l3883
  6185  0378                     u3320:
  6186  0378                     l3879:
  6187  0378  30E8               	movlw	232
  6188  0379  00F3               	movwf	___lwdiv@divisor
  6189  037A  3003               	movlw	3
  6190  037B  00F4               	movwf	___lwdiv@divisor+1
  6191  037C  0024               	movlb	4	; select bank4
  6192  037D  354F               	lslf	main@j^(0+512),w
  6193  037E  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6194  037F  0086               	movwf	6
  6195  0380  3001               	movlw	1	; select bank2/3
  6196  0381  0087               	movwf	7
  6197  0382  3F40               	moviw [0]fsr1
  6198  0383  00F5               	movwf	___lwdiv@dividend
  6199  0384  3F41               	moviw [1]fsr1
  6200  0385  00F6               	movwf	___lwdiv@dividend+1
  6201  0386  318C  2405  3180   	fcall	___lwdiv
  6202  0389  0873               	movf	?___lwdiv,w
  6203  038A  0474               	iorwf	?___lwdiv+1,w
  6204  038B  1D03               	btfss	3,2
  6205  038C  2B8E               	goto	u3331
  6206  038D  2B8F               	goto	u3330
  6207  038E                     u3331:
  6208  038E  2B98               	goto	l3883
  6209  038F                     u3330:
  6210  038F                     l3881:
  6211                           
  6212                           ;main.c: 140:                     LCD_Write_String("0");
  6213  038F  3001               	movlw	low ((STR_13+1)| (0+32768))
  6214  0390  0020               	movlb	0	; select bank0
  6215  0391  00A1               	movwf	LCD_Write_String@Str
  6216  0392  3088               	movlw	high ((STR_13+1)| (0+32768))
  6217  0393  00A2               	movwf	LCD_Write_String@Str+1
  6218  0394  318A  222D  3180   	fcall	_LCD_Write_String
  6219  0397  2BE5               	goto	l3891
  6220  0398                     l3883:
  6221  0398  300A               	movlw	10
  6222  0399  00F3               	movwf	___lwdiv@divisor
  6223  039A  3000               	movlw	0
  6224  039B  00F4               	movwf	___lwdiv@divisor+1
  6225  039C  0024               	movlb	4	; select bank4
  6226  039D  354F               	lslf	main@j^(0+512),w
  6227  039E  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6228  039F  0086               	movwf	6
  6229  03A0  3001               	movlw	1	; select bank2/3
  6230  03A1  0087               	movwf	7
  6231  03A2  3F40               	moviw [0]fsr1
  6232  03A3  00F5               	movwf	___lwdiv@dividend
  6233  03A4  3F41               	moviw [1]fsr1
  6234  03A5  00F6               	movwf	___lwdiv@dividend+1
  6235  03A6  318C  2405  3180   	fcall	___lwdiv
  6236  03A9  0873               	movf	?___lwdiv,w
  6237  03AA  0474               	iorwf	?___lwdiv+1,w
  6238  03AB  1D03               	btfss	3,2
  6239  03AC  2BAE               	goto	u3341
  6240  03AD  2BAF               	goto	u3340
  6241  03AE                     u3341:
  6242  03AE  2BE5               	goto	l3891
  6243  03AF                     u3340:
  6244  03AF                     l3885:
  6245  03AF  3064               	movlw	100
  6246  03B0  00F3               	movwf	___lwdiv@divisor
  6247  03B1  3000               	movlw	0
  6248  03B2  00F4               	movwf	___lwdiv@divisor+1
  6249  03B3  0024               	movlb	4	; select bank4
  6250  03B4  354F               	lslf	main@j^(0+512),w
  6251  03B5  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6252  03B6  0086               	movwf	6
  6253  03B7  3001               	movlw	1	; select bank2/3
  6254  03B8  0087               	movwf	7
  6255  03B9  3F40               	moviw [0]fsr1
  6256  03BA  00F5               	movwf	___lwdiv@dividend
  6257  03BB  3F41               	moviw [1]fsr1
  6258  03BC  00F6               	movwf	___lwdiv@dividend+1
  6259  03BD  318C  2405  3180   	fcall	___lwdiv
  6260  03C0  0873               	movf	?___lwdiv,w
  6261  03C1  0474               	iorwf	?___lwdiv+1,w
  6262  03C2  1D03               	btfss	3,2
  6263  03C3  2BC5               	goto	u3351
  6264  03C4  2BC6               	goto	u3350
  6265  03C5                     u3351:
  6266  03C5  2BE5               	goto	l3891
  6267  03C6                     u3350:
  6268  03C6                     l3887:
  6269  03C6  30E8               	movlw	232
  6270  03C7  00F3               	movwf	___lwdiv@divisor
  6271  03C8  3003               	movlw	3
  6272  03C9  00F4               	movwf	___lwdiv@divisor+1
  6273  03CA  0024               	movlb	4	; select bank4
  6274  03CB  354F               	lslf	main@j^(0+512),w
  6275  03CC  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6276  03CD  0086               	movwf	6
  6277  03CE  3001               	movlw	1	; select bank2/3
  6278  03CF  0087               	movwf	7
  6279  03D0  3F40               	moviw [0]fsr1
  6280  03D1  00F5               	movwf	___lwdiv@dividend
  6281  03D2  3F41               	moviw [1]fsr1
  6282  03D3  00F6               	movwf	___lwdiv@dividend+1
  6283  03D4  318C  2405  3180   	fcall	___lwdiv
  6284  03D7  0873               	movf	?___lwdiv,w
  6285  03D8  0474               	iorwf	?___lwdiv+1,w
  6286  03D9  1D03               	btfss	3,2
  6287  03DA  2BDC               	goto	u3361
  6288  03DB  2BDD               	goto	u3360
  6289  03DC                     u3361:
  6290  03DC  2BE5               	goto	l3891
  6291  03DD                     u3360:
  6292  03DD                     l3889:
  6293                           
  6294                           ;main.c: 143:                     LCD_Write_String("00");
  6295  03DD  3000               	movlw	low (STR_13| (0+32768))
  6296  03DE  0020               	movlb	0	; select bank0
  6297  03DF  00A1               	movwf	LCD_Write_String@Str
  6298  03E0  3088               	movlw	high (STR_13| (0+32768))
  6299  03E1  00A2               	movwf	LCD_Write_String@Str+1
  6300  03E2  318A  222D  3180   	fcall	_LCD_Write_String
  6301  03E5                     l3891:
  6302                           
  6303                           ;main.c: 145:                 sprintf(ShowbadBettery, "%d", (diffBettery[j-1]%1000));
  6304  03E5  30C4               	movlw	low _ShowbadBettery
  6305  03E6  0021               	movlb	1	; select bank1
  6306  03E7  00C8               	movwf	sprintf@s^(0+128)
  6307  03E8  3000               	movlw	high _ShowbadBettery
  6308  03E9  00C9               	movwf	(sprintf@s+1)^(0+128)
  6309  03EA  3003               	movlw	low (STR_2| (0+32768))
  6310  03EB  00CA               	movwf	sprintf@fmt^(0+128)
  6311  03EC  3088               	movlw	high (STR_2| (0+32768))
  6312  03ED  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  6313  03EE  30E8               	movlw	232
  6314  03EF  00F3               	movwf	___lwmod@divisor
  6315  03F0  3003               	movlw	3
  6316  03F1  00F4               	movwf	___lwmod@divisor+1
  6317  03F2  0024               	movlb	4	; select bank4
  6318  03F3  354F               	lslf	main@j^(0+512),w
  6319  03F4  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6320  03F5  0086               	movwf	6
  6321  03F6  3001               	movlw	1	; select bank2/3
  6322  03F7  0087               	movwf	7
  6323  03F8  3F40               	moviw [0]fsr1
  6324  03F9  00F5               	movwf	___lwmod@dividend
  6325  03FA  3F41               	moviw [1]fsr1
  6326  03FB  00F6               	movwf	___lwmod@dividend+1
  6327  03FC  318B  235A  3180   	fcall	___lwmod
  6328  03FF  0874               	movf	?___lwmod+1,w
  6329  0400  0021               	movlb	1	; select bank1
  6330  0401  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  6331  0402  0873               	movf	?___lwmod,w
  6332  0403  00CC               	movwf	(?_sprintf^(0+128)+4)
  6333  0404  318A  229F  3180   	fcall	_sprintf
  6334  0407                     l3893:
  6335                           
  6336                           ;main.c: 146:                 LCD_Write_String(ShowbadBettery);
  6337  0407  30C4               	movlw	low _ShowbadBettery
  6338  0408  0020               	movlb	0	; select bank0
  6339  0409  00A1               	movwf	LCD_Write_String@Str
  6340  040A  3000               	movlw	high _ShowbadBettery
  6341  040B  00A2               	movwf	LCD_Write_String@Str+1
  6342  040C  318A  222D  3180   	fcall	_LCD_Write_String
  6343  040F                     l3895:
  6344                           
  6345                           ;main.c: 148:                 LCD_Set_Cursor(2, 10);
  6346  040F  300A               	movlw	10
  6347  0410  0021               	movlb	1	; select bank1
  6348  0411  00D8               	movwf	??_main^(0+128)
  6349  0412  0858               	movf	??_main^(0+128),w
  6350  0413  0020               	movlb	0	; select bank0
  6351  0414  00A1               	movwf	LCD_Set_Cursor@COL
  6352  0415  3002               	movlw	2
  6353  0416  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6354  0419                     l3897:
  6355                           
  6356                           ;main.c: 149:                 LCD_Write_String("v");
  6357  0419  300F               	movlw	low (STR_7| (0+32768))
  6358  041A  0020               	movlb	0	; select bank0
  6359  041B  00A1               	movwf	LCD_Write_String@Str
  6360  041C  3088               	movlw	high (STR_7| (0+32768))
  6361  041D  00A2               	movwf	LCD_Write_String@Str+1
  6362  041E  318A  222D  3180   	fcall	_LCD_Write_String
  6363  0421                     l3899:
  6364                           
  6365                           ;main.c: 150:                 Delay(25000);
  6366  0421  30A8               	movlw	168
  6367  0422  00F3               	movwf	Delay@counter
  6368  0423  3061               	movlw	97
  6369  0424  00F4               	movwf	Delay@counter+1
  6370  0425  3189  213A  3180   	fcall	_Delay
  6371  0428                     l3901:
  6372                           
  6373                           ;main.c: 151:             }
  6374  0428  3001               	movlw	1
  6375  0429  0024               	movlb	4	; select bank4
  6376  042A  07CF               	addwf	main@j^(0+512),f
  6377  042B  3000               	movlw	0
  6378  042C  3DD0               	addwfc	(main@j+1)^(0+512),f
  6379  042D                     l3903:
  6380  042D  0850               	movf	(main@j+1)^(0+512),w
  6381  042E  3A80               	xorlw	128
  6382  042F  0021               	movlb	1	; select bank1
  6383  0430  00D8               	movwf	??_main^(0+128)
  6384  0431  3080               	movlw	128
  6385  0432  0258               	subwf	??_main^(0+128),w
  6386  0433  1D03               	skipz
  6387  0434  2C38               	goto	u3375
  6388  0435  3012               	movlw	18
  6389  0436  0024               	movlb	4	; select bank4
  6390  0437  024F               	subwf	main@j^(0+512),w
  6391  0438                     u3375:
  6392  0438  1C03               	skipc
  6393  0439  2C3B               	goto	u3371
  6394  043A  2C3C               	goto	u3370
  6395  043B                     u3371:
  6396  043B  29D5               	goto	l3815
  6397  043C                     u3370:
  6398  043C  2895               	goto	l3729
  6399  043D  3180  2827         	ljmp	start
  6400  043F                     __end_of_main:
  6401                           
  6402                           	psect	text1
  6403  0A9F                     __ptext1:	
  6404 ;; *************** function _sprintf *****************
  6405 ;; Defined at:
  6406 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  s               2    0[BANK1 ] PTR unsigned char 
  6409 ;;		 -> ShowbadBettery(4), no(1), 
  6410 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  6411 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6412 ;;		 -> STR_2(3), 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  f               6   10[BANK1 ] struct _IO_FILE
  6415 ;;  ret             2    0        int 
  6416 ;;  ap              1    9[BANK1 ] PTR void [1]
  6417 ;;		 -> ?_sprintf(2), 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  2    0[BANK1 ] int 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6427 ;;      Params:         0       0       6       0       0       0       0       0
  6428 ;;      Locals:         0       0       9       0       0       0       0       0
  6429 ;;      Temps:          0       0       1       0       0       0       0       0
  6430 ;;      Totals:         0       0      16       0       0       0       0       0
  6431 ;;Total ram usage:       16 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:   12
  6434 ;; This function calls:
  6435 ;;		_vfprintf
  6436 ;; This function is called by:
  6437 ;;		_main
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _sprintf
  6443  0A9F                     _sprintf:
  6444  0A9F                     l3681:	
  6445                           ;incstack = 0
  6446                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6447                           
  6448  0A9F  30CC               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6449  0AA0  0021               	movlb	1	; select bank1
  6450  0AA1  00CE               	movwf	??_sprintf^(0+128)
  6451  0AA2  084E               	movf	??_sprintf^(0+128),w
  6452  0AA3  00D1               	movwf	sprintf@ap^(0+128)
  6453  0AA4  0849               	movf	(sprintf@s+1)^(0+128),w
  6454  0AA5  00D3               	movwf	(sprintf@f+1)^(0+128)
  6455  0AA6  0848               	movf	sprintf@s^(0+128),w
  6456  0AA7  00D2               	movwf	sprintf@f^(0+128)
  6457  0AA8                     l3683:
  6458  0AA8  01D4               	clrf	(sprintf@f^(0+128)+2)
  6459  0AA9  01D5               	clrf	((sprintf@f+1)^(0+128)+2)
  6460  0AAA                     l3685:
  6461  0AAA  01D6               	clrf	(sprintf@f^(0+128)+4)
  6462  0AAB  01D7               	clrf	((sprintf@f+1)^(0+128)+4)
  6463  0AAC                     l3687:
  6464  0AAC  084B               	movf	(sprintf@fmt+1)^(0+128),w
  6465  0AAD  0020               	movlb	0	; select bank0
  6466  0AAE  00E9               	movwf	vfprintf@fmt+1
  6467  0AAF  0021               	movlb	1	; select bank1
  6468  0AB0  084A               	movf	sprintf@fmt^(0+128),w
  6469  0AB1  0020               	movlb	0	; select bank0
  6470  0AB2  00E8               	movwf	vfprintf@fmt
  6471  0AB3  30D1               	movlw	(low (sprintf@ap| 0))& (0+255)
  6472  0AB4  0021               	movlb	1	; select bank1
  6473  0AB5  00CE               	movwf	??_sprintf^(0+128)
  6474  0AB6  084E               	movf	??_sprintf^(0+128),w
  6475  0AB7  0020               	movlb	0	; select bank0
  6476  0AB8  00EA               	movwf	vfprintf@ap
  6477  0AB9  30D2               	movlw	(low (sprintf@f| 0))& (0+255)
  6478  0ABA  318B  2329  318A   	fcall	_vfprintf
  6479  0ABD                     l3689:
  6480  0ABD  3002               	movlw	2
  6481  0ABE  3ED2               	addlw	(low (sprintf@f| 0))& (0+255)
  6482  0ABF  0086               	movwf	6
  6483  0AC0  0187               	clrf	7
  6484  0AC1  3F40               	moviw [0]fsr1
  6485  0AC2  0021               	movlb	1	; select bank1
  6486  0AC3  0748               	addwf	sprintf@s^(0+128),w
  6487  0AC4  0084               	movwf	4
  6488  0AC5  3F41               	moviw [1]fsr1
  6489  0AC6  3D49               	addwfc	(sprintf@s+1)^(0+128),w
  6490  0AC7  0085               	movwf	5
  6491  0AC8  0180               	clrf	0
  6492  0AC9                     l1136:
  6493  0AC9  0008               	return
  6494  0ACA                     __end_of_sprintf:
  6495                           
  6496                           	psect	text2
  6497  0B29                     __ptext2:	
  6498 ;; *************** function _vfprintf *****************
  6499 ;; Defined at:
  6500 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  fp              1    wreg     PTR struct _IO_FILE
  6503 ;;		 -> sprintf@f(6), 
  6504 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  6505 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6506 ;;		 -> STR_2(3), 
  6507 ;;  ap              1   74[BANK0 ] PTR PTR void 
  6508 ;;		 -> sprintf@ap(1), 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  6511 ;;		 -> sprintf@f(6), 
  6512 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  6513 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6514 ;;		 -> STR_2(3), 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2   72[BANK0 ] int 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6524 ;;      Params:         0       3       0       0       0       0       0       0
  6525 ;;      Locals:         0       3       0       0       0       0       0       0
  6526 ;;      Temps:          0       2       0       0       0       0       0       0
  6527 ;;      Totals:         0       8       0       0       0       0       0       0
  6528 ;;Total ram usage:        8 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:   11
  6531 ;; This function calls:
  6532 ;;		_vfpfcnvrt
  6533 ;; This function is called by:
  6534 ;;		_sprintf
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function _vfprintf
  6540  0B29                     _vfprintf:
  6541                           
  6542                           ;incstack = 0
  6543                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6544                           ;vfprintf@fp stored from wreg
  6545  0B29  0020               	movlb	0	; select bank0
  6546  0B2A  00ED               	movwf	vfprintf@fp
  6547  0B2B                     l3527:
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6550  0B2B  0869               	movf	vfprintf@fmt+1,w
  6551  0B2C  00EF               	movwf	vfprintf@cfmt+1
  6552  0B2D  0868               	movf	vfprintf@fmt,w
  6553  0B2E  00EE               	movwf	vfprintf@cfmt
  6554  0B2F                     l3529:
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6557  0B2F  0023               	movlb	3	; select bank3
  6558  0B30  01C7               	clrf	_nout^(0+384)
  6559  0B31  01C8               	clrf	(_nout+1)^(0+384)
  6560                           
  6561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6562  0B32  2B47               	goto	l3533
  6563  0B33                     l3531:
  6564                           
  6565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6566  0B33  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6567  0B34  00EB               	movwf	??_vfprintf
  6568  0B35  086B               	movf	??_vfprintf,w
  6569  0B36  00D8               	movwf	vfpfcnvrt@fmt
  6570  0B37  086A               	movf	vfprintf@ap,w
  6571  0B38  00EC               	movwf	??_vfprintf+1
  6572  0B39  086C               	movf	??_vfprintf+1,w
  6573  0B3A  00D9               	movwf	vfpfcnvrt@ap
  6574  0B3B  086D               	movf	vfprintf@fp,w
  6575  0B3C  318E  2639  318B   	fcall	_vfpfcnvrt
  6576  0B3F  0020               	movlb	0	; select bank0
  6577  0B40  0858               	movf	?_vfpfcnvrt,w
  6578  0B41  0023               	movlb	3	; select bank3
  6579  0B42  07C7               	addwf	_nout^(0+384),f
  6580  0B43  0020               	movlb	0	; select bank0
  6581  0B44  0859               	movf	?_vfpfcnvrt+1,w
  6582  0B45  0023               	movlb	3	; select bank3
  6583  0B46  3DC8               	addwfc	(_nout+1)^(0+384),f
  6584  0B47                     l3533:
  6585                           
  6586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6587  0B47  0020               	movlb	0	; select bank0
  6588  0B48  086E               	movf	vfprintf@cfmt,w
  6589  0B49  0084               	movwf	4
  6590  0B4A  086F               	movf	vfprintf@cfmt+1,w
  6591  0B4B  0085               	movwf	5
  6592  0B4C  0012               	moviw fsr0++
  6593  0B4D  1D03               	btfss	3,2
  6594  0B4E  2B50               	goto	u3021
  6595  0B4F  2B51               	goto	u3020
  6596  0B50                     u3021:
  6597  0B50  2B33               	goto	l3531
  6598  0B51                     u3020:
  6599  0B51                     l3535:
  6600                           
  6601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6602  0B51  0023               	movlb	3	; select bank3
  6603  0B52  0848               	movf	(_nout+1)^(0+384),w
  6604  0B53  0020               	movlb	0	; select bank0
  6605  0B54  00E9               	movwf	?_vfprintf+1
  6606  0B55  0023               	movlb	3	; select bank3
  6607  0B56  0847               	movf	_nout^(0+384),w
  6608  0B57  0020               	movlb	0	; select bank0
  6609  0B58  00E8               	movwf	?_vfprintf
  6610  0B59                     l1208:
  6611  0B59  0008               	return
  6612  0B5A                     __end_of_vfprintf:
  6613                           
  6614                           	psect	text3
  6615  0E39                     __ptext3:	
  6616 ;; *************** function _vfpfcnvrt *****************
  6617 ;; Defined at:
  6618 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  fp              1    wreg     PTR struct _IO_FILE
  6621 ;;		 -> sprintf@f(6), 
  6622 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  6623 ;;		 -> vfprintf@cfmt(2), 
  6624 ;;  ap              1   57[BANK0 ] PTR PTR void 
  6625 ;;		 -> sprintf@ap(1), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  6628 ;;		 -> sprintf@f(6), 
  6629 ;;  ll              8   63[BANK0 ] long long 
  6630 ;;  llu             8    0        unsigned long long 
  6631 ;;  f               4    0        unsigned long long 
  6632 ;;  ct              3    0        unsigned char [3]
  6633 ;;  vp              2    0        PTR void 
  6634 ;;  i               2    0        int 
  6635 ;;  done            2    0        int 
  6636 ;;  cp              2    0        PTR unsigned char 
  6637 ;;  c               1    0        unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2   56[BANK0 ] int 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6647 ;;      Params:         0       2       0       0       0       0       0       0
  6648 ;;      Locals:         0       9       0       0       0       0       0       0
  6649 ;;      Temps:          0       5       0       0       0       0       0       0
  6650 ;;      Totals:         0      16       0       0       0       0       0       0
  6651 ;;Total ram usage:       16 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   10
  6654 ;; This function calls:
  6655 ;;		_dtoa
  6656 ;;		_fputc
  6657 ;; This function is called by:
  6658 ;;		_vfprintf
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           
  6663                           ;psect for function _vfpfcnvrt
  6664  0E39                     _vfpfcnvrt:
  6665                           
  6666                           ;incstack = 0
  6667                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6668                           ;vfpfcnvrt@fp stored from wreg
  6669  0E39  0020               	movlb	0	; select bank0
  6670  0E3A  00E7               	movwf	vfpfcnvrt@fp
  6671  0E3B                     l3331:
  6672                           
  6673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6674  0E3B  0858               	movf	vfpfcnvrt@fmt,w
  6675  0E3C  0086               	movwf	6
  6676  0E3D  0187               	clrf	7
  6677  0E3E  3F40               	moviw [0]fsr1
  6678  0E3F  00DA               	movwf	??_vfpfcnvrt
  6679  0E40  3F41               	moviw [1]fsr1
  6680  0E41  00DB               	movwf	??_vfpfcnvrt+1
  6681  0E42  085A               	movf	??_vfpfcnvrt,w
  6682  0E43  0084               	movwf	4
  6683  0E44  085B               	movf	??_vfpfcnvrt+1,w
  6684  0E45  0085               	movwf	5
  6685  0E46  0012               	moviw fsr0++
  6686  0E47  3A25               	xorlw	37
  6687  0E48  1D03               	btfss	3,2
  6688  0E49  2E4B               	goto	u2861
  6689  0E4A  2E4C               	goto	u2860
  6690  0E4B                     u2861:
  6691  0E4B  2EF2               	goto	l3367
  6692  0E4C                     u2860:
  6693  0E4C                     l3333:
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6696  0E4C  0858               	movf	vfpfcnvrt@fmt,w
  6697  0E4D  0086               	movwf	6
  6698  0E4E  0187               	clrf	7
  6699  0E4F  3001               	movlw	1
  6700  0E50  0781               	addwf	1,f
  6701  0E51  3141               	addfsr 1,1
  6702  0E52  1803               	skipnc
  6703  0E53  0A81               	incf	1,f
  6704  0E54                     l3335:
  6705                           
  6706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6707  0E54  0023               	movlb	3	; select bank3
  6708  0E55  01C9               	clrf	_width^(0+384)
  6709  0E56  01CA               	clrf	(_width+1)^(0+384)
  6710  0E57  0022               	movlb	2	; select bank2
  6711  0E58  01E4               	clrf	_flags^(0+256)
  6712  0E59  01E5               	clrf	(_flags+1)^(0+256)
  6713  0E5A                     l3337:
  6714                           
  6715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6716  0E5A  30FF               	movlw	255
  6717  0E5B  0023               	movlb	3	; select bank3
  6718  0E5C  00CB               	movwf	_prec^(0+384)
  6719  0E5D  30FF               	movlw	255
  6720  0E5E  00CC               	movwf	(_prec^(0+384)+1)
  6721  0E5F                     l3339:
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6724  0E5F  0020               	movlb	0	; select bank0
  6725  0E60  0858               	movf	vfpfcnvrt@fmt,w
  6726  0E61  0086               	movwf	6
  6727  0E62  0187               	clrf	7
  6728  0E63  3F40               	moviw [0]fsr1
  6729  0E64  00DA               	movwf	??_vfpfcnvrt
  6730  0E65  3F41               	moviw [1]fsr1
  6731  0E66  00DB               	movwf	??_vfpfcnvrt+1
  6732  0E67  085A               	movf	??_vfpfcnvrt,w
  6733  0E68  0084               	movwf	4
  6734  0E69  085B               	movf	??_vfpfcnvrt+1,w
  6735  0E6A  0085               	movwf	5
  6736  0E6B  0012               	moviw fsr0++
  6737  0E6C  3A64               	xorlw	100
  6738  0E6D  1903               	btfsc	3,2
  6739  0E6E  2E70               	goto	u2871
  6740  0E6F  2E71               	goto	u2870
  6741  0E70                     u2871:
  6742  0E70  2E82               	goto	l3343
  6743  0E71                     u2870:
  6744  0E71                     l3341:
  6745  0E71  0858               	movf	vfpfcnvrt@fmt,w
  6746  0E72  0086               	movwf	6
  6747  0E73  0187               	clrf	7
  6748  0E74  3F40               	moviw [0]fsr1
  6749  0E75  00DA               	movwf	??_vfpfcnvrt
  6750  0E76  3F41               	moviw [1]fsr1
  6751  0E77  00DB               	movwf	??_vfpfcnvrt+1
  6752  0E78  085A               	movf	??_vfpfcnvrt,w
  6753  0E79  0084               	movwf	4
  6754  0E7A  085B               	movf	??_vfpfcnvrt+1,w
  6755  0E7B  0085               	movwf	5
  6756  0E7C  0012               	moviw fsr0++
  6757  0E7D  3A69               	xorlw	105
  6758  0E7E  1D03               	btfss	3,2
  6759  0E7F  2E81               	goto	u2881
  6760  0E80  2E82               	goto	u2880
  6761  0E81                     u2881:
  6762  0E81  2EBD               	goto	l3351
  6763  0E82                     u2880:
  6764  0E82                     l3343:
  6765                           
  6766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6767  0E82  0858               	movf	vfpfcnvrt@fmt,w
  6768  0E83  0086               	movwf	6
  6769  0E84  0187               	clrf	7
  6770  0E85  3001               	movlw	1
  6771  0E86  0781               	addwf	1,f
  6772  0E87  3141               	addfsr 1,1
  6773  0E88  1803               	skipnc
  6774  0E89  0A81               	incf	1,f
  6775  0E8A                     l3345:
  6776                           
  6777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6778  0E8A  0859               	movf	vfpfcnvrt@ap,w
  6779  0E8B  0086               	movwf	6
  6780  0E8C  0187               	clrf	7
  6781  0E8D  0801               	movf	1,w
  6782  0E8E  0084               	movwf	4
  6783  0E8F  0185               	clrf	5
  6784  0E90  3002               	movlw	2
  6785  0E91  0781               	addwf	1,f
  6786  0E92  3F00               	moviw [0]fsr0
  6787  0E93  00DA               	movwf	??_vfpfcnvrt
  6788  0E94  3F01               	moviw [1]fsr0
  6789  0E95  00DB               	movwf	??_vfpfcnvrt+1
  6790  0E96  085A               	movf	??_vfpfcnvrt,w
  6791  0E97  00DF               	movwf	vfpfcnvrt@ll
  6792  0E98  085B               	movf	??_vfpfcnvrt+1,w
  6793  0E99  00E0               	movwf	vfpfcnvrt@ll+1
  6794  0E9A  0D89               	rlf	9,f
  6795  0E9B  3B89               	subwfb	9,f
  6796  0E9C  0989               	comf	9,f
  6797  0E9D  00E1               	movwf	vfpfcnvrt@ll+2
  6798  0E9E  00E2               	movwf	vfpfcnvrt@ll+3
  6799  0E9F  00E3               	movwf	vfpfcnvrt@ll+4
  6800  0EA0  00E4               	movwf	vfpfcnvrt@ll+5
  6801  0EA1  00E5               	movwf	vfpfcnvrt@ll+6
  6802  0EA2  00E6               	movwf	vfpfcnvrt@ll+7
  6803  0EA3                     l3347:
  6804                           
  6805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6806  0EA3  085F               	movf	vfpfcnvrt@ll,w
  6807  0EA4  00BA               	movwf	dtoa@d
  6808  0EA5  0860               	movf	vfpfcnvrt@ll+1,w
  6809  0EA6  00BB               	movwf	dtoa@d+1
  6810  0EA7  0861               	movf	vfpfcnvrt@ll+2,w
  6811  0EA8  00BC               	movwf	dtoa@d+2
  6812  0EA9  0862               	movf	vfpfcnvrt@ll+3,w
  6813  0EAA  00BD               	movwf	dtoa@d+3
  6814  0EAB  0863               	movf	vfpfcnvrt@ll+4,w
  6815  0EAC  00BE               	movwf	dtoa@d+4
  6816  0EAD  0864               	movf	vfpfcnvrt@ll+5,w
  6817  0EAE  00BF               	movwf	dtoa@d+5
  6818  0EAF  0865               	movf	vfpfcnvrt@ll+6,w
  6819  0EB0  00C0               	movwf	dtoa@d+6
  6820  0EB1  0866               	movf	vfpfcnvrt@ll+7,w
  6821  0EB2  00C1               	movwf	dtoa@d+7
  6822  0EB3  0867               	movf	vfpfcnvrt@fp,w
  6823  0EB4  3184  243F  318E   	fcall	_dtoa
  6824  0EB7  0020               	movlb	0	; select bank0
  6825  0EB8  083B               	movf	?_dtoa+1,w
  6826  0EB9  00D9               	movwf	?_vfpfcnvrt+1
  6827  0EBA  083A               	movf	?_dtoa,w
  6828  0EBB  00D8               	movwf	?_vfpfcnvrt
  6829  0EBC  2F15               	goto	l1201
  6830  0EBD                     l3351:
  6831                           
  6832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6833  0EBD  0858               	movf	vfpfcnvrt@fmt,w
  6834  0EBE  0086               	movwf	6
  6835  0EBF  0187               	clrf	7
  6836  0EC0  3F40               	moviw [0]fsr1
  6837  0EC1  00DA               	movwf	??_vfpfcnvrt
  6838  0EC2  3F41               	moviw [1]fsr1
  6839  0EC3  00DB               	movwf	??_vfpfcnvrt+1
  6840  0EC4  085A               	movf	??_vfpfcnvrt,w
  6841  0EC5  0084               	movwf	4
  6842  0EC6  085B               	movf	??_vfpfcnvrt+1,w
  6843  0EC7  0085               	movwf	5
  6844  0EC8  0012               	moviw fsr0++
  6845  0EC9  3A25               	xorlw	37
  6846  0ECA  1D03               	btfss	3,2
  6847  0ECB  2ECD               	goto	u2891
  6848  0ECC  2ECE               	goto	u2890
  6849  0ECD                     u2891:
  6850  0ECD  2EE7               	goto	l3361
  6851  0ECE                     u2890:
  6852  0ECE                     l3353:
  6853                           
  6854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6855  0ECE  0858               	movf	vfpfcnvrt@fmt,w
  6856  0ECF  0086               	movwf	6
  6857  0ED0  0187               	clrf	7
  6858  0ED1  3001               	movlw	1
  6859  0ED2  0781               	addwf	1,f
  6860  0ED3  3141               	addfsr 1,1
  6861  0ED4  1803               	skipnc
  6862  0ED5  0A81               	incf	1,f
  6863  0ED6                     l3355:
  6864                           
  6865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6866  0ED6  3025               	movlw	37
  6867  0ED7  00F5               	movwf	fputc@c
  6868  0ED8  3000               	movlw	0
  6869  0ED9  00F6               	movwf	fputc@c+1
  6870  0EDA  0867               	movf	vfpfcnvrt@fp,w
  6871  0EDB  00DA               	movwf	??_vfpfcnvrt
  6872  0EDC  085A               	movf	??_vfpfcnvrt,w
  6873  0EDD  00F7               	movwf	fputc@fp
  6874  0EDE  318C  2442  318E   	fcall	_fputc
  6875  0EE1                     l3357:
  6876                           
  6877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6878  0EE1  3001               	movlw	1
  6879  0EE2  0020               	movlb	0	; select bank0
  6880  0EE3  00D8               	movwf	?_vfpfcnvrt
  6881  0EE4  3000               	movlw	0
  6882  0EE5  00D9               	movwf	?_vfpfcnvrt+1
  6883  0EE6  2F15               	goto	l1201
  6884  0EE7                     l3361:
  6885                           
  6886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6887  0EE7  0858               	movf	vfpfcnvrt@fmt,w
  6888  0EE8  0086               	movwf	6
  6889  0EE9  0187               	clrf	7
  6890  0EEA  3001               	movlw	1
  6891  0EEB  0781               	addwf	1,f
  6892  0EEC  3141               	addfsr 1,1
  6893  0EED  1803               	skipnc
  6894  0EEE  0A81               	incf	1,f
  6895  0EEF                     l3363:
  6896                           
  6897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6898  0EEF  01D8               	clrf	?_vfpfcnvrt
  6899  0EF0  01D9               	clrf	?_vfpfcnvrt+1
  6900  0EF1  2F15               	goto	l1201
  6901  0EF2                     l3367:
  6902                           
  6903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6904  0EF2  0858               	movf	vfpfcnvrt@fmt,w
  6905  0EF3  0086               	movwf	6
  6906  0EF4  0187               	clrf	7
  6907  0EF5  3F40               	moviw [0]fsr1
  6908  0EF6  00DA               	movwf	??_vfpfcnvrt
  6909  0EF7  3F41               	moviw [1]fsr1
  6910  0EF8  00DB               	movwf	??_vfpfcnvrt+1
  6911  0EF9  085A               	movf	??_vfpfcnvrt,w
  6912  0EFA  0084               	movwf	4
  6913  0EFB  085B               	movf	??_vfpfcnvrt+1,w
  6914  0EFC  0085               	movwf	5
  6915  0EFD  0800               	movf	0,w	;code access
  6916  0EFE  00DC               	movwf	??_vfpfcnvrt+2
  6917  0EFF  01DD               	clrf	??_vfpfcnvrt+3
  6918  0F00  085C               	movf	??_vfpfcnvrt+2,w
  6919  0F01  00F5               	movwf	fputc@c
  6920  0F02  085D               	movf	??_vfpfcnvrt+3,w
  6921  0F03  00F6               	movwf	fputc@c+1
  6922  0F04  0867               	movf	vfpfcnvrt@fp,w
  6923  0F05  00DE               	movwf	??_vfpfcnvrt+4
  6924  0F06  085E               	movf	??_vfpfcnvrt+4,w
  6925  0F07  00F7               	movwf	fputc@fp
  6926  0F08  318C  2442  318E   	fcall	_fputc
  6927  0F0B                     l3369:
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6930  0F0B  0020               	movlb	0	; select bank0
  6931  0F0C  0858               	movf	vfpfcnvrt@fmt,w
  6932  0F0D  0086               	movwf	6
  6933  0F0E  0187               	clrf	7
  6934  0F0F  3001               	movlw	1
  6935  0F10  0781               	addwf	1,f
  6936  0F11  3141               	addfsr 1,1
  6937  0F12  1803               	skipnc
  6938  0F13  0A81               	incf	1,f
  6939  0F14  2EE1               	goto	l3357
  6940  0F15                     l1201:
  6941  0F15  0008               	return
  6942  0F16                     __end_of_vfpfcnvrt:
  6943                           
  6944                           	psect	text4
  6945  043F                     __ptext4:	
  6946 ;; *************** function _dtoa *****************
  6947 ;; Defined at:
  6948 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  fp              1    wreg     PTR struct _IO_FILE
  6951 ;;		 -> sprintf@f(6), 
  6952 ;;  d               8   26[BANK0 ] long long 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  6955 ;;		 -> sprintf@f(6), 
  6956 ;;  n               8   46[BANK0 ] long long 
  6957 ;;  i               2   54[BANK0 ] int 
  6958 ;;  s               2   44[BANK0 ] int 
  6959 ;;  w               2   42[BANK0 ] int 
  6960 ;;  p               2   40[BANK0 ] int 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2   26[BANK0 ] int 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6970 ;;      Params:         0       8       0       0       0       0       0       0
  6971 ;;      Locals:         0      19       0       0       0       0       0       0
  6972 ;;      Temps:          0       3       0       0       0       0       0       0
  6973 ;;      Totals:         0      30       0       0       0       0       0       0
  6974 ;;Total ram usage:       30 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    9
  6977 ;; This function calls:
  6978 ;;		___aodiv
  6979 ;;		___aomod
  6980 ;;		_abs
  6981 ;;		_pad
  6982 ;; This function is called by:
  6983 ;;		_vfpfcnvrt
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           
  6988                           ;psect for function _dtoa
  6989  043F                     _dtoa:
  6990                           
  6991                           ;incstack = 0
  6992                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6993                           ;dtoa@fp stored from wreg
  6994  043F  0020               	movlb	0	; select bank0
  6995  0440  00C5               	movwf	dtoa@fp
  6996  0441                     l3257:
  6997                           
  6998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  6999  0441  083A               	movf	dtoa@d,w
  7000  0442  00CE               	movwf	dtoa@n
  7001  0443  083B               	movf	dtoa@d+1,w
  7002  0444  00CF               	movwf	dtoa@n+1
  7003  0445  083C               	movf	dtoa@d+2,w
  7004  0446  00D0               	movwf	dtoa@n+2
  7005  0447  083D               	movf	dtoa@d+3,w
  7006  0448  00D1               	movwf	dtoa@n+3
  7007  0449  083E               	movf	dtoa@d+4,w
  7008  044A  00D2               	movwf	dtoa@n+4
  7009  044B  083F               	movf	dtoa@d+5,w
  7010  044C  00D3               	movwf	dtoa@n+5
  7011  044D  0840               	movf	dtoa@d+6,w
  7012  044E  00D4               	movwf	dtoa@n+6
  7013  044F  0841               	movf	dtoa@d+7,w
  7014  0450  00D5               	movwf	dtoa@n+7
  7015  0451                     l3259:
  7016                           
  7017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7018  0451  304E               	movlw	low dtoa@n
  7019  0452  0086               	movwf	6
  7020  0453  3000               	movlw	high dtoa@n
  7021  0454  0087               	movwf	7
  7022  0455  3F47               	moviw [7]fsr1
  7023  0456  00C2               	movwf	??_dtoa
  7024  0457  1BC2               	btfsc	??_dtoa,7
  7025  0458  2C5A               	goto	u2701
  7026  0459  2C5C               	goto	u2700
  7027  045A                     u2701:
  7028  045A  3001               	movlw	1
  7029  045B  2C5D               	goto	u2710
  7030  045C                     u2700:
  7031  045C  3000               	movlw	0
  7032  045D                     u2710:
  7033  045D  0020               	movlb	0	; select bank0
  7034  045E  00C3               	movwf	??_dtoa+1
  7035  045F  01C4               	clrf	??_dtoa+2
  7036  0460  0843               	movf	??_dtoa+1,w
  7037  0461  00CC               	movwf	dtoa@s
  7038  0462  0844               	movf	??_dtoa+2,w
  7039  0463  00CD               	movwf	dtoa@s+1
  7040  0464                     l3261:
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7043  0464  084C               	movf	dtoa@s,w
  7044  0465  044D               	iorwf	dtoa@s+1,w
  7045  0466  1903               	btfsc	3,2
  7046  0467  2C69               	goto	u2721
  7047  0468  2C6A               	goto	u2720
  7048  0469                     u2721:
  7049  0469  2C88               	goto	l1171
  7050  046A                     u2720:
  7051  046A                     l3263:
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7054  046A  09CE               	comf	dtoa@n,f
  7055  046B  09CF               	comf	dtoa@n+1,f
  7056  046C  09D0               	comf	dtoa@n+2,f
  7057  046D  09D1               	comf	dtoa@n+3,f
  7058  046E  09D2               	comf	dtoa@n+4,f
  7059  046F  09D3               	comf	dtoa@n+5,f
  7060  0470  09D4               	comf	dtoa@n+6,f
  7061  0471  09D5               	comf	dtoa@n+7,f
  7062  0472  0ACE               	incf	dtoa@n,f
  7063  0473  1D03               	skipz
  7064  0474  2C88               	goto	u273lld
  7065  0475  0ACF               	incf	dtoa@n+1,f
  7066  0476  1D03               	skipz
  7067  0477  2C88               	goto	u273lld
  7068  0478  0AD0               	incf	dtoa@n+2,f
  7069  0479  1D03               	skipz
  7070  047A  2C88               	goto	u273lld
  7071  047B  0AD1               	incf	dtoa@n+3,f
  7072  047C  1D03               	skipz
  7073  047D  2C88               	goto	u273lld
  7074  047E  0AD2               	incf	dtoa@n+4,f
  7075  047F  1D03               	skipz
  7076  0480  2C88               	goto	u273lld
  7077  0481  0AD3               	incf	dtoa@n+5,f
  7078  0482  1D03               	skipz
  7079  0483  2C88               	goto	u273lld
  7080  0484  0AD4               	incf	dtoa@n+6,f
  7081  0485  1D03               	skipz
  7082  0486  2C88               	goto	u273lld
  7083  0487  0AD5               	incf	dtoa@n+7,f
  7084  0488                     u273lld:
  7085  0488                     l1171:	
  7086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 284:     }
  7087                           
  7088                           
  7089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7090  0488  0023               	movlb	3	; select bank3
  7091  0489  1BCC               	btfsc	(_prec+1)^(0+384),7
  7092  048A  2C8C               	goto	u2741
  7093  048B  2C8D               	goto	u2740
  7094  048C                     u2741:
  7095  048C  2C92               	goto	l1172
  7096  048D                     u2740:
  7097  048D                     l3265:
  7098                           
  7099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7100  048D  30FD               	movlw	253
  7101  048E  0022               	movlb	2	; select bank2
  7102  048F  05E4               	andwf	_flags^(0+256),f
  7103  0490  30FF               	movlw	255
  7104  0491  05E5               	andwf	(_flags+1)^(0+256),f
  7105  0492                     l1172:	
  7106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 289:     }
  7107                           
  7108                           
  7109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7110  0492  0023               	movlb	3	; select bank3
  7111  0493  084C               	movf	(_prec+1)^(0+384),w
  7112  0494  3A80               	xorlw	128
  7113  0495  0020               	movlb	0	; select bank0
  7114  0496  00C2               	movwf	??_dtoa
  7115  0497  3080               	movlw	128
  7116  0498  0242               	subwf	??_dtoa,w
  7117  0499  1D03               	skipz
  7118  049A  2C9E               	goto	u2755
  7119  049B  3001               	movlw	1
  7120  049C  0023               	movlb	3	; select bank3
  7121  049D  024B               	subwf	_prec^(0+384),w
  7122  049E                     u2755:
  7123  049E  1803               	skipnc
  7124  049F  2CA1               	goto	u2751
  7125  04A0  2CA2               	goto	u2750
  7126  04A1                     u2751:
  7127  04A1  2CA8               	goto	l3269
  7128  04A2                     u2750:
  7129  04A2                     l3267:
  7130  04A2  3001               	movlw	1
  7131  04A3  0020               	movlb	0	; select bank0
  7132  04A4  00C8               	movwf	dtoa@p
  7133  04A5  3000               	movlw	0
  7134  04A6  00C9               	movwf	dtoa@p+1
  7135  04A7  2CB0               	goto	l1176
  7136  04A8                     l3269:
  7137  04A8  0023               	movlb	3	; select bank3
  7138  04A9  084C               	movf	(_prec+1)^(0+384),w
  7139  04AA  0020               	movlb	0	; select bank0
  7140  04AB  00C9               	movwf	dtoa@p+1
  7141  04AC  0023               	movlb	3	; select bank3
  7142  04AD  084B               	movf	_prec^(0+384),w
  7143  04AE  0020               	movlb	0	; select bank0
  7144  04AF  00C8               	movwf	dtoa@p
  7145  04B0                     l1176:
  7146                           
  7147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7148  04B0  0023               	movlb	3	; select bank3
  7149  04B1  084A               	movf	(_width+1)^(0+384),w
  7150  04B2  0020               	movlb	0	; select bank0
  7151  04B3  00CB               	movwf	dtoa@w+1
  7152  04B4  0023               	movlb	3	; select bank3
  7153  04B5  0849               	movf	_width^(0+384),w
  7154  04B6  0020               	movlb	0	; select bank0
  7155  04B7  00CA               	movwf	dtoa@w
  7156  04B8                     l3271:
  7157                           
  7158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7159  04B8  084C               	movf	dtoa@s,w
  7160  04B9  044D               	iorwf	dtoa@s+1,w
  7161  04BA  1D03               	btfss	3,2
  7162  04BB  2CBD               	goto	u2761
  7163  04BC  2CBE               	goto	u2760
  7164  04BD                     u2761:
  7165  04BD  2CC3               	goto	l3275
  7166  04BE                     u2760:
  7167  04BE                     l3273:
  7168  04BE  0022               	movlb	2	; select bank2
  7169  04BF  1D64               	btfss	_flags^(0+256),2
  7170  04C0  2CC2               	goto	u2771
  7171  04C1  2CC3               	goto	u2770
  7172  04C2                     u2771:
  7173  04C2  2CC8               	goto	l1177
  7174  04C3                     u2770:
  7175  04C3                     l3275:
  7176                           
  7177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7178  04C3  30FF               	movlw	255
  7179  04C4  0020               	movlb	0	; select bank0
  7180  04C5  07CA               	addwf	dtoa@w,f
  7181  04C6  30FF               	movlw	255
  7182  04C7  3DCB               	addwfc	dtoa@w+1,f
  7183  04C8                     l1177:	
  7184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 294:     }
  7185                           
  7186                           
  7187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7188  04C8  301F               	movlw	31
  7189  04C9  0020               	movlb	0	; select bank0
  7190  04CA  00D6               	movwf	dtoa@i
  7191  04CB  3000               	movlw	0
  7192  04CC  00D7               	movwf	dtoa@i+1
  7193  04CD                     l3277:
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7196  04CD  0023               	movlb	3	; select bank3
  7197  04CE  01EE               	clrf	(_dbuf^(0+384)+31)
  7198                           
  7199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7200  04CF  2D39               	goto	l1180
  7201  04D0                     l3279:
  7202                           
  7203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7204  04D0  30FF               	movlw	255
  7205  04D1  0020               	movlb	0	; select bank0
  7206  04D2  07D6               	addwf	dtoa@i,f
  7207  04D3  30FF               	movlw	255
  7208  04D4  3DD7               	addwfc	dtoa@i+1,f
  7209  04D5                     l3281:
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7212  04D5  300A               	movlw	10
  7213  04D6  00A0               	movwf	___aomod@divisor
  7214  04D7  01A1               	clrf	___aomod@divisor+1
  7215  04D8  01A2               	clrf	___aomod@divisor+2
  7216  04D9  01A3               	clrf	___aomod@divisor+3
  7217  04DA  01A4               	clrf	___aomod@divisor+4
  7218  04DB  01A5               	clrf	___aomod@divisor+5
  7219  04DC  01A6               	clrf	___aomod@divisor+6
  7220  04DD  01A7               	clrf	___aomod@divisor+7
  7221  04DE  084E               	movf	dtoa@n,w
  7222  04DF  00A8               	movwf	___aomod@dividend
  7223  04E0  084F               	movf	dtoa@n+1,w
  7224  04E1  00A9               	movwf	___aomod@dividend+1
  7225  04E2  0850               	movf	dtoa@n+2,w
  7226  04E3  00AA               	movwf	___aomod@dividend+2
  7227  04E4  0851               	movf	dtoa@n+3,w
  7228  04E5  00AB               	movwf	___aomod@dividend+3
  7229  04E6  0852               	movf	dtoa@n+4,w
  7230  04E7  00AC               	movwf	___aomod@dividend+4
  7231  04E8  0853               	movf	dtoa@n+5,w
  7232  04E9  00AD               	movwf	___aomod@dividend+5
  7233  04EA  0854               	movf	dtoa@n+6,w
  7234  04EB  00AE               	movwf	___aomod@dividend+6
  7235  04EC  0855               	movf	dtoa@n+7,w
  7236  04ED  00AF               	movwf	___aomod@dividend+7
  7237  04EE  318F  2716  3184   	fcall	___aomod
  7238  04F1  0020               	movlb	0	; select bank0
  7239  04F2  0821               	movf	?___aomod+1,w
  7240  04F3  00F7               	movwf	abs@a+1
  7241  04F4  0820               	movf	?___aomod,w
  7242  04F5  00F6               	movwf	abs@a
  7243  04F6  318A  2211  3184   	fcall	_abs
  7244  04F9  0876               	movf	?_abs,w
  7245  04FA  3E30               	addlw	48
  7246  04FB  0020               	movlb	0	; select bank0
  7247  04FC  00C2               	movwf	??_dtoa
  7248  04FD  0856               	movf	dtoa@i,w
  7249  04FE  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7250  04FF  0086               	movwf	6
  7251  0500  3001               	movlw	1	; select bank3/4
  7252  0501  0087               	movwf	7
  7253  0502  0842               	movf	??_dtoa,w
  7254  0503  0081               	movwf	1
  7255  0504                     l3283:
  7256                           
  7257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7258  0504  30FF               	movlw	255
  7259  0505  07C8               	addwf	dtoa@p,f
  7260  0506  30FF               	movlw	255
  7261  0507  3DC9               	addwfc	dtoa@p+1,f
  7262  0508                     l3285:
  7263                           
  7264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7265  0508  30FF               	movlw	255
  7266  0509  07CA               	addwf	dtoa@w,f
  7267  050A  30FF               	movlw	255
  7268  050B  3DCB               	addwfc	dtoa@w+1,f
  7269  050C                     l3287:
  7270                           
  7271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7272  050C  300A               	movlw	10
  7273  050D  00A0               	movwf	___aodiv@divisor
  7274  050E  01A1               	clrf	___aodiv@divisor+1
  7275  050F  01A2               	clrf	___aodiv@divisor+2
  7276  0510  01A3               	clrf	___aodiv@divisor+3
  7277  0511  01A4               	clrf	___aodiv@divisor+4
  7278  0512  01A5               	clrf	___aodiv@divisor+5
  7279  0513  01A6               	clrf	___aodiv@divisor+6
  7280  0514  01A7               	clrf	___aodiv@divisor+7
  7281  0515  084E               	movf	dtoa@n,w
  7282  0516  00A8               	movwf	___aodiv@dividend
  7283  0517  084F               	movf	dtoa@n+1,w
  7284  0518  00A9               	movwf	___aodiv@dividend+1
  7285  0519  0850               	movf	dtoa@n+2,w
  7286  051A  00AA               	movwf	___aodiv@dividend+2
  7287  051B  0851               	movf	dtoa@n+3,w
  7288  051C  00AB               	movwf	___aodiv@dividend+3
  7289  051D  0852               	movf	dtoa@n+4,w
  7290  051E  00AC               	movwf	___aodiv@dividend+4
  7291  051F  0853               	movf	dtoa@n+5,w
  7292  0520  00AD               	movwf	___aodiv@dividend+5
  7293  0521  0854               	movf	dtoa@n+6,w
  7294  0522  00AE               	movwf	___aodiv@dividend+6
  7295  0523  0855               	movf	dtoa@n+7,w
  7296  0524  00AF               	movwf	___aodiv@dividend+7
  7297  0525  3186  26E4  3184   	fcall	___aodiv
  7298  0528  0020               	movlb	0	; select bank0
  7299  0529  0820               	movf	?___aodiv,w
  7300  052A  00CE               	movwf	dtoa@n
  7301  052B  0821               	movf	?___aodiv+1,w
  7302  052C  00CF               	movwf	dtoa@n+1
  7303  052D  0822               	movf	?___aodiv+2,w
  7304  052E  00D0               	movwf	dtoa@n+2
  7305  052F  0823               	movf	?___aodiv+3,w
  7306  0530  00D1               	movwf	dtoa@n+3
  7307  0531  0824               	movf	?___aodiv+4,w
  7308  0532  00D2               	movwf	dtoa@n+4
  7309  0533  0825               	movf	?___aodiv+5,w
  7310  0534  00D3               	movwf	dtoa@n+5
  7311  0535  0826               	movf	?___aodiv+6,w
  7312  0536  00D4               	movwf	dtoa@n+6
  7313  0537  0827               	movf	?___aodiv+7,w
  7314  0538  00D5               	movwf	dtoa@n+7
  7315  0539                     l1180:	
  7316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 305:     }
  7317                           
  7318                           
  7319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7320  0539  0020               	movlb	0	; select bank0
  7321  053A  0857               	movf	dtoa@i+1,w
  7322  053B  3A80               	xorlw	128
  7323  053C  00C2               	movwf	??_dtoa
  7324  053D  3080               	movlw	128
  7325  053E  0242               	subwf	??_dtoa,w
  7326  053F  1D03               	skipz
  7327  0540  2D43               	goto	u2785
  7328  0541  3001               	movlw	1
  7329  0542  0256               	subwf	dtoa@i,w
  7330  0543                     u2785:
  7331  0543  1C03               	skipc
  7332  0544  2D46               	goto	u2781
  7333  0545  2D47               	goto	u2780
  7334  0546                     u2781:
  7335  0546  2D74               	goto	l3297
  7336  0547                     u2780:
  7337  0547                     l3289:
  7338  0547  0020               	movlb	0	; select bank0
  7339  0548  084E               	movf	dtoa@n,w
  7340  0549  044F               	iorwf	dtoa@n+1,w
  7341  054A  0450               	iorwf	dtoa@n+2,w
  7342  054B  0451               	iorwf	dtoa@n+3,w
  7343  054C  0452               	iorwf	dtoa@n+4,w
  7344  054D  0453               	iorwf	dtoa@n+5,w
  7345  054E  0454               	iorwf	dtoa@n+6,w
  7346  054F  0455               	iorwf	dtoa@n+7,w
  7347  0550  1D03               	skipz
  7348  0551  2D53               	goto	u2791
  7349  0552  2D54               	goto	u2790
  7350  0553                     u2791:
  7351  0553  2CD0               	goto	l3279
  7352  0554                     u2790:
  7353  0554                     l3291:
  7354  0554  0849               	movf	dtoa@p+1,w
  7355  0555  3A80               	xorlw	128
  7356  0556  00C2               	movwf	??_dtoa
  7357  0557  3080               	movlw	128
  7358  0558  0242               	subwf	??_dtoa,w
  7359  0559  1D03               	skipz
  7360  055A  2D5D               	goto	u2805
  7361  055B  3001               	movlw	1
  7362  055C  0248               	subwf	dtoa@p,w
  7363  055D                     u2805:
  7364  055D  1803               	skipnc
  7365  055E  2D60               	goto	u2801
  7366  055F  2D61               	goto	u2800
  7367  0560                     u2801:
  7368  0560  2CD0               	goto	l3279
  7369  0561                     u2800:
  7370  0561                     l3293:
  7371  0561  0020               	movlb	0	; select bank0
  7372  0562  084B               	movf	dtoa@w+1,w
  7373  0563  3A80               	xorlw	128
  7374  0564  00C2               	movwf	??_dtoa
  7375  0565  3080               	movlw	128
  7376  0566  0242               	subwf	??_dtoa,w
  7377  0567  1D03               	skipz
  7378  0568  2D6B               	goto	u2815
  7379  0569  3001               	movlw	1
  7380  056A  024A               	subwf	dtoa@w,w
  7381  056B                     u2815:
  7382  056B  1C03               	skipc
  7383  056C  2D6E               	goto	u2811
  7384  056D  2D6F               	goto	u2810
  7385  056E                     u2811:
  7386  056E  2D74               	goto	l3297
  7387  056F                     u2810:
  7388  056F                     l3295:
  7389  056F  0022               	movlb	2	; select bank2
  7390  0570  18E4               	btfsc	_flags^(0+256),1
  7391  0571  2D73               	goto	u2821
  7392  0572  2D74               	goto	u2820
  7393  0573                     u2821:
  7394  0573  2CD0               	goto	l3279
  7395  0574                     u2820:
  7396  0574                     l3297:
  7397                           
  7398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7399  0574  0020               	movlb	0	; select bank0
  7400  0575  084C               	movf	dtoa@s,w
  7401  0576  044D               	iorwf	dtoa@s+1,w
  7402  0577  1D03               	btfss	3,2
  7403  0578  2D7A               	goto	u2831
  7404  0579  2D7B               	goto	u2830
  7405  057A                     u2831:
  7406  057A  2D80               	goto	l3301
  7407  057B                     u2830:
  7408  057B                     l3299:
  7409  057B  0022               	movlb	2	; select bank2
  7410  057C  1D64               	btfss	_flags^(0+256),2
  7411  057D  2D7F               	goto	u2841
  7412  057E  2D80               	goto	u2840
  7413  057F                     u2841:
  7414  057F  2D9D               	goto	l3311
  7415  0580                     u2840:
  7416  0580                     l3301:
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7419  0580  30FF               	movlw	255
  7420  0581  0020               	movlb	0	; select bank0
  7421  0582  07D6               	addwf	dtoa@i,f
  7422  0583  30FF               	movlw	255
  7423  0584  3DD7               	addwfc	dtoa@i+1,f
  7424  0585                     l3303:
  7425                           
  7426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7427  0585  084C               	movf	dtoa@s,w
  7428  0586  044D               	iorwf	dtoa@s+1,w
  7429  0587  1D03               	btfss	3,2
  7430  0588  2D8A               	goto	u2851
  7431  0589  2D8B               	goto	u2850
  7432  058A                     u2851:
  7433  058A  2D90               	goto	l3307
  7434  058B                     u2850:
  7435  058B                     l3305:
  7436  058B  302B               	movlw	43
  7437  058C  00C6               	movwf	_dtoa$1489
  7438  058D  3000               	movlw	0
  7439  058E  00C7               	movwf	_dtoa$1489+1
  7440  058F  2D94               	goto	l3309
  7441  0590                     l3307:
  7442  0590  302D               	movlw	45
  7443  0591  00C6               	movwf	_dtoa$1489
  7444  0592  3000               	movlw	0
  7445  0593  00C7               	movwf	_dtoa$1489+1
  7446  0594                     l3309:
  7447  0594  0846               	movf	_dtoa$1489,w
  7448  0595  00C2               	movwf	??_dtoa
  7449  0596  0856               	movf	dtoa@i,w
  7450  0597  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7451  0598  0086               	movwf	6
  7452  0599  3001               	movlw	1	; select bank3/4
  7453  059A  0087               	movwf	7
  7454  059B  0842               	movf	??_dtoa,w
  7455  059C  0081               	movwf	1
  7456  059D                     l3311:
  7457                           
  7458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7459  059D  0020               	movlb	0	; select bank0
  7460  059E  0856               	movf	dtoa@i,w
  7461  059F  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7462  05A0  00C2               	movwf	??_dtoa
  7463  05A1  0842               	movf	??_dtoa,w
  7464  05A2  00AD               	movwf	pad@buf
  7465  05A3  084B               	movf	dtoa@w+1,w
  7466  05A4  00AF               	movwf	pad@p+1
  7467  05A5  084A               	movf	dtoa@w,w
  7468  05A6  00AE               	movwf	pad@p
  7469  05A7  0845               	movf	dtoa@fp,w
  7470  05A8  318C  2499  3184   	fcall	_pad
  7471  05AB  0020               	movlb	0	; select bank0
  7472  05AC  082E               	movf	?_pad+1,w
  7473  05AD  00BB               	movwf	?_dtoa+1
  7474  05AE  082D               	movf	?_pad,w
  7475  05AF  00BA               	movwf	?_dtoa
  7476  05B0                     l1194:
  7477  05B0  0008               	return
  7478  05B1                     __end_of_dtoa:
  7479                           
  7480                           	psect	text5
  7481  0C99                     __ptext5:	
  7482 ;; *************** function _pad *****************
  7483 ;; Defined at:
  7484 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  fp              1    wreg     PTR struct _IO_FILE
  7487 ;;		 -> sprintf@f(6), 
  7488 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  7489 ;;		 -> dbuf(32), 
  7490 ;;  p               2   14[BANK0 ] int 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  7493 ;;		 -> sprintf@f(6), 
  7494 ;;  w               2   19[BANK0 ] int 
  7495 ;;  i               2   17[BANK0 ] int 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  2   13[BANK0 ] int 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7505 ;;      Params:         0       3       0       0       0       0       0       0
  7506 ;;      Locals:         0       5       0       0       0       0       0       0
  7507 ;;      Temps:          0       1       0       0       0       0       0       0
  7508 ;;      Totals:         0       9       0       0       0       0       0       0
  7509 ;;Total ram usage:        9 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    8
  7512 ;; This function calls:
  7513 ;;		_fputc
  7514 ;;		_fputs
  7515 ;;		_strlen
  7516 ;; This function is called by:
  7517 ;;		_dtoa
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function _pad
  7523  0C99                     _pad:
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7527                           ;pad@fp stored from wreg
  7528  0C99  0020               	movlb	0	; select bank0
  7529  0C9A  00B5               	movwf	pad@fp
  7530  0C9B                     l3223:
  7531                           
  7532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7533  0C9B  0022               	movlb	2	; select bank2
  7534  0C9C  1C64               	btfss	_flags^(0+256),0
  7535  0C9D  2C9F               	goto	u2641
  7536  0C9E  2CA0               	goto	u2640
  7537  0C9F                     u2641:
  7538  0C9F  2CA9               	goto	l3227
  7539  0CA0                     u2640:
  7540  0CA0                     l3225:
  7541                           
  7542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7543  0CA0  0020               	movlb	0	; select bank0
  7544  0CA1  0835               	movf	pad@fp,w
  7545  0CA2  00B0               	movwf	??_pad
  7546  0CA3  0830               	movf	??_pad,w
  7547  0CA4  00A5               	movwf	fputs@fp
  7548  0CA5  082D               	movf	pad@buf,w
  7549  0CA6  318A  224C  318C   	fcall	_fputs
  7550  0CA9                     l3227:
  7551                           
  7552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7553  0CA9  0020               	movlb	0	; select bank0
  7554  0CAA  1BAF               	btfsc	pad@p+1,7
  7555  0CAB  2CAD               	goto	u2651
  7556  0CAC  2CAE               	goto	u2650
  7557  0CAD                     u2651:
  7558  0CAD  2CB3               	goto	l3231
  7559  0CAE                     u2650:
  7560  0CAE                     l3229:
  7561  0CAE  082F               	movf	pad@p+1,w
  7562  0CAF  00B4               	movwf	pad@w+1
  7563  0CB0  082E               	movf	pad@p,w
  7564  0CB1  00B3               	movwf	pad@w
  7565  0CB2  2CB5               	goto	l1163
  7566  0CB3                     l3231:
  7567  0CB3  01B3               	clrf	pad@w
  7568  0CB4  01B4               	clrf	pad@w+1
  7569  0CB5                     l1163:
  7570                           
  7571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7572  0CB5  01B1               	clrf	pad@i
  7573  0CB6  01B2               	clrf	pad@i+1
  7574                           
  7575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7576  0CB7  2CC9               	goto	l3237
  7577  0CB8                     l3233:
  7578                           
  7579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7580  0CB8  3020               	movlw	32
  7581  0CB9  00F5               	movwf	fputc@c
  7582  0CBA  3000               	movlw	0
  7583  0CBB  00F6               	movwf	fputc@c+1
  7584  0CBC  0020               	movlb	0	; select bank0
  7585  0CBD  0835               	movf	pad@fp,w
  7586  0CBE  00B0               	movwf	??_pad
  7587  0CBF  0830               	movf	??_pad,w
  7588  0CC0  00F7               	movwf	fputc@fp
  7589  0CC1  318C  2442  318C   	fcall	_fputc
  7590  0CC4                     l3235:
  7591                           
  7592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7593  0CC4  3001               	movlw	1
  7594  0CC5  0020               	movlb	0	; select bank0
  7595  0CC6  07B1               	addwf	pad@i,f
  7596  0CC7  3000               	movlw	0
  7597  0CC8  3DB2               	addwfc	pad@i+1,f
  7598  0CC9                     l3237:
  7599                           
  7600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7601  0CC9  0832               	movf	pad@i+1,w
  7602  0CCA  3A80               	xorlw	128
  7603  0CCB  00B0               	movwf	??_pad
  7604  0CCC  0834               	movf	pad@w+1,w
  7605  0CCD  3A80               	xorlw	128
  7606  0CCE  0230               	subwf	??_pad,w
  7607  0CCF  1D03               	skipz
  7608  0CD0  2CD3               	goto	u2665
  7609  0CD1  0833               	movf	pad@w,w
  7610  0CD2  0231               	subwf	pad@i,w
  7611  0CD3                     u2665:
  7612  0CD3  1C03               	skipc
  7613  0CD4  2CD6               	goto	u2661
  7614  0CD5  2CD7               	goto	u2660
  7615  0CD6                     u2661:
  7616  0CD6  2CB8               	goto	l3233
  7617  0CD7                     u2660:
  7618  0CD7                     l1166:
  7619                           
  7620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7621  0CD7  0022               	movlb	2	; select bank2
  7622  0CD8  1864               	btfsc	_flags^(0+256),0
  7623  0CD9  2CDB               	goto	u2671
  7624  0CDA  2CDC               	goto	u2670
  7625  0CDB                     u2671:
  7626  0CDB  2CE5               	goto	l3241
  7627  0CDC                     u2670:
  7628  0CDC                     l3239:
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7631  0CDC  0020               	movlb	0	; select bank0
  7632  0CDD  0835               	movf	pad@fp,w
  7633  0CDE  00B0               	movwf	??_pad
  7634  0CDF  0830               	movf	??_pad,w
  7635  0CE0  00A5               	movwf	fputs@fp
  7636  0CE1  082D               	movf	pad@buf,w
  7637  0CE2  318A  224C  318C   	fcall	_fputs
  7638  0CE5                     l3241:
  7639                           
  7640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7641  0CE5  0020               	movlb	0	; select bank0
  7642  0CE6  082D               	movf	pad@buf,w
  7643  0CE7  3189  21F7  318C   	fcall	_strlen
  7644  0CEA  0020               	movlb	0	; select bank0
  7645  0CEB  0833               	movf	pad@w,w
  7646  0CEC  0773               	addwf	?_strlen,w
  7647  0CED  00AD               	movwf	?_pad
  7648  0CEE  0834               	movf	pad@w+1,w
  7649  0CEF  3D74               	addwfc	?_strlen+1,w
  7650  0CF0  00AE               	movwf	?_pad+1
  7651  0CF1                     l1168:
  7652  0CF1  0008               	return
  7653  0CF2                     __end_of_pad:
  7654                           
  7655                           	psect	text6
  7656  09F7                     __ptext6:	
  7657 ;; *************** function _strlen *****************
  7658 ;; Defined at:
  7659 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  s               1    wreg     PTR const unsigned char 
  7662 ;;		 -> dbuf(32), 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  s               1    7[COMMON] PTR const unsigned char 
  7665 ;;		 -> dbuf(32), 
  7666 ;;  a               1    6[COMMON] PTR const unsigned char 
  7667 ;;		 -> dbuf(32), 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  2    3[COMMON] unsigned int 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7677 ;;      Params:         2       0       0       0       0       0       0       0
  7678 ;;      Locals:         2       0       0       0       0       0       0       0
  7679 ;;      Temps:          1       0       0       0       0       0       0       0
  7680 ;;      Totals:         5       0       0       0       0       0       0       0
  7681 ;;Total ram usage:        5 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    4
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_pad
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function _strlen
  7693  09F7                     _strlen:
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7697                           ;strlen@s stored from wreg
  7698  09F7  00F7               	movwf	strlen@s
  7699  09F8                     l3129:
  7700  09F8  0877               	movf	strlen@s,w
  7701  09F9  00F5               	movwf	??_strlen
  7702  09FA  0875               	movf	??_strlen,w
  7703  09FB  00F6               	movwf	strlen@a
  7704  09FC  2A01               	goto	l3133
  7705  09FD                     l3131:
  7706  09FD  3001               	movlw	1
  7707  09FE  00F5               	movwf	??_strlen
  7708  09FF  0875               	movf	??_strlen,w
  7709  0A00  07F7               	addwf	strlen@s,f
  7710  0A01                     l3133:
  7711  0A01  0877               	movf	strlen@s,w
  7712  0A02  0086               	movwf	6
  7713  0A03  3001               	movlw	1	; select bank2/3
  7714  0A04  0087               	movwf	7
  7715  0A05  0801               	movf	1,w
  7716  0A06  1D03               	btfss	3,2
  7717  0A07  2A09               	goto	u2411
  7718  0A08  2A0A               	goto	u2410
  7719  0A09                     u2411:
  7720  0A09  29FD               	goto	l3131
  7721  0A0A                     u2410:
  7722  0A0A                     l3135:
  7723  0A0A  0876               	movf	strlen@a,w
  7724  0A0B  0277               	subwf	strlen@s,w
  7725  0A0C  00F3               	movwf	?_strlen
  7726  0A0D  01F4               	clrf	?_strlen+1
  7727  0A0E  1BF3               	btfsc	?_strlen,7
  7728  0A0F  03F4               	decf	?_strlen+1,f
  7729  0A10                     l1241:
  7730  0A10  0008               	return
  7731  0A11                     __end_of_strlen:
  7732                           
  7733                           	psect	text7
  7734  0A4C                     __ptext7:	
  7735 ;; *************** function _fputs *****************
  7736 ;; Defined at:
  7737 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  s               1    wreg     PTR const unsigned char 
  7740 ;;		 -> dbuf(32), 
  7741 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7742 ;;		 -> sprintf@f(6), 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  7745 ;;		 -> dbuf(32), 
  7746 ;;  i               2   10[BANK0 ] int 
  7747 ;;  c               1    9[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  2    5[BANK0 ] int 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7757 ;;      Params:         0       1       0       0       0       0       0       0
  7758 ;;      Locals:         0       4       0       0       0       0       0       0
  7759 ;;      Temps:          0       3       0       0       0       0       0       0
  7760 ;;      Totals:         0       8       0       0       0       0       0       0
  7761 ;;Total ram usage:        8 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    7
  7764 ;; This function calls:
  7765 ;;		_fputc
  7766 ;; This function is called by:
  7767 ;;		_pad
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _fputs
  7773  0A4C                     _fputs:
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7777                           ;fputs@s stored from wreg
  7778  0A4C  0020               	movlb	0	; select bank0
  7779  0A4D  00AC               	movwf	fputs@s
  7780  0A4E                     l3121:
  7781  0A4E  01AA               	clrf	fputs@i
  7782  0A4F  01AB               	clrf	fputs@i+1
  7783  0A50  2A64               	goto	l3127
  7784  0A51                     l3123:
  7785  0A51  0829               	movf	fputs@c,w
  7786  0A52  00A6               	movwf	??_fputs
  7787  0A53  01A7               	clrf	??_fputs+1
  7788  0A54  0826               	movf	??_fputs,w
  7789  0A55  00F5               	movwf	fputc@c
  7790  0A56  0827               	movf	??_fputs+1,w
  7791  0A57  00F6               	movwf	fputc@c+1
  7792  0A58  0825               	movf	fputs@fp,w
  7793  0A59  00A8               	movwf	??_fputs+2
  7794  0A5A  0828               	movf	??_fputs+2,w
  7795  0A5B  00F7               	movwf	fputc@fp
  7796  0A5C  318C  2442  318A   	fcall	_fputc
  7797  0A5F                     l3125:
  7798  0A5F  3001               	movlw	1
  7799  0A60  0020               	movlb	0	; select bank0
  7800  0A61  07AA               	addwf	fputs@i,f
  7801  0A62  3000               	movlw	0
  7802  0A63  3DAB               	addwfc	fputs@i+1,f
  7803  0A64                     l3127:
  7804  0A64  082A               	movf	fputs@i,w
  7805  0A65  072C               	addwf	fputs@s,w
  7806  0A66  00A6               	movwf	??_fputs
  7807  0A67  0826               	movf	??_fputs,w
  7808  0A68  0086               	movwf	6
  7809  0A69  3001               	movlw	1	; select bank2/3
  7810  0A6A  0087               	movwf	7
  7811  0A6B  0801               	movf	1,w
  7812  0A6C  00A7               	movwf	??_fputs+1
  7813  0A6D  0827               	movf	??_fputs+1,w
  7814  0A6E  00A9               	movwf	fputs@c
  7815  0A6F  0829               	movf	fputs@c,w
  7816  0A70  1D03               	btfss	3,2
  7817  0A71  2A73               	goto	u2401
  7818  0A72  2A74               	goto	u2400
  7819  0A73                     u2401:
  7820  0A73  2A51               	goto	l3123
  7821  0A74                     u2400:
  7822  0A74                     l1235:
  7823  0A74  0008               	return
  7824  0A75                     __end_of_fputs:
  7825                           
  7826                           	psect	text8
  7827  0C42                     __ptext8:	
  7828 ;; *************** function _fputc *****************
  7829 ;; Defined at:
  7830 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  c               2    5[COMMON] int 
  7833 ;;  fp              1    7[COMMON] PTR struct _IO_FILE
  7834 ;;		 -> sprintf@f(6), 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  2    5[COMMON] int 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7846 ;;      Params:         3       0       0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0
  7848 ;;      Temps:          0       5       0       0       0       0       0       0
  7849 ;;      Totals:         3       5       0       0       0       0       0       0
  7850 ;;Total ram usage:        8 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    6
  7853 ;; This function calls:
  7854 ;;		_putch
  7855 ;; This function is called by:
  7856 ;;		_pad
  7857 ;;		_vfpfcnvrt
  7858 ;;		_fputs
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function _fputc
  7864  0C42                     _fputc:
  7865  0C42                     l3101:	
  7866                           ;incstack = 0
  7867                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7868                           
  7869  0C42  0877               	movf	fputc@fp,w
  7870  0C43  1903               	btfsc	3,2
  7871  0C44  2C46               	goto	u2341
  7872  0C45  2C47               	goto	u2340
  7873  0C46                     u2341:
  7874  0C46  2C4C               	goto	l3105
  7875  0C47                     u2340:
  7876  0C47                     l3103:
  7877  0C47  0877               	movf	fputc@fp,w
  7878  0C48  1D03               	btfss	3,2
  7879  0C49  2C4B               	goto	u2351
  7880  0C4A  2C4C               	goto	u2350
  7881  0C4B                     u2351:
  7882  0C4B  2C51               	goto	l3107
  7883  0C4C                     u2350:
  7884  0C4C                     l3105:
  7885  0C4C  0875               	movf	fputc@c,w
  7886  0C4D  3188  20FF  318C   	fcall	_putch
  7887  0C50  2C98               	goto	l1227
  7888  0C51                     l3107:
  7889  0C51  0877               	movf	fputc@fp,w
  7890  0C52  3E04               	addlw	4
  7891  0C53  0086               	movwf	6
  7892  0C54  0187               	clrf	7
  7893  0C55  0016               	moviw fsr1++
  7894  0C56  0401               	iorwf	1,w
  7895  0C57  1903               	btfsc	3,2
  7896  0C58  2C5A               	goto	u2361
  7897  0C59  2C5B               	goto	u2360
  7898  0C5A                     u2361:
  7899  0C5A  2C7A               	goto	l3111
  7900  0C5B                     u2360:
  7901  0C5B                     l3109:
  7902  0C5B  0877               	movf	fputc@fp,w
  7903  0C5C  3E04               	addlw	4
  7904  0C5D  0086               	movwf	6
  7905  0C5E  0187               	clrf	7
  7906  0C5F  3F40               	moviw [0]fsr1
  7907  0C60  0020               	movlb	0	; select bank0
  7908  0C61  00A0               	movwf	??_fputc
  7909  0C62  3F41               	moviw [1]fsr1
  7910  0C63  00A1               	movwf	??_fputc+1
  7911  0C64  0877               	movf	fputc@fp,w
  7912  0C65  3E02               	addlw	2
  7913  0C66  0086               	movwf	6
  7914  0C67  0187               	clrf	7
  7915  0C68  3F40               	moviw [0]fsr1
  7916  0C69  00A2               	movwf	??_fputc+2
  7917  0C6A  3F41               	moviw [1]fsr1
  7918  0C6B  00A3               	movwf	??_fputc+3
  7919  0C6C  0823               	movf	??_fputc+3,w
  7920  0C6D  3A80               	xorlw	128
  7921  0C6E  00A4               	movwf	??_fputc+4
  7922  0C6F  0821               	movf	??_fputc+1,w
  7923  0C70  3A80               	xorlw	128
  7924  0C71  0224               	subwf	??_fputc+4,w
  7925  0C72  1D03               	skipz
  7926  0C73  2C76               	goto	u2375
  7927  0C74  0820               	movf	??_fputc,w
  7928  0C75  0222               	subwf	??_fputc+2,w
  7929  0C76                     u2375:
  7930  0C76  1803               	skipnc
  7931  0C77  2C79               	goto	u2371
  7932  0C78  2C7A               	goto	u2370
  7933  0C79                     u2371:
  7934  0C79  2C98               	goto	l1227
  7935  0C7A                     u2370:
  7936  0C7A                     l3111:
  7937  0C7A  0877               	movf	fputc@fp,w
  7938  0C7B  3E02               	addlw	2
  7939  0C7C  0086               	movwf	6
  7940  0C7D  0187               	clrf	7
  7941  0C7E  0877               	movf	fputc@fp,w
  7942  0C7F  0084               	movwf	4
  7943  0C80  0185               	clrf	5
  7944  0C81  3F40               	moviw [0]fsr1
  7945  0C82  0700               	addwf	0,w
  7946  0C83  0020               	movlb	0	; select bank0
  7947  0C84  00A0               	movwf	??_fputc
  7948  0C85  3101               	addfsr 0,1
  7949  0C86  3F41               	moviw [1]fsr1
  7950  0C87  3D00               	addwfc	0,w
  7951  0C88  00A1               	movwf	??_fputc+1
  7952  0C89  0820               	movf	??_fputc,w
  7953  0C8A  0086               	movwf	6
  7954  0C8B  0821               	movf	??_fputc+1,w
  7955  0C8C  0087               	movwf	7
  7956  0C8D  0875               	movf	fputc@c,w
  7957  0C8E  0081               	movwf	1
  7958  0C8F                     l3113:
  7959  0C8F  0877               	movf	fputc@fp,w
  7960  0C90  3E02               	addlw	2
  7961  0C91  0086               	movwf	6
  7962  0C92  0187               	clrf	7
  7963  0C93  3001               	movlw	1
  7964  0C94  0781               	addwf	1,f
  7965  0C95  3141               	addfsr 1,1
  7966  0C96  1803               	skipnc
  7967  0C97  0A81               	incf	1,f
  7968  0C98                     l1227:
  7969  0C98  0008               	return
  7970  0C99                     __end_of_fputc:
  7971                           
  7972                           	psect	text9
  7973  08FF                     __ptext9:	
  7974 ;; *************** function _putch *****************
  7975 ;; Defined at:
  7976 ;;		line 122 in file "mcc_generated_files/eusart.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  txData          1    wreg     unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  txData          1    4[COMMON] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0, pclath, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7990 ;;      Params:         0       0       0       0       0       0       0       0
  7991 ;;      Locals:         1       0       0       0       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0
  7993 ;;      Totals:         1       0       0       0       0       0       0       0
  7994 ;;Total ram usage:        1 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    5
  7997 ;; This function calls:
  7998 ;;		_EUSART_Write
  7999 ;; This function is called by:
  8000 ;;		_fputc
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function _putch
  8006  08FF                     _putch:
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  8010                           ;putch@txData stored from wreg
  8011  08FF  00F4               	movwf	putch@txData
  8012  0900                     l3099:
  8013                           
  8014                           ;mcc_generated_files/eusart.c: 122: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 123: {;mcc_generated_files/eusart.c: 124:     EUSART_Write(txData);
  8015  0900  0874               	movf	putch@txData,w
  8016  0901  3189  2125  3188   	fcall	_EUSART_Write
  8017  0904                     l96:
  8018  0904  0008               	return
  8019  0905                     __end_of_putch:
  8020                           
  8021                           	psect	text10
  8022  0925                     __ptext10:	
  8023 ;; *************** function _EUSART_Write *****************
  8024 ;; Defined at:
  8025 ;;		line 108 in file "mcc_generated_files/eusart.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  txData          1    wreg     unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  txData          1    3[COMMON] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8039 ;;      Params:         0       0       0       0       0       0       0       0
  8040 ;;      Locals:         1       0       0       0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0
  8042 ;;      Totals:         1       0       0       0       0       0       0       0
  8043 ;;Total ram usage:        1 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    4
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_putch
  8050 ;;		_main
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _EUSART_Write
  8056  0925                     _EUSART_Write:
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _EUSART_Write: [wreg]
  8060                           ;EUSART_Write@txData stored from wreg
  8061  0925  00F3               	movwf	EUSART_Write@txData
  8062  0926                     l3095:
  8063  0926                     l87:	
  8064                           ;mcc_generated_files/eusart.c: 111:     {;mcc_generated_files/eusart.c: 112:     }
  8065                           
  8066                           
  8067                           ;mcc_generated_files/eusart.c: 110:     while(0 == PIR3bits.TXIF)
  8068  0926  002E               	movlb	14	; select bank14
  8069  0927  1E0F               	btfss	15,4	;volatile
  8070  0928  292A               	goto	u2331
  8071  0929  292B               	goto	u2330
  8072  092A                     u2331:
  8073  092A  2926               	goto	l87
  8074  092B                     u2330:
  8075  092B                     l3097:
  8076                           
  8077                           ;mcc_generated_files/eusart.c: 114:     TX1REG = txData;
  8078  092B  0873               	movf	EUSART_Write@txData,w
  8079  092C  0022               	movlb	2	; select bank2
  8080  092D  009A               	movwf	26	;volatile
  8081  092E                     l90:
  8082  092E  0008               	return
  8083  092F                     __end_of_EUSART_Write:
  8084                           
  8085                           	psect	text11
  8086  0A11                     __ptext11:	
  8087 ;; *************** function _abs *****************
  8088 ;; Defined at:
  8089 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  a               2    6[COMMON] int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2    6[COMMON] int 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8103 ;;      Params:         2       0       0       0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0
  8105 ;;      Temps:          0       2       0       0       0       0       0       0
  8106 ;;      Totals:         2       2       0       0       0       0       0       0
  8107 ;;Total ram usage:        4 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    4
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_dtoa
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _abs
  8119  0A11                     _abs:
  8120  0A11                     l3245:	
  8121                           ;incstack = 0
  8122                           ; Regs used in _abs: [wreg+status,2+status,0]
  8123                           
  8124  0A11  0877               	movf	abs@a+1,w
  8125  0A12  3A80               	xorlw	128
  8126  0A13  0020               	movlb	0	; select bank0
  8127  0A14  00B0               	movwf	??_abs
  8128  0A15  3080               	movlw	128
  8129  0A16  0230               	subwf	??_abs,w
  8130  0A17  1D03               	skipz
  8131  0A18  2A1B               	goto	u2685
  8132  0A19  3001               	movlw	1
  8133  0A1A  0276               	subwf	abs@a,w
  8134  0A1B                     u2685:
  8135  0A1B  1803               	skipnc
  8136  0A1C  2A1E               	goto	u2681
  8137  0A1D  2A1F               	goto	u2680
  8138  0A1E                     u2681:
  8139  0A1E  2A2C               	goto	l1212
  8140  0A1F                     u2680:
  8141  0A1F                     l3247:
  8142  0A1F  0976               	comf	abs@a,w
  8143  0A20  0020               	movlb	0	; select bank0
  8144  0A21  00B0               	movwf	??_abs
  8145  0A22  0977               	comf	abs@a+1,w
  8146  0A23  00B1               	movwf	??_abs+1
  8147  0A24  0AB0               	incf	??_abs,f
  8148  0A25  1903               	skipnz
  8149  0A26  0AB1               	incf	??_abs+1,f
  8150  0A27  0830               	movf	??_abs,w
  8151  0A28  00F6               	movwf	?_abs
  8152  0A29  0831               	movf	??_abs+1,w
  8153  0A2A  00F7               	movwf	?_abs+1
  8154  0A2B  2A2C               	goto	l1215
  8155  0A2C                     l1212:
  8156  0A2C                     l1215:
  8157  0A2C  0008               	return
  8158  0A2D                     __end_of_abs:
  8159                           
  8160                           	psect	text12
  8161  0F16                     __ptext12:	
  8162 ;; *************** function ___aomod *****************
  8163 ;; Defined at:
  8164 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  divisor         8    0[BANK0 ] long long 
  8167 ;;  dividend        8    8[BANK0 ] long long 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  sign            1    5[COMMON] unsigned char 
  8170 ;;  counter         1    4[COMMON] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  8    0[BANK0 ] long long 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8180 ;;      Params:         0      16       0       0       0       0       0       0
  8181 ;;      Locals:         2       0       0       0       0       0       0       0
  8182 ;;      Temps:          1       0       0       0       0       0       0       0
  8183 ;;      Totals:         3      16       0       0       0       0       0       0
  8184 ;;Total ram usage:       19 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    4
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_dtoa
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           
  8195                           ;psect for function ___aomod
  8196  0F16                     ___aomod:
  8197  0F16                     l3193:	
  8198                           ;incstack = 0
  8199                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8200                           
  8201  0F16  01F5               	clrf	___aomod@sign
  8202  0F17                     l3195:
  8203  0F17  3028               	movlw	low ___aomod@dividend
  8204  0F18  0086               	movwf	6
  8205  0F19  3000               	movlw	high ___aomod@dividend
  8206  0F1A  0087               	movwf	7
  8207  0F1B  3F47               	moviw [7]fsr1
  8208  0F1C  00F3               	movwf	??___aomod
  8209  0F1D  1FF3               	btfss	??___aomod,7
  8210  0F1E  2F20               	goto	u2541
  8211  0F1F  2F21               	goto	u2540
  8212  0F20                     u2541:
  8213  0F20  2F42               	goto	l3199
  8214  0F21                     u2540:
  8215  0F21                     l3197:
  8216  0F21  0020               	movlb	0	; select bank0
  8217  0F22  09A8               	comf	___aomod@dividend,f
  8218  0F23  09A9               	comf	___aomod@dividend+1,f
  8219  0F24  09AA               	comf	___aomod@dividend+2,f
  8220  0F25  09AB               	comf	___aomod@dividend+3,f
  8221  0F26  09AC               	comf	___aomod@dividend+4,f
  8222  0F27  09AD               	comf	___aomod@dividend+5,f
  8223  0F28  09AE               	comf	___aomod@dividend+6,f
  8224  0F29  09AF               	comf	___aomod@dividend+7,f
  8225  0F2A  0AA8               	incf	___aomod@dividend,f
  8226  0F2B  1D03               	skipz
  8227  0F2C  2F40               	goto	u255lld
  8228  0F2D  0AA9               	incf	___aomod@dividend+1,f
  8229  0F2E  1D03               	skipz
  8230  0F2F  2F40               	goto	u255lld
  8231  0F30  0AAA               	incf	___aomod@dividend+2,f
  8232  0F31  1D03               	skipz
  8233  0F32  2F40               	goto	u255lld
  8234  0F33  0AAB               	incf	___aomod@dividend+3,f
  8235  0F34  1D03               	skipz
  8236  0F35  2F40               	goto	u255lld
  8237  0F36  0AAC               	incf	___aomod@dividend+4,f
  8238  0F37  1D03               	skipz
  8239  0F38  2F40               	goto	u255lld
  8240  0F39  0AAD               	incf	___aomod@dividend+5,f
  8241  0F3A  1D03               	skipz
  8242  0F3B  2F40               	goto	u255lld
  8243  0F3C  0AAE               	incf	___aomod@dividend+6,f
  8244  0F3D  1D03               	skipz
  8245  0F3E  2F40               	goto	u255lld
  8246  0F3F  0AAF               	incf	___aomod@dividend+7,f
  8247  0F40                     u255lld:
  8248  0F40  01F5               	clrf	___aomod@sign
  8249  0F41  0AF5               	incf	___aomod@sign,f
  8250  0F42                     l3199:
  8251  0F42  3020               	movlw	low ___aomod@divisor
  8252  0F43  0086               	movwf	6
  8253  0F44  3000               	movlw	high ___aomod@divisor
  8254  0F45  0087               	movwf	7
  8255  0F46  3F47               	moviw [7]fsr1
  8256  0F47  00F3               	movwf	??___aomod
  8257  0F48  1FF3               	btfss	??___aomod,7
  8258  0F49  2F4B               	goto	u2561
  8259  0F4A  2F4C               	goto	u2560
  8260  0F4B                     u2561:
  8261  0F4B  2F6B               	goto	l3203
  8262  0F4C                     u2560:
  8263  0F4C                     l3201:
  8264  0F4C  0020               	movlb	0	; select bank0
  8265  0F4D  09A0               	comf	___aomod@divisor,f
  8266  0F4E  09A1               	comf	___aomod@divisor+1,f
  8267  0F4F  09A2               	comf	___aomod@divisor+2,f
  8268  0F50  09A3               	comf	___aomod@divisor+3,f
  8269  0F51  09A4               	comf	___aomod@divisor+4,f
  8270  0F52  09A5               	comf	___aomod@divisor+5,f
  8271  0F53  09A6               	comf	___aomod@divisor+6,f
  8272  0F54  09A7               	comf	___aomod@divisor+7,f
  8273  0F55  0AA0               	incf	___aomod@divisor,f
  8274  0F56  1D03               	skipz
  8275  0F57  2F6B               	goto	u257lld
  8276  0F58  0AA1               	incf	___aomod@divisor+1,f
  8277  0F59  1D03               	skipz
  8278  0F5A  2F6B               	goto	u257lld
  8279  0F5B  0AA2               	incf	___aomod@divisor+2,f
  8280  0F5C  1D03               	skipz
  8281  0F5D  2F6B               	goto	u257lld
  8282  0F5E  0AA3               	incf	___aomod@divisor+3,f
  8283  0F5F  1D03               	skipz
  8284  0F60  2F6B               	goto	u257lld
  8285  0F61  0AA4               	incf	___aomod@divisor+4,f
  8286  0F62  1D03               	skipz
  8287  0F63  2F6B               	goto	u257lld
  8288  0F64  0AA5               	incf	___aomod@divisor+5,f
  8289  0F65  1D03               	skipz
  8290  0F66  2F6B               	goto	u257lld
  8291  0F67  0AA6               	incf	___aomod@divisor+6,f
  8292  0F68  1D03               	skipz
  8293  0F69  2F6B               	goto	u257lld
  8294  0F6A  0AA7               	incf	___aomod@divisor+7,f
  8295  0F6B                     u257lld:
  8296  0F6B                     l3203:
  8297  0F6B  0020               	movlb	0	; select bank0
  8298  0F6C  0820               	movf	___aomod@divisor,w
  8299  0F6D  0421               	iorwf	___aomod@divisor+1,w
  8300  0F6E  0422               	iorwf	___aomod@divisor+2,w
  8301  0F6F  0423               	iorwf	___aomod@divisor+3,w
  8302  0F70  0424               	iorwf	___aomod@divisor+4,w
  8303  0F71  0425               	iorwf	___aomod@divisor+5,w
  8304  0F72  0426               	iorwf	___aomod@divisor+6,w
  8305  0F73  0427               	iorwf	___aomod@divisor+7,w
  8306  0F74  1903               	skipnz
  8307  0F75  2F77               	goto	u2581
  8308  0F76  2F78               	goto	u2580
  8309  0F77                     u2581:
  8310  0F77  2FCB               	goto	l3219
  8311  0F78                     u2580:
  8312  0F78                     l3205:
  8313  0F78  01F4               	clrf	___aomod@counter
  8314  0F79  0AF4               	incf	___aomod@counter,f
  8315  0F7A  2F87               	goto	l3211
  8316  0F7B                     l3207:
  8317  0F7B  35A0               	lslf	___aomod@divisor,f
  8318  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  8319  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  8320  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  8321  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  8322  0F80  0DA5               	rlf	___aomod@divisor+5,f
  8323  0F81  0DA6               	rlf	___aomod@divisor+6,f
  8324  0F82  0DA7               	rlf	___aomod@divisor+7,f
  8325  0F83                     l3209:
  8326  0F83  3001               	movlw	1
  8327  0F84  00F3               	movwf	??___aomod
  8328  0F85  0873               	movf	??___aomod,w
  8329  0F86  07F4               	addwf	___aomod@counter,f
  8330  0F87                     l3211:
  8331  0F87  1FA7               	btfss	___aomod@divisor+7,7
  8332  0F88  2F8A               	goto	u2591
  8333  0F89  2F8B               	goto	u2590
  8334  0F8A                     u2591:
  8335  0F8A  2F7B               	goto	l3207
  8336  0F8B                     u2590:
  8337  0F8B                     l3213:
  8338  0F8B  0827               	movf	___aomod@divisor+7,w
  8339  0F8C  022F               	subwf	___aomod@dividend+7,w
  8340  0F8D  1D03               	skipz
  8341  0F8E  2FA9               	goto	u2605
  8342  0F8F  0826               	movf	___aomod@divisor+6,w
  8343  0F90  022E               	subwf	___aomod@dividend+6,w
  8344  0F91  1D03               	skipz
  8345  0F92  2FA9               	goto	u2605
  8346  0F93  0825               	movf	___aomod@divisor+5,w
  8347  0F94  022D               	subwf	___aomod@dividend+5,w
  8348  0F95  1D03               	skipz
  8349  0F96  2FA9               	goto	u2605
  8350  0F97  0824               	movf	___aomod@divisor+4,w
  8351  0F98  022C               	subwf	___aomod@dividend+4,w
  8352  0F99  1D03               	skipz
  8353  0F9A  2FA9               	goto	u2605
  8354  0F9B  0823               	movf	___aomod@divisor+3,w
  8355  0F9C  022B               	subwf	___aomod@dividend+3,w
  8356  0F9D  1D03               	skipz
  8357  0F9E  2FA9               	goto	u2605
  8358  0F9F  0822               	movf	___aomod@divisor+2,w
  8359  0FA0  022A               	subwf	___aomod@dividend+2,w
  8360  0FA1  1D03               	skipz
  8361  0FA2  2FA9               	goto	u2605
  8362  0FA3  0821               	movf	___aomod@divisor+1,w
  8363  0FA4  0229               	subwf	___aomod@dividend+1,w
  8364  0FA5  1D03               	skipz
  8365  0FA6  2FA9               	goto	u2605
  8366  0FA7  0820               	movf	___aomod@divisor,w
  8367  0FA8  0228               	subwf	___aomod@dividend,w
  8368  0FA9                     u2605:
  8369  0FA9  1C03               	skipc
  8370  0FAA  2FAC               	goto	u2601
  8371  0FAB  2FAD               	goto	u2600
  8372  0FAC                     u2601:
  8373  0FAC  2FBD               	goto	l3217
  8374  0FAD                     u2600:
  8375  0FAD                     l3215:
  8376  0FAD  0820               	movf	___aomod@divisor,w
  8377  0FAE  02A8               	subwf	___aomod@dividend,f
  8378  0FAF  0821               	movf	___aomod@divisor+1,w
  8379  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  8380  0FB1  0822               	movf	___aomod@divisor+2,w
  8381  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  8382  0FB3  0823               	movf	___aomod@divisor+3,w
  8383  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  8384  0FB5  0824               	movf	___aomod@divisor+4,w
  8385  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  8386  0FB7  0825               	movf	___aomod@divisor+5,w
  8387  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  8388  0FB9  0826               	movf	___aomod@divisor+6,w
  8389  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  8390  0FBB  0827               	movf	___aomod@divisor+7,w
  8391  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  8392  0FBD                     l3217:
  8393  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  8394  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  8395  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  8396  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  8397  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  8398  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  8399  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  8400  0FC4  0CA0               	rrf	___aomod@divisor,f
  8401  0FC5  3001               	movlw	1
  8402  0FC6  02F4               	subwf	___aomod@counter,f
  8403  0FC7  1D03               	btfss	3,2
  8404  0FC8  2FCA               	goto	u2611
  8405  0FC9  2FCB               	goto	u2610
  8406  0FCA                     u2611:
  8407  0FCA  2F8B               	goto	l3213
  8408  0FCB                     u2610:
  8409  0FCB                     l3219:
  8410  0FCB  0875               	movf	___aomod@sign,w
  8411  0FCC  1903               	btfsc	3,2
  8412  0FCD  2FCF               	goto	u2621
  8413  0FCE  2FD0               	goto	u2620
  8414  0FCF                     u2621:
  8415  0FCF  2FEE               	goto	l786
  8416  0FD0                     u2620:
  8417  0FD0                     l3221:
  8418  0FD0  09A8               	comf	___aomod@dividend,f
  8419  0FD1  09A9               	comf	___aomod@dividend+1,f
  8420  0FD2  09AA               	comf	___aomod@dividend+2,f
  8421  0FD3  09AB               	comf	___aomod@dividend+3,f
  8422  0FD4  09AC               	comf	___aomod@dividend+4,f
  8423  0FD5  09AD               	comf	___aomod@dividend+5,f
  8424  0FD6  09AE               	comf	___aomod@dividend+6,f
  8425  0FD7  09AF               	comf	___aomod@dividend+7,f
  8426  0FD8  0AA8               	incf	___aomod@dividend,f
  8427  0FD9  1D03               	skipz
  8428  0FDA  2FEE               	goto	u263lld
  8429  0FDB  0AA9               	incf	___aomod@dividend+1,f
  8430  0FDC  1D03               	skipz
  8431  0FDD  2FEE               	goto	u263lld
  8432  0FDE  0AAA               	incf	___aomod@dividend+2,f
  8433  0FDF  1D03               	skipz
  8434  0FE0  2FEE               	goto	u263lld
  8435  0FE1  0AAB               	incf	___aomod@dividend+3,f
  8436  0FE2  1D03               	skipz
  8437  0FE3  2FEE               	goto	u263lld
  8438  0FE4  0AAC               	incf	___aomod@dividend+4,f
  8439  0FE5  1D03               	skipz
  8440  0FE6  2FEE               	goto	u263lld
  8441  0FE7  0AAD               	incf	___aomod@dividend+5,f
  8442  0FE8  1D03               	skipz
  8443  0FE9  2FEE               	goto	u263lld
  8444  0FEA  0AAE               	incf	___aomod@dividend+6,f
  8445  0FEB  1D03               	skipz
  8446  0FEC  2FEE               	goto	u263lld
  8447  0FED  0AAF               	incf	___aomod@dividend+7,f
  8448  0FEE                     u263lld:
  8449  0FEE                     l786:
  8450  0FEE  0020               	movlb	0	; select bank0
  8451  0FEF  0828               	movf	___aomod@dividend,w
  8452  0FF0  00A0               	movwf	?___aomod
  8453  0FF1  0829               	movf	___aomod@dividend+1,w
  8454  0FF2  00A1               	movwf	?___aomod+1
  8455  0FF3  082A               	movf	___aomod@dividend+2,w
  8456  0FF4  00A2               	movwf	?___aomod+2
  8457  0FF5  082B               	movf	___aomod@dividend+3,w
  8458  0FF6  00A3               	movwf	?___aomod+3
  8459  0FF7  082C               	movf	___aomod@dividend+4,w
  8460  0FF8  00A4               	movwf	?___aomod+4
  8461  0FF9  082D               	movf	___aomod@dividend+5,w
  8462  0FFA  00A5               	movwf	?___aomod+5
  8463  0FFB  082E               	movf	___aomod@dividend+6,w
  8464  0FFC  00A6               	movwf	?___aomod+6
  8465  0FFD  082F               	movf	___aomod@dividend+7,w
  8466  0FFE  00A7               	movwf	?___aomod+7
  8467  0FFF                     l787:
  8468  0FFF  0008               	return
  8469  1000                     __end_of___aomod:
  8470                           
  8471                           	psect	text13
  8472  06E4                     __ptext13:	
  8473 ;; *************** function ___aodiv *****************
  8474 ;; Defined at:
  8475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  divisor         8    0[BANK0 ] long long 
  8478 ;;  dividend        8    8[BANK0 ] long long 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  quotient        8   18[BANK0 ] long long 
  8481 ;;  sign            1   17[BANK0 ] unsigned char 
  8482 ;;  counter         1   16[BANK0 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  8    0[BANK0 ] long long 
  8485 ;; Registers used:
  8486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8492 ;;      Params:         0      16       0       0       0       0       0       0
  8493 ;;      Locals:         0      10       0       0       0       0       0       0
  8494 ;;      Temps:          1       0       0       0       0       0       0       0
  8495 ;;      Totals:         1      26       0       0       0       0       0       0
  8496 ;;Total ram usage:       27 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    4
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_dtoa
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function ___aodiv
  8508  06E4                     ___aodiv:
  8509  06E4                     l3155:	
  8510                           ;incstack = 0
  8511                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8512                           
  8513  06E4  0020               	movlb	0	; select bank0
  8514  06E5  01B1               	clrf	___aodiv@sign
  8515  06E6                     l3157:
  8516  06E6  3020               	movlw	low ___aodiv@divisor
  8517  06E7  0086               	movwf	6
  8518  06E8  3000               	movlw	high ___aodiv@divisor
  8519  06E9  0087               	movwf	7
  8520  06EA  3F47               	moviw [7]fsr1
  8521  06EB  00F3               	movwf	??___aodiv
  8522  06EC  1FF3               	btfss	??___aodiv,7
  8523  06ED  2EEF               	goto	u2431
  8524  06EE  2EF0               	goto	u2430
  8525  06EF                     u2431:
  8526  06EF  2F12               	goto	l3161
  8527  06F0                     u2430:
  8528  06F0                     l3159:
  8529  06F0  0020               	movlb	0	; select bank0
  8530  06F1  09A0               	comf	___aodiv@divisor,f
  8531  06F2  09A1               	comf	___aodiv@divisor+1,f
  8532  06F3  09A2               	comf	___aodiv@divisor+2,f
  8533  06F4  09A3               	comf	___aodiv@divisor+3,f
  8534  06F5  09A4               	comf	___aodiv@divisor+4,f
  8535  06F6  09A5               	comf	___aodiv@divisor+5,f
  8536  06F7  09A6               	comf	___aodiv@divisor+6,f
  8537  06F8  09A7               	comf	___aodiv@divisor+7,f
  8538  06F9  0AA0               	incf	___aodiv@divisor,f
  8539  06FA  1D03               	skipz
  8540  06FB  2F0F               	goto	u244lld
  8541  06FC  0AA1               	incf	___aodiv@divisor+1,f
  8542  06FD  1D03               	skipz
  8543  06FE  2F0F               	goto	u244lld
  8544  06FF  0AA2               	incf	___aodiv@divisor+2,f
  8545  0700  1D03               	skipz
  8546  0701  2F0F               	goto	u244lld
  8547  0702  0AA3               	incf	___aodiv@divisor+3,f
  8548  0703  1D03               	skipz
  8549  0704  2F0F               	goto	u244lld
  8550  0705  0AA4               	incf	___aodiv@divisor+4,f
  8551  0706  1D03               	skipz
  8552  0707  2F0F               	goto	u244lld
  8553  0708  0AA5               	incf	___aodiv@divisor+5,f
  8554  0709  1D03               	skipz
  8555  070A  2F0F               	goto	u244lld
  8556  070B  0AA6               	incf	___aodiv@divisor+6,f
  8557  070C  1D03               	skipz
  8558  070D  2F0F               	goto	u244lld
  8559  070E  0AA7               	incf	___aodiv@divisor+7,f
  8560  070F                     u244lld:
  8561  070F  0020               	movlb	0	; select bank0
  8562  0710  01B1               	clrf	___aodiv@sign
  8563  0711  0AB1               	incf	___aodiv@sign,f
  8564  0712                     l3161:
  8565  0712  3028               	movlw	low ___aodiv@dividend
  8566  0713  0086               	movwf	6
  8567  0714  3000               	movlw	high ___aodiv@dividend
  8568  0715  0087               	movwf	7
  8569  0716  3F47               	moviw [7]fsr1
  8570  0717  00F3               	movwf	??___aodiv
  8571  0718  1FF3               	btfss	??___aodiv,7
  8572  0719  2F1B               	goto	u2451
  8573  071A  2F1C               	goto	u2450
  8574  071B                     u2451:
  8575  071B  2F40               	goto	l3167
  8576  071C                     u2450:
  8577  071C                     l3163:
  8578  071C  0020               	movlb	0	; select bank0
  8579  071D  09A8               	comf	___aodiv@dividend,f
  8580  071E  09A9               	comf	___aodiv@dividend+1,f
  8581  071F  09AA               	comf	___aodiv@dividend+2,f
  8582  0720  09AB               	comf	___aodiv@dividend+3,f
  8583  0721  09AC               	comf	___aodiv@dividend+4,f
  8584  0722  09AD               	comf	___aodiv@dividend+5,f
  8585  0723  09AE               	comf	___aodiv@dividend+6,f
  8586  0724  09AF               	comf	___aodiv@dividend+7,f
  8587  0725  0AA8               	incf	___aodiv@dividend,f
  8588  0726  1D03               	skipz
  8589  0727  2F3B               	goto	u246lld
  8590  0728  0AA9               	incf	___aodiv@dividend+1,f
  8591  0729  1D03               	skipz
  8592  072A  2F3B               	goto	u246lld
  8593  072B  0AAA               	incf	___aodiv@dividend+2,f
  8594  072C  1D03               	skipz
  8595  072D  2F3B               	goto	u246lld
  8596  072E  0AAB               	incf	___aodiv@dividend+3,f
  8597  072F  1D03               	skipz
  8598  0730  2F3B               	goto	u246lld
  8599  0731  0AAC               	incf	___aodiv@dividend+4,f
  8600  0732  1D03               	skipz
  8601  0733  2F3B               	goto	u246lld
  8602  0734  0AAD               	incf	___aodiv@dividend+5,f
  8603  0735  1D03               	skipz
  8604  0736  2F3B               	goto	u246lld
  8605  0737  0AAE               	incf	___aodiv@dividend+6,f
  8606  0738  1D03               	skipz
  8607  0739  2F3B               	goto	u246lld
  8608  073A  0AAF               	incf	___aodiv@dividend+7,f
  8609  073B                     u246lld:
  8610  073B                     l3165:
  8611  073B  3001               	movlw	1
  8612  073C  00F3               	movwf	??___aodiv
  8613  073D  0873               	movf	??___aodiv,w
  8614  073E  0020               	movlb	0	; select bank0
  8615  073F  06B1               	xorwf	___aodiv@sign,f
  8616  0740                     l3167:
  8617  0740  3032               	movlw	low ___aodiv@quotient
  8618  0741  0086               	movwf	6
  8619  0742  3000               	movlw	high ___aodiv@quotient
  8620  0743  0087               	movwf	7
  8621  0744  3008               	movlw	8
  8622  0745  00F3               	movwf	??___aodiv
  8623  0746  3000               	movlw	0
  8624  0747                     u2470:
  8625  0747  001E               	movwi fsr1++
  8626  0748  0BF3               	decfsz	??___aodiv,f
  8627  0749  2F47               	goto	u2470
  8628  074A                     l3169:
  8629  074A  0020               	movlb	0	; select bank0
  8630  074B  0820               	movf	___aodiv@divisor,w
  8631  074C  0421               	iorwf	___aodiv@divisor+1,w
  8632  074D  0422               	iorwf	___aodiv@divisor+2,w
  8633  074E  0423               	iorwf	___aodiv@divisor+3,w
  8634  074F  0424               	iorwf	___aodiv@divisor+4,w
  8635  0750  0425               	iorwf	___aodiv@divisor+5,w
  8636  0751  0426               	iorwf	___aodiv@divisor+6,w
  8637  0752  0427               	iorwf	___aodiv@divisor+7,w
  8638  0753  1903               	skipnz
  8639  0754  2F56               	goto	u2481
  8640  0755  2F57               	goto	u2480
  8641  0756                     u2481:
  8642  0756  2FB3               	goto	l3189
  8643  0757                     u2480:
  8644  0757                     l3171:
  8645  0757  01B0               	clrf	___aodiv@counter
  8646  0758  0AB0               	incf	___aodiv@counter,f
  8647  0759  2F66               	goto	l3177
  8648  075A                     l3173:
  8649  075A  35A0               	lslf	___aodiv@divisor,f
  8650  075B  0DA1               	rlf	___aodiv@divisor+1,f
  8651  075C  0DA2               	rlf	___aodiv@divisor+2,f
  8652  075D  0DA3               	rlf	___aodiv@divisor+3,f
  8653  075E  0DA4               	rlf	___aodiv@divisor+4,f
  8654  075F  0DA5               	rlf	___aodiv@divisor+5,f
  8655  0760  0DA6               	rlf	___aodiv@divisor+6,f
  8656  0761  0DA7               	rlf	___aodiv@divisor+7,f
  8657  0762                     l3175:
  8658  0762  3001               	movlw	1
  8659  0763  00F3               	movwf	??___aodiv
  8660  0764  0873               	movf	??___aodiv,w
  8661  0765  07B0               	addwf	___aodiv@counter,f
  8662  0766                     l3177:
  8663  0766  1FA7               	btfss	___aodiv@divisor+7,7
  8664  0767  2F69               	goto	u2491
  8665  0768  2F6A               	goto	u2490
  8666  0769                     u2491:
  8667  0769  2F5A               	goto	l3173
  8668  076A                     u2490:
  8669  076A                     l3179:
  8670  076A  35B2               	lslf	___aodiv@quotient,f
  8671  076B  0DB3               	rlf	___aodiv@quotient+1,f
  8672  076C  0DB4               	rlf	___aodiv@quotient+2,f
  8673  076D  0DB5               	rlf	___aodiv@quotient+3,f
  8674  076E  0DB6               	rlf	___aodiv@quotient+4,f
  8675  076F  0DB7               	rlf	___aodiv@quotient+5,f
  8676  0770  0DB8               	rlf	___aodiv@quotient+6,f
  8677  0771  0DB9               	rlf	___aodiv@quotient+7,f
  8678  0772                     l3181:
  8679  0772  0827               	movf	___aodiv@divisor+7,w
  8680  0773  022F               	subwf	___aodiv@dividend+7,w
  8681  0774  1D03               	skipz
  8682  0775  2F90               	goto	u2505
  8683  0776  0826               	movf	___aodiv@divisor+6,w
  8684  0777  022E               	subwf	___aodiv@dividend+6,w
  8685  0778  1D03               	skipz
  8686  0779  2F90               	goto	u2505
  8687  077A  0825               	movf	___aodiv@divisor+5,w
  8688  077B  022D               	subwf	___aodiv@dividend+5,w
  8689  077C  1D03               	skipz
  8690  077D  2F90               	goto	u2505
  8691  077E  0824               	movf	___aodiv@divisor+4,w
  8692  077F  022C               	subwf	___aodiv@dividend+4,w
  8693  0780  1D03               	skipz
  8694  0781  2F90               	goto	u2505
  8695  0782  0823               	movf	___aodiv@divisor+3,w
  8696  0783  022B               	subwf	___aodiv@dividend+3,w
  8697  0784  1D03               	skipz
  8698  0785  2F90               	goto	u2505
  8699  0786  0822               	movf	___aodiv@divisor+2,w
  8700  0787  022A               	subwf	___aodiv@dividend+2,w
  8701  0788  1D03               	skipz
  8702  0789  2F90               	goto	u2505
  8703  078A  0821               	movf	___aodiv@divisor+1,w
  8704  078B  0229               	subwf	___aodiv@dividend+1,w
  8705  078C  1D03               	skipz
  8706  078D  2F90               	goto	u2505
  8707  078E  0820               	movf	___aodiv@divisor,w
  8708  078F  0228               	subwf	___aodiv@dividend,w
  8709  0790                     u2505:
  8710  0790  1C03               	skipc
  8711  0791  2F93               	goto	u2501
  8712  0792  2F94               	goto	u2500
  8713  0793                     u2501:
  8714  0793  2FA5               	goto	l3187
  8715  0794                     u2500:
  8716  0794                     l3183:
  8717  0794  0820               	movf	___aodiv@divisor,w
  8718  0795  02A8               	subwf	___aodiv@dividend,f
  8719  0796  0821               	movf	___aodiv@divisor+1,w
  8720  0797  3BA9               	subwfb	___aodiv@dividend+1,f
  8721  0798  0822               	movf	___aodiv@divisor+2,w
  8722  0799  3BAA               	subwfb	___aodiv@dividend+2,f
  8723  079A  0823               	movf	___aodiv@divisor+3,w
  8724  079B  3BAB               	subwfb	___aodiv@dividend+3,f
  8725  079C  0824               	movf	___aodiv@divisor+4,w
  8726  079D  3BAC               	subwfb	___aodiv@dividend+4,f
  8727  079E  0825               	movf	___aodiv@divisor+5,w
  8728  079F  3BAD               	subwfb	___aodiv@dividend+5,f
  8729  07A0  0826               	movf	___aodiv@divisor+6,w
  8730  07A1  3BAE               	subwfb	___aodiv@dividend+6,f
  8731  07A2  0827               	movf	___aodiv@divisor+7,w
  8732  07A3  3BAF               	subwfb	___aodiv@dividend+7,f
  8733  07A4                     l3185:
  8734  07A4  1432               	bsf	___aodiv@quotient,0
  8735  07A5                     l3187:
  8736  07A5  36A7               	lsrf	___aodiv@divisor+7,f
  8737  07A6  0CA6               	rrf	___aodiv@divisor+6,f
  8738  07A7  0CA5               	rrf	___aodiv@divisor+5,f
  8739  07A8  0CA4               	rrf	___aodiv@divisor+4,f
  8740  07A9  0CA3               	rrf	___aodiv@divisor+3,f
  8741  07AA  0CA2               	rrf	___aodiv@divisor+2,f
  8742  07AB  0CA1               	rrf	___aodiv@divisor+1,f
  8743  07AC  0CA0               	rrf	___aodiv@divisor,f
  8744  07AD  3001               	movlw	1
  8745  07AE  02B0               	subwf	___aodiv@counter,f
  8746  07AF  1D03               	btfss	3,2
  8747  07B0  2FB2               	goto	u2511
  8748  07B1  2FB3               	goto	u2510
  8749  07B2                     u2511:
  8750  07B2  2F6A               	goto	l3179
  8751  07B3                     u2510:
  8752  07B3                     l3189:
  8753  07B3  0831               	movf	___aodiv@sign,w
  8754  07B4  1903               	btfsc	3,2
  8755  07B5  2FB7               	goto	u2521
  8756  07B6  2FB8               	goto	u2520
  8757  07B7                     u2521:
  8758  07B7  2FD6               	goto	l773
  8759  07B8                     u2520:
  8760  07B8                     l3191:
  8761  07B8  09B2               	comf	___aodiv@quotient,f
  8762  07B9  09B3               	comf	___aodiv@quotient+1,f
  8763  07BA  09B4               	comf	___aodiv@quotient+2,f
  8764  07BB  09B5               	comf	___aodiv@quotient+3,f
  8765  07BC  09B6               	comf	___aodiv@quotient+4,f
  8766  07BD  09B7               	comf	___aodiv@quotient+5,f
  8767  07BE  09B8               	comf	___aodiv@quotient+6,f
  8768  07BF  09B9               	comf	___aodiv@quotient+7,f
  8769  07C0  0AB2               	incf	___aodiv@quotient,f
  8770  07C1  1D03               	skipz
  8771  07C2  2FD6               	goto	u253lld
  8772  07C3  0AB3               	incf	___aodiv@quotient+1,f
  8773  07C4  1D03               	skipz
  8774  07C5  2FD6               	goto	u253lld
  8775  07C6  0AB4               	incf	___aodiv@quotient+2,f
  8776  07C7  1D03               	skipz
  8777  07C8  2FD6               	goto	u253lld
  8778  07C9  0AB5               	incf	___aodiv@quotient+3,f
  8779  07CA  1D03               	skipz
  8780  07CB  2FD6               	goto	u253lld
  8781  07CC  0AB6               	incf	___aodiv@quotient+4,f
  8782  07CD  1D03               	skipz
  8783  07CE  2FD6               	goto	u253lld
  8784  07CF  0AB7               	incf	___aodiv@quotient+5,f
  8785  07D0  1D03               	skipz
  8786  07D1  2FD6               	goto	u253lld
  8787  07D2  0AB8               	incf	___aodiv@quotient+6,f
  8788  07D3  1D03               	skipz
  8789  07D4  2FD6               	goto	u253lld
  8790  07D5  0AB9               	incf	___aodiv@quotient+7,f
  8791  07D6                     u253lld:
  8792  07D6                     l773:
  8793  07D6  0020               	movlb	0	; select bank0
  8794  07D7  0832               	movf	___aodiv@quotient,w
  8795  07D8  00A0               	movwf	?___aodiv
  8796  07D9  0833               	movf	___aodiv@quotient+1,w
  8797  07DA  00A1               	movwf	?___aodiv+1
  8798  07DB  0834               	movf	___aodiv@quotient+2,w
  8799  07DC  00A2               	movwf	?___aodiv+2
  8800  07DD  0835               	movf	___aodiv@quotient+3,w
  8801  07DE  00A3               	movwf	?___aodiv+3
  8802  07DF  0836               	movf	___aodiv@quotient+4,w
  8803  07E0  00A4               	movwf	?___aodiv+4
  8804  07E1  0837               	movf	___aodiv@quotient+5,w
  8805  07E2  00A5               	movwf	?___aodiv+5
  8806  07E3  0838               	movf	___aodiv@quotient+6,w
  8807  07E4  00A6               	movwf	?___aodiv+6
  8808  07E5  0839               	movf	___aodiv@quotient+7,w
  8809  07E6  00A7               	movwf	?___aodiv+7
  8810  07E7                     l774:
  8811  07E7  0008               	return
  8812  07E8                     __end_of___aodiv:
  8813                           
  8814                           	psect	text14
  8815  0B5A                     __ptext14:	
  8816 ;; *************** function ___lwmod *****************
  8817 ;; Defined at:
  8818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  divisor         2    3[COMMON] unsigned int 
  8821 ;;  dividend        2    5[COMMON] unsigned int 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  counter         1    0[BANK0 ] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  2    3[COMMON] unsigned int 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8833 ;;      Params:         4       0       0       0       0       0       0       0
  8834 ;;      Locals:         0       1       0       0       0       0       0       0
  8835 ;;      Temps:          1       0       0       0       0       0       0       0
  8836 ;;      Totals:         5       1       0       0       0       0       0       0
  8837 ;;Total ram usage:        6 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    4
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_main
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           
  8848                           ;psect for function ___lwmod
  8849  0B5A                     ___lwmod:
  8850  0B5A                     l3693:	
  8851                           ;incstack = 0
  8852                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8853                           
  8854  0B5A  0873               	movf	___lwmod@divisor,w
  8855  0B5B  0474               	iorwf	___lwmod@divisor+1,w
  8856  0B5C  1903               	btfsc	3,2
  8857  0B5D  2B5F               	goto	u3121
  8858  0B5E  2B60               	goto	u3120
  8859  0B5F                     u3121:
  8860  0B5F  2B8A               	goto	l3711
  8861  0B60                     u3120:
  8862  0B60                     l3695:
  8863  0B60  0020               	movlb	0	; select bank0
  8864  0B61  01A0               	clrf	___lwmod@counter
  8865  0B62  0AA0               	incf	___lwmod@counter,f
  8866  0B63  2B6D               	goto	l3701
  8867  0B64                     l3697:
  8868  0B64  3001               	movlw	1
  8869  0B65                     u3135:
  8870  0B65  35F3               	lslf	___lwmod@divisor,f
  8871  0B66  0DF4               	rlf	___lwmod@divisor+1,f
  8872  0B67  0B89               	decfsz	9,f
  8873  0B68  2B65               	goto	u3135
  8874  0B69                     l3699:
  8875  0B69  3001               	movlw	1
  8876  0B6A  00F7               	movwf	??___lwmod
  8877  0B6B  0877               	movf	??___lwmod,w
  8878  0B6C  07A0               	addwf	___lwmod@counter,f
  8879  0B6D                     l3701:
  8880  0B6D  1FF4               	btfss	___lwmod@divisor+1,7
  8881  0B6E  2B70               	goto	u3141
  8882  0B6F  2B71               	goto	u3140
  8883  0B70                     u3141:
  8884  0B70  2B64               	goto	l3697
  8885  0B71                     u3140:
  8886  0B71                     l3703:
  8887  0B71  0874               	movf	___lwmod@divisor+1,w
  8888  0B72  0276               	subwf	___lwmod@dividend+1,w
  8889  0B73  1D03               	skipz
  8890  0B74  2B77               	goto	u3155
  8891  0B75  0873               	movf	___lwmod@divisor,w
  8892  0B76  0275               	subwf	___lwmod@dividend,w
  8893  0B77                     u3155:
  8894  0B77  1C03               	skipc
  8895  0B78  2B7A               	goto	u3151
  8896  0B79  2B7B               	goto	u3150
  8897  0B7A                     u3151:
  8898  0B7A  2B7F               	goto	l3707
  8899  0B7B                     u3150:
  8900  0B7B                     l3705:
  8901  0B7B  0873               	movf	___lwmod@divisor,w
  8902  0B7C  02F5               	subwf	___lwmod@dividend,f
  8903  0B7D  0874               	movf	___lwmod@divisor+1,w
  8904  0B7E  3BF6               	subwfb	___lwmod@dividend+1,f
  8905  0B7F                     l3707:
  8906  0B7F  3001               	movlw	1
  8907  0B80                     u3165:
  8908  0B80  36F4               	lsrf	___lwmod@divisor+1,f
  8909  0B81  0CF3               	rrf	___lwmod@divisor,f
  8910  0B82  0B89               	decfsz	9,f
  8911  0B83  2B80               	goto	u3165
  8912  0B84                     l3709:
  8913  0B84  3001               	movlw	1
  8914  0B85  02A0               	subwf	___lwmod@counter,f
  8915  0B86  1D03               	btfss	3,2
  8916  0B87  2B89               	goto	u3171
  8917  0B88  2B8A               	goto	u3170
  8918  0B89                     u3171:
  8919  0B89  2B71               	goto	l3703
  8920  0B8A                     u3170:
  8921  0B8A                     l3711:
  8922  0B8A  0876               	movf	___lwmod@dividend+1,w
  8923  0B8B  00F4               	movwf	?___lwmod+1
  8924  0B8C  0875               	movf	___lwmod@dividend,w
  8925  0B8D  00F3               	movwf	?___lwmod
  8926  0B8E                     l963:
  8927  0B8E  0008               	return
  8928  0B8F                     __end_of___lwmod:
  8929                           
  8930                           	psect	text15
  8931  0905                     __ptext15:	
  8932 ;; *************** function _TMR0_ReadTimer *****************
  8933 ;; Defined at:
  8934 ;;		line 92 in file "mcc_generated_files/tmr0.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  readVal         1    4[COMMON] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      unsigned char 
  8941 ;; Registers used:
  8942 ;;		wreg
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8948 ;;      Params:         0       0       0       0       0       0       0       0
  8949 ;;      Locals:         1       0       0       0       0       0       0       0
  8950 ;;      Temps:          1       0       0       0       0       0       0       0
  8951 ;;      Totals:         2       0       0       0       0       0       0       0
  8952 ;;Total ram usage:        2 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    4
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_main
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _TMR0_ReadTimer
  8964  0905                     _TMR0_ReadTimer:
  8965  0905                     l3573:	
  8966                           ;incstack = 0
  8967                           ; Regs used in _TMR0_ReadTimer: [wreg]
  8968                           
  8969                           
  8970                           ;mcc_generated_files/tmr0.c: 94:     uint8_t readVal;;mcc_generated_files/tmr0.c: 97:   
      +                            readVal = TMR0L;
  8971  0905  0020               	movlb	0	; select bank0
  8972  0906  081C               	movf	28,w	;volatile
  8973  0907  00F3               	movwf	??_TMR0_ReadTimer
  8974  0908  0873               	movf	??_TMR0_ReadTimer,w
  8975  0909  00F4               	movwf	TMR0_ReadTimer@readVal
  8976                           
  8977                           ;mcc_generated_files/tmr0.c: 99:     return readVal;
  8978  090A  0874               	movf	TMR0_ReadTimer@readVal,w
  8979  090B                     l274:
  8980  090B  0008               	return
  8981  090C                     __end_of_TMR0_ReadTimer:
  8982                           
  8983                           	psect	text16
  8984  0999                     __ptext16:	
  8985 ;; *************** function _SYSTEM_Initialize *****************
  8986 ;; Defined at:
  8987 ;;		line 5 in file "mcc_generated_files/mcc.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0, pclath, cstack
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9001 ;;      Params:         0       0       0       0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    6
  9008 ;; This function calls:
  9009 ;;		_EUSART_Initialize
  9010 ;;		_OSCILLATOR_Initialize
  9011 ;;		_PIN_MANAGER_Initialize
  9012 ;;		_PMD_Initialize
  9013 ;;		_TMR0_Initialize
  9014 ;;		_master_init
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _SYSTEM_Initialize
  9022  0999                     _SYSTEM_Initialize:
  9023  0999                     l3561:	
  9024                           ;incstack = 0
  9025                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9026                           
  9027                           
  9028                           ;mcc_generated_files/mcc.c: 7:     PMD_Initialize();
  9029  0999  3189  210C  3189   	fcall	_PMD_Initialize
  9030  099C                     l3563:
  9031                           
  9032                           ;mcc_generated_files/mcc.c: 8:     PIN_MANAGER_Initialize();
  9033  099C  318B  238F  3189   	fcall	_PIN_MANAGER_Initialize
  9034  099F                     l3565:
  9035                           
  9036                           ;mcc_generated_files/mcc.c: 9:     OSCILLATOR_Initialize();
  9037  099F  3189  211C  3189   	fcall	_OSCILLATOR_Initialize
  9038  09A2                     l3567:
  9039                           
  9040                           ;mcc_generated_files/mcc.c: 10:     TMR0_Initialize();
  9041  09A2  3189  215E  3189   	fcall	_TMR0_Initialize
  9042  09A5                     l3569:
  9043                           
  9044                           ;mcc_generated_files/mcc.c: 11:     EUSART_Initialize();
  9045  09A5  318A  22F9  3189   	fcall	_EUSART_Initialize
  9046  09A8                     l3571:
  9047                           
  9048                           ;mcc_generated_files/mcc.c: 12:     master_init();
  9049  09A8  3189  212F  3189   	fcall	_master_init
  9050  09AB                     l175:
  9051  09AB  0008               	return
  9052  09AC                     __end_of_SYSTEM_Initialize:
  9053                           
  9054                           	psect	text17
  9055  092F                     __ptext17:	
  9056 ;; *************** function _master_init *****************
  9057 ;; Defined at:
  9058 ;;		line 44 in file "mcc_generated_files/mcc.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9072 ;;      Params:         0       0       0       0       0       0       0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0
  9075 ;;      Totals:         0       0       0       0       0       0       0       0
  9076 ;;Total ram usage:        0 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    4
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_SYSTEM_Initialize
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           
  9087                           ;psect for function _master_init
  9088  092F                     _master_init:
  9089  092F                     l3455:	
  9090                           ;incstack = 0
  9091                           ; Regs used in _master_init: [wreg+status,2]
  9092                           
  9093                           
  9094                           ;mcc_generated_files/mcc.c: 45:     SSP1CON1=0x28;
  9095  092F  3028               	movlw	40
  9096  0930  0023               	movlb	3	; select bank3
  9097  0931  0090               	movwf	16	;volatile
  9098  0932                     l3457:
  9099                           
  9100                           ;mcc_generated_files/mcc.c: 46:     SSP1CON2=0x00;
  9101  0932  0191               	clrf	17	;volatile
  9102  0933                     l3459:
  9103                           
  9104                           ;mcc_generated_files/mcc.c: 47:     SSP1STATbits.SMP=1;
  9105  0933  178F               	bsf	15,7	;volatile
  9106  0934                     l3461:
  9107                           
  9108                           ;mcc_generated_files/mcc.c: 48:     SSP1STATbits.CKE=1;
  9109  0934  170F               	bsf	15,6	;volatile
  9110  0935                     l3463:
  9111                           
  9112                           ;mcc_generated_files/mcc.c: 49:     SSP1ADD=0x06;
  9113  0935  3006               	movlw	6
  9114  0936  008D               	movwf	13	;volatile
  9115  0937                     l3465:
  9116                           
  9117                           ;mcc_generated_files/mcc.c: 50:     SSP1MSK=0xFF;
  9118  0937  30FF               	movlw	255
  9119  0938  008E               	movwf	14	;volatile
  9120  0939                     l184:
  9121  0939  0008               	return
  9122  093A                     __end_of_master_init:
  9123                           
  9124                           	psect	text18
  9125  095E                     __ptext18:	
  9126 ;; *************** function _TMR0_Initialize *****************
  9127 ;; Defined at:
  9128 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;		None
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, status,2
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9142 ;;      Params:         0       0       0       0       0       0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0
  9145 ;;      Totals:         0       0       0       0       0       0       0       0
  9146 ;;Total ram usage:        0 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    4
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_SYSTEM_Initialize
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _TMR0_Initialize
  9158  095E                     _TMR0_Initialize:
  9159  095E                     l3447:	
  9160                           ;incstack = 0
  9161                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  9162                           
  9163                           
  9164                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x6E;
  9165  095E  306E               	movlw	110
  9166  095F  0020               	movlb	0	; select bank0
  9167  0960  009F               	movwf	31	;volatile
  9168                           
  9169                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x79;
  9170  0961  3079               	movlw	121
  9171  0962  009D               	movwf	29	;volatile
  9172  0963                     l3449:
  9173                           
  9174                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  9175  0963  019C               	clrf	28	;volatile
  9176  0964                     l3451:
  9177                           
  9178                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
  9179  0964  002E               	movlb	14	; select bank14
  9180  0965  128C               	bcf	12,5	;volatile
  9181  0966                     l3453:
  9182                           
  9183                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
  9184  0966  3080               	movlw	128
  9185  0967  0020               	movlb	0	; select bank0
  9186  0968  009E               	movwf	30	;volatile
  9187  0969                     l265:
  9188  0969  0008               	return
  9189  096A                     __end_of_TMR0_Initialize:
  9190                           
  9191                           	psect	text19
  9192  090C                     __ptext19:	
  9193 ;; *************** function _PMD_Initialize *****************
  9194 ;; Defined at:
  9195 ;;		line 29 in file "mcc_generated_files/mcc.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		status,2
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9209 ;;      Params:         0       0       0       0       0       0       0       0
  9210 ;;      Locals:         0       0       0       0       0       0       0       0
  9211 ;;      Temps:          0       0       0       0       0       0       0       0
  9212 ;;      Totals:         0       0       0       0       0       0       0       0
  9213 ;;Total ram usage:        0 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    4
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_SYSTEM_Initialize
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function _PMD_Initialize
  9225  090C                     _PMD_Initialize:
  9226  090C                     l3397:	
  9227                           ;incstack = 0
  9228                           ; Regs used in _PMD_Initialize: [status,2]
  9229                           
  9230                           
  9231                           ;mcc_generated_files/mcc.c: 32:     PMD0 = 0x00;
  9232  090C  002F               	movlb	15	; select bank15
  9233  090D  0196               	clrf	22	;volatile
  9234                           
  9235                           ;mcc_generated_files/mcc.c: 34:     PMD1 = 0x00;
  9236  090E  0197               	clrf	23	;volatile
  9237                           
  9238                           ;mcc_generated_files/mcc.c: 36:     PMD2 = 0x00;
  9239  090F  0198               	clrf	24	;volatile
  9240                           
  9241                           ;mcc_generated_files/mcc.c: 38:     PMD3 = 0x00;
  9242  0910  0199               	clrf	25	;volatile
  9243                           
  9244                           ;mcc_generated_files/mcc.c: 40:     PMD4 = 0x00;
  9245  0911  019A               	clrf	26	;volatile
  9246                           
  9247                           ;mcc_generated_files/mcc.c: 42:     PMD5 = 0x00;
  9248  0912  019B               	clrf	27	;volatile
  9249  0913                     l181:
  9250  0913  0008               	return
  9251  0914                     __end_of_PMD_Initialize:
  9252                           
  9253                           	psect	text20
  9254  0B8F                     __ptext20:	
  9255 ;; *************** function _PIN_MANAGER_Initialize *****************
  9256 ;; Defined at:
  9257 ;;		line 2 in file "mcc_generated_files/pin_manager.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9271 ;;      Params:         0       0       0       0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    4
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_SYSTEM_Initialize
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           
  9286                           ;psect for function _PIN_MANAGER_Initialize
  9287  0B8F                     _PIN_MANAGER_Initialize:
  9288  0B8F                     l3399:	
  9289                           ;incstack = 0
  9290                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9291                           
  9292                           
  9293                           ;mcc_generated_files/pin_manager.c: 4:     PORTA = 0x00;
  9294  0B8F  0020               	movlb	0	; select bank0
  9295  0B90  018C               	clrf	12	;volatile
  9296                           
  9297                           ;mcc_generated_files/pin_manager.c: 8:     LATA = 0x00;
  9298  0B91  0196               	clrf	22	;volatile
  9299                           
  9300                           ;mcc_generated_files/pin_manager.c: 9:     LATB = 0x00;
  9301  0B92  0197               	clrf	23	;volatile
  9302                           
  9303                           ;mcc_generated_files/pin_manager.c: 10:     LATC = 0x00;
  9304  0B93  0198               	clrf	24	;volatile
  9305  0B94                     l3401:
  9306                           
  9307                           ;mcc_generated_files/pin_manager.c: 15:     TRISA = 0xF1;
  9308  0B94  30F1               	movlw	241
  9309  0B95  0091               	movwf	17	;volatile
  9310  0B96                     l3403:
  9311                           
  9312                           ;mcc_generated_files/pin_manager.c: 16:     TRISB = 0xFF;
  9313  0B96  30FF               	movlw	255
  9314  0B97  0092               	movwf	18	;volatile
  9315  0B98                     l3405:
  9316                           
  9317                           ;mcc_generated_files/pin_manager.c: 17:     TRISC = 0xBF;
  9318  0B98  30BF               	movlw	191
  9319  0B99  0093               	movwf	19	;volatile
  9320  0B9A                     l3407:
  9321                           
  9322                           ;mcc_generated_files/pin_manager.c: 22:     ANSELC = 0x27;
  9323  0B9A  3027               	movlw	39
  9324  0B9B  003E               	movlb	30	; select bank30
  9325  0B9C  00CE               	movwf	78	;volatile
  9326  0B9D                     l3409:
  9327                           
  9328                           ;mcc_generated_files/pin_manager.c: 23:     ANSELB = 0xFF;
  9329  0B9D  30FF               	movlw	255
  9330  0B9E  00C3               	movwf	67	;volatile
  9331  0B9F                     l3411:
  9332                           
  9333                           ;mcc_generated_files/pin_manager.c: 24:     ANSELA = 0xF1;
  9334  0B9F  30F1               	movlw	241
  9335  0BA0  00B8               	movwf	56	;volatile
  9336                           
  9337                           ;mcc_generated_files/pin_manager.c: 29:     WPUE = 0x00;
  9338  0BA1  01E5               	clrf	101	;volatile
  9339                           
  9340                           ;mcc_generated_files/pin_manager.c: 30:     WPUB = 0x00;
  9341  0BA2  01C4               	clrf	68	;volatile
  9342                           
  9343                           ;mcc_generated_files/pin_manager.c: 31:     WPUA = 0x00;
  9344  0BA3  01B9               	clrf	57	;volatile
  9345                           
  9346                           ;mcc_generated_files/pin_manager.c: 32:     WPUC = 0x00;
  9347  0BA4  01CF               	clrf	79	;volatile
  9348                           
  9349                           ;mcc_generated_files/pin_manager.c: 37:     ODCONA = 0x00;
  9350  0BA5  01BA               	clrf	58	;volatile
  9351                           
  9352                           ;mcc_generated_files/pin_manager.c: 38:     ODCONB = 0x00;
  9353  0BA6  01C5               	clrf	69	;volatile
  9354                           
  9355                           ;mcc_generated_files/pin_manager.c: 39:     ODCONC = 0x00;
  9356  0BA7  01D0               	clrf	80	;volatile
  9357  0BA8                     l3413:
  9358                           
  9359                           ;mcc_generated_files/pin_manager.c: 44:     SLRCONA = 0xFF;
  9360  0BA8  30FF               	movlw	255
  9361  0BA9  00BB               	movwf	59	;volatile
  9362  0BAA                     l3415:
  9363                           
  9364                           ;mcc_generated_files/pin_manager.c: 45:     SLRCONB = 0xFF;
  9365  0BAA  30FF               	movlw	255
  9366  0BAB  00C6               	movwf	70	;volatile
  9367  0BAC                     l3417:
  9368                           
  9369                           ;mcc_generated_files/pin_manager.c: 46:     SLRCONC = 0xFF;
  9370  0BAC  30FF               	movlw	255
  9371  0BAD  00D1               	movwf	81	;volatile
  9372  0BAE                     l3419:
  9373                           
  9374                           ;mcc_generated_files/pin_manager.c: 51:     INLVLA = 0xFF;
  9375  0BAE  30FF               	movlw	255
  9376  0BAF  00BC               	movwf	60	;volatile
  9377  0BB0                     l3421:
  9378                           
  9379                           ;mcc_generated_files/pin_manager.c: 52:     INLVLB = 0xFF;
  9380  0BB0  30FF               	movlw	255
  9381  0BB1  00C7               	movwf	71	;volatile
  9382  0BB2                     l3423:
  9383                           
  9384                           ;mcc_generated_files/pin_manager.c: 53:     INLVLC = 0xFF;
  9385  0BB2  30FF               	movlw	255
  9386  0BB3  00D2               	movwf	82	;volatile
  9387  0BB4                     l3425:
  9388                           
  9389                           ;mcc_generated_files/pin_manager.c: 54:     INLVLE = 0x08;
  9390  0BB4  3008               	movlw	8
  9391  0BB5  00E8               	movwf	104	;volatile
  9392  0BB6                     l3427:
  9393                           
  9394                           ;mcc_generated_files/pin_manager.c: 56:     RXPPS = 0x17;
  9395  0BB6  3017               	movlw	23
  9396  0BB7  003D               	movlb	29	; select bank29
  9397  0BB8  00CB               	movwf	75	;volatile
  9398  0BB9                     l3429:
  9399                           
  9400                           ;mcc_generated_files/pin_manager.c: 57:     RC6PPS = 0x10;
  9401  0BB9  3010               	movlw	16
  9402  0BBA  003E               	movlb	30	; select bank30
  9403  0BBB  00A6               	movwf	38	;volatile
  9404  0BBC                     l3431:
  9405                           
  9406                           ;mcc_generated_files/pin_manager.c: 58:     SSP1CLKPPS = 0x13;
  9407  0BBC  3013               	movlw	19
  9408  0BBD  003D               	movlb	29	; select bank29
  9409  0BBE  00C5               	movwf	69	;volatile
  9410  0BBF                     l3433:
  9411                           
  9412                           ;mcc_generated_files/pin_manager.c: 59:     RC3PPS = 0x14;
  9413  0BBF  3014               	movlw	20
  9414  0BC0  003E               	movlb	30	; select bank30
  9415  0BC1  00A3               	movwf	35	;volatile
  9416  0BC2                     l3435:
  9417                           
  9418                           ;mcc_generated_files/pin_manager.c: 60:     RC4PPS = 0x15;
  9419  0BC2  3015               	movlw	21
  9420  0BC3  00A4               	movwf	36	;volatile
  9421  0BC4                     l3437:
  9422                           
  9423                           ;mcc_generated_files/pin_manager.c: 61:     SSP1DATPPS = 0x14;
  9424  0BC4  3014               	movlw	20
  9425  0BC5  003D               	movlb	29	; select bank29
  9426  0BC6  00C6               	movwf	70	;volatile
  9427  0BC7                     l247:
  9428  0BC7  0008               	return
  9429  0BC8                     __end_of_PIN_MANAGER_Initialize:
  9430                           
  9431                           	psect	text21
  9432  091C                     __ptext21:	
  9433 ;; *************** function _OSCILLATOR_Initialize *****************
  9434 ;; Defined at:
  9435 ;;		line 15 in file "mcc_generated_files/mcc.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;		None
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9449 ;;      Params:         0       0       0       0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0
  9452 ;;      Totals:         0       0       0       0       0       0       0       0
  9453 ;;Total ram usage:        0 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    4
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_SYSTEM_Initialize
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function _OSCILLATOR_Initialize
  9465  091C                     _OSCILLATOR_Initialize:
  9466  091C                     l3439:	
  9467                           ;incstack = 0
  9468                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9469                           
  9470                           
  9471                           ;mcc_generated_files/mcc.c: 18:     OSCCON1 = 0x62;
  9472  091C  3062               	movlw	98
  9473  091D  0031               	movlb	17	; select bank17
  9474  091E  008D               	movwf	13	;volatile
  9475  091F                     l3441:
  9476                           
  9477                           ;mcc_generated_files/mcc.c: 20:     OSCCON3 = 0x00;
  9478  091F  018F               	clrf	15	;volatile
  9479  0920                     l3443:
  9480                           
  9481                           ;mcc_generated_files/mcc.c: 22:     OSCEN = 0x00;
  9482  0920  0191               	clrf	17	;volatile
  9483                           
  9484                           ;mcc_generated_files/mcc.c: 24:     OSCFRQ = 0x02;
  9485  0921  3002               	movlw	2
  9486  0922  0093               	movwf	19	;volatile
  9487  0923                     l3445:
  9488                           
  9489                           ;mcc_generated_files/mcc.c: 26:     OSCTUNE = 0x00;
  9490  0923  0192               	clrf	18	;volatile
  9491  0924                     l178:
  9492  0924  0008               	return
  9493  0925                     __end_of_OSCILLATOR_Initialize:
  9494                           
  9495                           	psect	text22
  9496  0AF9                     __ptext22:	
  9497 ;; *************** function _EUSART_Initialize *****************
  9498 ;; Defined at:
  9499 ;;		line 29 in file "mcc_generated_files/eusart.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0, pclath, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9513 ;;      Params:         0       0       0       0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    5
  9520 ;; This function calls:
  9521 ;;		_EUSART_SetErrorHandler
  9522 ;;		_EUSART_SetFramingErrorHandler
  9523 ;;		_EUSART_SetOverrunErrorHandler
  9524 ;;		_EUSART_SetRxInterruptHandler
  9525 ;; This function is called by:
  9526 ;;		_SYSTEM_Initialize
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _EUSART_Initialize
  9532  0AF9                     _EUSART_Initialize:
  9533  0AF9                     l3375:	
  9534                           ;incstack = 0
  9535                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9536                           
  9537                           
  9538                           ;mcc_generated_files/eusart.c: 32:     PIE3bits.RCIE = 0;
  9539  0AF9  002E               	movlb	14	; select bank14
  9540  0AFA  1299               	bcf	25,5	;volatile
  9541  0AFB                     l3377:
  9542                           
  9543                           ;mcc_generated_files/eusart.c: 33:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9544  0AFB  30C8               	movlw	low _EUSART_Receive_ISR
  9545  0AFC  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9546  0AFD  300B               	movlw	high _EUSART_Receive_ISR
  9547  0AFE  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9548  0AFF  3188  20F9  318A   	fcall	_EUSART_SetRxInterruptHandler
  9549  0B02                     l3379:
  9550                           
  9551                           ;mcc_generated_files/eusart.c: 37:     BAUD1CON = 0x08;
  9552  0B02  3008               	movlw	8
  9553  0B03  0022               	movlb	2	; select bank2
  9554  0B04  009F               	movwf	31	;volatile
  9555  0B05                     l3381:
  9556                           
  9557                           ;mcc_generated_files/eusart.c: 40:     RC1STA = 0x90;
  9558  0B05  3090               	movlw	144
  9559  0B06  009D               	movwf	29	;volatile
  9560  0B07                     l3383:
  9561                           
  9562                           ;mcc_generated_files/eusart.c: 43:     TX1STA = 0x24;
  9563  0B07  3024               	movlw	36
  9564  0B08  009E               	movwf	30	;volatile
  9565  0B09                     l3385:
  9566                           
  9567                           ;mcc_generated_files/eusart.c: 46:     SP1BRGL = 0x19;
  9568  0B09  3019               	movlw	25
  9569  0B0A  009B               	movwf	27	;volatile
  9570  0B0B                     l3387:
  9571                           
  9572                           ;mcc_generated_files/eusart.c: 49:     SP1BRGH = 0x00;
  9573  0B0B  019C               	clrf	28	;volatile
  9574  0B0C                     l3389:
  9575                           
  9576                           ;mcc_generated_files/eusart.c: 52:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9577  0B0C  3002               	movlw	low _EUSART_DefaultFramingErrorHandler
  9578  0B0D  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9579  0B0E  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  9580  0B0F  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9581  0B10  3188  20ED  318A   	fcall	_EUSART_SetFramingErrorHandler
  9582  0B13                     l3391:
  9583                           
  9584                           ;mcc_generated_files/eusart.c: 53:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9585  0B13  30D7               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9586  0B14  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9587  0B15  3008               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9588  0B16  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9589  0B17  3188  20F3  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9590  0B1A                     l3393:
  9591                           
  9592                           ;mcc_generated_files/eusart.c: 54:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9593  0B1A  30D3               	movlw	low _EUSART_DefaultErrorHandler
  9594  0B1B  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  9595  0B1C  3008               	movlw	high _EUSART_DefaultErrorHandler
  9596  0B1D  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9597  0B1E  3188  20E7  318A   	fcall	_EUSART_SetErrorHandler
  9598                           
  9599                           ;mcc_generated_files/eusart.c: 56:     eusartRxLastError.status = 0;
  9600  0B21  0022               	movlb	2	; select bank2
  9601  0B22  01E7               	clrf	_eusartRxLastError^(0+256)	;volatile
  9602                           
  9603                           ;mcc_generated_files/eusart.c: 59:     eusartRxHead = 0;
  9604  0B23  01FA               	clrf	_eusartRxHead	;volatile
  9605                           
  9606                           ;mcc_generated_files/eusart.c: 60:     eusartRxTail = 0;
  9607  0B24  01F9               	clrf	_eusartRxTail	;volatile
  9608                           
  9609                           ;mcc_generated_files/eusart.c: 61:     eusartRxCount = 0;
  9610  0B25  01F8               	clrf	_eusartRxCount	;volatile
  9611  0B26                     l3395:
  9612                           
  9613                           ;mcc_generated_files/eusart.c: 64:     PIE3bits.RCIE = 1;
  9614  0B26  002E               	movlb	14	; select bank14
  9615  0B27  1699               	bsf	25,5	;volatile
  9616  0B28                     l63:
  9617  0B28  0008               	return
  9618  0B29                     __end_of_EUSART_Initialize:
  9619                           
  9620                           	psect	text23
  9621  08F9                     __ptext23:	
  9622 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9623 ;; Defined at:
  9624 ;;		line 191 in file "mcc_generated_files/eusart.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9627 ;;		 -> EUSART_Receive_ISR(1), 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9639 ;;      Params:         2       0       0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0
  9642 ;;      Totals:         2       0       0       0       0       0       0       0
  9643 ;;Total ram usage:        2 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    4
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_EUSART_Initialize
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           
  9654                           ;psect for function _EUSART_SetRxInterruptHandler
  9655  08F9                     _EUSART_SetRxInterruptHandler:
  9656  08F9                     l3315:	
  9657                           ;incstack = 0
  9658                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9659                           
  9660                           
  9661                           ;mcc_generated_files/eusart.c: 192:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  9662  08F9  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9663  08FA  0024               	movlb	4	; select bank4
  9664  08FB  00CE               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512)
  9665  08FC  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9666  08FD  00CD               	movwf	_EUSART_RxDefaultInterruptHandler^(0+512)
  9667  08FE                     l128:
  9668  08FE  0008               	return
  9669  08FF                     __end_of_EUSART_SetRxInterruptHandler:
  9670                           
  9671                           	psect	text24
  9672  08F3                     __ptext24:	
  9673 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9674 ;; Defined at:
  9675 ;;		line 182 in file "mcc_generated_files/eusart.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9678 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9690 ;;      Params:         2       0       0       0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0
  9693 ;;      Totals:         2       0       0       0       0       0       0       0
  9694 ;;Total ram usage:        2 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:    4
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_EUSART_Initialize
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           
  9705                           ;psect for function _EUSART_SetOverrunErrorHandler
  9706  08F3                     _EUSART_SetOverrunErrorHandler:
  9707  08F3                     l3319:	
  9708                           ;incstack = 0
  9709                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9710                           
  9711                           
  9712                           ;mcc_generated_files/eusart.c: 183:     EUSART_OverrunErrorHandler = interruptHandler;
  9713  08F3  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9714  08F4  0024               	movlb	4	; select bank4
  9715  08F5  00CA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+512)
  9716  08F6  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9717  08F7  00C9               	movwf	_EUSART_OverrunErrorHandler^(0+512)
  9718  08F8                     l122:
  9719  08F8  0008               	return
  9720  08F9                     __end_of_EUSART_SetOverrunErrorHandler:
  9721                           
  9722                           	psect	text25
  9723  08ED                     __ptext25:	
  9724 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9725 ;; Defined at:
  9726 ;;		line 178 in file "mcc_generated_files/eusart.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9729 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9741 ;;      Params:         2       0       0       0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0
  9744 ;;      Totals:         2       0       0       0       0       0       0       0
  9745 ;;Total ram usage:        2 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    4
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_EUSART_Initialize
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _EUSART_SetFramingErrorHandler
  9757  08ED                     _EUSART_SetFramingErrorHandler:
  9758  08ED                     l3317:	
  9759                           ;incstack = 0
  9760                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9761                           
  9762                           
  9763                           ;mcc_generated_files/eusart.c: 179:     EUSART_FramingErrorHandler = interruptHandler;
  9764  08ED  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9765  08EE  0024               	movlb	4	; select bank4
  9766  08EF  00CC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+512)
  9767  08F0  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9768  08F1  00CB               	movwf	_EUSART_FramingErrorHandler^(0+512)
  9769  08F2                     l119:
  9770  08F2  0008               	return
  9771  08F3                     __end_of_EUSART_SetFramingErrorHandler:
  9772                           
  9773                           	psect	text26
  9774  08E7                     __ptext26:	
  9775 ;; *************** function _EUSART_SetErrorHandler *****************
  9776 ;; Defined at:
  9777 ;;		line 186 in file "mcc_generated_files/eusart.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9780 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		wreg
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9792 ;;      Params:         2       0       0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0
  9795 ;;      Totals:         2       0       0       0       0       0       0       0
  9796 ;;Total ram usage:        2 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    4
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_EUSART_Initialize
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           
  9807                           ;psect for function _EUSART_SetErrorHandler
  9808  08E7                     _EUSART_SetErrorHandler:
  9809  08E7                     l3321:	
  9810                           ;incstack = 0
  9811                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9812                           
  9813                           
  9814                           ;mcc_generated_files/eusart.c: 187:     EUSART_ErrorHandler = interruptHandler;
  9815  08E7  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9816  08E8  0024               	movlb	4	; select bank4
  9817  08E9  00C8               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
  9818  08EA  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9819  08EB  00C7               	movwf	_EUSART_ErrorHandler^(0+512)
  9820  08EC                     l125:
  9821  08EC  0008               	return
  9822  08ED                     __end_of_EUSART_SetErrorHandler:
  9823                           
  9824                           	psect	text27
  9825  0A2D                     __ptext27:	
  9826 ;; *************** function _LCD_Write_String *****************
  9827 ;; Defined at:
  9828 ;;		line 106 in file "I2C_LCD.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  Str             2    1[BANK0 ] PTR unsigned char 
  9831 ;;		 -> STR_15(2), STR_13(3), STR_12(2), STR_11(2), 
  9832 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  9833 ;;		 -> ShowbadBettery(4), STR_3(2), no(1), STR_1(3), 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  i               2    4[BANK0 ] int 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9845 ;;      Params:         0       2       0       0       0       0       0       0
  9846 ;;      Locals:         0       2       0       0       0       0       0       0
  9847 ;;      Temps:          0       1       0       0       0       0       0       0
  9848 ;;      Totals:         0       5       0       0       0       0       0       0
  9849 ;;Total ram usage:        5 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    9
  9852 ;; This function calls:
  9853 ;;		_LCD_Write_Char
  9854 ;; This function is called by:
  9855 ;;		_main
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function _LCD_Write_String
  9861  0A2D                     _LCD_Write_String:
  9862  0A2D                     l3673:	
  9863                           ;incstack = 0
  9864                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9865                           
  9866                           
  9867                           ;I2C_LCD.c: 106: void LCD_Write_String(char* Str);I2C_LCD.c: 107: {;I2C_LCD.c: 108:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
  9868  0A2D  0020               	movlb	0	; select bank0
  9869  0A2E  01A4               	clrf	LCD_Write_String@i
  9870  0A2F  01A5               	clrf	LCD_Write_String@i+1
  9871  0A30  2A40               	goto	l3679
  9872  0A31                     l3675:
  9873                           
  9874                           ;I2C_LCD.c: 109:     LCD_Write_Char(Str[i]);
  9875  0A31  0821               	movf	LCD_Write_String@Str,w
  9876  0A32  0724               	addwf	LCD_Write_String@i,w
  9877  0A33  0084               	movwf	4
  9878  0A34  0822               	movf	LCD_Write_String@Str+1,w
  9879  0A35  3D25               	addwfc	LCD_Write_String@i+1,w
  9880  0A36  0085               	movwf	5
  9881  0A37  0800               	movf	0,w	;code access
  9882  0A38  3189  21C4  318A   	fcall	_LCD_Write_Char
  9883  0A3B                     l3677:
  9884  0A3B  3001               	movlw	1
  9885  0A3C  0020               	movlb	0	; select bank0
  9886  0A3D  07A4               	addwf	LCD_Write_String@i,f
  9887  0A3E  3000               	movlw	0
  9888  0A3F  3DA5               	addwfc	LCD_Write_String@i+1,f
  9889  0A40                     l3679:
  9890  0A40  0821               	movf	LCD_Write_String@Str,w
  9891  0A41  0724               	addwf	LCD_Write_String@i,w
  9892  0A42  0084               	movwf	4
  9893  0A43  0822               	movf	LCD_Write_String@Str+1,w
  9894  0A44  3D25               	addwfc	LCD_Write_String@i+1,w
  9895  0A45  0085               	movwf	5
  9896  0A46  0012               	moviw fsr0++
  9897  0A47  1D03               	btfss	3,2
  9898  0A48  2A4A               	goto	u3111
  9899  0A49  2A4B               	goto	u3110
  9900  0A4A                     u3111:
  9901  0A4A  2A31               	goto	l3675
  9902  0A4B                     u3110:
  9903  0A4B                     l491:
  9904  0A4B  0008               	return
  9905  0A4C                     __end_of_LCD_Write_String:
  9906                           
  9907                           	psect	text28
  9908  09C4                     __ptext28:	
  9909 ;; *************** function _LCD_Write_Char *****************
  9910 ;; Defined at:
  9911 ;;		line 100 in file "I2C_LCD.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  Data            1    wreg     unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  Data            1    0[BANK0 ] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0, pclath, cstack
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9925 ;;      Params:         0       0       0       0       0       0       0       0
  9926 ;;      Locals:         0       1       0       0       0       0       0       0
  9927 ;;      Temps:          1       0       0       0       0       0       0       0
  9928 ;;      Totals:         1       1       0       0       0       0       0       0
  9929 ;;Total ram usage:        2 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    8
  9932 ;; This function calls:
  9933 ;;		_LCD_Write_4Bit
  9934 ;; This function is called by:
  9935 ;;		_LCD_Write_String
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           
  9940                           ;psect for function _LCD_Write_Char
  9941  09C4                     _LCD_Write_Char:
  9942                           
  9943                           ;incstack = 0
  9944                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9945                           ;LCD_Write_Char@Data stored from wreg
  9946  09C4  0020               	movlb	0	; select bank0
  9947  09C5  00A0               	movwf	LCD_Write_Char@Data
  9948  09C6                     l3497:
  9949                           
  9950                           ;I2C_LCD.c: 100: void LCD_Write_Char(char Data);I2C_LCD.c: 101: {;I2C_LCD.c: 102:   RS =
      +                           1;
  9951  09C6  0023               	movlb	3	; select bank3
  9952  09C7  01CE               	clrf	_RS^(0+384)
  9953  09C8  0ACE               	incf	_RS^(0+384),f
  9954  09C9                     l3499:
  9955                           
  9956                           ;I2C_LCD.c: 103:   LCD_Write_4Bit(Data & 0xF0);
  9957  09C9  0020               	movlb	0	; select bank0
  9958  09CA  0820               	movf	LCD_Write_Char@Data,w
  9959  09CB  39F0               	andlw	240
  9960  09CC  3189  21AC  3189   	fcall	_LCD_Write_4Bit
  9961                           
  9962                           ;I2C_LCD.c: 104:   LCD_Write_4Bit((Data << 4) & 0xF0);
  9963  09CF  0020               	movlb	0	; select bank0
  9964  09D0  0820               	movf	LCD_Write_Char@Data,w
  9965  09D1  00F7               	movwf	??_LCD_Write_Char
  9966  09D2  3003               	movlw	3
  9967  09D3                     u2945:
  9968  09D3  35F7               	lslf	??_LCD_Write_Char,f
  9969  09D4  3EFF               	addlw	-1
  9970  09D5  1D03               	skipz
  9971  09D6  29D3               	goto	u2945
  9972  09D7  3577               	lslf	??_LCD_Write_Char,w
  9973  09D8  39F0               	andlw	240
  9974  09D9  3189  21AC  3189   	fcall	_LCD_Write_4Bit
  9975  09DC                     l485:
  9976  09DC  0008               	return
  9977  09DD                     __end_of_LCD_Write_Char:
  9978                           
  9979                           	psect	text29
  9980  0ACA                     __ptext29:	
  9981 ;; *************** function _LCD_Set_Cursor *****************
  9982 ;; Defined at:
  9983 ;;		line 111 in file "I2C_LCD.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  ROW             1    wreg     unsigned char 
  9986 ;;  COL             1    1[BANK0 ] unsigned char 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  ROW             1    4[BANK0 ] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9998 ;;      Params:         0       1       0       0       0       0       0       0
  9999 ;;      Locals:         0       1       0       0       0       0       0       0
 10000 ;;      Temps:          0       2       0       0       0       0       0       0
 10001 ;;      Totals:         0       4       0       0       0       0       0       0
 10002 ;;Total ram usage:        4 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; Hardware stack levels required when called:    9
 10005 ;; This function calls:
 10006 ;;		_LCD_CMD
 10007 ;; This function is called by:
 10008 ;;		_main
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           
 10013                           ;psect for function _LCD_Set_Cursor
 10014  0ACA                     _LCD_Set_Cursor:
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10018                           ;LCD_Set_Cursor@ROW stored from wreg
 10019  0ACA  0020               	movlb	0	; select bank0
 10020  0ACB  00A4               	movwf	LCD_Set_Cursor@ROW
 10021  0ACC                     l3655:
 10022                           
 10023                           ;I2C_LCD.c: 111: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          2: {;I2C_LCD.c: 113:   switch(ROW)
 10024  0ACC  2AE5               	goto	l3665
 10025  0ACD                     l3657:
 10026                           
 10027                           ;I2C_LCD.c: 116:       LCD_CMD(0xC0 + COL-1);
 10028  0ACD  0821               	movf	LCD_Set_Cursor@COL,w
 10029  0ACE  3EBF               	addlw	191
 10030  0ACF  3187  27E8  318A   	fcall	_LCD_CMD
 10031                           
 10032                           ;I2C_LCD.c: 117:       break;
 10033  0AD2  2AF8               	goto	l500
 10034  0AD3                     l3659:
 10035                           
 10036                           ;I2C_LCD.c: 119:       LCD_CMD(0x94 + COL-1);
 10037  0AD3  0821               	movf	LCD_Set_Cursor@COL,w
 10038  0AD4  3E93               	addlw	147
 10039  0AD5  3187  27E8  318A   	fcall	_LCD_CMD
 10040                           
 10041                           ;I2C_LCD.c: 120:       break;
 10042  0AD8  2AF8               	goto	l500
 10043  0AD9                     l3661:
 10044                           
 10045                           ;I2C_LCD.c: 122:       LCD_CMD(0xD4 + COL-1);
 10046  0AD9  0821               	movf	LCD_Set_Cursor@COL,w
 10047  0ADA  3ED3               	addlw	211
 10048  0ADB  3187  27E8  318A   	fcall	_LCD_CMD
 10049                           
 10050                           ;I2C_LCD.c: 123:       break;
 10051  0ADE  2AF8               	goto	l500
 10052  0ADF                     l3663:
 10053                           
 10054                           ;I2C_LCD.c: 126:       LCD_CMD(0x80 + COL-1);
 10055  0ADF  0821               	movf	LCD_Set_Cursor@COL,w
 10056  0AE0  3E7F               	addlw	127
 10057  0AE1  3187  27E8  318A   	fcall	_LCD_CMD
 10058                           
 10059                           ;I2C_LCD.c: 127:   }
 10060  0AE4  2AF8               	goto	l500
 10061  0AE5                     l3665:
 10062  0AE5  0824               	movf	LCD_Set_Cursor@ROW,w
 10063  0AE6  00A2               	movwf	??_LCD_Set_Cursor
 10064  0AE7  01A3               	clrf	??_LCD_Set_Cursor+1
 10065                           
 10066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10067                           ; Switch size 1, requested type "simple"
 10068                           ; Number of cases is 1, Range of values is 0 to 0
 10069                           ; switch strategies available:
 10070                           ; Name         Instructions Cycles
 10071                           ; simple_byte            4     3 (average)
 10072                           ; direct_byte            8     6 (fixed)
 10073                           ; jumptable            260     6 (fixed)
 10074                           ;	Chosen strategy is simple_byte
 10075  0AE8  0823               	movf	??_LCD_Set_Cursor+1,w
 10076  0AE9  3A00               	xorlw	0	; case 0
 10077  0AEA  1903               	skipnz
 10078  0AEB  2AED               	goto	l3973
 10079  0AEC  2ADF               	goto	l3663
 10080  0AED                     l3973:
 10081                           
 10082                           ; Switch size 1, requested type "simple"
 10083                           ; Number of cases is 3, Range of values is 2 to 4
 10084                           ; switch strategies available:
 10085                           ; Name         Instructions Cycles
 10086                           ; simple_byte           10     6 (average)
 10087                           ; direct_byte           15     9 (fixed)
 10088                           ; jumptable            263     9 (fixed)
 10089                           ;	Chosen strategy is simple_byte
 10090  0AED  0822               	movf	??_LCD_Set_Cursor,w
 10091  0AEE  3A02               	xorlw	2	; case 2
 10092  0AEF  1903               	skipnz
 10093  0AF0  2ACD               	goto	l3657
 10094  0AF1  3A01               	xorlw	1	; case 3
 10095  0AF2  1903               	skipnz
 10096  0AF3  2AD3               	goto	l3659
 10097  0AF4  3A07               	xorlw	7	; case 4
 10098  0AF5  1903               	skipnz
 10099  0AF6  2AD9               	goto	l3661
 10100  0AF7  2ADF               	goto	l3663
 10101  0AF8                     l500:
 10102  0AF8  0008               	return
 10103  0AF9                     __end_of_LCD_Set_Cursor:
 10104                           
 10105                           	psect	text30
 10106  0D5D                     __ptext30:	
 10107 ;; *************** function _LCD_Init *****************
 10108 ;; Defined at:
 10109 ;;		line 57 in file "I2C_LCD.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  I2C_Add         1    wreg     unsigned char 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  I2C_Add         1    2[BANK0 ] unsigned char 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10123 ;;      Params:         0       0       0       0       0       0       0       0
 10124 ;;      Locals:         0       1       0       0       0       0       0       0
 10125 ;;      Temps:          0       1       0       0       0       0       0       0
 10126 ;;      Totals:         0       2       0       0       0       0       0       0
 10127 ;;Total ram usage:        2 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    9
 10130 ;; This function calls:
 10131 ;;		_Delay
 10132 ;;		_IO_Expander_Write
 10133 ;;		_LCD_CMD
 10134 ;; This function is called by:
 10135 ;;		_main
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           
 10140                           ;psect for function _LCD_Init
 10141  0D5D                     _LCD_Init:
 10142                           
 10143                           ;incstack = 0
 10144                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10145                           ;LCD_Init@I2C_Add stored from wreg
 10146  0D5D  0020               	movlb	0	; select bank0
 10147  0D5E  00A2               	movwf	LCD_Init@I2C_Add
 10148  0D5F                     l3615:
 10149                           
 10150                           ;I2C_LCD.c: 57: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 58: {;I2C_LCD.c: 59:   i
      +                          2c_add = I2C_Add;
 10151  0D5F  0822               	movf	LCD_Init@I2C_Add,w
 10152  0D60  00A1               	movwf	??_LCD_Init
 10153  0D61  0821               	movf	??_LCD_Init,w
 10154  0D62  0023               	movlb	3	; select bank3
 10155  0D63  00CD               	movwf	_i2c_add^(0+384)
 10156  0D64                     l3617:
 10157                           
 10158                           ;I2C_LCD.c: 60:   IO_Expander_Write(0x00);
 10159  0D64  3000               	movlw	0
 10160  0D65  3189  2186  318D   	fcall	_IO_Expander_Write
 10161  0D68                     l3619:
 10162                           
 10163                           ;I2C_LCD.c: 61:   Delay(3000);
 10164  0D68  30B8               	movlw	184
 10165  0D69  00F3               	movwf	Delay@counter
 10166  0D6A  300B               	movlw	11
 10167  0D6B  00F4               	movwf	Delay@counter+1
 10168  0D6C  3189  213A  318D   	fcall	_Delay
 10169  0D6F                     l3621:
 10170                           
 10171                           ;I2C_LCD.c: 62:   LCD_CMD(0x03);
 10172  0D6F  3003               	movlw	3
 10173  0D70  3187  27E8  318D   	fcall	_LCD_CMD
 10174  0D73                     l3623:
 10175                           
 10176                           ;I2C_LCD.c: 63:   Delay(500);
 10177  0D73  30F4               	movlw	244
 10178  0D74  00F3               	movwf	Delay@counter
 10179  0D75  3001               	movlw	1
 10180  0D76  00F4               	movwf	Delay@counter+1
 10181  0D77  3189  213A  318D   	fcall	_Delay
 10182  0D7A                     l3625:
 10183                           
 10184                           ;I2C_LCD.c: 64:   LCD_CMD(0x03);
 10185  0D7A  3003               	movlw	3
 10186  0D7B  3187  27E8  318D   	fcall	_LCD_CMD
 10187  0D7E                     l3627:
 10188                           
 10189                           ;I2C_LCD.c: 65:   Delay(500);
 10190  0D7E  30F4               	movlw	244
 10191  0D7F  00F3               	movwf	Delay@counter
 10192  0D80  3001               	movlw	1
 10193  0D81  00F4               	movwf	Delay@counter+1
 10194  0D82  3189  213A  318D   	fcall	_Delay
 10195  0D85                     l3629:
 10196                           
 10197                           ;I2C_LCD.c: 66:   LCD_CMD(0x03);
 10198  0D85  3003               	movlw	3
 10199  0D86  3187  27E8  318D   	fcall	_LCD_CMD
 10200  0D89                     l3631:
 10201                           
 10202                           ;I2C_LCD.c: 67:   Delay(500);
 10203  0D89  30F4               	movlw	244
 10204  0D8A  00F3               	movwf	Delay@counter
 10205  0D8B  3001               	movlw	1
 10206  0D8C  00F4               	movwf	Delay@counter+1
 10207  0D8D  3189  213A  318D   	fcall	_Delay
 10208  0D90                     l3633:
 10209                           
 10210                           ;I2C_LCD.c: 68:   LCD_CMD(0x02);
 10211  0D90  3002               	movlw	2
 10212  0D91  3187  27E8  318D   	fcall	_LCD_CMD
 10213  0D94                     l3635:
 10214                           
 10215                           ;I2C_LCD.c: 69:   Delay(500);
 10216  0D94  30F4               	movlw	244
 10217  0D95  00F3               	movwf	Delay@counter
 10218  0D96  3001               	movlw	1
 10219  0D97  00F4               	movwf	Delay@counter+1
 10220  0D98  3189  213A  318D   	fcall	_Delay
 10221  0D9B                     l3637:
 10222                           
 10223                           ;I2C_LCD.c: 70:   LCD_CMD(0x20 | (2 << 2));
 10224  0D9B  3028               	movlw	40
 10225  0D9C  3187  27E8  318D   	fcall	_LCD_CMD
 10226  0D9F                     l3639:
 10227                           
 10228                           ;I2C_LCD.c: 71:   Delay(5000);
 10229  0D9F  3088               	movlw	136
 10230  0DA0  00F3               	movwf	Delay@counter
 10231  0DA1  3013               	movlw	19
 10232  0DA2  00F4               	movwf	Delay@counter+1
 10233  0DA3  3189  213A  318D   	fcall	_Delay
 10234  0DA6                     l3641:
 10235                           
 10236                           ;I2C_LCD.c: 72:   LCD_CMD(0x0C);
 10237  0DA6  300C               	movlw	12
 10238  0DA7  3187  27E8  318D   	fcall	_LCD_CMD
 10239  0DAA                     l3643:
 10240                           
 10241                           ;I2C_LCD.c: 73:   Delay(5000);
 10242  0DAA  3088               	movlw	136
 10243  0DAB  00F3               	movwf	Delay@counter
 10244  0DAC  3013               	movlw	19
 10245  0DAD  00F4               	movwf	Delay@counter+1
 10246  0DAE  3189  213A  318D   	fcall	_Delay
 10247  0DB1                     l3645:
 10248                           
 10249                           ;I2C_LCD.c: 74:   LCD_CMD(0x01);
 10250  0DB1  3001               	movlw	1
 10251  0DB2  3187  27E8  318D   	fcall	_LCD_CMD
 10252  0DB5                     l3647:
 10253                           
 10254                           ;I2C_LCD.c: 75:   Delay(5000);
 10255  0DB5  3088               	movlw	136
 10256  0DB6  00F3               	movwf	Delay@counter
 10257  0DB7  3013               	movlw	19
 10258  0DB8  00F4               	movwf	Delay@counter+1
 10259  0DB9  3189  213A  318D   	fcall	_Delay
 10260  0DBC                     l3649:
 10261                           
 10262                           ;I2C_LCD.c: 76:   LCD_CMD(0x04 | 0x02);
 10263  0DBC  3006               	movlw	6
 10264  0DBD  3187  27E8  318D   	fcall	_LCD_CMD
 10265  0DC0                     l3651:
 10266                           
 10267                           ;I2C_LCD.c: 77:   Delay(5000);
 10268  0DC0  3088               	movlw	136
 10269  0DC1  00F3               	movwf	Delay@counter
 10270  0DC2  3013               	movlw	19
 10271  0DC3  00F4               	movwf	Delay@counter+1
 10272  0DC4  3189  213A  318D   	fcall	_Delay
 10273  0DC7                     l473:
 10274  0DC7  0008               	return
 10275  0DC8                     __end_of_LCD_Init:
 10276                           
 10277                           	psect	text31
 10278  0952                     __ptext31:	
 10279 ;; *************** function _LCD_Clear *****************
 10280 ;; Defined at:
 10281 ;;		line 149 in file "I2C_LCD.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;		None
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0, pclath, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10295 ;;      Params:         0       0       0       0       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0
 10298 ;;      Totals:         0       0       0       0       0       0       0       0
 10299 ;;Total ram usage:        0 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    9
 10302 ;; This function calls:
 10303 ;;		_Delay
 10304 ;;		_LCD_CMD
 10305 ;; This function is called by:
 10306 ;;		_main
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           
 10311                           ;psect for function _LCD_Clear
 10312  0952                     _LCD_Clear:
 10313  0952                     l3653:	
 10314                           ;incstack = 0
 10315                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10316                           
 10317                           
 10318                           ;I2C_LCD.c: 151:   LCD_CMD(0x01);
 10319  0952  3001               	movlw	1
 10320  0953  3187  27E8  3189   	fcall	_LCD_CMD
 10321                           
 10322                           ;I2C_LCD.c: 152:   Delay(40);
 10323  0956  3028               	movlw	40
 10324  0957  00F3               	movwf	Delay@counter
 10325  0958  3000               	movlw	0
 10326  0959  00F4               	movwf	Delay@counter+1
 10327  095A  3189  213A  3189   	fcall	_Delay
 10328  095D                     l515:
 10329  095D  0008               	return
 10330  095E                     __end_of_LCD_Clear:
 10331                           
 10332                           	psect	text32
 10333  07E8                     __ptext32:	
 10334 ;; *************** function _LCD_CMD *****************
 10335 ;; Defined at:
 10336 ;;		line 94 in file "I2C_LCD.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  CMD             1    wreg     unsigned char 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  CMD             1    0[BANK0 ] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg, status,2, status,0, pclath, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10350 ;;      Params:         0       0       0       0       0       0       0       0
 10351 ;;      Locals:         0       1       0       0       0       0       0       0
 10352 ;;      Temps:          1       0       0       0       0       0       0       0
 10353 ;;      Totals:         1       1       0       0       0       0       0       0
 10354 ;;Total ram usage:        2 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    8
 10357 ;; This function calls:
 10358 ;;		_LCD_Write_4Bit
 10359 ;; This function is called by:
 10360 ;;		_LCD_Init
 10361 ;;		_LCD_Set_Cursor
 10362 ;;		_LCD_Clear
 10363 ;;		_LCD_SL
 10364 ;;		_LCD_SR
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           
 10369                           ;psect for function _LCD_CMD
 10370  07E8                     _LCD_CMD:
 10371                           
 10372                           ;incstack = 0
 10373                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 10374                           ;LCD_CMD@CMD stored from wreg
 10375  07E8  0020               	movlb	0	; select bank0
 10376  07E9  00A0               	movwf	LCD_CMD@CMD
 10377  07EA                     l3491:
 10378                           
 10379                           ;I2C_LCD.c: 94: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 95: {;I2C_LCD.c: 96:   RS = 0
      +                          ;
 10380  07EA  0023               	movlb	3	; select bank3
 10381  07EB  01CE               	clrf	_RS^(0+384)
 10382  07EC                     l3493:
 10383                           
 10384                           ;I2C_LCD.c: 97:   LCD_Write_4Bit(CMD & 0xF0);
 10385  07EC  0020               	movlb	0	; select bank0
 10386  07ED  0820               	movf	LCD_CMD@CMD,w
 10387  07EE  39F0               	andlw	240
 10388  07EF  3189  21AC  3187   	fcall	_LCD_Write_4Bit
 10389  07F2                     l3495:
 10390                           
 10391                           ;I2C_LCD.c: 98:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 10392  07F2  0020               	movlb	0	; select bank0
 10393  07F3  0820               	movf	LCD_CMD@CMD,w
 10394  07F4  00F7               	movwf	??_LCD_CMD
 10395  07F5  3003               	movlw	3
 10396  07F6                     u2935:
 10397  07F6  35F7               	lslf	??_LCD_CMD,f
 10398  07F7  3EFF               	addlw	-1
 10399  07F8  1D03               	skipz
 10400  07F9  2FF6               	goto	u2935
 10401  07FA  3577               	lslf	??_LCD_CMD,w
 10402  07FB  39F0               	andlw	240
 10403  07FC  3189  21AC  3187   	fcall	_LCD_Write_4Bit
 10404  07FF                     l482:
 10405  07FF  0008               	return
 10406  0800                     __end_of_LCD_CMD:
 10407                           
 10408                           	psect	text33
 10409  09AC                     __ptext33:	
 10410 ;; *************** function _LCD_Write_4Bit *****************
 10411 ;; Defined at:
 10412 ;;		line 86 in file "I2C_LCD.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  Nibble          1    wreg     unsigned char 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  Nibble          1    6[COMMON] unsigned char 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0, pclath, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10426 ;;      Params:         0       0       0       0       0       0       0       0
 10427 ;;      Locals:         1       0       0       0       0       0       0       0
 10428 ;;      Temps:          1       0       0       0       0       0       0       0
 10429 ;;      Totals:         2       0       0       0       0       0       0       0
 10430 ;;Total ram usage:        2 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    7
 10433 ;; This function calls:
 10434 ;;		_Delay
 10435 ;;		_IO_Expander_Write
 10436 ;; This function is called by:
 10437 ;;		_LCD_CMD
 10438 ;;		_LCD_Write_Char
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _LCD_Write_4Bit
 10444  09AC                     _LCD_Write_4Bit:
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 10448                           ;LCD_Write_4Bit@Nibble stored from wreg
 10449  09AC  00F6               	movwf	LCD_Write_4Bit@Nibble
 10450  09AD                     l3323:
 10451                           
 10452                           ;I2C_LCD.c: 86: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 87: {;I2C_LCD.c: 89
      +                          :   Nibble |= RS;
 10453  09AD  0023               	movlb	3	; select bank3
 10454  09AE  084E               	movf	_RS^(0+384),w
 10455  09AF  00F5               	movwf	??_LCD_Write_4Bit
 10456  09B0  0875               	movf	??_LCD_Write_4Bit,w
 10457  09B1  04F6               	iorwf	LCD_Write_4Bit@Nibble,f
 10458  09B2                     l3325:
 10459                           
 10460                           ;I2C_LCD.c: 90:   IO_Expander_Write(Nibble | 0x04);
 10461  09B2  0876               	movf	LCD_Write_4Bit@Nibble,w
 10462  09B3  3804               	iorlw	4
 10463  09B4  3189  2186  3189   	fcall	_IO_Expander_Write
 10464  09B7                     l3327:
 10465                           
 10466                           ;I2C_LCD.c: 91:   IO_Expander_Write(Nibble & 0xFB);
 10467  09B7  0876               	movf	LCD_Write_4Bit@Nibble,w
 10468  09B8  39FB               	andlw	251
 10469  09B9  3189  2186  3189   	fcall	_IO_Expander_Write
 10470  09BC                     l3329:
 10471                           
 10472                           ;I2C_LCD.c: 92:   Delay(50);
 10473  09BC  3032               	movlw	50
 10474  09BD  00F3               	movwf	Delay@counter
 10475  09BE  3000               	movlw	0
 10476  09BF  00F4               	movwf	Delay@counter+1
 10477  09C0  3189  213A  3189   	fcall	_Delay
 10478  09C3                     l479:
 10479  09C3  0008               	return
 10480  09C4                     __end_of_LCD_Write_4Bit:
 10481                           
 10482                           	psect	text34
 10483  0986                     __ptext34:	
 10484 ;; *************** function _IO_Expander_Write *****************
 10485 ;; Defined at:
 10486 ;;		line 79 in file "I2C_LCD.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  Data            1    wreg     unsigned char 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  Data            1    4[COMMON] unsigned char 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg, status,2, status,0, pclath, cstack
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10500 ;;      Params:         0       0       0       0       0       0       0       0
 10501 ;;      Locals:         1       0       0       0       0       0       0       0
 10502 ;;      Temps:          0       0       0       0       0       0       0       0
 10503 ;;      Totals:         1       0       0       0       0       0       0       0
 10504 ;;Total ram usage:        1 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; Hardware stack levels required when called:    6
 10507 ;; This function calls:
 10508 ;;		_I2C_Master_Start
 10509 ;;		_I2C_Master_Stop
 10510 ;;		_I2C_Master_Write
 10511 ;; This function is called by:
 10512 ;;		_LCD_Init
 10513 ;;		_LCD_Write_4Bit
 10514 ;;		_Backlight
 10515 ;;		_noBacklight
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           
 10520                           ;psect for function _IO_Expander_Write
 10521  0986                     _IO_Expander_Write:
 10522                           
 10523                           ;incstack = 0
 10524                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 10525                           ;IO_Expander_Write@Data stored from wreg
 10526  0986  00F4               	movwf	IO_Expander_Write@Data
 10527  0987                     l3255:
 10528                           
 10529                           ;I2C_LCD.c: 79: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 80: {;I2C_LCD.c: 8
      +                          1:   I2C_Master_Start();
 10530  0987  3188  20DB  3189   	fcall	_I2C_Master_Start
 10531                           
 10532                           ;I2C_LCD.c: 82:   I2C_Master_Write(i2c_add);
 10533  098A  0023               	movlb	3	; select bank3
 10534  098B  084D               	movf	_i2c_add^(0+384),w
 10535  098C  3189  2176  3189   	fcall	_I2C_Master_Write
 10536                           
 10537                           ;I2C_LCD.c: 83:   I2C_Master_Write(Data | BackLight_State);
 10538  098F  0874               	movf	IO_Expander_Write@Data,w
 10539  0990  0024               	movlb	4	; select bank4
 10540  0991  0451               	iorwf	_BackLight_State^(0+512),w
 10541  0992  3189  2176  3189   	fcall	_I2C_Master_Write
 10542                           
 10543                           ;I2C_LCD.c: 84:   I2C_Master_Stop();
 10544  0995  3188  20E1  3189   	fcall	_I2C_Master_Stop
 10545  0998                     l476:
 10546  0998  0008               	return
 10547  0999                     __end_of_IO_Expander_Write:
 10548                           
 10549                           	psect	text35
 10550  0976                     __ptext35:	
 10551 ;; *************** function _I2C_Master_Write *****************
 10552 ;; Defined at:
 10553 ;;		line 37 in file "I2C_LCD.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  data            1    wreg     unsigned char 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;  data            1    3[COMMON] unsigned char 
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      unsigned char 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0, pclath, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10567 ;;      Params:         0       0       0       0       0       0       0       0
 10568 ;;      Locals:         1       0       0       0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0
 10570 ;;      Totals:         1       0       0       0       0       0       0       0
 10571 ;;Total ram usage:        1 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    5
 10574 ;; This function calls:
 10575 ;;		_I2C_Master_Wait
 10576 ;; This function is called by:
 10577 ;;		_IO_Expander_Write
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           
 10582                           ;psect for function _I2C_Master_Write
 10583  0976                     _I2C_Master_Write:
 10584                           
 10585                           ;incstack = 0
 10586                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10587                           ;I2C_Master_Write@data stored from wreg
 10588  0976  00F3               	movwf	I2C_Master_Write@data
 10589  0977                     l3147:
 10590                           
 10591                           ;I2C_LCD.c: 38:   I2C_Master_Wait();
 10592  0977  3189  2146  3189   	fcall	_I2C_Master_Wait
 10593  097A                     l3149:
 10594                           
 10595                           ;I2C_LCD.c: 39:   SSP1BUF = data;
 10596  097A  0873               	movf	I2C_Master_Write@data,w
 10597  097B  0023               	movlb	3	; select bank3
 10598  097C  008C               	movwf	12	;volatile
 10599  097D                     l461:	
 10600                           ;I2C_LCD.c: 40:   while(!PIR3bits.SSP1IF);
 10601                           
 10602  097D  002E               	movlb	14	; select bank14
 10603  097E  1C0F               	btfss	15,0	;volatile
 10604  097F  2981               	goto	u2421
 10605  0980  2982               	goto	u2420
 10606  0981                     u2421:
 10607  0981  297D               	goto	l461
 10608  0982                     u2420:
 10609  0982                     l463:
 10610                           
 10611                           ;I2C_LCD.c: 41:   PIR3bits.SSP1IF = 0;
 10612  0982  100F               	bcf	15,0	;volatile
 10613  0983                     l3151:
 10614                           
 10615                           ;I2C_LCD.c: 42:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
 10616  0983  0023               	movlb	3	; select bank3
 10617  0984  0811               	movf	17,w	;volatile
 10618  0985                     l464:
 10619  0985  0008               	return
 10620  0986                     __end_of_I2C_Master_Write:
 10621                           
 10622                           	psect	text36
 10623  08E1                     __ptext36:	
 10624 ;; *************** function _I2C_Master_Stop *****************
 10625 ;; Defined at:
 10626 ;;		line 20 in file "I2C_LCD.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0, pclath, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10640 ;;      Params:         0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    5
 10647 ;; This function calls:
 10648 ;;		_I2C_Master_Wait
 10649 ;; This function is called by:
 10650 ;;		_IO_Expander_Write
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function _I2C_Master_Stop
 10656  08E1                     _I2C_Master_Stop:
 10657  08E1                     l3143:	
 10658                           ;incstack = 0
 10659                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10660                           
 10661                           
 10662                           ;I2C_LCD.c: 22:   I2C_Master_Wait();
 10663  08E1  3189  2146  3188   	fcall	_I2C_Master_Wait
 10664  08E4                     l3145:
 10665                           
 10666                           ;I2C_LCD.c: 23:   SSP1CON2bits.PEN = 1;
 10667  08E4  0023               	movlb	3	; select bank3
 10668  08E5  1511               	bsf	17,2	;volatile
 10669  08E6                     l452:
 10670  08E6  0008               	return
 10671  08E7                     __end_of_I2C_Master_Stop:
 10672                           
 10673                           	psect	text37
 10674  08DB                     __ptext37:	
 10675 ;; *************** function _I2C_Master_Start *****************
 10676 ;; Defined at:
 10677 ;;		line 10 in file "I2C_LCD.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, status,2, status,0, pclath, cstack
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10691 ;;      Params:         0       0       0       0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0
 10694 ;;      Totals:         0       0       0       0       0       0       0       0
 10695 ;;Total ram usage:        0 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    5
 10698 ;; This function calls:
 10699 ;;		_I2C_Master_Wait
 10700 ;; This function is called by:
 10701 ;;		_IO_Expander_Write
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           
 10706                           ;psect for function _I2C_Master_Start
 10707  08DB                     _I2C_Master_Start:
 10708  08DB                     l3139:	
 10709                           ;incstack = 0
 10710                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10711                           
 10712                           
 10713                           ;I2C_LCD.c: 12:   I2C_Master_Wait();
 10714  08DB  3189  2146  3188   	fcall	_I2C_Master_Wait
 10715  08DE                     l3141:
 10716                           
 10717                           ;I2C_LCD.c: 13:   SSP1CON2bits.SEN = 1;
 10718  08DE  0023               	movlb	3	; select bank3
 10719  08DF  1411               	bsf	17,0	;volatile
 10720  08E0                     l446:
 10721  08E0  0008               	return
 10722  08E1                     __end_of_I2C_Master_Start:
 10723                           
 10724                           	psect	text38
 10725  0946                     __ptext38:	
 10726 ;; *************** function _I2C_Master_Wait *****************
 10727 ;; Defined at:
 10728 ;;		line 6 in file "I2C_LCD.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		wreg, status,2
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10742 ;;      Params:         0       0       0       0       0       0       0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0
 10745 ;;      Totals:         0       0       0       0       0       0       0       0
 10746 ;;Total ram usage:        0 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    4
 10749 ;; This function calls:
 10750 ;;		Nothing
 10751 ;; This function is called by:
 10752 ;;		_I2C_Master_Start
 10753 ;;		_I2C_Master_Stop
 10754 ;;		_I2C_Master_Write
 10755 ;;		_I2C_Master_RepeatedStart
 10756 ;;		_I2C_ACK
 10757 ;;		_I2C_NACK
 10758 ;;		_I2C_Read_Byte
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           
 10763                           ;psect for function _I2C_Master_Wait
 10764  0946                     _I2C_Master_Wait:
 10765  0946                     l3117:	
 10766                           ;incstack = 0
 10767                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10768                           
 10769  0946                     l440:	
 10770                           ;I2C_LCD.c: 8:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 10771                           
 10772  0946  0023               	movlb	3	; select bank3
 10773  0947  190F               	btfsc	15,2	;volatile
 10774  0948  294A               	goto	u2381
 10775  0949  294B               	goto	u2380
 10776  094A                     u2381:
 10777  094A  2946               	goto	l440
 10778  094B                     u2380:
 10779  094B                     l3119:
 10780  094B  0811               	movf	17,w	;volatile
 10781  094C  391F               	andlw	31
 10782  094D  1D03               	btfss	3,2
 10783  094E  2950               	goto	u2391
 10784  094F  2951               	goto	u2390
 10785  0950                     u2391:
 10786  0950  2946               	goto	l440
 10787  0951                     u2390:
 10788  0951                     l443:
 10789  0951  0008               	return
 10790  0952                     __end_of_I2C_Master_Wait:
 10791                           
 10792                           	psect	text39
 10793  093A                     __ptext39:	
 10794 ;; *************** function _Delay *****************
 10795 ;; Defined at:
 10796 ;;		line 192 in file "I2C_LCD.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  counter         2    3[COMMON] unsigned int 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;		None
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10810 ;;      Params:         2       0       0       0       0       0       0       0
 10811 ;;      Locals:         0       0       0       0       0       0       0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0
 10813 ;;      Totals:         2       0       0       0       0       0       0       0
 10814 ;;Total ram usage:        2 bytes
 10815 ;; Hardware stack levels used:    1
 10816 ;; Hardware stack levels required when called:    4
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_main
 10821 ;;		_LCD_Init
 10822 ;;		_LCD_Write_4Bit
 10823 ;;		_LCD_Clear
 10824 ;;		_LCD_SL
 10825 ;;		_LCD_SR
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           
 10830                           ;psect for function _Delay
 10831  093A                     _Delay:
 10832  093A                     l3249:	
 10833                           ;incstack = 0
 10834                           ; Regs used in _Delay: [wreg+status,2+status,0]
 10835                           
 10836                           
 10837                           ;I2C_LCD.c: 193:   while(counter>0) counter--;
 10838  093A  293F               	goto	l3253
 10839  093B                     l3251:
 10840  093B  3001               	movlw	1
 10841  093C  02F3               	subwf	Delay@counter,f
 10842  093D  3000               	movlw	0
 10843  093E  3BF4               	subwfb	Delay@counter+1,f
 10844  093F                     l3253:
 10845  093F  0873               	movf	Delay@counter,w
 10846  0940  0474               	iorwf	Delay@counter+1,w
 10847  0941  1D03               	btfss	3,2
 10848  0942  2944               	goto	u2691
 10849  0943  2945               	goto	u2690
 10850  0944                     u2691:
 10851  0944  293B               	goto	l3251
 10852  0945                     u2690:
 10853  0945                     l521:
 10854  0945  0008               	return
 10855  0946                     __end_of_Delay:
 10856                           
 10857                           	psect	text40
 10858  05B1                     __ptext40:	
 10859 ;; *************** function _Get_Voltage *****************
 10860 ;; Defined at:
 10861 ;;		line 156 in file "main.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  k               2    3[BANK0 ] int 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10875 ;;      Params:         0       2       0       0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0
 10877 ;;      Temps:          0      17       0       0       0       0       0       0
 10878 ;;      Totals:         0      19       0       0       0       0       0       0
 10879 ;;Total ram usage:       19 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    5
 10882 ;; This function calls:
 10883 ;;		___lwdiv
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           
 10890                           ;psect for function _Get_Voltage
 10891  05B1                     _Get_Voltage:
 10892  05B1                     l3577:	
 10893                           ;incstack = 0
 10894                           ; Regs used in _Get_Voltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10895                           
 10896                           
 10897                           ;main.c: 157:     Coulomb_Data.Voltage[k] = (Coulomb_Data.Voltage_H[k] << 8) + Coulomb_D
      +                          ata.Voltage_L[k];
 10898  05B1  0020               	movlb	0	; select bank0
 10899  05B2  0824               	movf	Get_Voltage@k+1,w
 10900  05B3  00A6               	movwf	??_Get_Voltage+1
 10901  05B4  0823               	movf	Get_Voltage@k,w
 10902  05B5  00A5               	movwf	??_Get_Voltage
 10903  05B6  35A5               	lslf	??_Get_Voltage,f
 10904  05B7  0DA6               	rlf	??_Get_Voltage+1,f
 10905  05B8  30A4               	movlw	164
 10906  05B9  00A7               	movwf	??_Get_Voltage+2
 10907  05BA  3021               	movlw	33
 10908  05BB  00A8               	movwf	??_Get_Voltage+3
 10909  05BC  0825               	movf	??_Get_Voltage,w
 10910  05BD  0727               	addwf	??_Get_Voltage+2,w
 10911  05BE  0086               	movwf	6
 10912  05BF  0826               	movf	??_Get_Voltage+1,w
 10913  05C0  3D28               	addwfc	??_Get_Voltage+3,w
 10914  05C1  0087               	movwf	7
 10915  05C2  0824               	movf	Get_Voltage@k+1,w
 10916  05C3  00AA               	movwf	??_Get_Voltage+5
 10917  05C4  0823               	movf	Get_Voltage@k,w
 10918  05C5  00A9               	movwf	??_Get_Voltage+4
 10919  05C6  35A9               	lslf	??_Get_Voltage+4,f
 10920  05C7  0DAA               	rlf	??_Get_Voltage+5,f
 10921  05C8  3082               	movlw	130
 10922  05C9  00AB               	movwf	??_Get_Voltage+6
 10923  05CA  3021               	movlw	33
 10924  05CB  00AC               	movwf	??_Get_Voltage+7
 10925  05CC  0829               	movf	??_Get_Voltage+4,w
 10926  05CD  072B               	addwf	??_Get_Voltage+6,w
 10927  05CE  0084               	movwf	4
 10928  05CF  082A               	movf	??_Get_Voltage+5,w
 10929  05D0  3D2C               	addwfc	??_Get_Voltage+7,w
 10930  05D1  0085               	movwf	5
 10931  05D2  3F00               	moviw [0]fsr0
 10932  05D3  00AD               	movwf	??_Get_Voltage+8
 10933  05D4  3F01               	moviw [1]fsr0
 10934  05D5  00AE               	movwf	??_Get_Voltage+9
 10935  05D6  082D               	movf	??_Get_Voltage+8,w
 10936  05D7  00AE               	movwf	??_Get_Voltage+9
 10937  05D8  01AD               	clrf	??_Get_Voltage+8
 10938  05D9  3F40               	moviw [0]fsr1
 10939  05DA  072D               	addwf	??_Get_Voltage+8,w
 10940  05DB  00B0               	movwf	??_Get_Voltage+11
 10941  05DC  3F41               	moviw [1]fsr1
 10942  05DD  3D2E               	addwfc	??_Get_Voltage+9,w
 10943  05DE  00B1               	movwf	??_Get_Voltage+12
 10944  05DF  0824               	movf	Get_Voltage@k+1,w
 10945  05E0  00B3               	movwf	??_Get_Voltage+14
 10946  05E1  0823               	movf	Get_Voltage@k,w
 10947  05E2  00B2               	movwf	??_Get_Voltage+13
 10948  05E3  35B2               	lslf	??_Get_Voltage+13,f
 10949  05E4  0DB3               	rlf	??_Get_Voltage+14,f
 10950  05E5  30CE               	movlw	206
 10951  05E6  00B4               	movwf	??_Get_Voltage+15
 10952  05E7  3021               	movlw	33
 10953  05E8  00B5               	movwf	??_Get_Voltage+16
 10954  05E9  0832               	movf	??_Get_Voltage+13,w
 10955  05EA  0734               	addwf	??_Get_Voltage+15,w
 10956  05EB  0086               	movwf	6
 10957  05EC  0833               	movf	??_Get_Voltage+14,w
 10958  05ED  3D35               	addwfc	??_Get_Voltage+16,w
 10959  05EE  0087               	movwf	7
 10960  05EF  0830               	movf	??_Get_Voltage+11,w
 10961  05F0  3FC0               	movwi [0]fsr1
 10962  05F1  0831               	movf	??_Get_Voltage+12,w
 10963  05F2  3FC1               	movwi [1]fsr1
 10964  05F3                     l3579:
 10965                           
 10966                           ;main.c: 158:     if(Coulomb_Data.Voltage_Point==4) Coulomb_Data.Voltage[k] = Coulomb_Da
      +                          ta.Voltage[k]/10000;
 10967  05F3  30CA               	movlw	202
 10968  05F4  0086               	movwf	6
 10969  05F5  3021               	movlw	33
 10970  05F6  0087               	movwf	7
 10971  05F7  0801               	movf	1,w
 10972  05F8  390F               	andlw	15
 10973  05F9  3A04               	xorlw	4
 10974  05FA  1D03               	skipz
 10975  05FB  2DFD               	goto	u3051
 10976  05FC  2DFE               	goto	u3050
 10977  05FD                     u3051:
 10978  05FD  2E2F               	goto	l3583
 10979  05FE                     u3050:
 10980  05FE                     l3581:
 10981  05FE  3010               	movlw	16
 10982  05FF  00F3               	movwf	___lwdiv@divisor
 10983  0600  3027               	movlw	39
 10984  0601  00F4               	movwf	___lwdiv@divisor+1
 10985  0602  0824               	movf	Get_Voltage@k+1,w
 10986  0603  00A6               	movwf	??_Get_Voltage+1
 10987  0604  0823               	movf	Get_Voltage@k,w
 10988  0605  00A5               	movwf	??_Get_Voltage
 10989  0606  35A5               	lslf	??_Get_Voltage,f
 10990  0607  0DA6               	rlf	??_Get_Voltage+1,f
 10991  0608  30CE               	movlw	206
 10992  0609  00A7               	movwf	??_Get_Voltage+2
 10993  060A  3021               	movlw	33
 10994  060B  00A8               	movwf	??_Get_Voltage+3
 10995  060C  0825               	movf	??_Get_Voltage,w
 10996  060D  0727               	addwf	??_Get_Voltage+2,w
 10997  060E  0086               	movwf	6
 10998  060F  0826               	movf	??_Get_Voltage+1,w
 10999  0610  3D28               	addwfc	??_Get_Voltage+3,w
 11000  0611  0087               	movwf	7
 11001  0612  3F40               	moviw [0]fsr1
 11002  0613  00F5               	movwf	___lwdiv@dividend
 11003  0614  3F41               	moviw [1]fsr1
 11004  0615  00F6               	movwf	___lwdiv@dividend+1
 11005  0616  318C  2405  3185   	fcall	___lwdiv
 11006  0619  0020               	movlb	0	; select bank0
 11007  061A  0824               	movf	Get_Voltage@k+1,w
 11008  061B  00AA               	movwf	??_Get_Voltage+5
 11009  061C  0823               	movf	Get_Voltage@k,w
 11010  061D  00A9               	movwf	??_Get_Voltage+4
 11011  061E  35A9               	lslf	??_Get_Voltage+4,f
 11012  061F  0DAA               	rlf	??_Get_Voltage+5,f
 11013  0620  30CE               	movlw	206
 11014  0621  00AB               	movwf	??_Get_Voltage+6
 11015  0622  3021               	movlw	33
 11016  0623  00AC               	movwf	??_Get_Voltage+7
 11017  0624  0829               	movf	??_Get_Voltage+4,w
 11018  0625  072B               	addwf	??_Get_Voltage+6,w
 11019  0626  0086               	movwf	6
 11020  0627  082A               	movf	??_Get_Voltage+5,w
 11021  0628  3D2C               	addwfc	??_Get_Voltage+7,w
 11022  0629  0087               	movwf	7
 11023  062A  0873               	movf	?___lwdiv,w
 11024  062B  3FC0               	movwi [0]fsr1
 11025  062C  0874               	movf	?___lwdiv+1,w
 11026  062D  3FC1               	movwi [1]fsr1
 11027  062E  2EE3               	goto	l400
 11028  062F                     l3583:
 11029  062F  30CA               	movlw	202
 11030  0630  0086               	movwf	6
 11031  0631  3021               	movlw	33
 11032  0632  0087               	movwf	7
 11033  0633  0801               	movf	1,w
 11034  0634  390F               	andlw	15
 11035  0635  3A03               	xorlw	3
 11036  0636  1D03               	skipz
 11037  0637  2E39               	goto	u3061
 11038  0638  2E3A               	goto	u3060
 11039  0639                     u3061:
 11040  0639  2E6B               	goto	l3587
 11041  063A                     u3060:
 11042  063A                     l3585:
 11043  063A  30E8               	movlw	232
 11044  063B  00F3               	movwf	___lwdiv@divisor
 11045  063C  3003               	movlw	3
 11046  063D  00F4               	movwf	___lwdiv@divisor+1
 11047  063E  0824               	movf	Get_Voltage@k+1,w
 11048  063F  00A6               	movwf	??_Get_Voltage+1
 11049  0640  0823               	movf	Get_Voltage@k,w
 11050  0641  00A5               	movwf	??_Get_Voltage
 11051  0642  35A5               	lslf	??_Get_Voltage,f
 11052  0643  0DA6               	rlf	??_Get_Voltage+1,f
 11053  0644  30CE               	movlw	206
 11054  0645  00A7               	movwf	??_Get_Voltage+2
 11055  0646  3021               	movlw	33
 11056  0647  00A8               	movwf	??_Get_Voltage+3
 11057  0648  0825               	movf	??_Get_Voltage,w
 11058  0649  0727               	addwf	??_Get_Voltage+2,w
 11059  064A  0086               	movwf	6
 11060  064B  0826               	movf	??_Get_Voltage+1,w
 11061  064C  3D28               	addwfc	??_Get_Voltage+3,w
 11062  064D  0087               	movwf	7
 11063  064E  3F40               	moviw [0]fsr1
 11064  064F  00F5               	movwf	___lwdiv@dividend
 11065  0650  3F41               	moviw [1]fsr1
 11066  0651  00F6               	movwf	___lwdiv@dividend+1
 11067  0652  318C  2405  3185   	fcall	___lwdiv
 11068  0655  0020               	movlb	0	; select bank0
 11069  0656  0824               	movf	Get_Voltage@k+1,w
 11070  0657  00AA               	movwf	??_Get_Voltage+5
 11071  0658  0823               	movf	Get_Voltage@k,w
 11072  0659  00A9               	movwf	??_Get_Voltage+4
 11073  065A  35A9               	lslf	??_Get_Voltage+4,f
 11074  065B  0DAA               	rlf	??_Get_Voltage+5,f
 11075  065C  30CE               	movlw	206
 11076  065D  00AB               	movwf	??_Get_Voltage+6
 11077  065E  3021               	movlw	33
 11078  065F  00AC               	movwf	??_Get_Voltage+7
 11079  0660  0829               	movf	??_Get_Voltage+4,w
 11080  0661  072B               	addwf	??_Get_Voltage+6,w
 11081  0662  0086               	movwf	6
 11082  0663  082A               	movf	??_Get_Voltage+5,w
 11083  0664  3D2C               	addwfc	??_Get_Voltage+7,w
 11084  0665  0087               	movwf	7
 11085  0666  0873               	movf	?___lwdiv,w
 11086  0667  3FC0               	movwi [0]fsr1
 11087  0668  0874               	movf	?___lwdiv+1,w
 11088  0669  3FC1               	movwi [1]fsr1
 11089  066A  2EE3               	goto	l400
 11090  066B                     l3587:
 11091  066B  30CA               	movlw	202
 11092  066C  0086               	movwf	6
 11093  066D  3021               	movlw	33
 11094  066E  0087               	movwf	7
 11095  066F  0801               	movf	1,w
 11096  0670  390F               	andlw	15
 11097  0671  3A02               	xorlw	2
 11098  0672  1D03               	skipz
 11099  0673  2E75               	goto	u3071
 11100  0674  2E76               	goto	u3070
 11101  0675                     u3071:
 11102  0675  2EA7               	goto	l3591
 11103  0676                     u3070:
 11104  0676                     l3589:
 11105  0676  3064               	movlw	100
 11106  0677  00F3               	movwf	___lwdiv@divisor
 11107  0678  3000               	movlw	0
 11108  0679  00F4               	movwf	___lwdiv@divisor+1
 11109  067A  0824               	movf	Get_Voltage@k+1,w
 11110  067B  00A6               	movwf	??_Get_Voltage+1
 11111  067C  0823               	movf	Get_Voltage@k,w
 11112  067D  00A5               	movwf	??_Get_Voltage
 11113  067E  35A5               	lslf	??_Get_Voltage,f
 11114  067F  0DA6               	rlf	??_Get_Voltage+1,f
 11115  0680  30CE               	movlw	206
 11116  0681  00A7               	movwf	??_Get_Voltage+2
 11117  0682  3021               	movlw	33
 11118  0683  00A8               	movwf	??_Get_Voltage+3
 11119  0684  0825               	movf	??_Get_Voltage,w
 11120  0685  0727               	addwf	??_Get_Voltage+2,w
 11121  0686  0086               	movwf	6
 11122  0687  0826               	movf	??_Get_Voltage+1,w
 11123  0688  3D28               	addwfc	??_Get_Voltage+3,w
 11124  0689  0087               	movwf	7
 11125  068A  3F40               	moviw [0]fsr1
 11126  068B  00F5               	movwf	___lwdiv@dividend
 11127  068C  3F41               	moviw [1]fsr1
 11128  068D  00F6               	movwf	___lwdiv@dividend+1
 11129  068E  318C  2405  3185   	fcall	___lwdiv
 11130  0691  0020               	movlb	0	; select bank0
 11131  0692  0824               	movf	Get_Voltage@k+1,w
 11132  0693  00AA               	movwf	??_Get_Voltage+5
 11133  0694  0823               	movf	Get_Voltage@k,w
 11134  0695  00A9               	movwf	??_Get_Voltage+4
 11135  0696  35A9               	lslf	??_Get_Voltage+4,f
 11136  0697  0DAA               	rlf	??_Get_Voltage+5,f
 11137  0698  30CE               	movlw	206
 11138  0699  00AB               	movwf	??_Get_Voltage+6
 11139  069A  3021               	movlw	33
 11140  069B  00AC               	movwf	??_Get_Voltage+7
 11141  069C  0829               	movf	??_Get_Voltage+4,w
 11142  069D  072B               	addwf	??_Get_Voltage+6,w
 11143  069E  0086               	movwf	6
 11144  069F  082A               	movf	??_Get_Voltage+5,w
 11145  06A0  3D2C               	addwfc	??_Get_Voltage+7,w
 11146  06A1  0087               	movwf	7
 11147  06A2  0873               	movf	?___lwdiv,w
 11148  06A3  3FC0               	movwi [0]fsr1
 11149  06A4  0874               	movf	?___lwdiv+1,w
 11150  06A5  3FC1               	movwi [1]fsr1
 11151  06A6  2EE3               	goto	l400
 11152  06A7                     l3591:
 11153  06A7  30CA               	movlw	202
 11154  06A8  0086               	movwf	6
 11155  06A9  3021               	movlw	33
 11156  06AA  0087               	movwf	7
 11157  06AB  0801               	movf	1,w
 11158  06AC  390F               	andlw	15
 11159  06AD  3A01               	xorlw	1
 11160  06AE  1D03               	skipz
 11161  06AF  2EB1               	goto	u3081
 11162  06B0  2EB2               	goto	u3080
 11163  06B1                     u3081:
 11164  06B1  2EE3               	goto	l398
 11165  06B2                     u3080:
 11166  06B2                     l3593:
 11167  06B2  300A               	movlw	10
 11168  06B3  00F3               	movwf	___lwdiv@divisor
 11169  06B4  3000               	movlw	0
 11170  06B5  00F4               	movwf	___lwdiv@divisor+1
 11171  06B6  0824               	movf	Get_Voltage@k+1,w
 11172  06B7  00A6               	movwf	??_Get_Voltage+1
 11173  06B8  0823               	movf	Get_Voltage@k,w
 11174  06B9  00A5               	movwf	??_Get_Voltage
 11175  06BA  35A5               	lslf	??_Get_Voltage,f
 11176  06BB  0DA6               	rlf	??_Get_Voltage+1,f
 11177  06BC  30CE               	movlw	206
 11178  06BD  00A7               	movwf	??_Get_Voltage+2
 11179  06BE  3021               	movlw	33
 11180  06BF  00A8               	movwf	??_Get_Voltage+3
 11181  06C0  0825               	movf	??_Get_Voltage,w
 11182  06C1  0727               	addwf	??_Get_Voltage+2,w
 11183  06C2  0086               	movwf	6
 11184  06C3  0826               	movf	??_Get_Voltage+1,w
 11185  06C4  3D28               	addwfc	??_Get_Voltage+3,w
 11186  06C5  0087               	movwf	7
 11187  06C6  3F40               	moviw [0]fsr1
 11188  06C7  00F5               	movwf	___lwdiv@dividend
 11189  06C8  3F41               	moviw [1]fsr1
 11190  06C9  00F6               	movwf	___lwdiv@dividend+1
 11191  06CA  318C  2405  3185   	fcall	___lwdiv
 11192  06CD  0020               	movlb	0	; select bank0
 11193  06CE  0824               	movf	Get_Voltage@k+1,w
 11194  06CF  00AA               	movwf	??_Get_Voltage+5
 11195  06D0  0823               	movf	Get_Voltage@k,w
 11196  06D1  00A9               	movwf	??_Get_Voltage+4
 11197  06D2  35A9               	lslf	??_Get_Voltage+4,f
 11198  06D3  0DAA               	rlf	??_Get_Voltage+5,f
 11199  06D4  30CE               	movlw	206
 11200  06D5  00AB               	movwf	??_Get_Voltage+6
 11201  06D6  3021               	movlw	33
 11202  06D7  00AC               	movwf	??_Get_Voltage+7
 11203  06D8  0829               	movf	??_Get_Voltage+4,w
 11204  06D9  072B               	addwf	??_Get_Voltage+6,w
 11205  06DA  0086               	movwf	6
 11206  06DB  082A               	movf	??_Get_Voltage+5,w
 11207  06DC  3D2C               	addwfc	??_Get_Voltage+7,w
 11208  06DD  0087               	movwf	7
 11209  06DE  0873               	movf	?___lwdiv,w
 11210  06DF  3FC0               	movwi [0]fsr1
 11211  06E0  0874               	movf	?___lwdiv+1,w
 11212  06E1  3FC1               	movwi [1]fsr1
 11213  06E2  2EE3               	goto	l400
 11214  06E3                     l398:
 11215  06E3                     l400:
 11216  06E3  0008               	return
 11217  06E4                     __end_of_Get_Voltage:
 11218                           
 11219                           	psect	text41
 11220  0C05                     __ptext41:	
 11221 ;; *************** function ___lwdiv *****************
 11222 ;; Defined at:
 11223 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;  divisor         2    3[COMMON] unsigned int 
 11226 ;;  dividend        2    5[COMMON] unsigned int 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  quotient        2    1[BANK0 ] unsigned int 
 11229 ;;  counter         1    0[BANK0 ] unsigned char 
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  2    3[COMMON] unsigned int 
 11232 ;; Registers used:
 11233 ;;		wreg, status,2, status,0
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11239 ;;      Params:         4       0       0       0       0       0       0       0
 11240 ;;      Locals:         0       3       0       0       0       0       0       0
 11241 ;;      Temps:          1       0       0       0       0       0       0       0
 11242 ;;      Totals:         5       3       0       0       0       0       0       0
 11243 ;;Total ram usage:        8 bytes
 11244 ;; Hardware stack levels used:    1
 11245 ;; Hardware stack levels required when called:    4
 11246 ;; This function calls:
 11247 ;;		Nothing
 11248 ;; This function is called by:
 11249 ;;		_main
 11250 ;;		_Get_Voltage
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           
 11255                           ;psect for function ___lwdiv
 11256  0C05                     ___lwdiv:
 11257  0C05                     l3501:	
 11258                           ;incstack = 0
 11259                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11260                           
 11261  0C05  0020               	movlb	0	; select bank0
 11262  0C06  01A1               	clrf	___lwdiv@quotient
 11263  0C07  01A2               	clrf	___lwdiv@quotient+1
 11264  0C08                     l3503:
 11265  0C08  0873               	movf	___lwdiv@divisor,w
 11266  0C09  0474               	iorwf	___lwdiv@divisor+1,w
 11267  0C0A  1903               	btfsc	3,2
 11268  0C0B  2C0D               	goto	u2951
 11269  0C0C  2C0E               	goto	u2950
 11270  0C0D                     u2951:
 11271  0C0D  2C3D               	goto	l3523
 11272  0C0E                     u2950:
 11273  0C0E                     l3505:
 11274  0C0E  01A0               	clrf	___lwdiv@counter
 11275  0C0F  0AA0               	incf	___lwdiv@counter,f
 11276  0C10  2C1A               	goto	l3511
 11277  0C11                     l3507:
 11278  0C11  3001               	movlw	1
 11279  0C12                     u2965:
 11280  0C12  35F3               	lslf	___lwdiv@divisor,f
 11281  0C13  0DF4               	rlf	___lwdiv@divisor+1,f
 11282  0C14  0B89               	decfsz	9,f
 11283  0C15  2C12               	goto	u2965
 11284  0C16                     l3509:
 11285  0C16  3001               	movlw	1
 11286  0C17  00F7               	movwf	??___lwdiv
 11287  0C18  0877               	movf	??___lwdiv,w
 11288  0C19  07A0               	addwf	___lwdiv@counter,f
 11289  0C1A                     l3511:
 11290  0C1A  1FF4               	btfss	___lwdiv@divisor+1,7
 11291  0C1B  2C1D               	goto	u2971
 11292  0C1C  2C1E               	goto	u2970
 11293  0C1D                     u2971:
 11294  0C1D  2C11               	goto	l3507
 11295  0C1E                     u2970:
 11296  0C1E                     l3513:
 11297  0C1E  3001               	movlw	1
 11298  0C1F                     u2985:
 11299  0C1F  35A1               	lslf	___lwdiv@quotient,f
 11300  0C20  0DA2               	rlf	___lwdiv@quotient+1,f
 11301  0C21  0B89               	decfsz	9,f
 11302  0C22  2C1F               	goto	u2985
 11303  0C23  0874               	movf	___lwdiv@divisor+1,w
 11304  0C24  0276               	subwf	___lwdiv@dividend+1,w
 11305  0C25  1D03               	skipz
 11306  0C26  2C29               	goto	u2995
 11307  0C27  0873               	movf	___lwdiv@divisor,w
 11308  0C28  0275               	subwf	___lwdiv@dividend,w
 11309  0C29                     u2995:
 11310  0C29  1C03               	skipc
 11311  0C2A  2C2C               	goto	u2991
 11312  0C2B  2C2D               	goto	u2990
 11313  0C2C                     u2991:
 11314  0C2C  2C32               	goto	l3519
 11315  0C2D                     u2990:
 11316  0C2D                     l3515:
 11317  0C2D  0873               	movf	___lwdiv@divisor,w
 11318  0C2E  02F5               	subwf	___lwdiv@dividend,f
 11319  0C2F  0874               	movf	___lwdiv@divisor+1,w
 11320  0C30  3BF6               	subwfb	___lwdiv@dividend+1,f
 11321  0C31                     l3517:
 11322  0C31  1421               	bsf	___lwdiv@quotient,0
 11323  0C32                     l3519:
 11324  0C32  3001               	movlw	1
 11325  0C33                     u3005:
 11326  0C33  36F4               	lsrf	___lwdiv@divisor+1,f
 11327  0C34  0CF3               	rrf	___lwdiv@divisor,f
 11328  0C35  0B89               	decfsz	9,f
 11329  0C36  2C33               	goto	u3005
 11330  0C37                     l3521:
 11331  0C37  3001               	movlw	1
 11332  0C38  02A0               	subwf	___lwdiv@counter,f
 11333  0C39  1D03               	btfss	3,2
 11334  0C3A  2C3C               	goto	u3011
 11335  0C3B  2C3D               	goto	u3010
 11336  0C3C                     u3011:
 11337  0C3C  2C1E               	goto	l3513
 11338  0C3D                     u3010:
 11339  0C3D                     l3523:
 11340  0C3D  0822               	movf	___lwdiv@quotient+1,w
 11341  0C3E  00F4               	movwf	?___lwdiv+1
 11342  0C3F  0821               	movf	___lwdiv@quotient,w
 11343  0C40  00F3               	movwf	?___lwdiv
 11344  0C41                     l953:
 11345  0C41  0008               	return
 11346  0C42                     __end_of___lwdiv:
 11347                           
 11348                           	psect	text42
 11349  0A75                     __ptext42:	
 11350 ;; *************** function _EUSART_Read *****************
 11351 ;; Defined at:
 11352 ;;		line 86 in file "mcc_generated_files/eusart.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;		None
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  readValue       1    4[COMMON] unsigned char 
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      unsigned char 
 11359 ;; Registers used:
 11360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11366 ;;      Params:         0       0       0       0       0       0       0       0
 11367 ;;      Locals:         1       0       0       0       0       0       0       0
 11368 ;;      Temps:          1       0       0       0       0       0       0       0
 11369 ;;      Totals:         2       0       0       0       0       0       0       0
 11370 ;;Total ram usage:        2 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:    4
 11373 ;; This function calls:
 11374 ;;		Nothing
 11375 ;; This function is called by:
 11376 ;;		_main
 11377 ;;		_getch
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           
 11382                           ;psect for function _EUSART_Read
 11383  0A75                     _EUSART_Read:
 11384  0A75                     l3539:	
 11385                           ;incstack = 0
 11386                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11387                           
 11388  0A75                     l3541:	
 11389                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 11390                           
 11391                           
 11392                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 11393  0A75  0878               	movf	_eusartRxCount,w	;volatile
 11394  0A76  1903               	btfsc	3,2
 11395  0A77  2A79               	goto	u3031
 11396  0A78  2A7A               	goto	u3030
 11397  0A79                     u3031:
 11398  0A79  2A75               	goto	l3541
 11399  0A7A                     u3030:
 11400  0A7A                     l3543:
 11401                           
 11402                           ;mcc_generated_files/eusart.c: 94:     eusartRxLastError = eusartRxStatusBuffer[eusartRx
      +                          Tail];
 11403  0A7A  0879               	movf	_eusartRxTail,w	;volatile
 11404  0A7B  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11405  0A7C  0086               	movwf	6
 11406  0A7D  3001               	movlw	1	; select bank3/4
 11407  0A7E  0087               	movwf	7
 11408  0A7F  0801               	movf	1,w
 11409  0A80  00F3               	movwf	??_EUSART_Read
 11410  0A81  0873               	movf	??_EUSART_Read,w
 11411  0A82  0022               	movlb	2	; select bank2
 11412  0A83  00E7               	movwf	_eusartRxLastError^(0+256)	;volatile
 11413                           
 11414                           ;mcc_generated_files/eusart.c: 96:     readValue = eusartRxBuffer[eusartRxTail++];
 11415  0A84  0879               	movf	_eusartRxTail,w
 11416  0A85  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11417  0A86  0086               	movwf	6
 11418  0A87  3002               	movlw	2	; select bank4/5
 11419  0A88  0087               	movwf	7
 11420  0A89  0801               	movf	1,w
 11421  0A8A  00F3               	movwf	??_EUSART_Read
 11422  0A8B  0873               	movf	??_EUSART_Read,w
 11423  0A8C  00F4               	movwf	EUSART_Read@readValue
 11424  0A8D                     l3545:
 11425  0A8D  3001               	movlw	1
 11426  0A8E  00F3               	movwf	??_EUSART_Read
 11427  0A8F  0873               	movf	??_EUSART_Read,w
 11428  0A90  07F9               	addwf	_eusartRxTail,f	;volatile
 11429  0A91                     l3547:
 11430                           
 11431                           ;mcc_generated_files/eusart.c: 97:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11432  0A91  3027               	movlw	39
 11433  0A92  0279               	subwf	_eusartRxTail,w	;volatile
 11434  0A93  1C03               	skipc
 11435  0A94  2A96               	goto	u3041
 11436  0A95  2A97               	goto	u3040
 11437  0A96                     u3041:
 11438  0A96  2A98               	goto	l3551
 11439  0A97                     u3040:
 11440  0A97                     l3549:
 11441                           
 11442                           ;mcc_generated_files/eusart.c: 98:     {;mcc_generated_files/eusart.c: 99:         eusar
      +                          tRxTail = 0;
 11443  0A97  01F9               	clrf	_eusartRxTail	;volatile
 11444  0A98                     l3551:
 11445                           
 11446                           ;mcc_generated_files/eusart.c: 101:     PIE3bits.RCIE = 0;
 11447  0A98  002E               	movlb	14	; select bank14
 11448  0A99  1299               	bcf	25,5	;volatile
 11449  0A9A                     l3553:
 11450                           
 11451                           ;mcc_generated_files/eusart.c: 102:     eusartRxCount--;
 11452  0A9A  3001               	movlw	1
 11453  0A9B  02F8               	subwf	_eusartRxCount,f	;volatile
 11454  0A9C                     l3555:
 11455                           
 11456                           ;mcc_generated_files/eusart.c: 103:     PIE3bits.RCIE = 1;
 11457  0A9C  1699               	bsf	25,5	;volatile
 11458  0A9D                     l3557:
 11459                           
 11460                           ;mcc_generated_files/eusart.c: 105:     return readValue;
 11461  0A9D  0874               	movf	EUSART_Read@readValue,w
 11462  0A9E                     l84:
 11463  0A9E  0008               	return
 11464  0A9F                     __end_of_EUSART_Read:
 11465                           
 11466                           	psect	text43
 11467  0CF2                     __ptext43:	
 11468 ;; *************** function _BadBetteryFilter *****************
 11469 ;; Defined at:
 11470 ;;		line 177 in file "main.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;		None
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  k               2   14[BANK0 ] int 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11484 ;;      Params:         0       0       0       0       0       0       0       0
 11485 ;;      Locals:         0       2       0       0       0       0       0       0
 11486 ;;      Temps:          0       6       0       0       0       0       0       0
 11487 ;;      Totals:         0       8       0       0       0       0       0       0
 11488 ;;Total ram usage:        8 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    5
 11491 ;; This function calls:
 11492 ;;		_Sort
 11493 ;; This function is called by:
 11494 ;;		_main
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           
 11499                           ;psect for function _BadBetteryFilter
 11500  0CF2                     _BadBetteryFilter:
 11501  0CF2                     l3597:	
 11502                           ;incstack = 0
 11503                           ; Regs used in _BadBetteryFilter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11504                           
 11505                           
 11506                           ;main.c: 178:     Sort();
 11507  0CF2  318D  25C8  318C   	fcall	_Sort
 11508  0CF5                     l3599:
 11509                           
 11510                           ;main.c: 179:     for(int k=0;k<=16;k++){
 11511  0CF5  0020               	movlb	0	; select bank0
 11512  0CF6  01AE               	clrf	BadBetteryFilter@k
 11513  0CF7  01AF               	clrf	BadBetteryFilter@k+1
 11514  0CF8                     l3605:
 11515                           
 11516                           ;main.c: 180:         if((Voltage_sort[16]-Coulomb_Data.Voltage[k])>=150) badBettery[k]=
      +                          1;
 11517  0CF8  0020               	movlb	0	; select bank0
 11518  0CF9  082F               	movf	BadBetteryFilter@k+1,w
 11519  0CFA  00A9               	movwf	??_BadBetteryFilter+1
 11520  0CFB  082E               	movf	BadBetteryFilter@k,w
 11521  0CFC  00A8               	movwf	??_BadBetteryFilter
 11522  0CFD  35A8               	lslf	??_BadBetteryFilter,f
 11523  0CFE  0DA9               	rlf	??_BadBetteryFilter+1,f
 11524  0CFF  30CE               	movlw	206
 11525  0D00  00AA               	movwf	??_BadBetteryFilter+2
 11526  0D01  3021               	movlw	33
 11527  0D02  00AB               	movwf	??_BadBetteryFilter+3
 11528  0D03  0828               	movf	??_BadBetteryFilter,w
 11529  0D04  072A               	addwf	??_BadBetteryFilter+2,w
 11530  0D05  0086               	movwf	6
 11531  0D06  0829               	movf	??_BadBetteryFilter+1,w
 11532  0D07  3D2B               	addwfc	??_BadBetteryFilter+3,w
 11533  0D08  0087               	movwf	7
 11534  0D09  3020               	movlw	32
 11535  0D0A  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11536  0D0B  0084               	movwf	4
 11537  0D0C  3001               	movlw	1	; select bank2/3
 11538  0D0D  0085               	movwf	5
 11539  0D0E  3F40               	moviw [0]fsr1
 11540  0D0F  0200               	subwf	0,w
 11541  0D10  00AC               	movwf	??_BadBetteryFilter+4
 11542  0D11  3101               	addfsr 0,1
 11543  0D12  3F41               	moviw [1]fsr1
 11544  0D13  3B00               	subwfb	0,w
 11545  0D14  00AD               	movwf	??_BadBetteryFilter+5
 11546  0D15  3000               	movlw	0
 11547  0D16  022D               	subwf	??_BadBetteryFilter+5,w
 11548  0D17  3096               	movlw	150
 11549  0D18  1903               	skipnz
 11550  0D19  022C               	subwf	??_BadBetteryFilter+4,w
 11551  0D1A  1C03               	skipc
 11552  0D1B  2D1D               	goto	u3091
 11553  0D1C  2D1E               	goto	u3090
 11554  0D1D                     u3091:
 11555  0D1D  2D26               	goto	l3609
 11556  0D1E                     u3090:
 11557  0D1E                     l3607:
 11558  0D1E  352E               	lslf	BadBetteryFilter@k,w
 11559  0D1F  3EA0               	addlw	(low (_badBettery| 0))& (0+255)
 11560  0D20  0086               	movwf	6
 11561  0D21  0187               	clrf	7
 11562  0D22  3001               	movlw	1
 11563  0D23  3FC0               	movwi [0]fsr1
 11564  0D24  3000               	movlw	0
 11565  0D25  3FC1               	movwi [1]fsr1
 11566  0D26                     l3609:
 11567                           
 11568                           ;main.c: 181:         diffBettery[k]=Voltage_sort[16]-Coulomb_Data.Voltage[k];
 11569  0D26  082F               	movf	BadBetteryFilter@k+1,w
 11570  0D27  00A9               	movwf	??_BadBetteryFilter+1
 11571  0D28  082E               	movf	BadBetteryFilter@k,w
 11572  0D29  00A8               	movwf	??_BadBetteryFilter
 11573  0D2A  35A8               	lslf	??_BadBetteryFilter,f
 11574  0D2B  0DA9               	rlf	??_BadBetteryFilter+1,f
 11575  0D2C  30CE               	movlw	206
 11576  0D2D  00AA               	movwf	??_BadBetteryFilter+2
 11577  0D2E  3021               	movlw	33
 11578  0D2F  00AB               	movwf	??_BadBetteryFilter+3
 11579  0D30  0828               	movf	??_BadBetteryFilter,w
 11580  0D31  072A               	addwf	??_BadBetteryFilter+2,w
 11581  0D32  0086               	movwf	6
 11582  0D33  0829               	movf	??_BadBetteryFilter+1,w
 11583  0D34  3D2B               	addwfc	??_BadBetteryFilter+3,w
 11584  0D35  0087               	movwf	7
 11585  0D36  3020               	movlw	32
 11586  0D37  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11587  0D38  0084               	movwf	4
 11588  0D39  3001               	movlw	1	; select bank2/3
 11589  0D3A  0085               	movwf	5
 11590  0D3B  3F40               	moviw [0]fsr1
 11591  0D3C  0200               	subwf	0,w
 11592  0D3D  00AC               	movwf	??_BadBetteryFilter+4
 11593  0D3E  3101               	addfsr 0,1
 11594  0D3F  3F41               	moviw [1]fsr1
 11595  0D40  3B00               	subwfb	0,w
 11596  0D41  00AD               	movwf	??_BadBetteryFilter+5
 11597  0D42  352E               	lslf	BadBetteryFilter@k,w
 11598  0D43  3E20               	addlw	(low (_diffBettery| (0+256)))& (0+255)
 11599  0D44  0086               	movwf	6
 11600  0D45  3001               	movlw	1	; select bank2/3
 11601  0D46  0087               	movwf	7
 11602  0D47  082C               	movf	??_BadBetteryFilter+4,w
 11603  0D48  3FC0               	movwi [0]fsr1
 11604  0D49  082D               	movf	??_BadBetteryFilter+5,w
 11605  0D4A  3FC1               	movwi [1]fsr1
 11606  0D4B                     l3611:
 11607                           
 11608                           ;main.c: 182:     }
 11609  0D4B  3001               	movlw	1
 11610  0D4C  07AE               	addwf	BadBetteryFilter@k,f
 11611  0D4D  3000               	movlw	0
 11612  0D4E  3DAF               	addwfc	BadBetteryFilter@k+1,f
 11613  0D4F                     l3613:
 11614  0D4F  082F               	movf	BadBetteryFilter@k+1,w
 11615  0D50  3A80               	xorlw	128
 11616  0D51  00A8               	movwf	??_BadBetteryFilter
 11617  0D52  3080               	movlw	128
 11618  0D53  0228               	subwf	??_BadBetteryFilter,w
 11619  0D54  1D03               	skipz
 11620  0D55  2D58               	goto	u3105
 11621  0D56  3011               	movlw	17
 11622  0D57  022E               	subwf	BadBetteryFilter@k,w
 11623  0D58                     u3105:
 11624  0D58  1C03               	skipc
 11625  0D59  2D5B               	goto	u3101
 11626  0D5A  2D5C               	goto	u3100
 11627  0D5B                     u3101:
 11628  0D5B  2CF8               	goto	l3605
 11629  0D5C                     u3100:
 11630  0D5C                     l415:
 11631  0D5C  0008               	return
 11632  0D5D                     __end_of_BadBetteryFilter:
 11633                           
 11634                           	psect	text44
 11635  0DC8                     __ptext44:	
 11636 ;; *************** function _Sort *****************
 11637 ;; Defined at:
 11638 ;;		line 164 in file "main.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;		None
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  j               2    6[BANK0 ] int 
 11643 ;;  i               2    4[BANK0 ] int 
 11644 ;;  n               2    0        int 
 11645 ;;  tmp             2    0[BANK0 ] int 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11655 ;;      Params:         0       0       0       0       0       0       0       0
 11656 ;;      Locals:         0       8       0       0       0       0       0       0
 11657 ;;      Temps:          4       0       0       0       0       0       0       0
 11658 ;;      Totals:         4       8       0       0       0       0       0       0
 11659 ;;Total ram usage:       12 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:    4
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_BadBetteryFilter
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _Sort
 11671  0DC8                     _Sort:
 11672  0DC8                     l3467:	
 11673                           ;incstack = 0
 11674                           ; Regs used in _Sort: [wreg-fsr1h+status,2+status,0]
 11675                           
 11676  0DC8                     l3469:
 11677                           
 11678                           ;main.c: 167:     for(i = n-1; i > 0; i--){
 11679  0DC8  3010               	movlw	16
 11680  0DC9  0020               	movlb	0	; select bank0
 11681  0DCA  00A4               	movwf	Sort@i
 11682  0DCB  3000               	movlw	0
 11683  0DCC  00A5               	movwf	Sort@i+1
 11684  0DCD                     l3475:
 11685                           
 11686                           ;main.c: 168:         for(j = 0; j <= i-1; j++){
 11687  0DCD  0020               	movlb	0	; select bank0
 11688  0DCE  01A6               	clrf	Sort@j
 11689  0DCF  01A7               	clrf	Sort@j+1
 11690  0DD0  2E12               	goto	l3487
 11691  0DD1                     l3477:
 11692                           
 11693                           ;main.c: 169:             if( Voltage_sort[j] > Voltage_sort[j+1]){
 11694  0DD1  0020               	movlb	0	; select bank0
 11695  0DD2  3526               	lslf	Sort@j,w
 11696  0DD3  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11697  0DD4  0086               	movwf	6
 11698  0DD5  3001               	movlw	1	; select bank2/3
 11699  0DD6  0087               	movwf	7
 11700  0DD7  3F40               	moviw [0]fsr1
 11701  0DD8  00F3               	movwf	??_Sort
 11702  0DD9  3F41               	moviw [1]fsr1
 11703  0DDA  00F4               	movwf	??_Sort+1
 11704  0DDB  3526               	lslf	Sort@j,w
 11705  0DDC  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11706  0DDD  0086               	movwf	6
 11707  0DDE  3001               	movlw	1	; select bank2/3
 11708  0DDF  0087               	movwf	7
 11709  0DE0  3F40               	moviw [0]fsr1
 11710  0DE1  00F5               	movwf	??_Sort+2
 11711  0DE2  3F41               	moviw [1]fsr1
 11712  0DE3  00F6               	movwf	??_Sort+3
 11713  0DE4  0874               	movf	??_Sort+1,w
 11714  0DE5  0276               	subwf	??_Sort+3,w
 11715  0DE6  1D03               	skipz
 11716  0DE7  2DEA               	goto	u2905
 11717  0DE8  0873               	movf	??_Sort,w
 11718  0DE9  0275               	subwf	??_Sort+2,w
 11719  0DEA                     u2905:
 11720  0DEA  1803               	skipnc
 11721  0DEB  2DED               	goto	u2901
 11722  0DEC  2DEE               	goto	u2900
 11723  0DED                     u2901:
 11724  0DED  2E0E               	goto	l3485
 11725  0DEE                     u2900:
 11726  0DEE                     l3479:
 11727                           
 11728                           ;main.c: 170:                 tmp = Voltage_sort [j];
 11729  0DEE  3526               	lslf	Sort@j,w
 11730  0DEF  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11731  0DF0  0086               	movwf	6
 11732  0DF1  3001               	movlw	1	; select bank2/3
 11733  0DF2  0087               	movwf	7
 11734  0DF3  3F40               	moviw [0]fsr1
 11735  0DF4  00A0               	movwf	Sort@tmp
 11736  0DF5  3F41               	moviw [1]fsr1
 11737  0DF6  00A1               	movwf	Sort@tmp+1
 11738  0DF7                     l3481:
 11739                           
 11740                           ;main.c: 171:                 Voltage_sort[j] = Voltage_sort[j+1];
 11741  0DF7  3526               	lslf	Sort@j,w
 11742  0DF8  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11743  0DF9  0086               	movwf	6
 11744  0DFA  3001               	movlw	1	; select bank2/3
 11745  0DFB  0087               	movwf	7
 11746  0DFC  3526               	lslf	Sort@j,w
 11747  0DFD  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11748  0DFE  0084               	movwf	4
 11749  0DFF  3001               	movlw	1	; select bank2/3
 11750  0E00  0085               	movwf	5
 11751  0E01  3F40               	moviw [0]fsr1
 11752  0E02  3F80               	movwi [0]fsr0
 11753  0E03  3F41               	moviw [1]fsr1
 11754  0E04  3F81               	movwi [1]fsr0
 11755  0E05                     l3483:
 11756                           
 11757                           ;main.c: 172:                 Voltage_sort[j+1] = tmp;
 11758  0E05  3526               	lslf	Sort@j,w
 11759  0E06  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11760  0E07  0086               	movwf	6
 11761  0E08  3001               	movlw	1	; select bank2/3
 11762  0E09  0087               	movwf	7
 11763  0E0A  0820               	movf	Sort@tmp,w
 11764  0E0B  3FC0               	movwi [0]fsr1
 11765  0E0C  0821               	movf	Sort@tmp+1,w
 11766  0E0D  3FC1               	movwi [1]fsr1
 11767  0E0E                     l3485:
 11768                           
 11769                           ;main.c: 174:         }
 11770  0E0E  3001               	movlw	1
 11771  0E0F  07A6               	addwf	Sort@j,f
 11772  0E10  3000               	movlw	0
 11773  0E11  3DA7               	addwfc	Sort@j+1,f
 11774  0E12                     l3487:
 11775  0E12  0824               	movf	Sort@i,w
 11776  0E13  3EFF               	addlw	255
 11777  0E14  00F3               	movwf	??_Sort
 11778  0E15  30FF               	movlw	255
 11779  0E16  3D25               	addwfc	Sort@i+1,w
 11780  0E17  00F4               	movwf	??_Sort+1
 11781  0E18  0874               	movf	??_Sort+1,w
 11782  0E19  3A80               	xorlw	128
 11783  0E1A  00F5               	movwf	??_Sort+2
 11784  0E1B  0827               	movf	Sort@j+1,w
 11785  0E1C  3A80               	xorlw	128
 11786  0E1D  0275               	subwf	??_Sort+2,w
 11787  0E1E  1D03               	skipz
 11788  0E1F  2E22               	goto	u2915
 11789  0E20  0826               	movf	Sort@j,w
 11790  0E21  0273               	subwf	??_Sort,w
 11791  0E22                     u2915:
 11792  0E22  1803               	skipnc
 11793  0E23  2E25               	goto	u2911
 11794  0E24  2E26               	goto	u2910
 11795  0E25                     u2911:
 11796  0E25  2DD1               	goto	l3477
 11797  0E26                     u2910:
 11798  0E26                     l3489:
 11799                           
 11800                           ;main.c: 175:     }
 11801  0E26  30FF               	movlw	255
 11802  0E27  0020               	movlb	0	; select bank0
 11803  0E28  07A4               	addwf	Sort@i,f
 11804  0E29  30FF               	movlw	255
 11805  0E2A  3DA5               	addwfc	Sort@i+1,f
 11806  0E2B  0825               	movf	Sort@i+1,w
 11807  0E2C  3A80               	xorlw	128
 11808  0E2D  00F3               	movwf	??_Sort
 11809  0E2E  3080               	movlw	128
 11810  0E2F  0273               	subwf	??_Sort,w
 11811  0E30  1D03               	skipz
 11812  0E31  2E34               	goto	u2925
 11813  0E32  3001               	movlw	1
 11814  0E33  0224               	subwf	Sort@i,w
 11815  0E34                     u2925:
 11816  0E34  1803               	skipnc
 11817  0E35  2E37               	goto	u2921
 11818  0E36  2E38               	goto	u2920
 11819  0E37                     u2921:
 11820  0E37  2DCD               	goto	l3475
 11821  0E38                     u2920:
 11822  0E38                     l409:
 11823  0E38  0008               	return
 11824  0E39                     __end_of_Sort:
 11825                           
 11826                           	psect	intentry
 11827  0004                     __pintentry:	
 11828 ;; *************** function _INTERRUPT_InterruptManager *****************
 11829 ;; Defined at:
 11830 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;		None
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;		None
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11844 ;;      Params:         0       0       0       0       0       0       0       0
 11845 ;;      Locals:         0       0       0       0       0       0       0       0
 11846 ;;      Temps:          0       0       0       0       0       0       0       0
 11847 ;;      Totals:         0       0       0       0       0       0       0       0
 11848 ;;Total ram usage:        0 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:    3
 11851 ;; This function calls:
 11852 ;;		Absolute function
 11853 ;;		_EUSART_Receive_ISR
 11854 ;; This function is called by:
 11855 ;;		Interrupt level 1
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859  0004                     _INTERRUPT_InterruptManager:
 11860                           
 11861                           ;incstack = 0
 11862  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11863                           
 11864                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11865  0005  3180               	pagesel	$
 11866  0006                     i1l2841:
 11867                           
 11868                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.PEIE == 1)
 11869  0006  1F0B               	btfss	11,6	;volatile
 11870  0007  2809               	goto	u207_21
 11871  0008  280A               	goto	u207_20
 11872  0009                     u207_21:
 11873  0009  2825               	goto	i1l308
 11874  000A                     u207_20:
 11875  000A                     i1l2843:
 11876                           
 11877                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 11878  000A  002E               	movlb	14	; select bank14
 11879  000B  1E99               	btfss	25,5	;volatile
 11880  000C  280E               	goto	u208_21
 11881  000D  280F               	goto	u208_20
 11882  000E                     u208_21:
 11883  000E  2825               	goto	i1l308
 11884  000F                     u208_20:
 11885  000F                     i1l2845:
 11886  000F  1E8F               	btfss	15,5	;volatile
 11887  0010  2812               	goto	u209_21
 11888  0011  2813               	goto	u209_20
 11889  0012                     u209_21:
 11890  0012  2825               	goto	i1l308
 11891  0013                     u209_20:
 11892  0013                     i1l2847:
 11893                           
 11894                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 11895  0013  0024               	movlb	4	; select bank4
 11896  0014  084E               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512),w
 11897  0015  008A               	movwf	10
 11898  0016  084D               	movf	_EUSART_RxDefaultInterruptHandler^(0+512),w
 11899  0017  000A               	callw
 11900  0018  3180               	pagesel	$
 11901  0019                     i1l2849:
 11902  0019  1003               	clrc
 11903  001A  0020               	movlb	0	; select bank0
 11904  001B  1C96               	btfss	22,1	;volatile
 11905  001C  1403               	setc
 11906  001D  1803               	btfsc	3,0
 11907  001E  2820               	goto	u210_21
 11908  001F  2823               	goto	u210_20
 11909  0020                     u210_21:
 11910  0020  0020               	movlb	0	; select bank0
 11911  0021  1496               	bsf	22,1	;volatile
 11912  0022  2825               	goto	u211_24
 11913  0023                     u210_20:
 11914  0023  0020               	movlb	0	; select bank0
 11915  0024  1096               	bcf	22,1	;volatile
 11916  0025                     u211_24:
 11917  0025                     i1l308:
 11918  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11919  0026  0009               	retfie
 11920  0027                     __end_of_INTERRUPT_InterruptManager:
 11921                           
 11922                           	psect	text46
 11923  0BC8                     __ptext46:	
 11924 ;; *************** function _EUSART_Receive_ISR *****************
 11925 ;; Defined at:
 11926 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11940 ;;      Params:         0       0       0       0       0       0       0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:    2
 11947 ;; This function calls:
 11948 ;;		Absolute function
 11949 ;;		_EUSART_DefaultErrorHandler
 11950 ;;		_EUSART_DefaultFramingErrorHandler
 11951 ;;		_EUSART_DefaultOverrunErrorHandler
 11952 ;;		_EUSART_RxDataHandler
 11953 ;; This function is called by:
 11954 ;;		_EUSART_Initialize
 11955 ;;		_INTERRUPT_InterruptManager
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           
 11960                           ;psect for function _EUSART_Receive_ISR
 11961  0BC8                     _EUSART_Receive_ISR:
 11962  0BC8                     i1l2665:	
 11963                           ;incstack = 0
 11964                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11965                           
 11966                           
 11967                           ;mcc_generated_files/eusart.c: 131:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11968  0BC8  087A               	movf	_eusartRxHead,w	;volatile
 11969  0BC9  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11970  0BCA  0086               	movwf	6
 11971  0BCB  3001               	movlw	1	; select bank3/4
 11972  0BCC  0087               	movwf	7
 11973  0BCD  0181               	clrf	1
 11974  0BCE                     i1l2667:
 11975                           
 11976                           ;mcc_generated_files/eusart.c: 133:     if(RC1STAbits.FERR){
 11977  0BCE  0022               	movlb	2	; select bank2
 11978  0BCF  1D1D               	btfss	29,2	;volatile
 11979  0BD0  2BD2               	goto	u191_21
 11980  0BD1  2BD3               	goto	u191_20
 11981  0BD2                     u191_21:
 11982  0BD2  2BDF               	goto	i1l2673
 11983  0BD3                     u191_20:
 11984  0BD3                     i1l2669:
 11985                           
 11986                           ;mcc_generated_files/eusart.c: 134:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11987  0BD3  087A               	movf	_eusartRxHead,w	;volatile
 11988  0BD4  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11989  0BD5  0086               	movwf	6
 11990  0BD6  3001               	movlw	1	; select bank3/4
 11991  0BD7  0087               	movwf	7
 11992  0BD8  1481               	bsf	1,1
 11993  0BD9                     i1l2671:
 11994                           
 11995                           ;mcc_generated_files/eusart.c: 135:         EUSART_FramingErrorHandler();
 11996  0BD9  0024               	movlb	4	; select bank4
 11997  0BDA  084C               	movf	(_EUSART_FramingErrorHandler+1)^(0+512),w
 11998  0BDB  008A               	movwf	10
 11999  0BDC  084B               	movf	_EUSART_FramingErrorHandler^(0+512),w
 12000  0BDD  000A               	callw
 12001  0BDE  318B               	pagesel	$
 12002  0BDF                     i1l2673:
 12003                           
 12004                           ;mcc_generated_files/eusart.c: 138:     if(RC1STAbits.OERR){
 12005  0BDF  0022               	movlb	2	; select bank2
 12006  0BE0  1C9D               	btfss	29,1	;volatile
 12007  0BE1  2BE3               	goto	u192_21
 12008  0BE2  2BE4               	goto	u192_20
 12009  0BE3                     u192_21:
 12010  0BE3  2BF0               	goto	i1l2679
 12011  0BE4                     u192_20:
 12012  0BE4                     i1l2675:
 12013                           
 12014                           ;mcc_generated_files/eusart.c: 139:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 12015  0BE4  087A               	movf	_eusartRxHead,w	;volatile
 12016  0BE5  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12017  0BE6  0086               	movwf	6
 12018  0BE7  3001               	movlw	1	; select bank3/4
 12019  0BE8  0087               	movwf	7
 12020  0BE9  1501               	bsf	1,2
 12021  0BEA                     i1l2677:
 12022                           
 12023                           ;mcc_generated_files/eusart.c: 140:         EUSART_OverrunErrorHandler();
 12024  0BEA  0024               	movlb	4	; select bank4
 12025  0BEB  084A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+512),w
 12026  0BEC  008A               	movwf	10
 12027  0BED  0849               	movf	_EUSART_OverrunErrorHandler^(0+512),w
 12028  0BEE  000A               	callw
 12029  0BEF  318B               	pagesel	$
 12030  0BF0                     i1l2679:
 12031                           
 12032                           ;mcc_generated_files/eusart.c: 143:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12033  0BF0  087A               	movf	_eusartRxHead,w	;volatile
 12034  0BF1  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12035  0BF2  0086               	movwf	6
 12036  0BF3  3001               	movlw	1	; select bank3/4
 12037  0BF4  0087               	movwf	7
 12038  0BF5  0801               	movf	1,w
 12039  0BF6  1903               	btfsc	3,2
 12040  0BF7  2BF9               	goto	u193_21
 12041  0BF8  2BFA               	goto	u193_20
 12042  0BF9                     u193_21:
 12043  0BF9  2C01               	goto	i1l2683
 12044  0BFA                     u193_20:
 12045  0BFA                     i1l2681:
 12046                           
 12047                           ;mcc_generated_files/eusart.c: 144:         EUSART_ErrorHandler();
 12048  0BFA  0024               	movlb	4	; select bank4
 12049  0BFB  0848               	movf	(_EUSART_ErrorHandler+1)^(0+512),w
 12050  0BFC  008A               	movwf	10
 12051  0BFD  0847               	movf	_EUSART_ErrorHandler^(0+512),w
 12052  0BFE  000A               	callw
 12053  0BFF  318B               	pagesel	$
 12054                           
 12055                           ;mcc_generated_files/eusart.c: 145:     } else {
 12056  0C00  2C04               	goto	i1l103
 12057  0C01                     i1l2683:
 12058                           
 12059                           ;mcc_generated_files/eusart.c: 146:         EUSART_RxDataHandler();
 12060  0C01  3189  21DD  318B   	fcall	_EUSART_RxDataHandler
 12061  0C04                     i1l103:
 12062  0C04  0008               	return
 12063  0C05                     __end_of_EUSART_Receive_ISR:
 12064                           
 12065                           	psect	text47
 12066  08D7                     __ptext47:	
 12067 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12068 ;; Defined at:
 12069 ;;		line 166 in file "mcc_generated_files/eusart.c"
 12070 ;; Parameters:    Size  Location     Type
 12071 ;;		None
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;		None
 12074 ;; Return value:  Size  Location     Type
 12075 ;;                  1    wreg      void 
 12076 ;; Registers used:
 12077 ;;		None
 12078 ;; Tracked objects:
 12079 ;;		On entry : 0/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12083 ;;      Params:         0       0       0       0       0       0       0       0
 12084 ;;      Locals:         0       0       0       0       0       0       0       0
 12085 ;;      Temps:          0       0       0       0       0       0       0       0
 12086 ;;      Totals:         0       0       0       0       0       0       0       0
 12087 ;;Total ram usage:        0 bytes
 12088 ;; Hardware stack levels used:    1
 12089 ;; This function calls:
 12090 ;;		Nothing
 12091 ;; This function is called by:
 12092 ;;		_EUSART_Initialize
 12093 ;;		_EUSART_Receive_ISR
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           
 12098                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12099  08D7                     _EUSART_DefaultOverrunErrorHandler:
 12100  08D7                     i1l2497:	
 12101                           ;incstack = 0
 12102                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12103                           
 12104                           
 12105                           ;mcc_generated_files/eusart.c: 169:     RC1STAbits.CREN = 0;
 12106  08D7  0022               	movlb	2	; select bank2
 12107  08D8  121D               	bcf	29,4	;volatile
 12108                           
 12109                           ;mcc_generated_files/eusart.c: 170:     RC1STAbits.CREN = 1;
 12110  08D9  161D               	bsf	29,4	;volatile
 12111  08DA                     i1l113:
 12112  08DA  0008               	return
 12113  08DB                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12114                           
 12115                           	psect	text48
 12116  0002                     __ptext48:	
 12117 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12118 ;; Defined at:
 12119 ;;		line 164 in file "mcc_generated_files/eusart.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		None
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12133 ;;      Params:         0       0       0       0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0
 12136 ;;      Totals:         0       0       0       0       0       0       0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; This function calls:
 12140 ;;		Nothing
 12141 ;; This function is called by:
 12142 ;;		_EUSART_Initialize
 12143 ;;		_EUSART_Receive_ISR
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12149  0002                     _EUSART_DefaultFramingErrorHandler:
 12150  0002                     i1l110:	
 12151                           ;incstack = 0
 12152                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12153                           
 12154  0002  0008               	return
 12155  0003                     __end_of_EUSART_DefaultFramingErrorHandler:
 12156                           
 12157                           	psect	text49
 12158  08D3                     __ptext49:	
 12159 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12160 ;; Defined at:
 12161 ;;		line 174 in file "mcc_generated_files/eusart.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;		None
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12175 ;;      Params:         0       0       0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0
 12178 ;;      Totals:         0       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        0 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    1
 12182 ;; This function calls:
 12183 ;;		_EUSART_RxDataHandler
 12184 ;; This function is called by:
 12185 ;;		_EUSART_Initialize
 12186 ;;		_EUSART_Receive_ISR
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           
 12191                           ;psect for function _EUSART_DefaultErrorHandler
 12192  08D3                     _EUSART_DefaultErrorHandler:
 12193  08D3                     i1l2499:	
 12194                           ;incstack = 0
 12195                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12196                           
 12197                           
 12198                           ;mcc_generated_files/eusart.c: 175:     EUSART_RxDataHandler();
 12199  08D3  3189  21DD  3188   	fcall	_EUSART_RxDataHandler
 12200  08D6                     i1l116:
 12201  08D6  0008               	return
 12202  08D7                     __end_of_EUSART_DefaultErrorHandler:
 12203                           
 12204                           	psect	text50
 12205  09DD                     __ptext50:	
 12206 ;; *************** function _EUSART_RxDataHandler *****************
 12207 ;; Defined at:
 12208 ;;		line 152 in file "mcc_generated_files/eusart.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;		None
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  test            2    0        int 
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      void 
 12215 ;; Registers used:
 12216 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12222 ;;      Params:         0       0       0       0       0       0       0       0
 12223 ;;      Locals:         2       0       0       0       0       0       0       0
 12224 ;;      Temps:          1       0       0       0       0       0       0       0
 12225 ;;      Totals:         3       0       0       0       0       0       0       0
 12226 ;;Total ram usage:        3 bytes
 12227 ;; Hardware stack levels used:    1
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_EUSART_Receive_ISR
 12232 ;;		_EUSART_DefaultErrorHandler
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           
 12237                           ;psect for function _EUSART_RxDataHandler
 12238  09DD                     _EUSART_RxDataHandler:
 12239  09DD                     i1l2411:	
 12240                           ;incstack = 0
 12241                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12242                           
 12243                           
 12244                           ;mcc_generated_files/eusart.c: 154:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12245  09DD  0022               	movlb	2	; select bank2
 12246  09DE  0819               	movf	25,w	;volatile
 12247  09DF  00F0               	movwf	??_EUSART_RxDataHandler
 12248  09E0  087A               	movf	_eusartRxHead,w
 12249  09E1  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 12250  09E2  0086               	movwf	6
 12251  09E3  3002               	movlw	2	; select bank4/5
 12252  09E4  0087               	movwf	7
 12253  09E5  0870               	movf	??_EUSART_RxDataHandler,w
 12254  09E6  0081               	movwf	1
 12255  09E7                     i1l2413:
 12256  09E7  3001               	movlw	1
 12257  09E8  00F0               	movwf	??_EUSART_RxDataHandler
 12258  09E9  0870               	movf	??_EUSART_RxDataHandler,w
 12259  09EA  07FA               	addwf	_eusartRxHead,f	;volatile
 12260  09EB                     i1l2415:
 12261  09EB                     i1l2417:
 12262                           
 12263                           ;mcc_generated_files/eusart.c: 156:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12264  09EB  3027               	movlw	39
 12265  09EC  027A               	subwf	_eusartRxHead,w	;volatile
 12266  09ED  1C03               	skipc
 12267  09EE  29F0               	goto	u171_21
 12268  09EF  29F1               	goto	u171_20
 12269  09F0                     u171_21:
 12270  09F0  29F2               	goto	i1l2421
 12271  09F1                     u171_20:
 12272  09F1                     i1l2419:
 12273                           
 12274                           ;mcc_generated_files/eusart.c: 157:     {;mcc_generated_files/eusart.c: 158:         eus
      +                          artRxHead = 0;
 12275  09F1  01FA               	clrf	_eusartRxHead	;volatile
 12276  09F2                     i1l2421:
 12277                           
 12278                           ;mcc_generated_files/eusart.c: 160:     eusartRxCount++;
 12279  09F2  3001               	movlw	1
 12280  09F3  00F0               	movwf	??_EUSART_RxDataHandler
 12281  09F4  0870               	movf	??_EUSART_RxDataHandler,w
 12282  09F5  07F8               	addwf	_eusartRxCount,f	;volatile
 12283  09F6                     i1l107:
 12284  09F6  0008               	return
 12285  09F7                     __end_of_EUSART_RxDataHandler:
 12286  007E                     btemp	set	126	;btemp
 12287  007E                     int$flags	set	126
 12288  007E                     wtemp0	set	126
 12289  217C                     
 12290                           	psect	config
 12291                           
 12292                           ;Config register CONFIG1 @ 0x8007
 12293                           ;	External Oscillator mode selection bits
 12294                           ;	FEXTOSC = OFF, Oscillator not enabled
 12295                           ;	Power-up default value for COSC bits
 12296                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12297                           ;	Clock Out Enable bit
 12298                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12299                           ;	Clock Switch Enable bit
 12300                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12301                           ;	Fail-Safe Clock Monitor Enable bit
 12302                           ;	FCMEN = ON, FSCM timer enabled
 12303  8007                     	org	32775
 12304  8007  3FEC               	dw	16364
 12305                           
 12306                           ;Config register CONFIG2 @ 0x8008
 12307                           ;	Master Clear Enable bit
 12308                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12309                           ;	Power-up Timer Enable bit
 12310                           ;	PWRTE = OFF, PWRT disabled
 12311                           ;	Low-Power BOR enable bit
 12312                           ;	LPBOREN = OFF, ULPBOR disabled
 12313                           ;	Brown-out reset enable bits
 12314                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12315                           ;	Brown-out Reset Voltage Selection
 12316                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12317                           ;	Zero-cross detect disable
 12318                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12319                           ;	Peripheral Pin Select one-way control
 12320                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12321                           ;	Stack Overflow/Underflow Reset Enable bit
 12322                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12323                           ;	Background Debugger
 12324                           ;	DEBUG = OFF, Background Debugger disabled
 12325  8008                     	org	32776
 12326  8008  3FFF               	dw	16383
 12327                           
 12328                           ;Config register CONFIG3 @ 0x8009
 12329                           ;	WDT Period Select bits
 12330                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12331                           ;	WDT operating mode
 12332                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12333                           ;	WDT Window Select bits
 12334                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12335                           ;	WDT input clock selector
 12336                           ;	WDTCCS = SC, Software Control
 12337  8009                     	org	32777
 12338  8009  3F9F               	dw	16287
 12339                           
 12340                           ;Config register CONFIG4 @ 0x800A
 12341                           ;	UserNVM self-write protection bits
 12342                           ;	WRT = OFF, Write protection off
 12343                           ;	Scanner Enable bit
 12344                           ;	SCANE = available, Scanner module is available for use
 12345                           ;	Low Voltage Programming Enable bit
 12346                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12347  800A                     	org	32778
 12348  800A  3FFF               	dw	16383
 12349                           
 12350                           ;Config register CONFIG5 @ 0x800B
 12351                           ;	UserNVM Program memory code protection bit
 12352                           ;	CP = OFF, Program Memory code protection disabled
 12353                           ;	DataNVM code protection bit
 12354                           ;	CPD = OFF, Data EEPROM code protection disabled
 12355  800B                     	org	32779
 12356  800B  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        9
    BSS         234
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80     40      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            60      2      50
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1416_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[2]), STR_13(CODE[3]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> ShowbadBettery(BANK1[4]), STR_3(CODE[2]), no(BANK3[1]), STR_1(CODE[3]), 

    main@index_V_L	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_L(BIGRAM[34]), Coulomb_Data(BIGRAM[116]), 

    main@index_V_H	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_H(BIGRAM[34]), Coulomb_Data(BIGRAM[116]), 

    main@index	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_L(BIGRAM[34]), Coulomb_Data.Voltage_H(BIGRAM[34]), Coulomb_Data.ID(BIGRAM[2]), Coulomb_Data(BIGRAM[116]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->___lwmod
    _sprintf->___lwdiv
    _sprintf->___lwmod
    _vfpfcnvrt->_fputc
    _dtoa->_abs
    _pad->_fputc
    _pad->_strlen
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_Delay
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   29700
                                             16 BANK1     24    24      0
                                              0 BANK4      2     2      0
                   _BadBetteryFilter
                              _Delay
                        _EUSART_Read
                       _EUSART_Write
                        _Get_Voltage
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8695
                                              0 BANK1     16    10      6
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7739
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7320
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5537
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3325
                                             13 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1491
                                              5 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1099
                                              5 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMMON     2     0      2
                                             16 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     592
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       2     2      0      34
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                        _master_init
 ---------------------------------------------------------------------------------
 (2) _master_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     484
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    3053
                                              1 BANK0      5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1    2898
                                              1 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2870
                                              1 BANK0      2     2      0
                              _Delay
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    2777
                              _Delay
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0    1421
                                              5 COMMON     2     2      0
                              _Delay
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              4 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              3 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     0      2    1294
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Get_Voltage                                         19    17      2    2832
                                              3 BANK0     19    17      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    2401
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      37
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BadBetteryFilter                                     8     8      0     582
                                              8 BANK0      8     8      0
                               _Sort
 ---------------------------------------------------------------------------------
 (2) _Sort                                                12    12      0     390
                                              3 COMMON     4     4      0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       2
                   Absolute function *
                 _EUSART_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       2
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       1
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                3     3      0       1
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BadBetteryFilter
     _Sort
   _Delay
   _EUSART_Read
   _EUSART_Write
   _Get_Voltage
     ___lwdiv
   _LCD_Clear
     _Delay
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _Delay
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _master_init
   _TMR0_ReadTimer
   ___lwdiv
   ___lwmod
   _sprintf
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     17D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     28      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               3C      2      32      14       83.3%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     17D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Feb 24 16:52:10 2021

                ?_EUSART_SetRxInterruptHandler 0073                                              _i 00C2  
                    __size_of_BadBetteryFilter 006B                                             l63 0B28  
                                           l90 092E                                             l84 0A9E  
                                           l87 0926                                             l96 0904  
                                           _RS 01CE                                             _ch 0166  
                                           _no 01EF                                            l122 08F8  
                                          l125 08EC                                            l119 08F2  
                                          l400 06E3                                            l128 08FE  
                                          l500 0AF8                                            l181 0913  
                                          l415 0D5C                                            l247 0BC7  
                                          l175 09AB                                            l440 0946  
                                          l184 0939                                            l409 0E38  
                                          l521 0945                                            l265 0969  
                                          l178 0924                                            l274 090B  
                                          l370 0113                                            l443 0951  
                                          l515 095D                                            l452 08E6  
                                          l461 097D                                            l446 08E0  
                                          l463 0982                                            l464 0985  
                                          l473 0DC7                                            l482 07FF  
                                          l491 0A4B                                            l476 0998  
                                          l485 09DC                                            l398 06E3  
                                          l479 09C3                                            l773 07D6  
                                          l774 07E7                                            l953 0C41  
                                          l786 0FEE                                            l963 0B8E  
                                          l787 0FFF                                            _abs 0A11  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0C99  
               ?_EUSART_SetFramingErrorHandler 0073                        __size_of_PMD_Initialize 0008  
                                          wreg 0009                                __end_of_LCD_CMD 0800  
                                 ?_EUSART_Read 0070                            LCD_Write_String@Str 0021  
                               _LCD_Set_Cursor 0ACA                                           l1201 0F15  
                                         ?_abs 0076                                           l1212 0A2C  
                                         l1215 0A2C                                           l1208 0B59  
                                         l1136 0AC9                                           l1241 0A10  
                                         l1227 0C98                                           l1235 0A74  
                                         l1163 0CB5                                           l1171 0488  
                                         l1180 0539                                           l1172 0492  
                                         l3101 0C42                                           l1166 0CD7  
                                         l3111 0C7A                                           l3103 0C47  
                                         l1168 0CF1                                           l1176 04B0  
                                         l3201 0F4C                                           l3113 0C8F  
                                         l3105 0C4C                                           l3121 0A4E  
                                         l1177 04C8                                           l1194 05B0  
                                         l3211 0F87                                           l3203 0F6B  
                                         l3107 0C51                                           l3123 0A51  
                                         l3131 09FD                                           l3117 0946  
                                         l3141 08DE                                           l3221 0FD0  
                                         l3213 0F8B                                           l3205 0F78  
                                         l3109 0C5B                                           l3125 0A5F  
                                         l3133 0A01                                           l3301 0580  
                                         l3119 094B                                           l3143 08E1  
                                         l3151 0983                                           l3215 0FAD  
                                         l3207 0F7B                                           l3127 0A64  
                                         l3135 0A0A                                           l3231 0CB3  
                                         l3223 0C9B                                           l3303 0585  
                                         l3311 059D                                           l3145 08E4  
                                         l3321 08E7                                           l3401 0B94  
                                         l3161 0712                                           l3217 0FBD  
                                         l3209 0F83                                           l3129 09F8  
                                         l3241 0CE5                                           l3233 0CB8  
                                         l3225 0CA0                                           l3305 058B  
                                         l3251 093B                                           l3139 08DB  
                                         l3147 0977                                           l3323 09AD  
                                         l3315 08F9                                           l3411 0B9F  
                                         l3403 0B96                                           l3171 0757  
                                         l3163 071C                                           l3155 06E4  
                                         l3219 0FCB                                           l3235 0CC4  
                                         l3227 0CA9                                           l3307 0590  
                                         l3331 0E3B                                           l3501 0C05  
                                         l3253 093F                                           l3149 097A  
                                         l3325 09B2                                           l3317 08ED  
                                         l3421 0BB0                                           l3413 0BA8  
                                         l3405 0B98                                           l3181 0772  
                                         l3173 075A                                           l3165 073B  
                                         l3157 06E6                                           l3245 0A11  
                                         l3237 0CC9                                           l3229 0CAE  
                                         l3309 0594                                           l3261 0464  
                                         l3341 0E71                                           l3333 0E4C  
                                         l3511 0C1A                                           l3503 0C08  
                                         l3255 0987                                           l3327 09B7  
                                         l3319 08F3                                           l3431 0BBC  
                                         l3423 0BB2                                           l3415 0BAA  
                                         l3407 0B9A                                           l3191 07B8  
                                         l3183 0794                                           l3175 0762  
                                         l3167 0740                                           l3159 06F0  
                                         l3247 0A1F                                           l3095 0926  
                                         l3239 0CDC                                           l3271 04B8  
                                         l3263 046A                                           l3351 0EBD  
                                         l3343 0E82                                           l3335 0E54  
                                         l3521 0C37                                           l3513 0C1E  
                                         l3505 0C0E                                           l3249 093A  
                                         l3329 09BC                                           l3441 091F  
                                         l3433 0BBF                                           l3425 0BB4  
                                         l3417 0BAC                                           l3409 0B9D  
                                         l3185 07A4                                           l3177 0766  
                                         l3169 074A                                           l3193 0F16  
                                         l3097 092B                                           l3281 04D5  
                                         l3273 04BE                                           l3265 048D  
                                         l3257 0441                                           l3353 0ECE  
                                         l3361 0EE7                                           l3345 0E8A  
                                         l3337 0E5A                                           l3611 0D4B  
                                         l3515 0C2D                                           l3507 0C11  
                                         l3523 0C3D                                           l3443 0920  
                                         l3435 0BC2                                           l3427 0BB6  
                                         l3419 0BAE                                           l3451 0964  
                                         l3187 07A5                                           l3179 076A  
                                         l3195 0F17                                           l3099 0900  
                                         l3291 0554                                           l3283 0504  
                                         l3275 04C3                                           l3267 04A2  
                                         l3259 0451                                           l3363 0EEF  
                                         l3355 0ED6                                           l3347 0EA3  
                                         l3339 0E5F                                           l3531 0B33  
                                         l3613 0D4F                                           l3605 0CF8  
                                         l3541 0A75                                           l3517 0C31  
                                         l3509 0C16                                           l3621 0D6F  
                                         l3381 0B05                                           l3445 0923  
                                         l3437 0BC4                                           l3429 0BB9  
                                         l3453 0966                                           l3461 0934  
                                         l3701 0B6D                                           l3189 07B3  
                                         l3197 0F21                                           l3293 0561  
                                         l3285 0508                                           l3277 04CD  
                                         l3269 04A8                                           l3357 0EE1  
                                         l3533 0B47                                           l3607 0D1E  
                                         l3551 0A98                                           l3543 0A7A  
                                         l3519 0C32                                           l3631 0D89  
                                         l3623 0D73                                           l3615 0D5F  
                                         l3391 0B13                                           l3383 0B07  
                                         l3375 0AF9                                           l3439 091C  
                                         l3447 095E                                           l3463 0935  
                                         l3455 092F                                           l3703 0B71  
                                         l3711 0B8A                                           l3199 0F42  
                                         l3295 056F                                           l3287 050C  
                                         l3279 04D0                                           l3367 0EF2  
                                         l3535 0B51                                           l3527 0B2B  
                                         l3481 0DF7                                           l3609 0D26  
                                         l3553 0A9A                                           l3545 0A8D  
                                         l3641 0DA6                                           l3633 0D90  
                                         l3625 0D7A                                           l3617 0D64  
                                         l3393 0B1A                                           l3385 0B09  
                                         l3377 0AFB                                           l3449 0963  
                                         l3465 0937                                           l3457 0932  
                                         l3561 0999                                           l3705 0B7B  
                                         l3289 0547                                           l3297 0574  
                                         l3369 0F0B                                           l3529 0B2F  
                                         l3801 01B3                                           l3721 0084  
                                         l3483 0E05                                           l3475 0DCD  
                                         l3467 0DC8                                           l3555 0A9C  
                                         l3547 0A91                                           l3539 0A75  
                                         l3491 07EA                                           l3651 0DC0  
                                         l3643 0DAA                                           l3635 0D94  
                                         l3627 0D7E                                           l3619 0D68  
                                         l3395 0B26                                           l3387 0B0B  
                                         l3379 0B02                                           l3459 0933  
                                         l3571 09A8                                           l3563 099C  
                                         l3707 0B7F                                           l3299 057B  
                                         l3803 01B5                                           l3731 0098  
                                         l3723 0085                                           l3485 0E0E  
                                         l3477 0DD1                                           l3469 0DC8  
                                         l3557 0A9D                                           l3549 0A97  
                                         l3581 05FE                                           l3493 07EC  
                                         l3653 0952                                           l3645 0DB1  
                                         l3637 0D9B                                           l3629 0D85  
                                         l3661 0AD9                                           l3389 0B0C  
                                         l3397 090C                                           l3565 099F  
                                         l3573 0905                                           l3709 0B84  
                                         l3901 0428                                           l3821 01E7  
                                         l3805 01C9                                           l3741 00AC  
                                         l3733 00A0                                           l3725 0086  
                                         ?_pad 002D                                           l3479 0DEE  
                                         l3487 0E12                                           l3591 06A7  
                                         l3583 062F                                           l3495 07F2  
                                         l3647 0DB5                                           l3639 0D9F  
                                         l3663 0ADF                                           l3655 0ACC  
                                         l3399 0B8F                                           l3567 09A2  
                                         l3903 042D                                           l3831 021F  
                                         l3823 01F1                                           l3815 01D5  
                                         l3807 01CC                                           l3751 00CA  
                                         l3743 00AD                                           l3727 0095  
                                         l3719 0081                                           l3489 0E26  
                                         l3593 06B2                                           l3585 063A  
                                         l3577 05B1                                           l3649 0DBC  
                                         l3657 0ACD                                           l3665 0AE5  
                                         l3497 09C6                                           l3673 0A2D  
                                         l3569 09A5                                           l3681 0A9F  
                                         l3841 0273                                           l3833 0229  
                                         l3825 0205                                           l3817 01D8  
                                         l3809 01D0                                           l3761 00F2  
                                         l3753 00CE                                           l3745 00B2  
                                         l3729 0095                                           l3587 066B  
                                         l3579 05F3                                           l3659 0AD3  
                                         l3499 09C9                                           l3675 0A31  
                                         l3683 0AA8                                           l3851 02C7  
                                         l3843 027D                                           l3835 0259  
                                         l3827 020D                                           l3819 01DF  
                                         l3771 0120                                           l3763 0100  
                                         l3755 00D3                                           l3739 00A3  
                                         l3747 00BF                                           l3597 0CF2  
                                         l3589 0676                                           l3677 0A3B  
                                         l3693 0B5A                                           l3685 0AAA  
                                         l3861 02F2                                           l3853 02CE  
                                         l3845 02AD                                           l3837 0261  
                                         l3829 0217                                           l3781 0130  
                                         l3765 0106                                           l3757 00E1  
                                         l3773 0128                                           l3749 00C5  
                                         l3599 0CF5                                           l3679 0A40  
                                         l3695 0B60                                           l3687 0AAC  
                                         l3871 0338                                           l3863 02FA  
                                         l3855 02D6                                           l3847 02B5  
                                         l3839 026B                                           l3783 013B  
                                         l3775 012D                                           l3767 010E  
                                         l3759 00E5                                           l3697 0B64  
                                         l3689 0ABD                                           l3881 038F  
                                         l3873 0340                                           l3865 0304  
                                         l3857 02E0                                           l3849 02BF  
                                         l3785 0159                                           l3769 0117  
                                         l3699 0B69                                           l3891 03E5  
                                         l3883 0398                                           l3875 034A  
                                         l3867 0326                                           l3859 02E8  
                                         l3795 016F                                           l3787 015D  
                                         l3973 0AED                                           l3893 0407  
                                         l3885 03AF                                           l3877 0361  
                                         l3869 032E                                           l3797 0190  
                                         l3789 016C                                           l3895 040F  
                                         l3887 03C6                                           l3879 0378  
                                         l3799 0192                                           l3897 0419  
                                         l3889 03DD                                           l3899 0421  
                                         STR_1 0806                                           STR_2 0803  
                                         STR_3 080B                                           STR_4 0803  
                                         STR_5 0809                                           STR_6 0803  
                                         STR_7 080F                                           STR_8 080D  
                                         STR_9 080B                                           u3010 0C3D  
                                         u3011 0C3C                                           u3100 0D5C  
                                         u3020 0B51                                           u3101 0D5B  
                                         u3005 0C33                                           u3021 0B50  
                                         _LATA 0016                                           u3030 0A7A  
                                         u3110 0A4B                                           _LATB 0017  
                                         u3031 0A79                                           u3111 0A4A  
                                         _LATC 0018                                           u3040 0A97  
                                         u3120 0B60                                           u2400 0A74  
                                         u3200 00BF                                           u3105 0D58  
                                         u3041 0A96                                           u3121 0B5F  
                                         u2401 0A73                                           u3201 00BE  
                                         u3050 05FE                                           u2330 092B  
                                         u2410 0A0A                                           u3210 00C5  
                                         u3051 05FD                                           u2331 092A  
                                         u2411 0A09                                           u3211 00C4  
                                         u3060 063A                                           u2420 0982  
                                         u3140 0B71                                           u2500 0794  
                                         u2340 0C47                                           u3300 01C9  
                                         u3220 00F2                                           u3061 0639  
                                         u2421 0981                                           u3141 0B70  
                                         u2501 0793                                           u2341 0C46  
                                         u3301 01C8                                           u3221 00F1  
                                         u3205 00BB                                           u3070 0676  
                                         u3150 0B7B                                           u2510 07B3  
                                         u2430 06F0                                           u2350 0C4C  
                                         u3310 0361                                           u3230 0100  
                                         u3071 0675                                           u3151 0B7A  
                                         u3135 0B65                                           u2511 07B2  
                                         u2431 06EF                                           u2351 0C4B  
                                         u3311 0360                                           u3231 00FF  
                                         u3080 06B2                                           u2520 07B8  
                                         u2600 0FAD                                           u2360 0C5B  
                                         u3320 0378                                           u3240 010E  
                                         u3081 06B1                                           u2521 07B7  
                                         u2505 0790                                           u2601 0FAC  
                                         u2361 0C5A                                           u3321 0377  
                                         u3305 01C5                                           u3241 010D  
                                         u3225 00EE                                           u3090 0D1E  
                                         u3170 0B8A                                           u2450 071C  
                                         u2610 0FCB                                           u2370 0C7A  
                                         u3330 038F                                           u3250 0117  
                                         u3091 0D1D                                           u3171 0B89  
                                         u3155 0B77                                           u2451 071B  
                                         u2611 0FCA                                           u2371 0C79  
                                         u3331 038E                                           u3251 0116  
                                         u3235 00FC                                           u2380 094B  
                                         u2620 0FD0                                           u2540 0F21  
                                         u2700 045C                                           u3340 03AF  
                                         u3260 012D                                           u3180 0091  
                                         u2381 094A                                           u3165 0B80  
                                         u2621 0FCF                                           u2605 0FA9  
                                         u2541 0F20                                           u2701 045A  
                                         u3341 03AE                                           u3261 012C  
                                         u2390 0951                                           u2470 0747  
                                         u2710 045D                                           u3350 03C6  
                                         u3270 016C                                           u3190 00A0  
                                         u2391 0950                                           u2375 0C76  
                                         u3351 03C5                                           u3271 016B  
                                         u3191 009F                                           u2480 0757  
                                         u2560 0F4C                                           u2640 0CA0  
                                         u2800 0561                                           u2720 046A  
                                         u3360 03DD                                           u3280 0190  
                                         u2481 0756                                           u2561 0F4B  
                                         u2641 0C9F                                           u2801 0560  
                                         u2721 0469                                           u3361 03DC  
                                         u3281 018F                                           u2490 076A  
                                         u2650 0CAE                                           u2810 056F  
                                         u3370 043C                                           u3290 01B3  
                                         u2491 0769                                           u2651 0CAD  
                                         u2811 056E                                           u3371 043B  
                                         u3291 01B2                                           u3275 0168  
                                         u2900 0DEE                                           u2580 0F78  
                                         u2660 0CD7                                           u2820 0574  
                                         u2740 048D                                           u2901 0DED  
                                         u2581 0F77                                           u2661 0CD6  
                                         u2821 0573                                           u2805 055D  
                                         u2741 048C                                           u2910 0E26  
                                         u2590 0F8B                                           u2670 0CDC  
                                         u2830 057B                                           u2750 04A2  
                                         u2911 0E25                                           u2591 0F8A  
                                         u2671 0CDB                                           u2831 057A  
                                         u2815 056B                                           u2751 04A1  
                                         u3375 0438                                           u2920 0E38  
                                         u2680 0A1F                                           u2840 0580  
                                         u2760 04BE                                           u2921 0E37  
                                         u2905 0DEA                                           u2681 0A1E  
                                         u2665 0CD3                                           u2841 057F  
                                         u2761 04BD                                           u2690 0945  
                                         u2850 058B                                           u2770 04C3  
                                         u2915 0E22                                           u2691 0944  
                                         u2851 058A                                           u2771 04C2  
                                         u2755 049E                                           u2780 0547  
                                         u2860 0E4C                                           _PMD0 0796  
                                         u2925 0E34                                           u2685 0A1B  
                                         u2781 0546                                           u2861 0E4B  
                                         _PMD1 0797                                           u2950 0C0E  
                                         u2790 0554                                           u2870 0E71  
                                         _PMD2 0798                                           u2951 0C0D  
                                         u2935 07F6                                           u2791 0553  
                                         u2871 0E70                                           _PMD3 0799  
                                         u2880 0E82                                           _PMD4 079A  
                                         u2945 09D3                                           u2785 0543  
                                         u2881 0E81                                           _PMD5 079B  
                                         u2970 0C1E                                           u2890 0ECE  
                                         u2971 0C1D                                           u2891 0ECD  
                                         u2965 0C12                                           u2990 0C2D  
                                         u2991 0C2C                                           u2985 0C1F  
                                         u2995 0C29                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUE 0F65                                   _Voltage_sort 0142  
                                         _Sort 0DC8                              ?_LCD_Write_String 0021  
                                         abs@a 0076                                           _dbuf 01CF  
                                         _main 0081                                           _dtoa 043F  
                           __size_of_LCD_Clear 000C                            __end_of_Get_Voltage 06E4  
                                         _prec 01CB                                           _nout 01C7  
                                         pad@i 0031                                           pad@p 002E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0033                                           btemp 007E  
                                         start 0027                             ??_LCD_Write_String 0023  
                         LCD_Write_4Bit@Nibble 0076                                          ??_abs 0030  
                                        ??_pad 0030                        __end_of_TMR0_Initialize 096A  
                             __end_of_LCD_Init 0DC8                               ?_I2C_Master_Wait 0070  
                                ?_EUSART_Write 0070                               ?_I2C_Master_Stop 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0925  
                                        ?_Sort 0070                                __end_of___aodiv 07E8  
                                        ?_main 0070                                          ?_dtoa 003A  
                              __end_of___aomod 1000                                          STR_10 0803  
                                        STR_11 0809                                          STR_12 0801  
                                        STR_13 0800                                          STR_14 0803  
                                        STR_15 080F                                __end_of___lwdiv 0C42  
                                        i1l110 0002                                          i1l103 0C04  
                                        i1l113 08DA                                          i1l107 09F6  
                                        i1l116 08D6                                          i1l308 0025  
                              __end_of___lwmod 0B8F                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 0058                                          _TMR0H 001D  
                                        _TMR0L 001C                                          _PORTA 000C  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                                          _RXPPS 0ECB  
                                        _Delay 093A                         __end_of_LCD_Set_Cursor 0AF9  
                                 ?_master_init 0070                                          Sort@i 0024  
                                        Sort@j 0026                                          _flags 0164  
                                        _fputc 0C42                                          _fputs 0A4C  
                                        pad@fp 0035                                          _width 01C9  
                                        _putch 08FF                                          main@i 00EC  
                                        main@j 024F                                          dtoa@d 003A  
                                        dtoa@i 0056                                          dtoa@n 004E  
                                        dtoa@p 0048                                          dtoa@s 004C  
                                        dtoa@w 004A                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 0ACA                                 _LCD_Write_4Bit 09AC  
                               _LCD_Write_Char 09C4                                __initialization 0029  
                                 __end_of_Sort 0E39                                   __end_of_main 043F  
                                 __end_of_dtoa 05B1                              _IO_Expander_Write 0986  
                               ??_EUSART_Write 0073                    ?_INTERRUPT_InterruptManager 0070  
                           ?_IO_Expander_Write 0070                                         ??_Sort 0073  
               ??_EUSART_SetRxInterruptHandler 0075                                         ??_main 00D8  
                                       ??_dtoa 0042                              BadBetteryFilter@k 002E  
                            __end_of_LCD_Clear 095E                                      ??_LCD_CMD 0077  
                                       ?_Delay 0073                              ?_I2C_Master_Start 0070  
                            ?_I2C_Master_Write 0070                            ??_IO_Expander_Write 0074  
                              ?_LCD_Set_Cursor 0021                             ??_I2C_Master_Start 0073  
    __end_of_EUSART_DefaultFramingErrorHandler 0003     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0002                                    _Get_Voltage 05B1  
                           ??_I2C_Master_Write 0073                     _EUSART_OverrunErrorHandler 0249  
                                       ?_fputc 0075                                         ?_fputs 0025  
                                       _ANSELA 0F38                                         ?_putch 0070  
                                       _ANSELB 0F43                                         _ANSELC 0F4E  
                                       _T0CON0 001E                                         _T0CON1 001F  
                                       _RC1REG 0119                                         _RC1STA 011D  
                                       _RC3PPS 0F23                                         _RC4PPS 0F24  
                                main@index_V_H 00E6                                  main@index_V_L 00EA  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       i1l2411 09DD                                         _ODCONC 0F50  
                                       _RC6PPS 0F26                                         i1l2421 09F2  
                                       i1l2413 09E7                                         i1l2415 09EB  
                                       i1l2417 09EB                                         i1l2419 09F1  
                                       u210_20 0023                                         u210_21 0020  
                                       i1l2671 0BD9                                         i1l2497 08D7  
                                       i1l2681 0BFA                                         i1l2673 0BDF  
                                       i1l2665 0BC8                                         i1l2841 0006  
                                       i1l2499 08D3                                         i1l2683 0C01  
                                       i1l2675 0BE4                                         i1l2667 0BCE  
                                       i1l2843 000A                                         u211_24 0025  
                                       i1l2677 0BEA                                         i1l2669 0BD3  
                                       i1l2845 000F                                         i1l2679 0BF0  
                                       i1l2847 0013                                         i1l2849 0019  
                                       u207_20 000A                                         u207_21 0009  
                                       u208_20 000F                                         u208_21 000E  
                                       _INLVLA 0F3C                                         _INLVLB 0F47  
                                       _INLVLC 0F52                                         _INLVLE 0F68  
                                       u209_20 0013                                         u209_21 0012  
                                       u171_20 09F1                                         u171_21 09F0  
                                       u191_20 0BD3                                         u191_21 0BD2  
                                       u192_20 0BE4                                         u192_21 0BE3  
                                       u193_20 0BFA                                         u193_21 0BF9  
                                       _OSCFRQ 0893                                         u244lld 070F  
                                       u253lld 07D6                                         u246lld 073B  
                                       _TX1REG 011A                                         u263lld 0FEE  
                                       u255lld 0F40                                         u257lld 0F6B  
                                       u273lld 0488                                         _TX1STA 011E  
                       __end_of_LCD_Write_4Bit 09C4                         __end_of_LCD_Write_Char 09DD  
                    __end_of_IO_Expander_Write 0999                                   vfprintf@cfmt 006E  
                                    ??___aodiv 0073                                      ??___aomod 0073  
                             _BadBetteryFilter 0CF2                                      ??___lwdiv 0077  
                                    ??___lwmod 0077                               ?_TMR0_Initialize 0070  
                                       pad@buf 002D                                         dtoa@fp 0045  
                                       _strlen 09F7                                         fputc@c 0075  
                               _PMD_Initialize 090C                                         fputs@c 0029  
                                       fputs@i 002A                                         fputs@s 002C  
                             __end_of_vfprintf 0B5A                                      ??_sprintf 00CE  
                                   _badBettery 00A0                           __size_of_EUSART_Read 002A  
                            _SYSTEM_Initialize 0999                        __end_of__initialization 007D  
                                    ?_LCD_Init 0070                                ?_LCD_Write_4Bit 0070  
                           ?_SYSTEM_Initialize 0070                                ?_LCD_Write_Char 0070  
                                __end_of_Delay 0946                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0914                                   __pidataBANK4 0003  
                          ??_SYSTEM_Initialize 0075                                  __end_of_fputc 0C99  
                                __end_of_fputs 0A75                                  __end_of_putch 0905  
                      __size_of_TMR0_ReadTimer 0007                         __end_of_PMD_Initialize 0914  
                                      ??_Delay 0075                           _eusartRxStatusBuffer 01A0  
              ??_EUSART_SetOverrunErrorHandler 0075                                        ??_fputc 0020  
                    __end_of_SYSTEM_Initialize 09AC                                        ??_fputs 0026  
                                      ??_putch 0074                           __size_of_master_init 000B  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                         __end_of_EUSART_Write 092F                                     ??_LCD_Init 0021  
                  __size_of_EUSART_Receive_ISR 003D                     __size_of_IO_Expander_Write 0013  
                                   __pmaintext 0081                                     __pintentry 0004  
                    __size_of_LCD_Write_String 001F                   ??_EUSART_DefaultErrorHandler 0073  
                              ?_PMD_Initialize 0070                                        ?_strlen 0073  
                                      _LCD_CMD 07E8                                  _eusartRxCount 0078  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                           __size_of_vfpfcnvrt 00DD                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCTUNE 0892                                        _SSP1ADD 018D  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                                        _SSP1BUF 018C  
                                      _SSP1MSK 018E                       ??_EUSART_SetErrorHandler 0075  
                                      _i2c_add 01CD            __size_of_EUSART_DefaultErrorHandler 0004  
                                      ___aodiv 06E4                                        ___aomod 0F16  
                                      Sort@tmp 0020                                        ___lwdiv 0C05  
                                      ___lwmod 0B5A                                      ?_vfprintf 0068  
                             ??_LCD_Set_Cursor 0022                                 _ShowbadBettery 00C4  
                                      __ptext1 0A9F                                        __ptext2 0B29  
                                      __ptext3 0E39                                        __ptext4 043F  
                                      __ptext5 0C99                                        __ptext6 09F7  
                                      __ptext7 0A4C                                        __ptext8 0C42  
                                      __ptext9 08FF                                __size_of_strlen 001A  
                        _OSCILLATOR_Initialize 091C                                   __size_of_abs 001C  
                                 __size_of_pad 0059                       ??_PIN_MANAGER_Initialize 0073  
                     __size_of_I2C_Master_Wait 000C                       __size_of_I2C_Master_Stop 0006  
                                    _LCD_Clear 0952                                   ?_Get_Voltage 0023  
                   __size_of_SYSTEM_Initialize 0013                                        _sprintf 0A9F  
                                      clrloop0 096B                                        main@out 00DE  
                     __end_of_BadBetteryFilter 0D5D                           end_of_initialization 007D  
        __end_of_EUSART_SetOverrunErrorHandler 08F9         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 08F3                                        fputc@fp 0077  
                                      fputs@fp 0025                              _EUSART_Initialize 0AF9  
                    __size_of_I2C_Master_Start 0006                      __size_of_I2C_Master_Write 0010  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0F16  
                        TMR0_ReadTimer@readVal 0074                                     main@F12104 0168  
                                 _Coulomb_Data 217C                                     ??_vfprintf 006B  
                               _TMR0_ReadTimer 0905                                        strlen@a 0076  
                                      strlen@s 0077                            ??_EUSART_Initialize 0075  
                                    _PORTAbits 000C                                     LCD_CMD@CMD 0020  
                        __size_of_EUSART_Write 000A                                     ?_LCD_Clear 0070  
                             ??_LCD_Write_4Bit 0075                __size_of_EUSART_SetErrorHandler 0006  
                            LCD_Write_String@i 0024                               ??_LCD_Write_Char 0077  
                    __end_of_EUSART_Initialize 0B29                              __size_of_LCD_Init 006B  
                       __end_of_TMR0_ReadTimer 090C                                   Delay@counter 0073  
           __end_of_EUSART_DefaultErrorHandler 08D7                     _EUSART_DefaultErrorHandler 08D3  
                                  vfpfcnvrt@ap 0059                                    vfpfcnvrt@fp 0067  
                                  vfpfcnvrt@ll 005F                               _LCD_Write_String 0A2D  
                                 _EUSART_Write 0925                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_strlen 0A11                            start_initialization 0029  
                     __size_of_TMR0_Initialize 000C                __size_of_PIN_MANAGER_Initialize 0039  
                                  __end_of_abs 0A2D                                    __end_of_pad 0CF2  
                                ??_EUSART_Read 0073   EUSART_SetRxInterruptHandler@interruptHandler 0073  
                                  putch@txData 0074                              ??_I2C_Master_Wait 0073  
                            ??_I2C_Master_Stop 0073                 ?_EUSART_SetOverrunErrorHandler 0073  
                                  vfprintf@fmt 0068                     _EUSART_FramingErrorHandler 024B  
                             ??_PMD_Initialize 0073                                ?_TMR0_ReadTimer 0070  
                       _EUSART_SetErrorHandler 08E7                                    __pdataBANK2 0168  
                                  __pdataBANK4 0251                                       ??_strlen 0075  
                                     ?_LCD_CMD 0070                                    __pbssBIGRAM 217C  
                                  _diffBettery 0120                                    __pbssCOMMON 0078  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C8                                  __pcstackBANK4 024F  
                                ??_master_init 0073                               ___aodiv@dividend 0028  
                                  ??_LCD_Clear 0078                           __size_of_Get_Voltage 0133  
                   __end_of_EUSART_Receive_ISR 0C05                     __size_of_EUSART_Initialize 0030  
             _EUSART_RxDefaultInterruptHandler 024D                            __end_of_EUSART_Read 0A9F  
                                    __pnvBANK4 0247                               _I2C_Master_Start 08DB  
                             _I2C_Master_Write 0976                   __end_of_EUSART_RxDataHandler 09F7  
                             ___lwdiv@dividend 0075                         _PIN_MANAGER_Initialize 0B8F  
                                    _dtoa$1489 0046                          IO_Expander_Write@Data 0074  
                         EUSART_Read@readValue 0074                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0032  
                                     ?___lwdiv 0073                                       ?___lwmod 0073  
                                 _eusartRxHead 007A                                   _eusartRxTail 0079  
                         I2C_Master_Write@data 0073                   ??_INTERRUPT_InterruptManager 0073  
                            __size_of_vfprintf 0031                                       _BAUD1CON 011F  
                               __size_of_Delay 000C                               ___lwdiv@quotient 0021  
                                     ?_sprintf 00C8                                 __size_of_fputc 0057  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                            ?_BadBetteryFilter 0070                                 _eusartRxBuffer 0220  
                          __end_of_master_init 093A                              ??_TMR0_Initialize 0073  
                                     _LCD_Init 0D5D                             ??_BadBetteryFilter 0028  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0073  
                                    clear_ram0 096A                                       _PIE3bits 0719  
                            _eusartRxLastError 0167            __size_of_INTERRUPT_InterruptManager 0023  
                                     _PIR0bits 070C                ??_EUSART_SetFramingErrorHandler 0075  
                                     _PIR3bits 070F                                       _SSP1CON1 0190  
                                     _SSP1CON2 0191      __end_of_EUSART_DefaultOverrunErrorHandler 08DB  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 08D7  
                                     _SSP1STAT 018F                                      _vfpfcnvrt 0E39  
                                    main@index 00E8                               __size_of_LCD_CMD 0018  
                                  _EUSART_Read 0A75                       __end_of_LCD_Write_String 0A4C  
                                   vfprintf@ap 006A                                     vfprintf@fp 006D  
                      ??_OSCILLATOR_Initialize 0073                            _EUSART_ErrorHandler 0247  
                             __size_of___aodiv 0104                               __size_of___aomod 00EA  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0058  
                             __size_of___lwdiv 003D                               __size_of___lwmod 0035  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0030  
                                 Get_Voltage@k 0023                                     sprintf@fmt 00CA  
                                   _T0CON0bits 001E                                _I2C_Master_Wait 0946  
                              _I2C_Master_Stop 08E1                                ___lwdiv@divisor 0073  
                         _EUSART_RxDataHandler 09DD                                    _master_init 092F  
                              ___lwdiv@counter 0020                                       __ptext10 0925  
                                     __ptext11 0A11                                       __ptext20 0B8F  
                                     __ptext12 0F16                                       __ptext21 091C  
                                     __ptext13 06E4                                       __ptext30 0D5D  
                                     __ptext22 0AF9                                       __ptext14 0B5A  
                                     __ptext31 0952                                       __ptext23 08F9  
                                     __ptext15 0905                                       __ptext40 05B1  
                                     __ptext32 07E8                                       __ptext24 08F3  
                                     __ptext16 0999                                       __ptext41 0C05  
                                     __ptext33 09AC                                       __ptext25 08ED  
                                     __ptext17 092F                                       __ptext50 09DD  
                                     __ptext42 0A75                                       __ptext34 0986  
                                     __ptext26 08E7                                       __ptext18 095E  
                                     __ptext43 0CF2                                       __ptext35 0976  
                                     __ptext27 0A2D                                       __ptext19 090C  
                                     __ptext44 0DC8                                       __ptext36 08E1  
                                     __ptext28 09C4                                       __ptext37 08DB  
                                     __ptext29 0ACA                                       __ptext46 0BC8  
                                     __ptext38 0946                                       __ptext47 08D7  
                                     __ptext39 093A                                       __ptext48 0002  
                                     __ptext49 08D3                                   _SSP1CON2bits 0191  
                      __size_of_LCD_Set_Cursor 002F                               __size_of_sprintf 002B  
                                __size_of_Sort 0071                                _BackLight_State 0251  
                                __size_of_main 03BE                                  __size_of_dtoa 0172  
                             ??_TMR0_ReadTimer 0073                        ?_EUSART_SetErrorHandler 0073  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0073  
                                     int$flags 007E                                       _vfprintf 0B29  
           __end_of_INTERRUPT_InterruptManager 0027                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 08F3         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 08ED                                   _SSP1STATbits 018F  
                             ___aomod@dividend 0028                       __end_of_I2C_Master_Start 08E1  
                     __end_of_I2C_Master_Write 0986                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                             LCD_Write_Char@Data 0020  
                                     intlevel1 0000                                      sprintf@ap 00D1  
                              main@H_L_counter 00EE                               ___lwmod@dividend 0075  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 08ED  
         __end_of_EUSART_SetRxInterruptHandler 08FF          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 08F9                        __size_of_LCD_Write_4Bit 0018  
                      __size_of_LCD_Write_Char 0019                             _EUSART_Receive_ISR 0BC8  
EUSART_SetFramingErrorHandler@interruptHandler 0073                                ___aomod@divisor 0020  
                      __end_of_I2C_Master_Wait 0952                        __end_of_I2C_Master_Stop 08E7  
                                  ??_vfpfcnvrt 005A                                ___aomod@counter 0074  
                              LCD_Init@I2C_Add 0022                                  __pstringtext1 0800  
                                __pstringtext2 0803                                  __pstringtext3 0806  
                                __pstringtext4 0809                                  __pstringtext5 080B  
                                __pstringtext6 080D                                  __pstringtext7 080F  
                                __pstringtext8 0000                                       sprintf@f 00D2  
                                     sprintf@s 00C8                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0EC6                                     _SSP1CLKPPS 0EC5  
                              ___lwmod@divisor 0073                                _TMR0_Initialize 095E  
                              ___lwmod@counter 0020                              LCD_Set_Cursor@COL 0021  
                            LCD_Set_Cursor@ROW 0024                                  ??_Get_Voltage 0025  
                                   _TX1STAbits 011E                             EUSART_Write@txData 0073  
                                 ___aodiv@sign 0031                 __end_of_PIN_MANAGER_Initialize 0BC8  
                         ??_EUSART_Receive_ISR 0073                                   ___aomod@sign 0075  
