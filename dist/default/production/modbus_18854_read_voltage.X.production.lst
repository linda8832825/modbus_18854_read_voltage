

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 22 18:22:31 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18854
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x320,16
    74                           	dabs	1,0x2A0,80
    75                           	dabs	1,0x25C,20
    76                           	dabs	1,0x217C,0,_Coulomb_Data
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 09/04/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F18854 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  001C                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0110                     	;# 
   168  0110                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  0119                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011A                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011C                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011D                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011E                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  018F                     	;# 
   208  0190                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0198                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  020C                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  020F                     	;# 
   223  020F                     	;# 
   224  0210                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  0218                     	;# 
   239  0218                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021B                     	;# 
   244  021C                     	;# 
   245  021C                     	;# 
   246  021D                     	;# 
   247  021D                     	;# 
   248  021E                     	;# 
   249  021F                     	;# 
   250  028C                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028D                     	;# 
   254  028E                     	;# 
   255  028F                     	;# 
   256  0290                     	;# 
   257  0290                     	;# 
   258  0291                     	;# 
   259  0292                     	;# 
   260  0292                     	;# 
   261  0293                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0296                     	;# 
   266  0296                     	;# 
   267  0297                     	;# 
   268  0298                     	;# 
   269  0298                     	;# 
   270  0299                     	;# 
   271  0299                     	;# 
   272  029A                     	;# 
   273  029B                     	;# 
   274  029C                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  030C                     	;# 
   278  030C                     	;# 
   279  030D                     	;# 
   280  030E                     	;# 
   281  030F                     	;# 
   282  0310                     	;# 
   283  0310                     	;# 
   284  0311                     	;# 
   285  0312                     	;# 
   286  0313                     	;# 
   287  0314                     	;# 
   288  0314                     	;# 
   289  0315                     	;# 
   290  0316                     	;# 
   291  0317                     	;# 
   292  0318                     	;# 
   293  0318                     	;# 
   294  0319                     	;# 
   295  031A                     	;# 
   296  031B                     	;# 
   297  031C                     	;# 
   298  031C                     	;# 
   299  031D                     	;# 
   300  031E                     	;# 
   301  031F                     	;# 
   302  038C                     	;# 
   303  038C                     	;# 
   304  038D                     	;# 
   305  038E                     	;# 
   306  0390                     	;# 
   307  0390                     	;# 
   308  0391                     	;# 
   309  0392                     	;# 
   310  040C                     	;# 
   311  040D                     	;# 
   312  040E                     	;# 
   313  040F                     	;# 
   314  0410                     	;# 
   315  0411                     	;# 
   316  0416                     	;# 
   317  0416                     	;# 
   318  0417                     	;# 
   319  0418                     	;# 
   320  0418                     	;# 
   321  0419                     	;# 
   322  041A                     	;# 
   323  041A                     	;# 
   324  041B                     	;# 
   325  041C                     	;# 
   326  041C                     	;# 
   327  041D                     	;# 
   328  041E                     	;# 
   329  041F                     	;# 
   330  048C                     	;# 
   331  048C                     	;# 
   332  048D                     	;# 
   333  048E                     	;# 
   334  048F                     	;# 
   335  048F                     	;# 
   336  0490                     	;# 
   337  0491                     	;# 
   338  0492                     	;# 
   339  0492                     	;# 
   340  0493                     	;# 
   341  0494                     	;# 
   342  0495                     	;# 
   343  0495                     	;# 
   344  0496                     	;# 
   345  0497                     	;# 
   346  0498                     	;# 
   347  0499                     	;# 
   348  049A                     	;# 
   349  049B                     	;# 
   350  049C                     	;# 
   351  049D                     	;# 
   352  050C                     	;# 
   353  050C                     	;# 
   354  050D                     	;# 
   355  050E                     	;# 
   356  050F                     	;# 
   357  050F                     	;# 
   358  0510                     	;# 
   359  0511                     	;# 
   360  0512                     	;# 
   361  0512                     	;# 
   362  0513                     	;# 
   363  0514                     	;# 
   364  0515                     	;# 
   365  0515                     	;# 
   366  0516                     	;# 
   367  0517                     	;# 
   368  0518                     	;# 
   369  0519                     	;# 
   370  051A                     	;# 
   371  051B                     	;# 
   372  051C                     	;# 
   373  051D                     	;# 
   374  058C                     	;# 
   375  058C                     	;# 
   376  058D                     	;# 
   377  058E                     	;# 
   378  058F                     	;# 
   379  058F                     	;# 
   380  0590                     	;# 
   381  0591                     	;# 
   382  0592                     	;# 
   383  0593                     	;# 
   384  060C                     	;# 
   385  060D                     	;# 
   386  060E                     	;# 
   387  060F                     	;# 
   388  0610                     	;# 
   389  0611                     	;# 
   390  0612                     	;# 
   391  0613                     	;# 
   392  0614                     	;# 
   393  0616                     	;# 
   394  0617                     	;# 
   395  0618                     	;# 
   396  0619                     	;# 
   397  061A                     	;# 
   398  061B                     	;# 
   399  061C                     	;# 
   400  061D                     	;# 
   401  061E                     	;# 
   402  068C                     	;# 
   403  068D                     	;# 
   404  068E                     	;# 
   405  068F                     	;# 
   406  0690                     	;# 
   407  0691                     	;# 
   408  0692                     	;# 
   409  0693                     	;# 
   410  0694                     	;# 
   411  070C                     	;# 
   412  070D                     	;# 
   413  070E                     	;# 
   414  070F                     	;# 
   415  0710                     	;# 
   416  0711                     	;# 
   417  0712                     	;# 
   418  0713                     	;# 
   419  0714                     	;# 
   420  0716                     	;# 
   421  0717                     	;# 
   422  0718                     	;# 
   423  0719                     	;# 
   424  071A                     	;# 
   425  071B                     	;# 
   426  071C                     	;# 
   427  071D                     	;# 
   428  071E                     	;# 
   429  0796                     	;# 
   430  0797                     	;# 
   431  0798                     	;# 
   432  0799                     	;# 
   433  079A                     	;# 
   434  079B                     	;# 
   435  080C                     	;# 
   436  080D                     	;# 
   437  080E                     	;# 
   438  080F                     	;# 
   439  0810                     	;# 
   440  0811                     	;# 
   441  0812                     	;# 
   442  0813                     	;# 
   443  0814                     	;# 
   444  081A                     	;# 
   445  081B                     	;# 
   446  081C                     	;# 
   447  081D                     	;# 
   448  081E                     	;# 
   449  081F                     	;# 
   450  088C                     	;# 
   451  088D                     	;# 
   452  088E                     	;# 
   453  088F                     	;# 
   454  0890                     	;# 
   455  0891                     	;# 
   456  0892                     	;# 
   457  0893                     	;# 
   458  0895                     	;# 
   459  0896                     	;# 
   460  0897                     	;# 
   461  0898                     	;# 
   462  0899                     	;# 
   463  089A                     	;# 
   464  089B                     	;# 
   465  090C                     	;# 
   466  090E                     	;# 
   467  090F                     	;# 
   468  091F                     	;# 
   469  098F                     	;# 
   470  098F                     	;# 
   471  0990                     	;# 
   472  0991                     	;# 
   473  0992                     	;# 
   474  0993                     	;# 
   475  0994                     	;# 
   476  0995                     	;# 
   477  0996                     	;# 
   478  0997                     	;# 
   479  0E0F                     	;# 
   480  0E10                     	;# 
   481  0E11                     	;# 
   482  0E12                     	;# 
   483  0E13                     	;# 
   484  0E14                     	;# 
   485  0E15                     	;# 
   486  0E16                     	;# 
   487  0E17                     	;# 
   488  0E18                     	;# 
   489  0E19                     	;# 
   490  0E1A                     	;# 
   491  0E1B                     	;# 
   492  0E1C                     	;# 
   493  0E1D                     	;# 
   494  0E1E                     	;# 
   495  0E1F                     	;# 
   496  0E20                     	;# 
   497  0E21                     	;# 
   498  0E22                     	;# 
   499  0E23                     	;# 
   500  0E24                     	;# 
   501  0E25                     	;# 
   502  0E26                     	;# 
   503  0E27                     	;# 
   504  0E28                     	;# 
   505  0E29                     	;# 
   506  0E2A                     	;# 
   507  0E2B                     	;# 
   508  0E2C                     	;# 
   509  0E2D                     	;# 
   510  0E2E                     	;# 
   511  0E2F                     	;# 
   512  0E30                     	;# 
   513  0E31                     	;# 
   514  0E32                     	;# 
   515  0E33                     	;# 
   516  0E34                     	;# 
   517  0E35                     	;# 
   518  0E36                     	;# 
   519  0E37                     	;# 
   520  0E8F                     	;# 
   521  0E90                     	;# 
   522  0E91                     	;# 
   523  0E92                     	;# 
   524  0E93                     	;# 
   525  0E94                     	;# 
   526  0E95                     	;# 
   527  0E96                     	;# 
   528  0E97                     	;# 
   529  0E9C                     	;# 
   530  0E9D                     	;# 
   531  0E9E                     	;# 
   532  0EA1                     	;# 
   533  0EA2                     	;# 
   534  0EA3                     	;# 
   535  0EA4                     	;# 
   536  0EA5                     	;# 
   537  0EA9                     	;# 
   538  0EAA                     	;# 
   539  0EAB                     	;# 
   540  0EAC                     	;# 
   541  0EB1                     	;# 
   542  0EB2                     	;# 
   543  0EB3                     	;# 
   544  0EB8                     	;# 
   545  0EB9                     	;# 
   546  0EBA                     	;# 
   547  0EBB                     	;# 
   548  0EBC                     	;# 
   549  0EBD                     	;# 
   550  0EBE                     	;# 
   551  0EC3                     	;# 
   552  0EC5                     	;# 
   553  0EC6                     	;# 
   554  0EC7                     	;# 
   555  0EC8                     	;# 
   556  0EC9                     	;# 
   557  0ECA                     	;# 
   558  0ECB                     	;# 
   559  0ECC                     	;# 
   560  0F10                     	;# 
   561  0F11                     	;# 
   562  0F12                     	;# 
   563  0F13                     	;# 
   564  0F14                     	;# 
   565  0F15                     	;# 
   566  0F16                     	;# 
   567  0F17                     	;# 
   568  0F18                     	;# 
   569  0F19                     	;# 
   570  0F1A                     	;# 
   571  0F1B                     	;# 
   572  0F1C                     	;# 
   573  0F1D                     	;# 
   574  0F1E                     	;# 
   575  0F1F                     	;# 
   576  0F20                     	;# 
   577  0F21                     	;# 
   578  0F22                     	;# 
   579  0F23                     	;# 
   580  0F24                     	;# 
   581  0F25                     	;# 
   582  0F26                     	;# 
   583  0F27                     	;# 
   584  0F38                     	;# 
   585  0F39                     	;# 
   586  0F3A                     	;# 
   587  0F3B                     	;# 
   588  0F3C                     	;# 
   589  0F3D                     	;# 
   590  0F3E                     	;# 
   591  0F3F                     	;# 
   592  0F40                     	;# 
   593  0F41                     	;# 
   594  0F43                     	;# 
   595  0F44                     	;# 
   596  0F45                     	;# 
   597  0F46                     	;# 
   598  0F47                     	;# 
   599  0F48                     	;# 
   600  0F49                     	;# 
   601  0F4A                     	;# 
   602  0F4B                     	;# 
   603  0F4C                     	;# 
   604  0F4E                     	;# 
   605  0F4F                     	;# 
   606  0F50                     	;# 
   607  0F51                     	;# 
   608  0F52                     	;# 
   609  0F53                     	;# 
   610  0F54                     	;# 
   611  0F55                     	;# 
   612  0F56                     	;# 
   613  0F57                     	;# 
   614  0F65                     	;# 
   615  0F68                     	;# 
   616  0F69                     	;# 
   617  0F6A                     	;# 
   618  0F6B                     	;# 
   619  0FE4                     	;# 
   620  0FE5                     	;# 
   621  0FE6                     	;# 
   622  0FE7                     	;# 
   623  0FE8                     	;# 
   624  0FE9                     	;# 
   625  0FEA                     	;# 
   626  0FEB                     	;# 
   627  0FED                     	;# 
   628  0FEE                     	;# 
   629  0FEF                     	;# 
   630  0000                     	;# 
   631  0001                     	;# 
   632  0002                     	;# 
   633  0003                     	;# 
   634  0004                     	;# 
   635  0005                     	;# 
   636  0006                     	;# 
   637  0007                     	;# 
   638  0008                     	;# 
   639  0009                     	;# 
   640  000A                     	;# 
   641  000B                     	;# 
   642  000C                     	;# 
   643  000D                     	;# 
   644  000E                     	;# 
   645  0010                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0013                     	;# 
   649  0016                     	;# 
   650  0017                     	;# 
   651  0018                     	;# 
   652  001C                     	;# 
   653  001C                     	;# 
   654  001D                     	;# 
   655  001D                     	;# 
   656  001E                     	;# 
   657  001F                     	;# 
   658  008C                     	;# 
   659  008C                     	;# 
   660  008D                     	;# 
   661  008E                     	;# 
   662  008E                     	;# 
   663  008F                     	;# 
   664  0090                     	;# 
   665  0090                     	;# 
   666  0091                     	;# 
   667  0093                     	;# 
   668  0094                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0097                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009A                     	;# 
   675  009B                     	;# 
   676  009C                     	;# 
   677  009D                     	;# 
   678  009E                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010E                     	;# 
   683  010F                     	;# 
   684  0110                     	;# 
   685  0110                     	;# 
   686  0111                     	;# 
   687  0112                     	;# 
   688  0112                     	;# 
   689  0113                     	;# 
   690  0114                     	;# 
   691  0114                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0119                     	;# 
   697  0119                     	;# 
   698  0119                     	;# 
   699  011A                     	;# 
   700  011A                     	;# 
   701  011A                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011B                     	;# 
   707  011C                     	;# 
   708  011C                     	;# 
   709  011C                     	;# 
   710  011D                     	;# 
   711  011D                     	;# 
   712  011D                     	;# 
   713  011E                     	;# 
   714  011E                     	;# 
   715  011E                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  011F                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018E                     	;# 
   724  018F                     	;# 
   725  0190                     	;# 
   726  0191                     	;# 
   727  0192                     	;# 
   728  0196                     	;# 
   729  0197                     	;# 
   730  0198                     	;# 
   731  0199                     	;# 
   732  019A                     	;# 
   733  019B                     	;# 
   734  019C                     	;# 
   735  020C                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  020F                     	;# 
   740  020F                     	;# 
   741  0210                     	;# 
   742  0210                     	;# 
   743  0211                     	;# 
   744  0211                     	;# 
   745  0212                     	;# 
   746  0212                     	;# 
   747  0213                     	;# 
   748  0214                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0216                     	;# 
   752  0216                     	;# 
   753  0217                     	;# 
   754  0217                     	;# 
   755  0218                     	;# 
   756  0218                     	;# 
   757  0219                     	;# 
   758  021A                     	;# 
   759  021B                     	;# 
   760  021B                     	;# 
   761  021C                     	;# 
   762  021C                     	;# 
   763  021D                     	;# 
   764  021D                     	;# 
   765  021E                     	;# 
   766  021F                     	;# 
   767  028C                     	;# 
   768  028C                     	;# 
   769  028D                     	;# 
   770  028D                     	;# 
   771  028E                     	;# 
   772  028F                     	;# 
   773  0290                     	;# 
   774  0290                     	;# 
   775  0291                     	;# 
   776  0292                     	;# 
   777  0292                     	;# 
   778  0293                     	;# 
   779  0293                     	;# 
   780  0294                     	;# 
   781  0295                     	;# 
   782  0296                     	;# 
   783  0296                     	;# 
   784  0297                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029B                     	;# 
   791  029C                     	;# 
   792  029C                     	;# 
   793  029D                     	;# 
   794  030C                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  030F                     	;# 
   799  0310                     	;# 
   800  0310                     	;# 
   801  0311                     	;# 
   802  0312                     	;# 
   803  0313                     	;# 
   804  0314                     	;# 
   805  0314                     	;# 
   806  0315                     	;# 
   807  0316                     	;# 
   808  0317                     	;# 
   809  0318                     	;# 
   810  0318                     	;# 
   811  0319                     	;# 
   812  031A                     	;# 
   813  031B                     	;# 
   814  031C                     	;# 
   815  031C                     	;# 
   816  031D                     	;# 
   817  031E                     	;# 
   818  031F                     	;# 
   819  038C                     	;# 
   820  038C                     	;# 
   821  038D                     	;# 
   822  038E                     	;# 
   823  0390                     	;# 
   824  0390                     	;# 
   825  0391                     	;# 
   826  0392                     	;# 
   827  040C                     	;# 
   828  040D                     	;# 
   829  040E                     	;# 
   830  040F                     	;# 
   831  0410                     	;# 
   832  0411                     	;# 
   833  0416                     	;# 
   834  0416                     	;# 
   835  0417                     	;# 
   836  0418                     	;# 
   837  0418                     	;# 
   838  0419                     	;# 
   839  041A                     	;# 
   840  041A                     	;# 
   841  041B                     	;# 
   842  041C                     	;# 
   843  041C                     	;# 
   844  041D                     	;# 
   845  041E                     	;# 
   846  041F                     	;# 
   847  048C                     	;# 
   848  048C                     	;# 
   849  048D                     	;# 
   850  048E                     	;# 
   851  048F                     	;# 
   852  048F                     	;# 
   853  0490                     	;# 
   854  0491                     	;# 
   855  0492                     	;# 
   856  0492                     	;# 
   857  0493                     	;# 
   858  0494                     	;# 
   859  0495                     	;# 
   860  0495                     	;# 
   861  0496                     	;# 
   862  0497                     	;# 
   863  0498                     	;# 
   864  0499                     	;# 
   865  049A                     	;# 
   866  049B                     	;# 
   867  049C                     	;# 
   868  049D                     	;# 
   869  050C                     	;# 
   870  050C                     	;# 
   871  050D                     	;# 
   872  050E                     	;# 
   873  050F                     	;# 
   874  050F                     	;# 
   875  0510                     	;# 
   876  0511                     	;# 
   877  0512                     	;# 
   878  0512                     	;# 
   879  0513                     	;# 
   880  0514                     	;# 
   881  0515                     	;# 
   882  0515                     	;# 
   883  0516                     	;# 
   884  0517                     	;# 
   885  0518                     	;# 
   886  0519                     	;# 
   887  051A                     	;# 
   888  051B                     	;# 
   889  051C                     	;# 
   890  051D                     	;# 
   891  058C                     	;# 
   892  058C                     	;# 
   893  058D                     	;# 
   894  058E                     	;# 
   895  058F                     	;# 
   896  058F                     	;# 
   897  0590                     	;# 
   898  0591                     	;# 
   899  0592                     	;# 
   900  0593                     	;# 
   901  060C                     	;# 
   902  060D                     	;# 
   903  060E                     	;# 
   904  060F                     	;# 
   905  0610                     	;# 
   906  0611                     	;# 
   907  0612                     	;# 
   908  0613                     	;# 
   909  0614                     	;# 
   910  0616                     	;# 
   911  0617                     	;# 
   912  0618                     	;# 
   913  0619                     	;# 
   914  061A                     	;# 
   915  061B                     	;# 
   916  061C                     	;# 
   917  061D                     	;# 
   918  061E                     	;# 
   919  068C                     	;# 
   920  068D                     	;# 
   921  068E                     	;# 
   922  068F                     	;# 
   923  0690                     	;# 
   924  0691                     	;# 
   925  0692                     	;# 
   926  0693                     	;# 
   927  0694                     	;# 
   928  070C                     	;# 
   929  070D                     	;# 
   930  070E                     	;# 
   931  070F                     	;# 
   932  0710                     	;# 
   933  0711                     	;# 
   934  0712                     	;# 
   935  0713                     	;# 
   936  0714                     	;# 
   937  0716                     	;# 
   938  0717                     	;# 
   939  0718                     	;# 
   940  0719                     	;# 
   941  071A                     	;# 
   942  071B                     	;# 
   943  071C                     	;# 
   944  071D                     	;# 
   945  071E                     	;# 
   946  0796                     	;# 
   947  0797                     	;# 
   948  0798                     	;# 
   949  0799                     	;# 
   950  079A                     	;# 
   951  079B                     	;# 
   952  080C                     	;# 
   953  080D                     	;# 
   954  080E                     	;# 
   955  080F                     	;# 
   956  0810                     	;# 
   957  0811                     	;# 
   958  0812                     	;# 
   959  0813                     	;# 
   960  0814                     	;# 
   961  081A                     	;# 
   962  081B                     	;# 
   963  081C                     	;# 
   964  081D                     	;# 
   965  081E                     	;# 
   966  081F                     	;# 
   967  088C                     	;# 
   968  088D                     	;# 
   969  088E                     	;# 
   970  088F                     	;# 
   971  0890                     	;# 
   972  0891                     	;# 
   973  0892                     	;# 
   974  0893                     	;# 
   975  0895                     	;# 
   976  0896                     	;# 
   977  0897                     	;# 
   978  0898                     	;# 
   979  0899                     	;# 
   980  089A                     	;# 
   981  089B                     	;# 
   982  090C                     	;# 
   983  090E                     	;# 
   984  090F                     	;# 
   985  091F                     	;# 
   986  098F                     	;# 
   987  098F                     	;# 
   988  0990                     	;# 
   989  0991                     	;# 
   990  0992                     	;# 
   991  0993                     	;# 
   992  0994                     	;# 
   993  0995                     	;# 
   994  0996                     	;# 
   995  0997                     	;# 
   996  0E0F                     	;# 
   997  0E10                     	;# 
   998  0E11                     	;# 
   999  0E12                     	;# 
  1000  0E13                     	;# 
  1001  0E14                     	;# 
  1002  0E15                     	;# 
  1003  0E16                     	;# 
  1004  0E17                     	;# 
  1005  0E18                     	;# 
  1006  0E19                     	;# 
  1007  0E1A                     	;# 
  1008  0E1B                     	;# 
  1009  0E1C                     	;# 
  1010  0E1D                     	;# 
  1011  0E1E                     	;# 
  1012  0E1F                     	;# 
  1013  0E20                     	;# 
  1014  0E21                     	;# 
  1015  0E22                     	;# 
  1016  0E23                     	;# 
  1017  0E24                     	;# 
  1018  0E25                     	;# 
  1019  0E26                     	;# 
  1020  0E27                     	;# 
  1021  0E28                     	;# 
  1022  0E29                     	;# 
  1023  0E2A                     	;# 
  1024  0E2B                     	;# 
  1025  0E2C                     	;# 
  1026  0E2D                     	;# 
  1027  0E2E                     	;# 
  1028  0E2F                     	;# 
  1029  0E30                     	;# 
  1030  0E31                     	;# 
  1031  0E32                     	;# 
  1032  0E33                     	;# 
  1033  0E34                     	;# 
  1034  0E35                     	;# 
  1035  0E36                     	;# 
  1036  0E37                     	;# 
  1037  0E8F                     	;# 
  1038  0E90                     	;# 
  1039  0E91                     	;# 
  1040  0E92                     	;# 
  1041  0E93                     	;# 
  1042  0E94                     	;# 
  1043  0E95                     	;# 
  1044  0E96                     	;# 
  1045  0E97                     	;# 
  1046  0E9C                     	;# 
  1047  0E9D                     	;# 
  1048  0E9E                     	;# 
  1049  0EA1                     	;# 
  1050  0EA2                     	;# 
  1051  0EA3                     	;# 
  1052  0EA4                     	;# 
  1053  0EA5                     	;# 
  1054  0EA9                     	;# 
  1055  0EAA                     	;# 
  1056  0EAB                     	;# 
  1057  0EAC                     	;# 
  1058  0EB1                     	;# 
  1059  0EB2                     	;# 
  1060  0EB3                     	;# 
  1061  0EB8                     	;# 
  1062  0EB9                     	;# 
  1063  0EBA                     	;# 
  1064  0EBB                     	;# 
  1065  0EBC                     	;# 
  1066  0EBD                     	;# 
  1067  0EBE                     	;# 
  1068  0EC3                     	;# 
  1069  0EC5                     	;# 
  1070  0EC6                     	;# 
  1071  0EC7                     	;# 
  1072  0EC8                     	;# 
  1073  0EC9                     	;# 
  1074  0ECA                     	;# 
  1075  0ECB                     	;# 
  1076  0ECC                     	;# 
  1077  0F10                     	;# 
  1078  0F11                     	;# 
  1079  0F12                     	;# 
  1080  0F13                     	;# 
  1081  0F14                     	;# 
  1082  0F15                     	;# 
  1083  0F16                     	;# 
  1084  0F17                     	;# 
  1085  0F18                     	;# 
  1086  0F19                     	;# 
  1087  0F1A                     	;# 
  1088  0F1B                     	;# 
  1089  0F1C                     	;# 
  1090  0F1D                     	;# 
  1091  0F1E                     	;# 
  1092  0F1F                     	;# 
  1093  0F20                     	;# 
  1094  0F21                     	;# 
  1095  0F22                     	;# 
  1096  0F23                     	;# 
  1097  0F24                     	;# 
  1098  0F25                     	;# 
  1099  0F26                     	;# 
  1100  0F27                     	;# 
  1101  0F38                     	;# 
  1102  0F39                     	;# 
  1103  0F3A                     	;# 
  1104  0F3B                     	;# 
  1105  0F3C                     	;# 
  1106  0F3D                     	;# 
  1107  0F3E                     	;# 
  1108  0F3F                     	;# 
  1109  0F40                     	;# 
  1110  0F41                     	;# 
  1111  0F43                     	;# 
  1112  0F44                     	;# 
  1113  0F45                     	;# 
  1114  0F46                     	;# 
  1115  0F47                     	;# 
  1116  0F48                     	;# 
  1117  0F49                     	;# 
  1118  0F4A                     	;# 
  1119  0F4B                     	;# 
  1120  0F4C                     	;# 
  1121  0F4E                     	;# 
  1122  0F4F                     	;# 
  1123  0F50                     	;# 
  1124  0F51                     	;# 
  1125  0F52                     	;# 
  1126  0F53                     	;# 
  1127  0F54                     	;# 
  1128  0F55                     	;# 
  1129  0F56                     	;# 
  1130  0F57                     	;# 
  1131  0F65                     	;# 
  1132  0F68                     	;# 
  1133  0F69                     	;# 
  1134  0F6A                     	;# 
  1135  0F6B                     	;# 
  1136  0FE4                     	;# 
  1137  0FE5                     	;# 
  1138  0FE6                     	;# 
  1139  0FE7                     	;# 
  1140  0FE8                     	;# 
  1141  0FE9                     	;# 
  1142  0FEA                     	;# 
  1143  0FEB                     	;# 
  1144  0FED                     	;# 
  1145  0FEE                     	;# 
  1146  0FEF                     	;# 
  1147  0000                     	;# 
  1148  0001                     	;# 
  1149  0002                     	;# 
  1150  0003                     	;# 
  1151  0004                     	;# 
  1152  0005                     	;# 
  1153  0006                     	;# 
  1154  0007                     	;# 
  1155  0008                     	;# 
  1156  0009                     	;# 
  1157  000A                     	;# 
  1158  000B                     	;# 
  1159  000C                     	;# 
  1160  000D                     	;# 
  1161  000E                     	;# 
  1162  0010                     	;# 
  1163  0011                     	;# 
  1164  0012                     	;# 
  1165  0013                     	;# 
  1166  0016                     	;# 
  1167  0017                     	;# 
  1168  0018                     	;# 
  1169  001C                     	;# 
  1170  001C                     	;# 
  1171  001D                     	;# 
  1172  001D                     	;# 
  1173  001E                     	;# 
  1174  001F                     	;# 
  1175  008C                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  008E                     	;# 
  1180  008F                     	;# 
  1181  0090                     	;# 
  1182  0090                     	;# 
  1183  0091                     	;# 
  1184  0093                     	;# 
  1185  0094                     	;# 
  1186  0095                     	;# 
  1187  0096                     	;# 
  1188  0097                     	;# 
  1189  0098                     	;# 
  1190  0099                     	;# 
  1191  009A                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  010C                     	;# 
  1197  010D                     	;# 
  1198  010E                     	;# 
  1199  010E                     	;# 
  1200  010F                     	;# 
  1201  0110                     	;# 
  1202  0110                     	;# 
  1203  0111                     	;# 
  1204  0112                     	;# 
  1205  0112                     	;# 
  1206  0113                     	;# 
  1207  0114                     	;# 
  1208  0114                     	;# 
  1209  0115                     	;# 
  1210  0116                     	;# 
  1211  0116                     	;# 
  1212  0117                     	;# 
  1213  0119                     	;# 
  1214  0119                     	;# 
  1215  0119                     	;# 
  1216  011A                     	;# 
  1217  011A                     	;# 
  1218  011A                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011B                     	;# 
  1223  011B                     	;# 
  1224  011C                     	;# 
  1225  011C                     	;# 
  1226  011C                     	;# 
  1227  011D                     	;# 
  1228  011D                     	;# 
  1229  011D                     	;# 
  1230  011E                     	;# 
  1231  011E                     	;# 
  1232  011E                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  011F                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  018D                     	;# 
  1240  018E                     	;# 
  1241  018F                     	;# 
  1242  0190                     	;# 
  1243  0191                     	;# 
  1244  0192                     	;# 
  1245  0196                     	;# 
  1246  0197                     	;# 
  1247  0198                     	;# 
  1248  0199                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019C                     	;# 
  1252  020C                     	;# 
  1253  020C                     	;# 
  1254  020D                     	;# 
  1255  020E                     	;# 
  1256  020F                     	;# 
  1257  020F                     	;# 
  1258  0210                     	;# 
  1259  0210                     	;# 
  1260  0211                     	;# 
  1261  0211                     	;# 
  1262  0212                     	;# 
  1263  0212                     	;# 
  1264  0213                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0216                     	;# 
  1269  0216                     	;# 
  1270  0217                     	;# 
  1271  0217                     	;# 
  1272  0218                     	;# 
  1273  0218                     	;# 
  1274  0219                     	;# 
  1275  021A                     	;# 
  1276  021B                     	;# 
  1277  021B                     	;# 
  1278  021C                     	;# 
  1279  021C                     	;# 
  1280  021D                     	;# 
  1281  021D                     	;# 
  1282  021E                     	;# 
  1283  021F                     	;# 
  1284  028C                     	;# 
  1285  028C                     	;# 
  1286  028D                     	;# 
  1287  028D                     	;# 
  1288  028E                     	;# 
  1289  028F                     	;# 
  1290  0290                     	;# 
  1291  0290                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0292                     	;# 
  1295  0293                     	;# 
  1296  0293                     	;# 
  1297  0294                     	;# 
  1298  0295                     	;# 
  1299  0296                     	;# 
  1300  0296                     	;# 
  1301  0297                     	;# 
  1302  0298                     	;# 
  1303  0298                     	;# 
  1304  0299                     	;# 
  1305  0299                     	;# 
  1306  029A                     	;# 
  1307  029B                     	;# 
  1308  029C                     	;# 
  1309  029C                     	;# 
  1310  029D                     	;# 
  1311  030C                     	;# 
  1312  030C                     	;# 
  1313  030D                     	;# 
  1314  030E                     	;# 
  1315  030F                     	;# 
  1316  0310                     	;# 
  1317  0310                     	;# 
  1318  0311                     	;# 
  1319  0312                     	;# 
  1320  0313                     	;# 
  1321  0314                     	;# 
  1322  0314                     	;# 
  1323  0315                     	;# 
  1324  0316                     	;# 
  1325  0317                     	;# 
  1326  0318                     	;# 
  1327  0318                     	;# 
  1328  0319                     	;# 
  1329  031A                     	;# 
  1330  031B                     	;# 
  1331  031C                     	;# 
  1332  031C                     	;# 
  1333  031D                     	;# 
  1334  031E                     	;# 
  1335  031F                     	;# 
  1336  038C                     	;# 
  1337  038C                     	;# 
  1338  038D                     	;# 
  1339  038E                     	;# 
  1340  0390                     	;# 
  1341  0390                     	;# 
  1342  0391                     	;# 
  1343  0392                     	;# 
  1344  040C                     	;# 
  1345  040D                     	;# 
  1346  040E                     	;# 
  1347  040F                     	;# 
  1348  0410                     	;# 
  1349  0411                     	;# 
  1350  0416                     	;# 
  1351  0416                     	;# 
  1352  0417                     	;# 
  1353  0418                     	;# 
  1354  0418                     	;# 
  1355  0419                     	;# 
  1356  041A                     	;# 
  1357  041A                     	;# 
  1358  041B                     	;# 
  1359  041C                     	;# 
  1360  041C                     	;# 
  1361  041D                     	;# 
  1362  041E                     	;# 
  1363  041F                     	;# 
  1364  048C                     	;# 
  1365  048C                     	;# 
  1366  048D                     	;# 
  1367  048E                     	;# 
  1368  048F                     	;# 
  1369  048F                     	;# 
  1370  0490                     	;# 
  1371  0491                     	;# 
  1372  0492                     	;# 
  1373  0492                     	;# 
  1374  0493                     	;# 
  1375  0494                     	;# 
  1376  0495                     	;# 
  1377  0495                     	;# 
  1378  0496                     	;# 
  1379  0497                     	;# 
  1380  0498                     	;# 
  1381  0499                     	;# 
  1382  049A                     	;# 
  1383  049B                     	;# 
  1384  049C                     	;# 
  1385  049D                     	;# 
  1386  050C                     	;# 
  1387  050C                     	;# 
  1388  050D                     	;# 
  1389  050E                     	;# 
  1390  050F                     	;# 
  1391  050F                     	;# 
  1392  0510                     	;# 
  1393  0511                     	;# 
  1394  0512                     	;# 
  1395  0512                     	;# 
  1396  0513                     	;# 
  1397  0514                     	;# 
  1398  0515                     	;# 
  1399  0515                     	;# 
  1400  0516                     	;# 
  1401  0517                     	;# 
  1402  0518                     	;# 
  1403  0519                     	;# 
  1404  051A                     	;# 
  1405  051B                     	;# 
  1406  051C                     	;# 
  1407  051D                     	;# 
  1408  058C                     	;# 
  1409  058C                     	;# 
  1410  058D                     	;# 
  1411  058E                     	;# 
  1412  058F                     	;# 
  1413  058F                     	;# 
  1414  0590                     	;# 
  1415  0591                     	;# 
  1416  0592                     	;# 
  1417  0593                     	;# 
  1418  060C                     	;# 
  1419  060D                     	;# 
  1420  060E                     	;# 
  1421  060F                     	;# 
  1422  0610                     	;# 
  1423  0611                     	;# 
  1424  0612                     	;# 
  1425  0613                     	;# 
  1426  0614                     	;# 
  1427  0616                     	;# 
  1428  0617                     	;# 
  1429  0618                     	;# 
  1430  0619                     	;# 
  1431  061A                     	;# 
  1432  061B                     	;# 
  1433  061C                     	;# 
  1434  061D                     	;# 
  1435  061E                     	;# 
  1436  068C                     	;# 
  1437  068D                     	;# 
  1438  068E                     	;# 
  1439  068F                     	;# 
  1440  0690                     	;# 
  1441  0691                     	;# 
  1442  0692                     	;# 
  1443  0693                     	;# 
  1444  0694                     	;# 
  1445  070C                     	;# 
  1446  070D                     	;# 
  1447  070E                     	;# 
  1448  070F                     	;# 
  1449  0710                     	;# 
  1450  0711                     	;# 
  1451  0712                     	;# 
  1452  0713                     	;# 
  1453  0714                     	;# 
  1454  0716                     	;# 
  1455  0717                     	;# 
  1456  0718                     	;# 
  1457  0719                     	;# 
  1458  071A                     	;# 
  1459  071B                     	;# 
  1460  071C                     	;# 
  1461  071D                     	;# 
  1462  071E                     	;# 
  1463  0796                     	;# 
  1464  0797                     	;# 
  1465  0798                     	;# 
  1466  0799                     	;# 
  1467  079A                     	;# 
  1468  079B                     	;# 
  1469  080C                     	;# 
  1470  080D                     	;# 
  1471  080E                     	;# 
  1472  080F                     	;# 
  1473  0810                     	;# 
  1474  0811                     	;# 
  1475  0812                     	;# 
  1476  0813                     	;# 
  1477  0814                     	;# 
  1478  081A                     	;# 
  1479  081B                     	;# 
  1480  081C                     	;# 
  1481  081D                     	;# 
  1482  081E                     	;# 
  1483  081F                     	;# 
  1484  088C                     	;# 
  1485  088D                     	;# 
  1486  088E                     	;# 
  1487  088F                     	;# 
  1488  0890                     	;# 
  1489  0891                     	;# 
  1490  0892                     	;# 
  1491  0893                     	;# 
  1492  0895                     	;# 
  1493  0896                     	;# 
  1494  0897                     	;# 
  1495  0898                     	;# 
  1496  0899                     	;# 
  1497  089A                     	;# 
  1498  089B                     	;# 
  1499  090C                     	;# 
  1500  090E                     	;# 
  1501  090F                     	;# 
  1502  091F                     	;# 
  1503  098F                     	;# 
  1504  098F                     	;# 
  1505  0990                     	;# 
  1506  0991                     	;# 
  1507  0992                     	;# 
  1508  0993                     	;# 
  1509  0994                     	;# 
  1510  0995                     	;# 
  1511  0996                     	;# 
  1512  0997                     	;# 
  1513  0E0F                     	;# 
  1514  0E10                     	;# 
  1515  0E11                     	;# 
  1516  0E12                     	;# 
  1517  0E13                     	;# 
  1518  0E14                     	;# 
  1519  0E15                     	;# 
  1520  0E16                     	;# 
  1521  0E17                     	;# 
  1522  0E18                     	;# 
  1523  0E19                     	;# 
  1524  0E1A                     	;# 
  1525  0E1B                     	;# 
  1526  0E1C                     	;# 
  1527  0E1D                     	;# 
  1528  0E1E                     	;# 
  1529  0E1F                     	;# 
  1530  0E20                     	;# 
  1531  0E21                     	;# 
  1532  0E22                     	;# 
  1533  0E23                     	;# 
  1534  0E24                     	;# 
  1535  0E25                     	;# 
  1536  0E26                     	;# 
  1537  0E27                     	;# 
  1538  0E28                     	;# 
  1539  0E29                     	;# 
  1540  0E2A                     	;# 
  1541  0E2B                     	;# 
  1542  0E2C                     	;# 
  1543  0E2D                     	;# 
  1544  0E2E                     	;# 
  1545  0E2F                     	;# 
  1546  0E30                     	;# 
  1547  0E31                     	;# 
  1548  0E32                     	;# 
  1549  0E33                     	;# 
  1550  0E34                     	;# 
  1551  0E35                     	;# 
  1552  0E36                     	;# 
  1553  0E37                     	;# 
  1554  0E8F                     	;# 
  1555  0E90                     	;# 
  1556  0E91                     	;# 
  1557  0E92                     	;# 
  1558  0E93                     	;# 
  1559  0E94                     	;# 
  1560  0E95                     	;# 
  1561  0E96                     	;# 
  1562  0E97                     	;# 
  1563  0E9C                     	;# 
  1564  0E9D                     	;# 
  1565  0E9E                     	;# 
  1566  0EA1                     	;# 
  1567  0EA2                     	;# 
  1568  0EA3                     	;# 
  1569  0EA4                     	;# 
  1570  0EA5                     	;# 
  1571  0EA9                     	;# 
  1572  0EAA                     	;# 
  1573  0EAB                     	;# 
  1574  0EAC                     	;# 
  1575  0EB1                     	;# 
  1576  0EB2                     	;# 
  1577  0EB3                     	;# 
  1578  0EB8                     	;# 
  1579  0EB9                     	;# 
  1580  0EBA                     	;# 
  1581  0EBB                     	;# 
  1582  0EBC                     	;# 
  1583  0EBD                     	;# 
  1584  0EBE                     	;# 
  1585  0EC3                     	;# 
  1586  0EC5                     	;# 
  1587  0EC6                     	;# 
  1588  0EC7                     	;# 
  1589  0EC8                     	;# 
  1590  0EC9                     	;# 
  1591  0ECA                     	;# 
  1592  0ECB                     	;# 
  1593  0ECC                     	;# 
  1594  0F10                     	;# 
  1595  0F11                     	;# 
  1596  0F12                     	;# 
  1597  0F13                     	;# 
  1598  0F14                     	;# 
  1599  0F15                     	;# 
  1600  0F16                     	;# 
  1601  0F17                     	;# 
  1602  0F18                     	;# 
  1603  0F19                     	;# 
  1604  0F1A                     	;# 
  1605  0F1B                     	;# 
  1606  0F1C                     	;# 
  1607  0F1D                     	;# 
  1608  0F1E                     	;# 
  1609  0F1F                     	;# 
  1610  0F20                     	;# 
  1611  0F21                     	;# 
  1612  0F22                     	;# 
  1613  0F23                     	;# 
  1614  0F24                     	;# 
  1615  0F25                     	;# 
  1616  0F26                     	;# 
  1617  0F27                     	;# 
  1618  0F38                     	;# 
  1619  0F39                     	;# 
  1620  0F3A                     	;# 
  1621  0F3B                     	;# 
  1622  0F3C                     	;# 
  1623  0F3D                     	;# 
  1624  0F3E                     	;# 
  1625  0F3F                     	;# 
  1626  0F40                     	;# 
  1627  0F41                     	;# 
  1628  0F43                     	;# 
  1629  0F44                     	;# 
  1630  0F45                     	;# 
  1631  0F46                     	;# 
  1632  0F47                     	;# 
  1633  0F48                     	;# 
  1634  0F49                     	;# 
  1635  0F4A                     	;# 
  1636  0F4B                     	;# 
  1637  0F4C                     	;# 
  1638  0F4E                     	;# 
  1639  0F4F                     	;# 
  1640  0F50                     	;# 
  1641  0F51                     	;# 
  1642  0F52                     	;# 
  1643  0F53                     	;# 
  1644  0F54                     	;# 
  1645  0F55                     	;# 
  1646  0F56                     	;# 
  1647  0F57                     	;# 
  1648  0F65                     	;# 
  1649  0F68                     	;# 
  1650  0F69                     	;# 
  1651  0F6A                     	;# 
  1652  0F6B                     	;# 
  1653  0FE4                     	;# 
  1654  0FE5                     	;# 
  1655  0FE6                     	;# 
  1656  0FE7                     	;# 
  1657  0FE8                     	;# 
  1658  0FE9                     	;# 
  1659  0FEA                     	;# 
  1660  0FEB                     	;# 
  1661  0FED                     	;# 
  1662  0FEE                     	;# 
  1663  0FEF                     	;# 
  1664  0000                     	;# 
  1665  0001                     	;# 
  1666  0002                     	;# 
  1667  0003                     	;# 
  1668  0004                     	;# 
  1669  0005                     	;# 
  1670  0006                     	;# 
  1671  0007                     	;# 
  1672  0008                     	;# 
  1673  0009                     	;# 
  1674  000A                     	;# 
  1675  000B                     	;# 
  1676  000C                     	;# 
  1677  000D                     	;# 
  1678  000E                     	;# 
  1679  0010                     	;# 
  1680  0011                     	;# 
  1681  0012                     	;# 
  1682  0013                     	;# 
  1683  0016                     	;# 
  1684  0017                     	;# 
  1685  0018                     	;# 
  1686  001C                     	;# 
  1687  001C                     	;# 
  1688  001D                     	;# 
  1689  001D                     	;# 
  1690  001E                     	;# 
  1691  001F                     	;# 
  1692  008C                     	;# 
  1693  008C                     	;# 
  1694  008D                     	;# 
  1695  008E                     	;# 
  1696  008E                     	;# 
  1697  008F                     	;# 
  1698  0090                     	;# 
  1699  0090                     	;# 
  1700  0091                     	;# 
  1701  0093                     	;# 
  1702  0094                     	;# 
  1703  0095                     	;# 
  1704  0096                     	;# 
  1705  0097                     	;# 
  1706  0098                     	;# 
  1707  0099                     	;# 
  1708  009A                     	;# 
  1709  009B                     	;# 
  1710  009C                     	;# 
  1711  009D                     	;# 
  1712  009E                     	;# 
  1713  010C                     	;# 
  1714  010D                     	;# 
  1715  010E                     	;# 
  1716  010E                     	;# 
  1717  010F                     	;# 
  1718  0110                     	;# 
  1719  0110                     	;# 
  1720  0111                     	;# 
  1721  0112                     	;# 
  1722  0112                     	;# 
  1723  0113                     	;# 
  1724  0114                     	;# 
  1725  0114                     	;# 
  1726  0115                     	;# 
  1727  0116                     	;# 
  1728  0116                     	;# 
  1729  0117                     	;# 
  1730  0119                     	;# 
  1731  0119                     	;# 
  1732  0119                     	;# 
  1733  011A                     	;# 
  1734  011A                     	;# 
  1735  011A                     	;# 
  1736  011B                     	;# 
  1737  011B                     	;# 
  1738  011B                     	;# 
  1739  011B                     	;# 
  1740  011B                     	;# 
  1741  011C                     	;# 
  1742  011C                     	;# 
  1743  011C                     	;# 
  1744  011D                     	;# 
  1745  011D                     	;# 
  1746  011D                     	;# 
  1747  011E                     	;# 
  1748  011E                     	;# 
  1749  011E                     	;# 
  1750  011F                     	;# 
  1751  011F                     	;# 
  1752  011F                     	;# 
  1753  011F                     	;# 
  1754  011F                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  018E                     	;# 
  1758  018F                     	;# 
  1759  0190                     	;# 
  1760  0191                     	;# 
  1761  0192                     	;# 
  1762  0196                     	;# 
  1763  0197                     	;# 
  1764  0198                     	;# 
  1765  0199                     	;# 
  1766  019A                     	;# 
  1767  019B                     	;# 
  1768  019C                     	;# 
  1769  020C                     	;# 
  1770  020C                     	;# 
  1771  020D                     	;# 
  1772  020E                     	;# 
  1773  020F                     	;# 
  1774  020F                     	;# 
  1775  0210                     	;# 
  1776  0210                     	;# 
  1777  0211                     	;# 
  1778  0211                     	;# 
  1779  0212                     	;# 
  1780  0212                     	;# 
  1781  0213                     	;# 
  1782  0214                     	;# 
  1783  0215                     	;# 
  1784  0215                     	;# 
  1785  0216                     	;# 
  1786  0216                     	;# 
  1787  0217                     	;# 
  1788  0217                     	;# 
  1789  0218                     	;# 
  1790  0218                     	;# 
  1791  0219                     	;# 
  1792  021A                     	;# 
  1793  021B                     	;# 
  1794  021B                     	;# 
  1795  021C                     	;# 
  1796  021C                     	;# 
  1797  021D                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  028C                     	;# 
  1802  028C                     	;# 
  1803  028D                     	;# 
  1804  028D                     	;# 
  1805  028E                     	;# 
  1806  028F                     	;# 
  1807  0290                     	;# 
  1808  0290                     	;# 
  1809  0291                     	;# 
  1810  0292                     	;# 
  1811  0292                     	;# 
  1812  0293                     	;# 
  1813  0293                     	;# 
  1814  0294                     	;# 
  1815  0295                     	;# 
  1816  0296                     	;# 
  1817  0296                     	;# 
  1818  0297                     	;# 
  1819  0298                     	;# 
  1820  0298                     	;# 
  1821  0299                     	;# 
  1822  0299                     	;# 
  1823  029A                     	;# 
  1824  029B                     	;# 
  1825  029C                     	;# 
  1826  029C                     	;# 
  1827  029D                     	;# 
  1828  030C                     	;# 
  1829  030C                     	;# 
  1830  030D                     	;# 
  1831  030E                     	;# 
  1832  030F                     	;# 
  1833  0310                     	;# 
  1834  0310                     	;# 
  1835  0311                     	;# 
  1836  0312                     	;# 
  1837  0313                     	;# 
  1838  0314                     	;# 
  1839  0314                     	;# 
  1840  0315                     	;# 
  1841  0316                     	;# 
  1842  0317                     	;# 
  1843  0318                     	;# 
  1844  0318                     	;# 
  1845  0319                     	;# 
  1846  031A                     	;# 
  1847  031B                     	;# 
  1848  031C                     	;# 
  1849  031C                     	;# 
  1850  031D                     	;# 
  1851  031E                     	;# 
  1852  031F                     	;# 
  1853  038C                     	;# 
  1854  038C                     	;# 
  1855  038D                     	;# 
  1856  038E                     	;# 
  1857  0390                     	;# 
  1858  0390                     	;# 
  1859  0391                     	;# 
  1860  0392                     	;# 
  1861  040C                     	;# 
  1862  040D                     	;# 
  1863  040E                     	;# 
  1864  040F                     	;# 
  1865  0410                     	;# 
  1866  0411                     	;# 
  1867  0416                     	;# 
  1868  0416                     	;# 
  1869  0417                     	;# 
  1870  0418                     	;# 
  1871  0418                     	;# 
  1872  0419                     	;# 
  1873  041A                     	;# 
  1874  041A                     	;# 
  1875  041B                     	;# 
  1876  041C                     	;# 
  1877  041C                     	;# 
  1878  041D                     	;# 
  1879  041E                     	;# 
  1880  041F                     	;# 
  1881  048C                     	;# 
  1882  048C                     	;# 
  1883  048D                     	;# 
  1884  048E                     	;# 
  1885  048F                     	;# 
  1886  048F                     	;# 
  1887  0490                     	;# 
  1888  0491                     	;# 
  1889  0492                     	;# 
  1890  0492                     	;# 
  1891  0493                     	;# 
  1892  0494                     	;# 
  1893  0495                     	;# 
  1894  0495                     	;# 
  1895  0496                     	;# 
  1896  0497                     	;# 
  1897  0498                     	;# 
  1898  0499                     	;# 
  1899  049A                     	;# 
  1900  049B                     	;# 
  1901  049C                     	;# 
  1902  049D                     	;# 
  1903  050C                     	;# 
  1904  050C                     	;# 
  1905  050D                     	;# 
  1906  050E                     	;# 
  1907  050F                     	;# 
  1908  050F                     	;# 
  1909  0510                     	;# 
  1910  0511                     	;# 
  1911  0512                     	;# 
  1912  0512                     	;# 
  1913  0513                     	;# 
  1914  0514                     	;# 
  1915  0515                     	;# 
  1916  0515                     	;# 
  1917  0516                     	;# 
  1918  0517                     	;# 
  1919  0518                     	;# 
  1920  0519                     	;# 
  1921  051A                     	;# 
  1922  051B                     	;# 
  1923  051C                     	;# 
  1924  051D                     	;# 
  1925  058C                     	;# 
  1926  058C                     	;# 
  1927  058D                     	;# 
  1928  058E                     	;# 
  1929  058F                     	;# 
  1930  058F                     	;# 
  1931  0590                     	;# 
  1932  0591                     	;# 
  1933  0592                     	;# 
  1934  0593                     	;# 
  1935  060C                     	;# 
  1936  060D                     	;# 
  1937  060E                     	;# 
  1938  060F                     	;# 
  1939  0610                     	;# 
  1940  0611                     	;# 
  1941  0612                     	;# 
  1942  0613                     	;# 
  1943  0614                     	;# 
  1944  0616                     	;# 
  1945  0617                     	;# 
  1946  0618                     	;# 
  1947  0619                     	;# 
  1948  061A                     	;# 
  1949  061B                     	;# 
  1950  061C                     	;# 
  1951  061D                     	;# 
  1952  061E                     	;# 
  1953  068C                     	;# 
  1954  068D                     	;# 
  1955  068E                     	;# 
  1956  068F                     	;# 
  1957  0690                     	;# 
  1958  0691                     	;# 
  1959  0692                     	;# 
  1960  0693                     	;# 
  1961  0694                     	;# 
  1962  070C                     	;# 
  1963  070D                     	;# 
  1964  070E                     	;# 
  1965  070F                     	;# 
  1966  0710                     	;# 
  1967  0711                     	;# 
  1968  0712                     	;# 
  1969  0713                     	;# 
  1970  0714                     	;# 
  1971  0716                     	;# 
  1972  0717                     	;# 
  1973  0718                     	;# 
  1974  0719                     	;# 
  1975  071A                     	;# 
  1976  071B                     	;# 
  1977  071C                     	;# 
  1978  071D                     	;# 
  1979  071E                     	;# 
  1980  0796                     	;# 
  1981  0797                     	;# 
  1982  0798                     	;# 
  1983  0799                     	;# 
  1984  079A                     	;# 
  1985  079B                     	;# 
  1986  080C                     	;# 
  1987  080D                     	;# 
  1988  080E                     	;# 
  1989  080F                     	;# 
  1990  0810                     	;# 
  1991  0811                     	;# 
  1992  0812                     	;# 
  1993  0813                     	;# 
  1994  0814                     	;# 
  1995  081A                     	;# 
  1996  081B                     	;# 
  1997  081C                     	;# 
  1998  081D                     	;# 
  1999  081E                     	;# 
  2000  081F                     	;# 
  2001  088C                     	;# 
  2002  088D                     	;# 
  2003  088E                     	;# 
  2004  088F                     	;# 
  2005  0890                     	;# 
  2006  0891                     	;# 
  2007  0892                     	;# 
  2008  0893                     	;# 
  2009  0895                     	;# 
  2010  0896                     	;# 
  2011  0897                     	;# 
  2012  0898                     	;# 
  2013  0899                     	;# 
  2014  089A                     	;# 
  2015  089B                     	;# 
  2016  090C                     	;# 
  2017  090E                     	;# 
  2018  090F                     	;# 
  2019  091F                     	;# 
  2020  098F                     	;# 
  2021  098F                     	;# 
  2022  0990                     	;# 
  2023  0991                     	;# 
  2024  0992                     	;# 
  2025  0993                     	;# 
  2026  0994                     	;# 
  2027  0995                     	;# 
  2028  0996                     	;# 
  2029  0997                     	;# 
  2030  0E0F                     	;# 
  2031  0E10                     	;# 
  2032  0E11                     	;# 
  2033  0E12                     	;# 
  2034  0E13                     	;# 
  2035  0E14                     	;# 
  2036  0E15                     	;# 
  2037  0E16                     	;# 
  2038  0E17                     	;# 
  2039  0E18                     	;# 
  2040  0E19                     	;# 
  2041  0E1A                     	;# 
  2042  0E1B                     	;# 
  2043  0E1C                     	;# 
  2044  0E1D                     	;# 
  2045  0E1E                     	;# 
  2046  0E1F                     	;# 
  2047  0E20                     	;# 
  2048  0E21                     	;# 
  2049  0E22                     	;# 
  2050  0E23                     	;# 
  2051  0E24                     	;# 
  2052  0E25                     	;# 
  2053  0E26                     	;# 
  2054  0E27                     	;# 
  2055  0E28                     	;# 
  2056  0E29                     	;# 
  2057  0E2A                     	;# 
  2058  0E2B                     	;# 
  2059  0E2C                     	;# 
  2060  0E2D                     	;# 
  2061  0E2E                     	;# 
  2062  0E2F                     	;# 
  2063  0E30                     	;# 
  2064  0E31                     	;# 
  2065  0E32                     	;# 
  2066  0E33                     	;# 
  2067  0E34                     	;# 
  2068  0E35                     	;# 
  2069  0E36                     	;# 
  2070  0E37                     	;# 
  2071  0E8F                     	;# 
  2072  0E90                     	;# 
  2073  0E91                     	;# 
  2074  0E92                     	;# 
  2075  0E93                     	;# 
  2076  0E94                     	;# 
  2077  0E95                     	;# 
  2078  0E96                     	;# 
  2079  0E97                     	;# 
  2080  0E9C                     	;# 
  2081  0E9D                     	;# 
  2082  0E9E                     	;# 
  2083  0EA1                     	;# 
  2084  0EA2                     	;# 
  2085  0EA3                     	;# 
  2086  0EA4                     	;# 
  2087  0EA5                     	;# 
  2088  0EA9                     	;# 
  2089  0EAA                     	;# 
  2090  0EAB                     	;# 
  2091  0EAC                     	;# 
  2092  0EB1                     	;# 
  2093  0EB2                     	;# 
  2094  0EB3                     	;# 
  2095  0EB8                     	;# 
  2096  0EB9                     	;# 
  2097  0EBA                     	;# 
  2098  0EBB                     	;# 
  2099  0EBC                     	;# 
  2100  0EBD                     	;# 
  2101  0EBE                     	;# 
  2102  0EC3                     	;# 
  2103  0EC5                     	;# 
  2104  0EC6                     	;# 
  2105  0EC7                     	;# 
  2106  0EC8                     	;# 
  2107  0EC9                     	;# 
  2108  0ECA                     	;# 
  2109  0ECB                     	;# 
  2110  0ECC                     	;# 
  2111  0F10                     	;# 
  2112  0F11                     	;# 
  2113  0F12                     	;# 
  2114  0F13                     	;# 
  2115  0F14                     	;# 
  2116  0F15                     	;# 
  2117  0F16                     	;# 
  2118  0F17                     	;# 
  2119  0F18                     	;# 
  2120  0F19                     	;# 
  2121  0F1A                     	;# 
  2122  0F1B                     	;# 
  2123  0F1C                     	;# 
  2124  0F1D                     	;# 
  2125  0F1E                     	;# 
  2126  0F1F                     	;# 
  2127  0F20                     	;# 
  2128  0F21                     	;# 
  2129  0F22                     	;# 
  2130  0F23                     	;# 
  2131  0F24                     	;# 
  2132  0F25                     	;# 
  2133  0F26                     	;# 
  2134  0F27                     	;# 
  2135  0F38                     	;# 
  2136  0F39                     	;# 
  2137  0F3A                     	;# 
  2138  0F3B                     	;# 
  2139  0F3C                     	;# 
  2140  0F3D                     	;# 
  2141  0F3E                     	;# 
  2142  0F3F                     	;# 
  2143  0F40                     	;# 
  2144  0F41                     	;# 
  2145  0F43                     	;# 
  2146  0F44                     	;# 
  2147  0F45                     	;# 
  2148  0F46                     	;# 
  2149  0F47                     	;# 
  2150  0F48                     	;# 
  2151  0F49                     	;# 
  2152  0F4A                     	;# 
  2153  0F4B                     	;# 
  2154  0F4C                     	;# 
  2155  0F4E                     	;# 
  2156  0F4F                     	;# 
  2157  0F50                     	;# 
  2158  0F51                     	;# 
  2159  0F52                     	;# 
  2160  0F53                     	;# 
  2161  0F54                     	;# 
  2162  0F55                     	;# 
  2163  0F56                     	;# 
  2164  0F57                     	;# 
  2165  0F65                     	;# 
  2166  0F68                     	;# 
  2167  0F69                     	;# 
  2168  0F6A                     	;# 
  2169  0F6B                     	;# 
  2170  0FE4                     	;# 
  2171  0FE5                     	;# 
  2172  0FE6                     	;# 
  2173  0FE7                     	;# 
  2174  0FE8                     	;# 
  2175  0FE9                     	;# 
  2176  0FEA                     	;# 
  2177  0FEB                     	;# 
  2178  0FED                     	;# 
  2179  0FEE                     	;# 
  2180  0FEF                     	;# 
  2181  0000                     	;# 
  2182  0001                     	;# 
  2183  0002                     	;# 
  2184  0003                     	;# 
  2185  0004                     	;# 
  2186  0005                     	;# 
  2187  0006                     	;# 
  2188  0007                     	;# 
  2189  0008                     	;# 
  2190  0009                     	;# 
  2191  000A                     	;# 
  2192  000B                     	;# 
  2193  000C                     	;# 
  2194  000D                     	;# 
  2195  000E                     	;# 
  2196  0010                     	;# 
  2197  0011                     	;# 
  2198  0012                     	;# 
  2199  0013                     	;# 
  2200  0016                     	;# 
  2201  0017                     	;# 
  2202  0018                     	;# 
  2203  001C                     	;# 
  2204  001C                     	;# 
  2205  001D                     	;# 
  2206  001D                     	;# 
  2207  001E                     	;# 
  2208  001F                     	;# 
  2209  008C                     	;# 
  2210  008C                     	;# 
  2211  008D                     	;# 
  2212  008E                     	;# 
  2213  008E                     	;# 
  2214  008F                     	;# 
  2215  0090                     	;# 
  2216  0090                     	;# 
  2217  0091                     	;# 
  2218  0093                     	;# 
  2219  0094                     	;# 
  2220  0095                     	;# 
  2221  0096                     	;# 
  2222  0097                     	;# 
  2223  0098                     	;# 
  2224  0099                     	;# 
  2225  009A                     	;# 
  2226  009B                     	;# 
  2227  009C                     	;# 
  2228  009D                     	;# 
  2229  009E                     	;# 
  2230  010C                     	;# 
  2231  010D                     	;# 
  2232  010E                     	;# 
  2233  010E                     	;# 
  2234  010F                     	;# 
  2235  0110                     	;# 
  2236  0110                     	;# 
  2237  0111                     	;# 
  2238  0112                     	;# 
  2239  0112                     	;# 
  2240  0113                     	;# 
  2241  0114                     	;# 
  2242  0114                     	;# 
  2243  0115                     	;# 
  2244  0116                     	;# 
  2245  0116                     	;# 
  2246  0117                     	;# 
  2247  0119                     	;# 
  2248  0119                     	;# 
  2249  0119                     	;# 
  2250  011A                     	;# 
  2251  011A                     	;# 
  2252  011A                     	;# 
  2253  011B                     	;# 
  2254  011B                     	;# 
  2255  011B                     	;# 
  2256  011B                     	;# 
  2257  011B                     	;# 
  2258  011C                     	;# 
  2259  011C                     	;# 
  2260  011C                     	;# 
  2261  011D                     	;# 
  2262  011D                     	;# 
  2263  011D                     	;# 
  2264  011E                     	;# 
  2265  011E                     	;# 
  2266  011E                     	;# 
  2267  011F                     	;# 
  2268  011F                     	;# 
  2269  011F                     	;# 
  2270  011F                     	;# 
  2271  011F                     	;# 
  2272  018C                     	;# 
  2273  018D                     	;# 
  2274  018E                     	;# 
  2275  018F                     	;# 
  2276  0190                     	;# 
  2277  0191                     	;# 
  2278  0192                     	;# 
  2279  0196                     	;# 
  2280  0197                     	;# 
  2281  0198                     	;# 
  2282  0199                     	;# 
  2283  019A                     	;# 
  2284  019B                     	;# 
  2285  019C                     	;# 
  2286  020C                     	;# 
  2287  020C                     	;# 
  2288  020D                     	;# 
  2289  020E                     	;# 
  2290  020F                     	;# 
  2291  020F                     	;# 
  2292  0210                     	;# 
  2293  0210                     	;# 
  2294  0211                     	;# 
  2295  0211                     	;# 
  2296  0212                     	;# 
  2297  0212                     	;# 
  2298  0213                     	;# 
  2299  0214                     	;# 
  2300  0215                     	;# 
  2301  0215                     	;# 
  2302  0216                     	;# 
  2303  0216                     	;# 
  2304  0217                     	;# 
  2305  0217                     	;# 
  2306  0218                     	;# 
  2307  0218                     	;# 
  2308  0219                     	;# 
  2309  021A                     	;# 
  2310  021B                     	;# 
  2311  021B                     	;# 
  2312  021C                     	;# 
  2313  021C                     	;# 
  2314  021D                     	;# 
  2315  021D                     	;# 
  2316  021E                     	;# 
  2317  021F                     	;# 
  2318  028C                     	;# 
  2319  028C                     	;# 
  2320  028D                     	;# 
  2321  028D                     	;# 
  2322  028E                     	;# 
  2323  028F                     	;# 
  2324  0290                     	;# 
  2325  0290                     	;# 
  2326  0291                     	;# 
  2327  0292                     	;# 
  2328  0292                     	;# 
  2329  0293                     	;# 
  2330  0293                     	;# 
  2331  0294                     	;# 
  2332  0295                     	;# 
  2333  0296                     	;# 
  2334  0296                     	;# 
  2335  0297                     	;# 
  2336  0298                     	;# 
  2337  0298                     	;# 
  2338  0299                     	;# 
  2339  0299                     	;# 
  2340  029A                     	;# 
  2341  029B                     	;# 
  2342  029C                     	;# 
  2343  029C                     	;# 
  2344  029D                     	;# 
  2345  030C                     	;# 
  2346  030C                     	;# 
  2347  030D                     	;# 
  2348  030E                     	;# 
  2349  030F                     	;# 
  2350  0310                     	;# 
  2351  0310                     	;# 
  2352  0311                     	;# 
  2353  0312                     	;# 
  2354  0313                     	;# 
  2355  0314                     	;# 
  2356  0314                     	;# 
  2357  0315                     	;# 
  2358  0316                     	;# 
  2359  0317                     	;# 
  2360  0318                     	;# 
  2361  0318                     	;# 
  2362  0319                     	;# 
  2363  031A                     	;# 
  2364  031B                     	;# 
  2365  031C                     	;# 
  2366  031C                     	;# 
  2367  031D                     	;# 
  2368  031E                     	;# 
  2369  031F                     	;# 
  2370  038C                     	;# 
  2371  038C                     	;# 
  2372  038D                     	;# 
  2373  038E                     	;# 
  2374  0390                     	;# 
  2375  0390                     	;# 
  2376  0391                     	;# 
  2377  0392                     	;# 
  2378  040C                     	;# 
  2379  040D                     	;# 
  2380  040E                     	;# 
  2381  040F                     	;# 
  2382  0410                     	;# 
  2383  0411                     	;# 
  2384  0416                     	;# 
  2385  0416                     	;# 
  2386  0417                     	;# 
  2387  0418                     	;# 
  2388  0418                     	;# 
  2389  0419                     	;# 
  2390  041A                     	;# 
  2391  041A                     	;# 
  2392  041B                     	;# 
  2393  041C                     	;# 
  2394  041C                     	;# 
  2395  041D                     	;# 
  2396  041E                     	;# 
  2397  041F                     	;# 
  2398  048C                     	;# 
  2399  048C                     	;# 
  2400  048D                     	;# 
  2401  048E                     	;# 
  2402  048F                     	;# 
  2403  048F                     	;# 
  2404  0490                     	;# 
  2405  0491                     	;# 
  2406  0492                     	;# 
  2407  0492                     	;# 
  2408  0493                     	;# 
  2409  0494                     	;# 
  2410  0495                     	;# 
  2411  0495                     	;# 
  2412  0496                     	;# 
  2413  0497                     	;# 
  2414  0498                     	;# 
  2415  0499                     	;# 
  2416  049A                     	;# 
  2417  049B                     	;# 
  2418  049C                     	;# 
  2419  049D                     	;# 
  2420  050C                     	;# 
  2421  050C                     	;# 
  2422  050D                     	;# 
  2423  050E                     	;# 
  2424  050F                     	;# 
  2425  050F                     	;# 
  2426  0510                     	;# 
  2427  0511                     	;# 
  2428  0512                     	;# 
  2429  0512                     	;# 
  2430  0513                     	;# 
  2431  0514                     	;# 
  2432  0515                     	;# 
  2433  0515                     	;# 
  2434  0516                     	;# 
  2435  0517                     	;# 
  2436  0518                     	;# 
  2437  0519                     	;# 
  2438  051A                     	;# 
  2439  051B                     	;# 
  2440  051C                     	;# 
  2441  051D                     	;# 
  2442  058C                     	;# 
  2443  058C                     	;# 
  2444  058D                     	;# 
  2445  058E                     	;# 
  2446  058F                     	;# 
  2447  058F                     	;# 
  2448  0590                     	;# 
  2449  0591                     	;# 
  2450  0592                     	;# 
  2451  0593                     	;# 
  2452  060C                     	;# 
  2453  060D                     	;# 
  2454  060E                     	;# 
  2455  060F                     	;# 
  2456  0610                     	;# 
  2457  0611                     	;# 
  2458  0612                     	;# 
  2459  0613                     	;# 
  2460  0614                     	;# 
  2461  0616                     	;# 
  2462  0617                     	;# 
  2463  0618                     	;# 
  2464  0619                     	;# 
  2465  061A                     	;# 
  2466  061B                     	;# 
  2467  061C                     	;# 
  2468  061D                     	;# 
  2469  061E                     	;# 
  2470  068C                     	;# 
  2471  068D                     	;# 
  2472  068E                     	;# 
  2473  068F                     	;# 
  2474  0690                     	;# 
  2475  0691                     	;# 
  2476  0692                     	;# 
  2477  0693                     	;# 
  2478  0694                     	;# 
  2479  070C                     	;# 
  2480  070D                     	;# 
  2481  070E                     	;# 
  2482  070F                     	;# 
  2483  0710                     	;# 
  2484  0711                     	;# 
  2485  0712                     	;# 
  2486  0713                     	;# 
  2487  0714                     	;# 
  2488  0716                     	;# 
  2489  0717                     	;# 
  2490  0718                     	;# 
  2491  0719                     	;# 
  2492  071A                     	;# 
  2493  071B                     	;# 
  2494  071C                     	;# 
  2495  071D                     	;# 
  2496  071E                     	;# 
  2497  0796                     	;# 
  2498  0797                     	;# 
  2499  0798                     	;# 
  2500  0799                     	;# 
  2501  079A                     	;# 
  2502  079B                     	;# 
  2503  080C                     	;# 
  2504  080D                     	;# 
  2505  080E                     	;# 
  2506  080F                     	;# 
  2507  0810                     	;# 
  2508  0811                     	;# 
  2509  0812                     	;# 
  2510  0813                     	;# 
  2511  0814                     	;# 
  2512  081A                     	;# 
  2513  081B                     	;# 
  2514  081C                     	;# 
  2515  081D                     	;# 
  2516  081E                     	;# 
  2517  081F                     	;# 
  2518  088C                     	;# 
  2519  088D                     	;# 
  2520  088E                     	;# 
  2521  088F                     	;# 
  2522  0890                     	;# 
  2523  0891                     	;# 
  2524  0892                     	;# 
  2525  0893                     	;# 
  2526  0895                     	;# 
  2527  0896                     	;# 
  2528  0897                     	;# 
  2529  0898                     	;# 
  2530  0899                     	;# 
  2531  089A                     	;# 
  2532  089B                     	;# 
  2533  090C                     	;# 
  2534  090E                     	;# 
  2535  090F                     	;# 
  2536  091F                     	;# 
  2537  098F                     	;# 
  2538  098F                     	;# 
  2539  0990                     	;# 
  2540  0991                     	;# 
  2541  0992                     	;# 
  2542  0993                     	;# 
  2543  0994                     	;# 
  2544  0995                     	;# 
  2545  0996                     	;# 
  2546  0997                     	;# 
  2547  0E0F                     	;# 
  2548  0E10                     	;# 
  2549  0E11                     	;# 
  2550  0E12                     	;# 
  2551  0E13                     	;# 
  2552  0E14                     	;# 
  2553  0E15                     	;# 
  2554  0E16                     	;# 
  2555  0E17                     	;# 
  2556  0E18                     	;# 
  2557  0E19                     	;# 
  2558  0E1A                     	;# 
  2559  0E1B                     	;# 
  2560  0E1C                     	;# 
  2561  0E1D                     	;# 
  2562  0E1E                     	;# 
  2563  0E1F                     	;# 
  2564  0E20                     	;# 
  2565  0E21                     	;# 
  2566  0E22                     	;# 
  2567  0E23                     	;# 
  2568  0E24                     	;# 
  2569  0E25                     	;# 
  2570  0E26                     	;# 
  2571  0E27                     	;# 
  2572  0E28                     	;# 
  2573  0E29                     	;# 
  2574  0E2A                     	;# 
  2575  0E2B                     	;# 
  2576  0E2C                     	;# 
  2577  0E2D                     	;# 
  2578  0E2E                     	;# 
  2579  0E2F                     	;# 
  2580  0E30                     	;# 
  2581  0E31                     	;# 
  2582  0E32                     	;# 
  2583  0E33                     	;# 
  2584  0E34                     	;# 
  2585  0E35                     	;# 
  2586  0E36                     	;# 
  2587  0E37                     	;# 
  2588  0E8F                     	;# 
  2589  0E90                     	;# 
  2590  0E91                     	;# 
  2591  0E92                     	;# 
  2592  0E93                     	;# 
  2593  0E94                     	;# 
  2594  0E95                     	;# 
  2595  0E96                     	;# 
  2596  0E97                     	;# 
  2597  0E9C                     	;# 
  2598  0E9D                     	;# 
  2599  0E9E                     	;# 
  2600  0EA1                     	;# 
  2601  0EA2                     	;# 
  2602  0EA3                     	;# 
  2603  0EA4                     	;# 
  2604  0EA5                     	;# 
  2605  0EA9                     	;# 
  2606  0EAA                     	;# 
  2607  0EAB                     	;# 
  2608  0EAC                     	;# 
  2609  0EB1                     	;# 
  2610  0EB2                     	;# 
  2611  0EB3                     	;# 
  2612  0EB8                     	;# 
  2613  0EB9                     	;# 
  2614  0EBA                     	;# 
  2615  0EBB                     	;# 
  2616  0EBC                     	;# 
  2617  0EBD                     	;# 
  2618  0EBE                     	;# 
  2619  0EC3                     	;# 
  2620  0EC5                     	;# 
  2621  0EC6                     	;# 
  2622  0EC7                     	;# 
  2623  0EC8                     	;# 
  2624  0EC9                     	;# 
  2625  0ECA                     	;# 
  2626  0ECB                     	;# 
  2627  0ECC                     	;# 
  2628  0F10                     	;# 
  2629  0F11                     	;# 
  2630  0F12                     	;# 
  2631  0F13                     	;# 
  2632  0F14                     	;# 
  2633  0F15                     	;# 
  2634  0F16                     	;# 
  2635  0F17                     	;# 
  2636  0F18                     	;# 
  2637  0F19                     	;# 
  2638  0F1A                     	;# 
  2639  0F1B                     	;# 
  2640  0F1C                     	;# 
  2641  0F1D                     	;# 
  2642  0F1E                     	;# 
  2643  0F1F                     	;# 
  2644  0F20                     	;# 
  2645  0F21                     	;# 
  2646  0F22                     	;# 
  2647  0F23                     	;# 
  2648  0F24                     	;# 
  2649  0F25                     	;# 
  2650  0F26                     	;# 
  2651  0F27                     	;# 
  2652  0F38                     	;# 
  2653  0F39                     	;# 
  2654  0F3A                     	;# 
  2655  0F3B                     	;# 
  2656  0F3C                     	;# 
  2657  0F3D                     	;# 
  2658  0F3E                     	;# 
  2659  0F3F                     	;# 
  2660  0F40                     	;# 
  2661  0F41                     	;# 
  2662  0F43                     	;# 
  2663  0F44                     	;# 
  2664  0F45                     	;# 
  2665  0F46                     	;# 
  2666  0F47                     	;# 
  2667  0F48                     	;# 
  2668  0F49                     	;# 
  2669  0F4A                     	;# 
  2670  0F4B                     	;# 
  2671  0F4C                     	;# 
  2672  0F4E                     	;# 
  2673  0F4F                     	;# 
  2674  0F50                     	;# 
  2675  0F51                     	;# 
  2676  0F52                     	;# 
  2677  0F53                     	;# 
  2678  0F54                     	;# 
  2679  0F55                     	;# 
  2680  0F56                     	;# 
  2681  0F57                     	;# 
  2682  0F65                     	;# 
  2683  0F68                     	;# 
  2684  0F69                     	;# 
  2685  0F6A                     	;# 
  2686  0F6B                     	;# 
  2687  0FE4                     	;# 
  2688  0FE5                     	;# 
  2689  0FE6                     	;# 
  2690  0FE7                     	;# 
  2691  0FE8                     	;# 
  2692  0FE9                     	;# 
  2693  0FEA                     	;# 
  2694  0FEB                     	;# 
  2695  0FED                     	;# 
  2696  0FEE                     	;# 
  2697  0FEF                     	;# 
  2698  0000                     	;# 
  2699  0001                     	;# 
  2700  0002                     	;# 
  2701  0003                     	;# 
  2702  0004                     	;# 
  2703  0005                     	;# 
  2704  0006                     	;# 
  2705  0007                     	;# 
  2706  0008                     	;# 
  2707  0009                     	;# 
  2708  000A                     	;# 
  2709  000B                     	;# 
  2710  000C                     	;# 
  2711  000D                     	;# 
  2712  000E                     	;# 
  2713  0010                     	;# 
  2714  0011                     	;# 
  2715  0012                     	;# 
  2716  0013                     	;# 
  2717  0016                     	;# 
  2718  0017                     	;# 
  2719  0018                     	;# 
  2720  001C                     	;# 
  2721  001C                     	;# 
  2722  001D                     	;# 
  2723  001D                     	;# 
  2724  001E                     	;# 
  2725  001F                     	;# 
  2726  008C                     	;# 
  2727  008C                     	;# 
  2728  008D                     	;# 
  2729  008E                     	;# 
  2730  008E                     	;# 
  2731  008F                     	;# 
  2732  0090                     	;# 
  2733  0090                     	;# 
  2734  0091                     	;# 
  2735  0093                     	;# 
  2736  0094                     	;# 
  2737  0095                     	;# 
  2738  0096                     	;# 
  2739  0097                     	;# 
  2740  0098                     	;# 
  2741  0099                     	;# 
  2742  009A                     	;# 
  2743  009B                     	;# 
  2744  009C                     	;# 
  2745  009D                     	;# 
  2746  009E                     	;# 
  2747  010C                     	;# 
  2748  010D                     	;# 
  2749  010E                     	;# 
  2750  010E                     	;# 
  2751  010F                     	;# 
  2752  0110                     	;# 
  2753  0110                     	;# 
  2754  0111                     	;# 
  2755  0112                     	;# 
  2756  0112                     	;# 
  2757  0113                     	;# 
  2758  0114                     	;# 
  2759  0114                     	;# 
  2760  0115                     	;# 
  2761  0116                     	;# 
  2762  0116                     	;# 
  2763  0117                     	;# 
  2764  0119                     	;# 
  2765  0119                     	;# 
  2766  0119                     	;# 
  2767  011A                     	;# 
  2768  011A                     	;# 
  2769  011A                     	;# 
  2770  011B                     	;# 
  2771  011B                     	;# 
  2772  011B                     	;# 
  2773  011B                     	;# 
  2774  011B                     	;# 
  2775  011C                     	;# 
  2776  011C                     	;# 
  2777  011C                     	;# 
  2778  011D                     	;# 
  2779  011D                     	;# 
  2780  011D                     	;# 
  2781  011E                     	;# 
  2782  011E                     	;# 
  2783  011E                     	;# 
  2784  011F                     	;# 
  2785  011F                     	;# 
  2786  011F                     	;# 
  2787  011F                     	;# 
  2788  011F                     	;# 
  2789  018C                     	;# 
  2790  018D                     	;# 
  2791  018E                     	;# 
  2792  018F                     	;# 
  2793  0190                     	;# 
  2794  0191                     	;# 
  2795  0192                     	;# 
  2796  0196                     	;# 
  2797  0197                     	;# 
  2798  0198                     	;# 
  2799  0199                     	;# 
  2800  019A                     	;# 
  2801  019B                     	;# 
  2802  019C                     	;# 
  2803  020C                     	;# 
  2804  020C                     	;# 
  2805  020D                     	;# 
  2806  020E                     	;# 
  2807  020F                     	;# 
  2808  020F                     	;# 
  2809  0210                     	;# 
  2810  0210                     	;# 
  2811  0211                     	;# 
  2812  0211                     	;# 
  2813  0212                     	;# 
  2814  0212                     	;# 
  2815  0213                     	;# 
  2816  0214                     	;# 
  2817  0215                     	;# 
  2818  0215                     	;# 
  2819  0216                     	;# 
  2820  0216                     	;# 
  2821  0217                     	;# 
  2822  0217                     	;# 
  2823  0218                     	;# 
  2824  0218                     	;# 
  2825  0219                     	;# 
  2826  021A                     	;# 
  2827  021B                     	;# 
  2828  021B                     	;# 
  2829  021C                     	;# 
  2830  021C                     	;# 
  2831  021D                     	;# 
  2832  021D                     	;# 
  2833  021E                     	;# 
  2834  021F                     	;# 
  2835  028C                     	;# 
  2836  028C                     	;# 
  2837  028D                     	;# 
  2838  028D                     	;# 
  2839  028E                     	;# 
  2840  028F                     	;# 
  2841  0290                     	;# 
  2842  0290                     	;# 
  2843  0291                     	;# 
  2844  0292                     	;# 
  2845  0292                     	;# 
  2846  0293                     	;# 
  2847  0293                     	;# 
  2848  0294                     	;# 
  2849  0295                     	;# 
  2850  0296                     	;# 
  2851  0296                     	;# 
  2852  0297                     	;# 
  2853  0298                     	;# 
  2854  0298                     	;# 
  2855  0299                     	;# 
  2856  0299                     	;# 
  2857  029A                     	;# 
  2858  029B                     	;# 
  2859  029C                     	;# 
  2860  029C                     	;# 
  2861  029D                     	;# 
  2862  030C                     	;# 
  2863  030C                     	;# 
  2864  030D                     	;# 
  2865  030E                     	;# 
  2866  030F                     	;# 
  2867  0310                     	;# 
  2868  0310                     	;# 
  2869  0311                     	;# 
  2870  0312                     	;# 
  2871  0313                     	;# 
  2872  0314                     	;# 
  2873  0314                     	;# 
  2874  0315                     	;# 
  2875  0316                     	;# 
  2876  0317                     	;# 
  2877  0318                     	;# 
  2878  0318                     	;# 
  2879  0319                     	;# 
  2880  031A                     	;# 
  2881  031B                     	;# 
  2882  031C                     	;# 
  2883  031C                     	;# 
  2884  031D                     	;# 
  2885  031E                     	;# 
  2886  031F                     	;# 
  2887  038C                     	;# 
  2888  038C                     	;# 
  2889  038D                     	;# 
  2890  038E                     	;# 
  2891  0390                     	;# 
  2892  0390                     	;# 
  2893  0391                     	;# 
  2894  0392                     	;# 
  2895  040C                     	;# 
  2896  040D                     	;# 
  2897  040E                     	;# 
  2898  040F                     	;# 
  2899  0410                     	;# 
  2900  0411                     	;# 
  2901  0416                     	;# 
  2902  0416                     	;# 
  2903  0417                     	;# 
  2904  0418                     	;# 
  2905  0418                     	;# 
  2906  0419                     	;# 
  2907  041A                     	;# 
  2908  041A                     	;# 
  2909  041B                     	;# 
  2910  041C                     	;# 
  2911  041C                     	;# 
  2912  041D                     	;# 
  2913  041E                     	;# 
  2914  041F                     	;# 
  2915  048C                     	;# 
  2916  048C                     	;# 
  2917  048D                     	;# 
  2918  048E                     	;# 
  2919  048F                     	;# 
  2920  048F                     	;# 
  2921  0490                     	;# 
  2922  0491                     	;# 
  2923  0492                     	;# 
  2924  0492                     	;# 
  2925  0493                     	;# 
  2926  0494                     	;# 
  2927  0495                     	;# 
  2928  0495                     	;# 
  2929  0496                     	;# 
  2930  0497                     	;# 
  2931  0498                     	;# 
  2932  0499                     	;# 
  2933  049A                     	;# 
  2934  049B                     	;# 
  2935  049C                     	;# 
  2936  049D                     	;# 
  2937  050C                     	;# 
  2938  050C                     	;# 
  2939  050D                     	;# 
  2940  050E                     	;# 
  2941  050F                     	;# 
  2942  050F                     	;# 
  2943  0510                     	;# 
  2944  0511                     	;# 
  2945  0512                     	;# 
  2946  0512                     	;# 
  2947  0513                     	;# 
  2948  0514                     	;# 
  2949  0515                     	;# 
  2950  0515                     	;# 
  2951  0516                     	;# 
  2952  0517                     	;# 
  2953  0518                     	;# 
  2954  0519                     	;# 
  2955  051A                     	;# 
  2956  051B                     	;# 
  2957  051C                     	;# 
  2958  051D                     	;# 
  2959  058C                     	;# 
  2960  058C                     	;# 
  2961  058D                     	;# 
  2962  058E                     	;# 
  2963  058F                     	;# 
  2964  058F                     	;# 
  2965  0590                     	;# 
  2966  0591                     	;# 
  2967  0592                     	;# 
  2968  0593                     	;# 
  2969  060C                     	;# 
  2970  060D                     	;# 
  2971  060E                     	;# 
  2972  060F                     	;# 
  2973  0610                     	;# 
  2974  0611                     	;# 
  2975  0612                     	;# 
  2976  0613                     	;# 
  2977  0614                     	;# 
  2978  0616                     	;# 
  2979  0617                     	;# 
  2980  0618                     	;# 
  2981  0619                     	;# 
  2982  061A                     	;# 
  2983  061B                     	;# 
  2984  061C                     	;# 
  2985  061D                     	;# 
  2986  061E                     	;# 
  2987  068C                     	;# 
  2988  068D                     	;# 
  2989  068E                     	;# 
  2990  068F                     	;# 
  2991  0690                     	;# 
  2992  0691                     	;# 
  2993  0692                     	;# 
  2994  0693                     	;# 
  2995  0694                     	;# 
  2996  070C                     	;# 
  2997  070D                     	;# 
  2998  070E                     	;# 
  2999  070F                     	;# 
  3000  0710                     	;# 
  3001  0711                     	;# 
  3002  0712                     	;# 
  3003  0713                     	;# 
  3004  0714                     	;# 
  3005  0716                     	;# 
  3006  0717                     	;# 
  3007  0718                     	;# 
  3008  0719                     	;# 
  3009  071A                     	;# 
  3010  071B                     	;# 
  3011  071C                     	;# 
  3012  071D                     	;# 
  3013  071E                     	;# 
  3014  0796                     	;# 
  3015  0797                     	;# 
  3016  0798                     	;# 
  3017  0799                     	;# 
  3018  079A                     	;# 
  3019  079B                     	;# 
  3020  080C                     	;# 
  3021  080D                     	;# 
  3022  080E                     	;# 
  3023  080F                     	;# 
  3024  0810                     	;# 
  3025  0811                     	;# 
  3026  0812                     	;# 
  3027  0813                     	;# 
  3028  0814                     	;# 
  3029  081A                     	;# 
  3030  081B                     	;# 
  3031  081C                     	;# 
  3032  081D                     	;# 
  3033  081E                     	;# 
  3034  081F                     	;# 
  3035  088C                     	;# 
  3036  088D                     	;# 
  3037  088E                     	;# 
  3038  088F                     	;# 
  3039  0890                     	;# 
  3040  0891                     	;# 
  3041  0892                     	;# 
  3042  0893                     	;# 
  3043  0895                     	;# 
  3044  0896                     	;# 
  3045  0897                     	;# 
  3046  0898                     	;# 
  3047  0899                     	;# 
  3048  089A                     	;# 
  3049  089B                     	;# 
  3050  090C                     	;# 
  3051  090E                     	;# 
  3052  090F                     	;# 
  3053  091F                     	;# 
  3054  098F                     	;# 
  3055  098F                     	;# 
  3056  0990                     	;# 
  3057  0991                     	;# 
  3058  0992                     	;# 
  3059  0993                     	;# 
  3060  0994                     	;# 
  3061  0995                     	;# 
  3062  0996                     	;# 
  3063  0997                     	;# 
  3064  0E0F                     	;# 
  3065  0E10                     	;# 
  3066  0E11                     	;# 
  3067  0E12                     	;# 
  3068  0E13                     	;# 
  3069  0E14                     	;# 
  3070  0E15                     	;# 
  3071  0E16                     	;# 
  3072  0E17                     	;# 
  3073  0E18                     	;# 
  3074  0E19                     	;# 
  3075  0E1A                     	;# 
  3076  0E1B                     	;# 
  3077  0E1C                     	;# 
  3078  0E1D                     	;# 
  3079  0E1E                     	;# 
  3080  0E1F                     	;# 
  3081  0E20                     	;# 
  3082  0E21                     	;# 
  3083  0E22                     	;# 
  3084  0E23                     	;# 
  3085  0E24                     	;# 
  3086  0E25                     	;# 
  3087  0E26                     	;# 
  3088  0E27                     	;# 
  3089  0E28                     	;# 
  3090  0E29                     	;# 
  3091  0E2A                     	;# 
  3092  0E2B                     	;# 
  3093  0E2C                     	;# 
  3094  0E2D                     	;# 
  3095  0E2E                     	;# 
  3096  0E2F                     	;# 
  3097  0E30                     	;# 
  3098  0E31                     	;# 
  3099  0E32                     	;# 
  3100  0E33                     	;# 
  3101  0E34                     	;# 
  3102  0E35                     	;# 
  3103  0E36                     	;# 
  3104  0E37                     	;# 
  3105  0E8F                     	;# 
  3106  0E90                     	;# 
  3107  0E91                     	;# 
  3108  0E92                     	;# 
  3109  0E93                     	;# 
  3110  0E94                     	;# 
  3111  0E95                     	;# 
  3112  0E96                     	;# 
  3113  0E97                     	;# 
  3114  0E9C                     	;# 
  3115  0E9D                     	;# 
  3116  0E9E                     	;# 
  3117  0EA1                     	;# 
  3118  0EA2                     	;# 
  3119  0EA3                     	;# 
  3120  0EA4                     	;# 
  3121  0EA5                     	;# 
  3122  0EA9                     	;# 
  3123  0EAA                     	;# 
  3124  0EAB                     	;# 
  3125  0EAC                     	;# 
  3126  0EB1                     	;# 
  3127  0EB2                     	;# 
  3128  0EB3                     	;# 
  3129  0EB8                     	;# 
  3130  0EB9                     	;# 
  3131  0EBA                     	;# 
  3132  0EBB                     	;# 
  3133  0EBC                     	;# 
  3134  0EBD                     	;# 
  3135  0EBE                     	;# 
  3136  0EC3                     	;# 
  3137  0EC5                     	;# 
  3138  0EC6                     	;# 
  3139  0EC7                     	;# 
  3140  0EC8                     	;# 
  3141  0EC9                     	;# 
  3142  0ECA                     	;# 
  3143  0ECB                     	;# 
  3144  0ECC                     	;# 
  3145  0F10                     	;# 
  3146  0F11                     	;# 
  3147  0F12                     	;# 
  3148  0F13                     	;# 
  3149  0F14                     	;# 
  3150  0F15                     	;# 
  3151  0F16                     	;# 
  3152  0F17                     	;# 
  3153  0F18                     	;# 
  3154  0F19                     	;# 
  3155  0F1A                     	;# 
  3156  0F1B                     	;# 
  3157  0F1C                     	;# 
  3158  0F1D                     	;# 
  3159  0F1E                     	;# 
  3160  0F1F                     	;# 
  3161  0F20                     	;# 
  3162  0F21                     	;# 
  3163  0F22                     	;# 
  3164  0F23                     	;# 
  3165  0F24                     	;# 
  3166  0F25                     	;# 
  3167  0F26                     	;# 
  3168  0F27                     	;# 
  3169  0F38                     	;# 
  3170  0F39                     	;# 
  3171  0F3A                     	;# 
  3172  0F3B                     	;# 
  3173  0F3C                     	;# 
  3174  0F3D                     	;# 
  3175  0F3E                     	;# 
  3176  0F3F                     	;# 
  3177  0F40                     	;# 
  3178  0F41                     	;# 
  3179  0F43                     	;# 
  3180  0F44                     	;# 
  3181  0F45                     	;# 
  3182  0F46                     	;# 
  3183  0F47                     	;# 
  3184  0F48                     	;# 
  3185  0F49                     	;# 
  3186  0F4A                     	;# 
  3187  0F4B                     	;# 
  3188  0F4C                     	;# 
  3189  0F4E                     	;# 
  3190  0F4F                     	;# 
  3191  0F50                     	;# 
  3192  0F51                     	;# 
  3193  0F52                     	;# 
  3194  0F53                     	;# 
  3195  0F54                     	;# 
  3196  0F55                     	;# 
  3197  0F56                     	;# 
  3198  0F57                     	;# 
  3199  0F65                     	;# 
  3200  0F68                     	;# 
  3201  0F69                     	;# 
  3202  0F6A                     	;# 
  3203  0F6B                     	;# 
  3204  0FE4                     	;# 
  3205  0FE5                     	;# 
  3206  0FE6                     	;# 
  3207  0FE7                     	;# 
  3208  0FE8                     	;# 
  3209  0FE9                     	;# 
  3210  0FEA                     	;# 
  3211  0FEB                     	;# 
  3212  0FED                     	;# 
  3213  0FEE                     	;# 
  3214  0FEF                     	;# 
  3215  0000                     	;# 
  3216  0001                     	;# 
  3217  0002                     	;# 
  3218  0003                     	;# 
  3219  0004                     	;# 
  3220  0005                     	;# 
  3221  0006                     	;# 
  3222  0007                     	;# 
  3223  0008                     	;# 
  3224  0009                     	;# 
  3225  000A                     	;# 
  3226  000B                     	;# 
  3227  000C                     	;# 
  3228  000D                     	;# 
  3229  000E                     	;# 
  3230  0010                     	;# 
  3231  0011                     	;# 
  3232  0012                     	;# 
  3233  0013                     	;# 
  3234  0016                     	;# 
  3235  0017                     	;# 
  3236  0018                     	;# 
  3237  001C                     	;# 
  3238  001C                     	;# 
  3239  001D                     	;# 
  3240  001D                     	;# 
  3241  001E                     	;# 
  3242  001F                     	;# 
  3243  008C                     	;# 
  3244  008C                     	;# 
  3245  008D                     	;# 
  3246  008E                     	;# 
  3247  008E                     	;# 
  3248  008F                     	;# 
  3249  0090                     	;# 
  3250  0090                     	;# 
  3251  0091                     	;# 
  3252  0093                     	;# 
  3253  0094                     	;# 
  3254  0095                     	;# 
  3255  0096                     	;# 
  3256  0097                     	;# 
  3257  0098                     	;# 
  3258  0099                     	;# 
  3259  009A                     	;# 
  3260  009B                     	;# 
  3261  009C                     	;# 
  3262  009D                     	;# 
  3263  009E                     	;# 
  3264  010C                     	;# 
  3265  010D                     	;# 
  3266  010E                     	;# 
  3267  010E                     	;# 
  3268  010F                     	;# 
  3269  0110                     	;# 
  3270  0110                     	;# 
  3271  0111                     	;# 
  3272  0112                     	;# 
  3273  0112                     	;# 
  3274  0113                     	;# 
  3275  0114                     	;# 
  3276  0114                     	;# 
  3277  0115                     	;# 
  3278  0116                     	;# 
  3279  0116                     	;# 
  3280  0117                     	;# 
  3281  0119                     	;# 
  3282  0119                     	;# 
  3283  0119                     	;# 
  3284  011A                     	;# 
  3285  011A                     	;# 
  3286  011A                     	;# 
  3287  011B                     	;# 
  3288  011B                     	;# 
  3289  011B                     	;# 
  3290  011B                     	;# 
  3291  011B                     	;# 
  3292  011C                     	;# 
  3293  011C                     	;# 
  3294  011C                     	;# 
  3295  011D                     	;# 
  3296  011D                     	;# 
  3297  011D                     	;# 
  3298  011E                     	;# 
  3299  011E                     	;# 
  3300  011E                     	;# 
  3301  011F                     	;# 
  3302  011F                     	;# 
  3303  011F                     	;# 
  3304  011F                     	;# 
  3305  011F                     	;# 
  3306  018C                     	;# 
  3307  018D                     	;# 
  3308  018E                     	;# 
  3309  018F                     	;# 
  3310  0190                     	;# 
  3311  0191                     	;# 
  3312  0192                     	;# 
  3313  0196                     	;# 
  3314  0197                     	;# 
  3315  0198                     	;# 
  3316  0199                     	;# 
  3317  019A                     	;# 
  3318  019B                     	;# 
  3319  019C                     	;# 
  3320  020C                     	;# 
  3321  020C                     	;# 
  3322  020D                     	;# 
  3323  020E                     	;# 
  3324  020F                     	;# 
  3325  020F                     	;# 
  3326  0210                     	;# 
  3327  0210                     	;# 
  3328  0211                     	;# 
  3329  0211                     	;# 
  3330  0212                     	;# 
  3331  0212                     	;# 
  3332  0213                     	;# 
  3333  0214                     	;# 
  3334  0215                     	;# 
  3335  0215                     	;# 
  3336  0216                     	;# 
  3337  0216                     	;# 
  3338  0217                     	;# 
  3339  0217                     	;# 
  3340  0218                     	;# 
  3341  0218                     	;# 
  3342  0219                     	;# 
  3343  021A                     	;# 
  3344  021B                     	;# 
  3345  021B                     	;# 
  3346  021C                     	;# 
  3347  021C                     	;# 
  3348  021D                     	;# 
  3349  021D                     	;# 
  3350  021E                     	;# 
  3351  021F                     	;# 
  3352  028C                     	;# 
  3353  028C                     	;# 
  3354  028D                     	;# 
  3355  028D                     	;# 
  3356  028E                     	;# 
  3357  028F                     	;# 
  3358  0290                     	;# 
  3359  0290                     	;# 
  3360  0291                     	;# 
  3361  0292                     	;# 
  3362  0292                     	;# 
  3363  0293                     	;# 
  3364  0293                     	;# 
  3365  0294                     	;# 
  3366  0295                     	;# 
  3367  0296                     	;# 
  3368  0296                     	;# 
  3369  0297                     	;# 
  3370  0298                     	;# 
  3371  0298                     	;# 
  3372  0299                     	;# 
  3373  0299                     	;# 
  3374  029A                     	;# 
  3375  029B                     	;# 
  3376  029C                     	;# 
  3377  029C                     	;# 
  3378  029D                     	;# 
  3379  030C                     	;# 
  3380  030C                     	;# 
  3381  030D                     	;# 
  3382  030E                     	;# 
  3383  030F                     	;# 
  3384  0310                     	;# 
  3385  0310                     	;# 
  3386  0311                     	;# 
  3387  0312                     	;# 
  3388  0313                     	;# 
  3389  0314                     	;# 
  3390  0314                     	;# 
  3391  0315                     	;# 
  3392  0316                     	;# 
  3393  0317                     	;# 
  3394  0318                     	;# 
  3395  0318                     	;# 
  3396  0319                     	;# 
  3397  031A                     	;# 
  3398  031B                     	;# 
  3399  031C                     	;# 
  3400  031C                     	;# 
  3401  031D                     	;# 
  3402  031E                     	;# 
  3403  031F                     	;# 
  3404  038C                     	;# 
  3405  038C                     	;# 
  3406  038D                     	;# 
  3407  038E                     	;# 
  3408  0390                     	;# 
  3409  0390                     	;# 
  3410  0391                     	;# 
  3411  0392                     	;# 
  3412  040C                     	;# 
  3413  040D                     	;# 
  3414  040E                     	;# 
  3415  040F                     	;# 
  3416  0410                     	;# 
  3417  0411                     	;# 
  3418  0416                     	;# 
  3419  0416                     	;# 
  3420  0417                     	;# 
  3421  0418                     	;# 
  3422  0418                     	;# 
  3423  0419                     	;# 
  3424  041A                     	;# 
  3425  041A                     	;# 
  3426  041B                     	;# 
  3427  041C                     	;# 
  3428  041C                     	;# 
  3429  041D                     	;# 
  3430  041E                     	;# 
  3431  041F                     	;# 
  3432  048C                     	;# 
  3433  048C                     	;# 
  3434  048D                     	;# 
  3435  048E                     	;# 
  3436  048F                     	;# 
  3437  048F                     	;# 
  3438  0490                     	;# 
  3439  0491                     	;# 
  3440  0492                     	;# 
  3441  0492                     	;# 
  3442  0493                     	;# 
  3443  0494                     	;# 
  3444  0495                     	;# 
  3445  0495                     	;# 
  3446  0496                     	;# 
  3447  0497                     	;# 
  3448  0498                     	;# 
  3449  0499                     	;# 
  3450  049A                     	;# 
  3451  049B                     	;# 
  3452  049C                     	;# 
  3453  049D                     	;# 
  3454  050C                     	;# 
  3455  050C                     	;# 
  3456  050D                     	;# 
  3457  050E                     	;# 
  3458  050F                     	;# 
  3459  050F                     	;# 
  3460  0510                     	;# 
  3461  0511                     	;# 
  3462  0512                     	;# 
  3463  0512                     	;# 
  3464  0513                     	;# 
  3465  0514                     	;# 
  3466  0515                     	;# 
  3467  0515                     	;# 
  3468  0516                     	;# 
  3469  0517                     	;# 
  3470  0518                     	;# 
  3471  0519                     	;# 
  3472  051A                     	;# 
  3473  051B                     	;# 
  3474  051C                     	;# 
  3475  051D                     	;# 
  3476  058C                     	;# 
  3477  058C                     	;# 
  3478  058D                     	;# 
  3479  058E                     	;# 
  3480  058F                     	;# 
  3481  058F                     	;# 
  3482  0590                     	;# 
  3483  0591                     	;# 
  3484  0592                     	;# 
  3485  0593                     	;# 
  3486  060C                     	;# 
  3487  060D                     	;# 
  3488  060E                     	;# 
  3489  060F                     	;# 
  3490  0610                     	;# 
  3491  0611                     	;# 
  3492  0612                     	;# 
  3493  0613                     	;# 
  3494  0614                     	;# 
  3495  0616                     	;# 
  3496  0617                     	;# 
  3497  0618                     	;# 
  3498  0619                     	;# 
  3499  061A                     	;# 
  3500  061B                     	;# 
  3501  061C                     	;# 
  3502  061D                     	;# 
  3503  061E                     	;# 
  3504  068C                     	;# 
  3505  068D                     	;# 
  3506  068E                     	;# 
  3507  068F                     	;# 
  3508  0690                     	;# 
  3509  0691                     	;# 
  3510  0692                     	;# 
  3511  0693                     	;# 
  3512  0694                     	;# 
  3513  070C                     	;# 
  3514  070D                     	;# 
  3515  070E                     	;# 
  3516  070F                     	;# 
  3517  0710                     	;# 
  3518  0711                     	;# 
  3519  0712                     	;# 
  3520  0713                     	;# 
  3521  0714                     	;# 
  3522  0716                     	;# 
  3523  0717                     	;# 
  3524  0718                     	;# 
  3525  0719                     	;# 
  3526  071A                     	;# 
  3527  071B                     	;# 
  3528  071C                     	;# 
  3529  071D                     	;# 
  3530  071E                     	;# 
  3531  0796                     	;# 
  3532  0797                     	;# 
  3533  0798                     	;# 
  3534  0799                     	;# 
  3535  079A                     	;# 
  3536  079B                     	;# 
  3537  080C                     	;# 
  3538  080D                     	;# 
  3539  080E                     	;# 
  3540  080F                     	;# 
  3541  0810                     	;# 
  3542  0811                     	;# 
  3543  0812                     	;# 
  3544  0813                     	;# 
  3545  0814                     	;# 
  3546  081A                     	;# 
  3547  081B                     	;# 
  3548  081C                     	;# 
  3549  081D                     	;# 
  3550  081E                     	;# 
  3551  081F                     	;# 
  3552  088C                     	;# 
  3553  088D                     	;# 
  3554  088E                     	;# 
  3555  088F                     	;# 
  3556  0890                     	;# 
  3557  0891                     	;# 
  3558  0892                     	;# 
  3559  0893                     	;# 
  3560  0895                     	;# 
  3561  0896                     	;# 
  3562  0897                     	;# 
  3563  0898                     	;# 
  3564  0899                     	;# 
  3565  089A                     	;# 
  3566  089B                     	;# 
  3567  090C                     	;# 
  3568  090E                     	;# 
  3569  090F                     	;# 
  3570  091F                     	;# 
  3571  098F                     	;# 
  3572  098F                     	;# 
  3573  0990                     	;# 
  3574  0991                     	;# 
  3575  0992                     	;# 
  3576  0993                     	;# 
  3577  0994                     	;# 
  3578  0995                     	;# 
  3579  0996                     	;# 
  3580  0997                     	;# 
  3581  0E0F                     	;# 
  3582  0E10                     	;# 
  3583  0E11                     	;# 
  3584  0E12                     	;# 
  3585  0E13                     	;# 
  3586  0E14                     	;# 
  3587  0E15                     	;# 
  3588  0E16                     	;# 
  3589  0E17                     	;# 
  3590  0E18                     	;# 
  3591  0E19                     	;# 
  3592  0E1A                     	;# 
  3593  0E1B                     	;# 
  3594  0E1C                     	;# 
  3595  0E1D                     	;# 
  3596  0E1E                     	;# 
  3597  0E1F                     	;# 
  3598  0E20                     	;# 
  3599  0E21                     	;# 
  3600  0E22                     	;# 
  3601  0E23                     	;# 
  3602  0E24                     	;# 
  3603  0E25                     	;# 
  3604  0E26                     	;# 
  3605  0E27                     	;# 
  3606  0E28                     	;# 
  3607  0E29                     	;# 
  3608  0E2A                     	;# 
  3609  0E2B                     	;# 
  3610  0E2C                     	;# 
  3611  0E2D                     	;# 
  3612  0E2E                     	;# 
  3613  0E2F                     	;# 
  3614  0E30                     	;# 
  3615  0E31                     	;# 
  3616  0E32                     	;# 
  3617  0E33                     	;# 
  3618  0E34                     	;# 
  3619  0E35                     	;# 
  3620  0E36                     	;# 
  3621  0E37                     	;# 
  3622  0E8F                     	;# 
  3623  0E90                     	;# 
  3624  0E91                     	;# 
  3625  0E92                     	;# 
  3626  0E93                     	;# 
  3627  0E94                     	;# 
  3628  0E95                     	;# 
  3629  0E96                     	;# 
  3630  0E97                     	;# 
  3631  0E9C                     	;# 
  3632  0E9D                     	;# 
  3633  0E9E                     	;# 
  3634  0EA1                     	;# 
  3635  0EA2                     	;# 
  3636  0EA3                     	;# 
  3637  0EA4                     	;# 
  3638  0EA5                     	;# 
  3639  0EA9                     	;# 
  3640  0EAA                     	;# 
  3641  0EAB                     	;# 
  3642  0EAC                     	;# 
  3643  0EB1                     	;# 
  3644  0EB2                     	;# 
  3645  0EB3                     	;# 
  3646  0EB8                     	;# 
  3647  0EB9                     	;# 
  3648  0EBA                     	;# 
  3649  0EBB                     	;# 
  3650  0EBC                     	;# 
  3651  0EBD                     	;# 
  3652  0EBE                     	;# 
  3653  0EC3                     	;# 
  3654  0EC5                     	;# 
  3655  0EC6                     	;# 
  3656  0EC7                     	;# 
  3657  0EC8                     	;# 
  3658  0EC9                     	;# 
  3659  0ECA                     	;# 
  3660  0ECB                     	;# 
  3661  0ECC                     	;# 
  3662  0F10                     	;# 
  3663  0F11                     	;# 
  3664  0F12                     	;# 
  3665  0F13                     	;# 
  3666  0F14                     	;# 
  3667  0F15                     	;# 
  3668  0F16                     	;# 
  3669  0F17                     	;# 
  3670  0F18                     	;# 
  3671  0F19                     	;# 
  3672  0F1A                     	;# 
  3673  0F1B                     	;# 
  3674  0F1C                     	;# 
  3675  0F1D                     	;# 
  3676  0F1E                     	;# 
  3677  0F1F                     	;# 
  3678  0F20                     	;# 
  3679  0F21                     	;# 
  3680  0F22                     	;# 
  3681  0F23                     	;# 
  3682  0F24                     	;# 
  3683  0F25                     	;# 
  3684  0F26                     	;# 
  3685  0F27                     	;# 
  3686  0F38                     	;# 
  3687  0F39                     	;# 
  3688  0F3A                     	;# 
  3689  0F3B                     	;# 
  3690  0F3C                     	;# 
  3691  0F3D                     	;# 
  3692  0F3E                     	;# 
  3693  0F3F                     	;# 
  3694  0F40                     	;# 
  3695  0F41                     	;# 
  3696  0F43                     	;# 
  3697  0F44                     	;# 
  3698  0F45                     	;# 
  3699  0F46                     	;# 
  3700  0F47                     	;# 
  3701  0F48                     	;# 
  3702  0F49                     	;# 
  3703  0F4A                     	;# 
  3704  0F4B                     	;# 
  3705  0F4C                     	;# 
  3706  0F4E                     	;# 
  3707  0F4F                     	;# 
  3708  0F50                     	;# 
  3709  0F51                     	;# 
  3710  0F52                     	;# 
  3711  0F53                     	;# 
  3712  0F54                     	;# 
  3713  0F55                     	;# 
  3714  0F56                     	;# 
  3715  0F57                     	;# 
  3716  0F65                     	;# 
  3717  0F68                     	;# 
  3718  0F69                     	;# 
  3719  0F6A                     	;# 
  3720  0F6B                     	;# 
  3721  0FE4                     	;# 
  3722  0FE5                     	;# 
  3723  0FE6                     	;# 
  3724  0FE7                     	;# 
  3725  0FE8                     	;# 
  3726  0FE9                     	;# 
  3727  0FEA                     	;# 
  3728  0FEB                     	;# 
  3729  0FED                     	;# 
  3730  0FEE                     	;# 
  3731  0FEF                     	;# 
  3732  0000                     	;# 
  3733  0001                     	;# 
  3734  0002                     	;# 
  3735  0003                     	;# 
  3736  0004                     	;# 
  3737  0005                     	;# 
  3738  0006                     	;# 
  3739  0007                     	;# 
  3740  0008                     	;# 
  3741  0009                     	;# 
  3742  000A                     	;# 
  3743  000B                     	;# 
  3744  000C                     	;# 
  3745  000D                     	;# 
  3746  000E                     	;# 
  3747  0010                     	;# 
  3748  0011                     	;# 
  3749  0012                     	;# 
  3750  0013                     	;# 
  3751  0016                     	;# 
  3752  0017                     	;# 
  3753  0018                     	;# 
  3754  001C                     	;# 
  3755  001C                     	;# 
  3756  001D                     	;# 
  3757  001D                     	;# 
  3758  001E                     	;# 
  3759  001F                     	;# 
  3760  008C                     	;# 
  3761  008C                     	;# 
  3762  008D                     	;# 
  3763  008E                     	;# 
  3764  008E                     	;# 
  3765  008F                     	;# 
  3766  0090                     	;# 
  3767  0090                     	;# 
  3768  0091                     	;# 
  3769  0093                     	;# 
  3770  0094                     	;# 
  3771  0095                     	;# 
  3772  0096                     	;# 
  3773  0097                     	;# 
  3774  0098                     	;# 
  3775  0099                     	;# 
  3776  009A                     	;# 
  3777  009B                     	;# 
  3778  009C                     	;# 
  3779  009D                     	;# 
  3780  009E                     	;# 
  3781  010C                     	;# 
  3782  010D                     	;# 
  3783  010E                     	;# 
  3784  010E                     	;# 
  3785  010F                     	;# 
  3786  0110                     	;# 
  3787  0110                     	;# 
  3788  0111                     	;# 
  3789  0112                     	;# 
  3790  0112                     	;# 
  3791  0113                     	;# 
  3792  0114                     	;# 
  3793  0114                     	;# 
  3794  0115                     	;# 
  3795  0116                     	;# 
  3796  0116                     	;# 
  3797  0117                     	;# 
  3798  0119                     	;# 
  3799  0119                     	;# 
  3800  0119                     	;# 
  3801  011A                     	;# 
  3802  011A                     	;# 
  3803  011A                     	;# 
  3804  011B                     	;# 
  3805  011B                     	;# 
  3806  011B                     	;# 
  3807  011B                     	;# 
  3808  011B                     	;# 
  3809  011C                     	;# 
  3810  011C                     	;# 
  3811  011C                     	;# 
  3812  011D                     	;# 
  3813  011D                     	;# 
  3814  011D                     	;# 
  3815  011E                     	;# 
  3816  011E                     	;# 
  3817  011E                     	;# 
  3818  011F                     	;# 
  3819  011F                     	;# 
  3820  011F                     	;# 
  3821  011F                     	;# 
  3822  011F                     	;# 
  3823  018C                     	;# 
  3824  018D                     	;# 
  3825  018E                     	;# 
  3826  018F                     	;# 
  3827  0190                     	;# 
  3828  0191                     	;# 
  3829  0192                     	;# 
  3830  0196                     	;# 
  3831  0197                     	;# 
  3832  0198                     	;# 
  3833  0199                     	;# 
  3834  019A                     	;# 
  3835  019B                     	;# 
  3836  019C                     	;# 
  3837  020C                     	;# 
  3838  020C                     	;# 
  3839  020D                     	;# 
  3840  020E                     	;# 
  3841  020F                     	;# 
  3842  020F                     	;# 
  3843  0210                     	;# 
  3844  0210                     	;# 
  3845  0211                     	;# 
  3846  0211                     	;# 
  3847  0212                     	;# 
  3848  0212                     	;# 
  3849  0213                     	;# 
  3850  0214                     	;# 
  3851  0215                     	;# 
  3852  0215                     	;# 
  3853  0216                     	;# 
  3854  0216                     	;# 
  3855  0217                     	;# 
  3856  0217                     	;# 
  3857  0218                     	;# 
  3858  0218                     	;# 
  3859  0219                     	;# 
  3860  021A                     	;# 
  3861  021B                     	;# 
  3862  021B                     	;# 
  3863  021C                     	;# 
  3864  021C                     	;# 
  3865  021D                     	;# 
  3866  021D                     	;# 
  3867  021E                     	;# 
  3868  021F                     	;# 
  3869  028C                     	;# 
  3870  028C                     	;# 
  3871  028D                     	;# 
  3872  028D                     	;# 
  3873  028E                     	;# 
  3874  028F                     	;# 
  3875  0290                     	;# 
  3876  0290                     	;# 
  3877  0291                     	;# 
  3878  0292                     	;# 
  3879  0292                     	;# 
  3880  0293                     	;# 
  3881  0293                     	;# 
  3882  0294                     	;# 
  3883  0295                     	;# 
  3884  0296                     	;# 
  3885  0296                     	;# 
  3886  0297                     	;# 
  3887  0298                     	;# 
  3888  0298                     	;# 
  3889  0299                     	;# 
  3890  0299                     	;# 
  3891  029A                     	;# 
  3892  029B                     	;# 
  3893  029C                     	;# 
  3894  029C                     	;# 
  3895  029D                     	;# 
  3896  030C                     	;# 
  3897  030C                     	;# 
  3898  030D                     	;# 
  3899  030E                     	;# 
  3900  030F                     	;# 
  3901  0310                     	;# 
  3902  0310                     	;# 
  3903  0311                     	;# 
  3904  0312                     	;# 
  3905  0313                     	;# 
  3906  0314                     	;# 
  3907  0314                     	;# 
  3908  0315                     	;# 
  3909  0316                     	;# 
  3910  0317                     	;# 
  3911  0318                     	;# 
  3912  0318                     	;# 
  3913  0319                     	;# 
  3914  031A                     	;# 
  3915  031B                     	;# 
  3916  031C                     	;# 
  3917  031C                     	;# 
  3918  031D                     	;# 
  3919  031E                     	;# 
  3920  031F                     	;# 
  3921  038C                     	;# 
  3922  038C                     	;# 
  3923  038D                     	;# 
  3924  038E                     	;# 
  3925  0390                     	;# 
  3926  0390                     	;# 
  3927  0391                     	;# 
  3928  0392                     	;# 
  3929  040C                     	;# 
  3930  040D                     	;# 
  3931  040E                     	;# 
  3932  040F                     	;# 
  3933  0410                     	;# 
  3934  0411                     	;# 
  3935  0416                     	;# 
  3936  0416                     	;# 
  3937  0417                     	;# 
  3938  0418                     	;# 
  3939  0418                     	;# 
  3940  0419                     	;# 
  3941  041A                     	;# 
  3942  041A                     	;# 
  3943  041B                     	;# 
  3944  041C                     	;# 
  3945  041C                     	;# 
  3946  041D                     	;# 
  3947  041E                     	;# 
  3948  041F                     	;# 
  3949  048C                     	;# 
  3950  048C                     	;# 
  3951  048D                     	;# 
  3952  048E                     	;# 
  3953  048F                     	;# 
  3954  048F                     	;# 
  3955  0490                     	;# 
  3956  0491                     	;# 
  3957  0492                     	;# 
  3958  0492                     	;# 
  3959  0493                     	;# 
  3960  0494                     	;# 
  3961  0495                     	;# 
  3962  0495                     	;# 
  3963  0496                     	;# 
  3964  0497                     	;# 
  3965  0498                     	;# 
  3966  0499                     	;# 
  3967  049A                     	;# 
  3968  049B                     	;# 
  3969  049C                     	;# 
  3970  049D                     	;# 
  3971  050C                     	;# 
  3972  050C                     	;# 
  3973  050D                     	;# 
  3974  050E                     	;# 
  3975  050F                     	;# 
  3976  050F                     	;# 
  3977  0510                     	;# 
  3978  0511                     	;# 
  3979  0512                     	;# 
  3980  0512                     	;# 
  3981  0513                     	;# 
  3982  0514                     	;# 
  3983  0515                     	;# 
  3984  0515                     	;# 
  3985  0516                     	;# 
  3986  0517                     	;# 
  3987  0518                     	;# 
  3988  0519                     	;# 
  3989  051A                     	;# 
  3990  051B                     	;# 
  3991  051C                     	;# 
  3992  051D                     	;# 
  3993  058C                     	;# 
  3994  058C                     	;# 
  3995  058D                     	;# 
  3996  058E                     	;# 
  3997  058F                     	;# 
  3998  058F                     	;# 
  3999  0590                     	;# 
  4000  0591                     	;# 
  4001  0592                     	;# 
  4002  0593                     	;# 
  4003  060C                     	;# 
  4004  060D                     	;# 
  4005  060E                     	;# 
  4006  060F                     	;# 
  4007  0610                     	;# 
  4008  0611                     	;# 
  4009  0612                     	;# 
  4010  0613                     	;# 
  4011  0614                     	;# 
  4012  0616                     	;# 
  4013  0617                     	;# 
  4014  0618                     	;# 
  4015  0619                     	;# 
  4016  061A                     	;# 
  4017  061B                     	;# 
  4018  061C                     	;# 
  4019  061D                     	;# 
  4020  061E                     	;# 
  4021  068C                     	;# 
  4022  068D                     	;# 
  4023  068E                     	;# 
  4024  068F                     	;# 
  4025  0690                     	;# 
  4026  0691                     	;# 
  4027  0692                     	;# 
  4028  0693                     	;# 
  4029  0694                     	;# 
  4030  070C                     	;# 
  4031  070D                     	;# 
  4032  070E                     	;# 
  4033  070F                     	;# 
  4034  0710                     	;# 
  4035  0711                     	;# 
  4036  0712                     	;# 
  4037  0713                     	;# 
  4038  0714                     	;# 
  4039  0716                     	;# 
  4040  0717                     	;# 
  4041  0718                     	;# 
  4042  0719                     	;# 
  4043  071A                     	;# 
  4044  071B                     	;# 
  4045  071C                     	;# 
  4046  071D                     	;# 
  4047  071E                     	;# 
  4048  0796                     	;# 
  4049  0797                     	;# 
  4050  0798                     	;# 
  4051  0799                     	;# 
  4052  079A                     	;# 
  4053  079B                     	;# 
  4054  080C                     	;# 
  4055  080D                     	;# 
  4056  080E                     	;# 
  4057  080F                     	;# 
  4058  0810                     	;# 
  4059  0811                     	;# 
  4060  0812                     	;# 
  4061  0813                     	;# 
  4062  0814                     	;# 
  4063  081A                     	;# 
  4064  081B                     	;# 
  4065  081C                     	;# 
  4066  081D                     	;# 
  4067  081E                     	;# 
  4068  081F                     	;# 
  4069  088C                     	;# 
  4070  088D                     	;# 
  4071  088E                     	;# 
  4072  088F                     	;# 
  4073  0890                     	;# 
  4074  0891                     	;# 
  4075  0892                     	;# 
  4076  0893                     	;# 
  4077  0895                     	;# 
  4078  0896                     	;# 
  4079  0897                     	;# 
  4080  0898                     	;# 
  4081  0899                     	;# 
  4082  089A                     	;# 
  4083  089B                     	;# 
  4084  090C                     	;# 
  4085  090E                     	;# 
  4086  090F                     	;# 
  4087  091F                     	;# 
  4088  098F                     	;# 
  4089  098F                     	;# 
  4090  0990                     	;# 
  4091  0991                     	;# 
  4092  0992                     	;# 
  4093  0993                     	;# 
  4094  0994                     	;# 
  4095  0995                     	;# 
  4096  0996                     	;# 
  4097  0997                     	;# 
  4098  0E0F                     	;# 
  4099  0E10                     	;# 
  4100  0E11                     	;# 
  4101  0E12                     	;# 
  4102  0E13                     	;# 
  4103  0E14                     	;# 
  4104  0E15                     	;# 
  4105  0E16                     	;# 
  4106  0E17                     	;# 
  4107  0E18                     	;# 
  4108  0E19                     	;# 
  4109  0E1A                     	;# 
  4110  0E1B                     	;# 
  4111  0E1C                     	;# 
  4112  0E1D                     	;# 
  4113  0E1E                     	;# 
  4114  0E1F                     	;# 
  4115  0E20                     	;# 
  4116  0E21                     	;# 
  4117  0E22                     	;# 
  4118  0E23                     	;# 
  4119  0E24                     	;# 
  4120  0E25                     	;# 
  4121  0E26                     	;# 
  4122  0E27                     	;# 
  4123  0E28                     	;# 
  4124  0E29                     	;# 
  4125  0E2A                     	;# 
  4126  0E2B                     	;# 
  4127  0E2C                     	;# 
  4128  0E2D                     	;# 
  4129  0E2E                     	;# 
  4130  0E2F                     	;# 
  4131  0E30                     	;# 
  4132  0E31                     	;# 
  4133  0E32                     	;# 
  4134  0E33                     	;# 
  4135  0E34                     	;# 
  4136  0E35                     	;# 
  4137  0E36                     	;# 
  4138  0E37                     	;# 
  4139  0E8F                     	;# 
  4140  0E90                     	;# 
  4141  0E91                     	;# 
  4142  0E92                     	;# 
  4143  0E93                     	;# 
  4144  0E94                     	;# 
  4145  0E95                     	;# 
  4146  0E96                     	;# 
  4147  0E97                     	;# 
  4148  0E9C                     	;# 
  4149  0E9D                     	;# 
  4150  0E9E                     	;# 
  4151  0EA1                     	;# 
  4152  0EA2                     	;# 
  4153  0EA3                     	;# 
  4154  0EA4                     	;# 
  4155  0EA5                     	;# 
  4156  0EA9                     	;# 
  4157  0EAA                     	;# 
  4158  0EAB                     	;# 
  4159  0EAC                     	;# 
  4160  0EB1                     	;# 
  4161  0EB2                     	;# 
  4162  0EB3                     	;# 
  4163  0EB8                     	;# 
  4164  0EB9                     	;# 
  4165  0EBA                     	;# 
  4166  0EBB                     	;# 
  4167  0EBC                     	;# 
  4168  0EBD                     	;# 
  4169  0EBE                     	;# 
  4170  0EC3                     	;# 
  4171  0EC5                     	;# 
  4172  0EC6                     	;# 
  4173  0EC7                     	;# 
  4174  0EC8                     	;# 
  4175  0EC9                     	;# 
  4176  0ECA                     	;# 
  4177  0ECB                     	;# 
  4178  0ECC                     	;# 
  4179  0F10                     	;# 
  4180  0F11                     	;# 
  4181  0F12                     	;# 
  4182  0F13                     	;# 
  4183  0F14                     	;# 
  4184  0F15                     	;# 
  4185  0F16                     	;# 
  4186  0F17                     	;# 
  4187  0F18                     	;# 
  4188  0F19                     	;# 
  4189  0F1A                     	;# 
  4190  0F1B                     	;# 
  4191  0F1C                     	;# 
  4192  0F1D                     	;# 
  4193  0F1E                     	;# 
  4194  0F1F                     	;# 
  4195  0F20                     	;# 
  4196  0F21                     	;# 
  4197  0F22                     	;# 
  4198  0F23                     	;# 
  4199  0F24                     	;# 
  4200  0F25                     	;# 
  4201  0F26                     	;# 
  4202  0F27                     	;# 
  4203  0F38                     	;# 
  4204  0F39                     	;# 
  4205  0F3A                     	;# 
  4206  0F3B                     	;# 
  4207  0F3C                     	;# 
  4208  0F3D                     	;# 
  4209  0F3E                     	;# 
  4210  0F3F                     	;# 
  4211  0F40                     	;# 
  4212  0F41                     	;# 
  4213  0F43                     	;# 
  4214  0F44                     	;# 
  4215  0F45                     	;# 
  4216  0F46                     	;# 
  4217  0F47                     	;# 
  4218  0F48                     	;# 
  4219  0F49                     	;# 
  4220  0F4A                     	;# 
  4221  0F4B                     	;# 
  4222  0F4C                     	;# 
  4223  0F4E                     	;# 
  4224  0F4F                     	;# 
  4225  0F50                     	;# 
  4226  0F51                     	;# 
  4227  0F52                     	;# 
  4228  0F53                     	;# 
  4229  0F54                     	;# 
  4230  0F55                     	;# 
  4231  0F56                     	;# 
  4232  0F57                     	;# 
  4233  0F65                     	;# 
  4234  0F68                     	;# 
  4235  0F69                     	;# 
  4236  0F6A                     	;# 
  4237  0F6B                     	;# 
  4238  0FE4                     	;# 
  4239  0FE5                     	;# 
  4240  0FE6                     	;# 
  4241  0FE7                     	;# 
  4242  0FE8                     	;# 
  4243  0FE9                     	;# 
  4244  0FEA                     	;# 
  4245  0FEB                     	;# 
  4246  0FED                     	;# 
  4247  0FEE                     	;# 
  4248  0FEF                     	;_Coulomb_Data
  4249                           
  4250                           	psect	idataBANK1
  4251  07F8                     __pidataBANK1:
  4252                           
  4253                           ;initializer for main@F12104
  4254  07F8  3401               	retlw	1
  4255  07F9  3403               	retlw	3
  4256  07FA  3400               	retlw	0
  4257  07FB  3403               	retlw	3
  4258  07FC  3400               	retlw	0
  4259  07FD  3411               	retlw	17
  4260  07FE  3475               	retlw	117
  4261  07FF  34C6               	retlw	198
  4262                           
  4263                           	psect	idataBANK3
  4264  0003                     __pidataBANK3:
  4265                           
  4266                           ;initializer for _BackLight_State
  4267  0003  3408               	retlw	8
  4268                           
  4269                           	psect	nvBANK3
  4270  01E8                     __pnvBANK3:
  4271  01E8                     _EUSART_OverrunErrorHandler:
  4272  01E8                     	ds	2
  4273  01EA                     _EUSART_FramingErrorHandler:
  4274  01EA                     	ds	2
  4275  01EC                     _EUSART_RxDefaultInterruptHandler:
  4276  01EC                     	ds	2
  4277                           
  4278                           	psect	nvBANK4
  4279  0257                     __pnvBANK4:
  4280  0257                     _EUSART_ErrorHandler:
  4281  0257                     	ds	2
  4282  000C                     _PORTAbits	set	12
  4283  0016                     _LATAbits	set	22
  4284  000B                     _INTCONbits	set	11
  4285  001E                     _T0CON0bits	set	30
  4286  001E                     _T0CON0	set	30
  4287  001C                     _TMR0L	set	28
  4288  001D                     _TMR0H	set	29
  4289  001F                     _T0CON1	set	31
  4290  0013                     _TRISC	set	19
  4291  0012                     _TRISB	set	18
  4292  0011                     _TRISA	set	17
  4293  0018                     _LATC	set	24
  4294  0017                     _LATB	set	23
  4295  0016                     _LATA	set	22
  4296  000C                     _PORTA	set	12
  4297  0119                     _RC1REG	set	281
  4298  011D                     _RC1STAbits	set	285
  4299  011A                     _TX1REG	set	282
  4300  011E                     _TX1STAbits	set	286
  4301  011C                     _SP1BRGH	set	284
  4302  011B                     _SP1BRGL	set	283
  4303  011E                     _TX1STA	set	286
  4304  011D                     _RC1STA	set	285
  4305  011F                     _BAUD1CON	set	287
  4306  018C                     _SSP1BUF	set	396
  4307  0191                     _SSP1CON2bits	set	401
  4308  018F                     _SSP1STAT	set	399
  4309  018E                     _SSP1MSK	set	398
  4310  018D                     _SSP1ADD	set	397
  4311  018F                     _SSP1STATbits	set	399
  4312  0191                     _SSP1CON2	set	401
  4313  0190                     _SSP1CON1	set	400
  4314  070C                     _PIR0bits	set	1804
  4315  070F                     _PIR3bits	set	1807
  4316  0719                     _PIE3bits	set	1817
  4317  079B                     _PMD5	set	1947
  4318  079A                     _PMD4	set	1946
  4319  0799                     _PMD3	set	1945
  4320  0798                     _PMD2	set	1944
  4321  0797                     _PMD1	set	1943
  4322  0796                     _PMD0	set	1942
  4323  0892                     _OSCTUNE	set	2194
  4324  0893                     _OSCFRQ	set	2195
  4325  0891                     _OSCEN	set	2193
  4326  088F                     _OSCCON3	set	2191
  4327  088D                     _OSCCON1	set	2189
  4328  0EC6                     _SSP1DATPPS	set	3782
  4329  0EC5                     _SSP1CLKPPS	set	3781
  4330  0ECB                     _RXPPS	set	3787
  4331  0F24                     _RC4PPS	set	3876
  4332  0F23                     _RC3PPS	set	3875
  4333  0F26                     _RC6PPS	set	3878
  4334  0F68                     _INLVLE	set	3944
  4335  0F52                     _INLVLC	set	3922
  4336  0F47                     _INLVLB	set	3911
  4337  0F3C                     _INLVLA	set	3900
  4338  0F51                     _SLRCONC	set	3921
  4339  0F46                     _SLRCONB	set	3910
  4340  0F3B                     _SLRCONA	set	3899
  4341  0F50                     _ODCONC	set	3920
  4342  0F45                     _ODCONB	set	3909
  4343  0F3A                     _ODCONA	set	3898
  4344  0F4F                     _WPUC	set	3919
  4345  0F39                     _WPUA	set	3897
  4346  0F44                     _WPUB	set	3908
  4347  0F65                     _WPUE	set	3941
  4348  0F38                     _ANSELA	set	3896
  4349  0F43                     _ANSELB	set	3907
  4350  0F4E                     _ANSELC	set	3918
  4351                           
  4352                           	psect	stringtext1
  4353  0800                     __pstringtext1:
  4354  0800                     STR_1:
  4355  0800  3425               	retlw	37	;'%'
  4356  0801  3464               	retlw	100	;'d'
  4357  0802  3400               	retlw	0
  4358                           
  4359                           	psect	stringtext2
  4360  0000                     __pstringtext2:
  4361  0800                     
  4362                           	psect	cinit
  4363  0029                     start_initialization:	
  4364                           ; #config settings
  4365                           
  4366  0029                     __initialization:	;BIGRAM
  4367                           
  4368                           ; Initialize objects allocated to BANK1
  4369  0029  30F8               	movlw	low __pidataBANK1
  4370  002A  0084               	movwf	4
  4371  002B  3087               	movlw	(high __pidataBANK1)| (0+128)
  4372  002C  0085               	movwf	5
  4373  002D  0021               	movlb	1	; select bank1
  4374  002E  0012               	moviw fsr0++
  4375  002F  00D9               	movwf	__pdataBANK1& (0+127)
  4376  0030  0012               	moviw fsr0++
  4377  0031  00DA               	movwf	(__pdataBANK1+1)& (0+127)
  4378  0032  0012               	moviw fsr0++
  4379  0033  00DB               	movwf	(__pdataBANK1+2)& (0+127)
  4380  0034  0012               	moviw fsr0++
  4381  0035  00DC               	movwf	(__pdataBANK1+3)& (0+127)
  4382  0036  0012               	moviw fsr0++
  4383  0037  00DD               	movwf	(__pdataBANK1+4)& (0+127)
  4384  0038  0012               	moviw fsr0++
  4385  0039  00DE               	movwf	(__pdataBANK1+5)& (0+127)
  4386  003A  0012               	moviw fsr0++
  4387  003B  00DF               	movwf	(__pdataBANK1+6)& (0+127)
  4388  003C  0012               	moviw fsr0++
  4389  003D  00E0               	movwf	(__pdataBANK1+7)& (0+127)
  4390                           
  4391                           ; Initialize objects allocated to BANK3
  4392  003E  0023               	movlb	3	; select bank3
  4393  003F  3180  2003  3180   	fcall	__pidataBANK3	;fetch initializer
  4394  0042  00EE               	movwf	__pdataBANK3& (0+127)
  4395                           
  4396                           ; Clear objects allocated to BIGRAM
  4397  0043  307C               	movlw	low (0+8572)
  4398  0044  0084               	movwf	4
  4399  0045  3021               	movlw	high (0+8572)
  4400  0046  0085               	movwf	5
  4401  0047  3074               	movlw	116
  4402  0048  00FE               	movwf	btemp
  4403  0049  3000               	movlw	0
  4404  004A  00FF               	movwf	btemp+1
  4405  004B  318B  23C3  3180   	fcall	clear_ram0
  4406                           
  4407                           ; Clear objects allocated to COMMON
  4408  004E  01F8               	clrf	__pbssCOMMON& (0+127)
  4409  004F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4410  0050  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4411                           
  4412                           ; Clear objects allocated to BANK1
  4413  0051  30A0               	movlw	low __pbssBANK1
  4414  0052  0084               	movwf	4
  4415  0053  3000               	movlw	high __pbssBANK1
  4416  0054  0085               	movwf	5
  4417  0055  3025               	movlw	37
  4418  0056  00FE               	movwf	btemp
  4419  0057  3000               	movlw	0
  4420  0058  00FF               	movwf	btemp+1
  4421  0059  318B  23C3  3180   	fcall	clear_ram0
  4422                           
  4423                           ; Clear objects allocated to BANK2
  4424  005C  3020               	movlw	low __pbssBANK2
  4425  005D  0084               	movwf	4
  4426  005E  3001               	movlw	high __pbssBANK2
  4427  005F  0085               	movwf	5
  4428  0060  3050               	movlw	80
  4429  0061  00FE               	movwf	btemp
  4430  0062  3000               	movlw	0
  4431  0063  00FF               	movwf	btemp+1
  4432  0064  318B  23C3  3180   	fcall	clear_ram0
  4433                           
  4434                           ; Clear objects allocated to BANK3
  4435  0067  30A0               	movlw	low __pbssBANK3
  4436  0068  0084               	movwf	4
  4437  0069  3001               	movlw	high __pbssBANK3
  4438  006A  0085               	movwf	5
  4439  006B  3048               	movlw	72
  4440  006C  00FE               	movwf	btemp
  4441  006D  3000               	movlw	0
  4442  006E  00FF               	movwf	btemp+1
  4443  006F  318B  23C3  3180   	fcall	clear_ram0
  4444                           
  4445                           ; Clear objects allocated to BANK4
  4446  0072  3020               	movlw	low __pbssBANK4
  4447  0073  0084               	movwf	4
  4448  0074  3002               	movlw	high __pbssBANK4
  4449  0075  0085               	movwf	5
  4450  0076  3027               	movlw	39
  4451  0077  00FE               	movwf	btemp
  4452  0078  3000               	movlw	0
  4453  0079  00FF               	movwf	btemp+1
  4454  007A  318B  23C3  3180   	fcall	clear_ram0
  4455  007D                     end_of_initialization:	
  4456                           ;End of C runtime variable initialization code
  4457                           
  4458  007D                     __end_of__initialization:
  4459  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4460  007E  0020               	movlb	0
  4461  007F  3180  2881         	ljmp	_main	;jump to C main() function
  4462                           
  4463                           	psect	bssCOMMON
  4464  0078                     __pbssCOMMON:
  4465  0078                     _eusartRxCount:
  4466  0078                     	ds	1
  4467  0079                     _eusartRxTail:
  4468  0079                     	ds	1
  4469  007A                     _eusartRxHead:
  4470  007A                     	ds	1
  4471                           
  4472                           	psect	bssBANK1
  4473  00A0                     __pbssBANK1:
  4474  00A0                     _badBettery:
  4475  00A0                     	ds	34
  4476  00C2                     _i:
  4477  00C2                     	ds	2
  4478  00C4                     _eusartRxLastError:
  4479  00C4                     	ds	1
  4480                           
  4481                           	psect	dataBANK1
  4482  00D9                     __pdataBANK1:
  4483  00D9                     main@F12104:
  4484  00D9                     	ds	8
  4485                           
  4486                           	psect	bssBANK2
  4487  0120                     __pbssBANK2:
  4488  0120                     _eusartRxStatusBuffer:
  4489  0120                     	ds	39
  4490  0147                     _Voltage_sort:
  4491  0147                     	ds	34
  4492  0169                     _width:
  4493  0169                     	ds	2
  4494  016B                     _prec:
  4495  016B                     	ds	2
  4496  016D                     _flags:
  4497  016D                     	ds	2
  4498  016F                     _ch:
  4499  016F                     	ds	1
  4500                           
  4501                           	psect	bssBANK3
  4502  01A0                     __pbssBANK3:
  4503  01A0                     _diffBettery:
  4504  01A0                     	ds	34
  4505  01C2                     _nout:
  4506  01C2                     	ds	2
  4507  01C4                     _i2c_add:
  4508  01C4                     	ds	1
  4509  01C5                     _RS:
  4510  01C5                     	ds	1
  4511  01C6                     _dbuf:
  4512  01C6                     	ds	32
  4513  01E6                     _no:
  4514  01E6                     	ds	1
  4515  01E7                     _ShowbadBettery:
  4516  01E7                     	ds	1
  4517                           
  4518                           	psect	dataBANK3
  4519  01EE                     __pdataBANK3:
  4520  01EE                     _BackLight_State:
  4521  01EE                     	ds	1
  4522                           
  4523                           	psect	bssBANK4
  4524  0220                     __pbssBANK4:
  4525  0220                     _eusartRxBuffer:
  4526  0220                     	ds	39
  4527                           
  4528                           	psect	clrtext
  4529  0BC3                     clear_ram0:	
  4530                           ;	Called with FSR0 containing the base address, and
  4531                           ;	btemp/btemp+1 has the size to clear
  4532                           
  4533  0BC3  0064               	clrwdt	;clear the watchdog before getting into this loop
  4534  0BC4                     clrloop0:
  4535  0BC4  0180               	clrf	0	;clear RAM location pointed to by FSR
  4536  0BC5  3101               	addfsr 0,1
  4537  0BC6  3001               	movlw	1
  4538  0BC7  02FE               	subwf	btemp,f
  4539  0BC8  3000               	movlw	0
  4540  0BC9  3BFF               	subwfb	btemp+1,f
  4541  0BCA  087F               	movf	btemp+1,w
  4542  0BCB  047E               	iorwf	btemp,w
  4543  0BCC  1D03               	skipz
  4544  0BCD  2BC4               	goto	clrloop0	;have we reached the end yet?
  4545  0BCE  3400               	retlw	0	;all done for this memory range, return
  4546                           
  4547                           	psect	cstackBANK4
  4548  0247                     __pcstackBANK4:
  4549  0247                     main@out:
  4550                           
  4551                           ; 8 bytes @ 0x0
  4552  0247                     	ds	8
  4553  024F                     main@index:
  4554                           
  4555                           ; 2 bytes @ 0x8
  4556  024F                     	ds	2
  4557  0251                     main@i:
  4558                           
  4559                           ; 2 bytes @ 0xA
  4560  0251                     	ds	2
  4561  0253                     main@H_L_counter:
  4562                           
  4563                           ; 2 bytes @ 0xC
  4564  0253                     	ds	2
  4565  0255                     main@j:
  4566                           
  4567                           ; 2 bytes @ 0xE
  4568  0255                     	ds	2
  4569                           
  4570                           	psect	cstackBANK1
  4571  00C5                     __pcstackBANK1:
  4572  00C5                     ?_sprintf:
  4573  00C5                     sprintf@fmt:	
  4574                           ; 2 bytes @ 0x0
  4575                           
  4576                           
  4577                           ; 2 bytes @ 0x0
  4578  00C5                     	ds	4
  4579  00C9                     ??_sprintf:
  4580                           
  4581                           ; 1 bytes @ 0x4
  4582  00C9                     	ds	3
  4583  00CC                     sprintf@ap:
  4584                           
  4585                           ; 1 bytes @ 0x7
  4586  00CC                     	ds	1
  4587  00CD                     sprintf@s:
  4588                           
  4589                           ; 1 bytes @ 0x8
  4590  00CD                     	ds	1
  4591  00CE                     sprintf@f:
  4592                           
  4593                           ; 5 bytes @ 0x9
  4594  00CE                     	ds	5
  4595  00D3                     ??_main:
  4596                           
  4597                           ; 1 bytes @ 0xE
  4598  00D3                     	ds	6
  4599                           
  4600                           	psect	cstackCOMMON
  4601  0070                     __pcstackCOMMON:
  4602  0070                     ?_EUSART_Receive_ISR:
  4603  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  4604                           ; 1 bytes @ 0x0
  4605                           
  4606  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  4607                           ; 1 bytes @ 0x0
  4608                           
  4609  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  4610                           ; 1 bytes @ 0x0
  4611                           
  4612  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0070                     ?_EUSART_DefaultErrorHandler:	
  4616                           ; 1 bytes @ 0x0
  4617                           
  4618  0070                     ?_EUSART_RxDataHandler:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621  0070                     ??_EUSART_RxDataHandler:	
  4622                           ; 1 bytes @ 0x0
  4623                           
  4624  0070                     ?_PMD_Initialize:	
  4625                           ; 1 bytes @ 0x0
  4626                           
  4627  0070                     ?_PIN_MANAGER_Initialize:	
  4628                           ; 1 bytes @ 0x0
  4629                           
  4630  0070                     ?_OSCILLATOR_Initialize:	
  4631                           ; 1 bytes @ 0x0
  4632                           
  4633  0070                     ?_TMR0_Initialize:	
  4634                           ; 1 bytes @ 0x0
  4635                           
  4636  0070                     ?_master_init:	
  4637                           ; 1 bytes @ 0x0
  4638                           
  4639  0070                     ?_BadBetteryFilter:	
  4640                           ; 1 bytes @ 0x0
  4641                           
  4642  0070                     ?_LCD_Init:	
  4643                           ; 1 bytes @ 0x0
  4644                           
  4645  0070                     ?_LCD_Write_String:	
  4646                           ; 1 bytes @ 0x0
  4647                           
  4648  0070                     ?_IO_Expander_Write:	
  4649                           ; 1 bytes @ 0x0
  4650                           
  4651  0070                     ?_LCD_CMD:	
  4652                           ; 1 bytes @ 0x0
  4653                           
  4654  0070                     ?_EUSART_Initialize:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0070                     ?_EUSART_Read:	
  4658                           ; 1 bytes @ 0x0
  4659                           
  4660  0070                     ?_EUSART_Write:	
  4661                           ; 1 bytes @ 0x0
  4662                           
  4663  0070                     ?_putch:	
  4664                           ; 1 bytes @ 0x0
  4665                           
  4666  0070                     ?_SYSTEM_Initialize:	
  4667                           ; 1 bytes @ 0x0
  4668                           
  4669  0070                     ?_TMR0_ReadTimer:	
  4670                           ; 1 bytes @ 0x0
  4671                           
  4672  0070                     ?_INTERRUPT_InterruptManager:	
  4673                           ; 1 bytes @ 0x0
  4674                           
  4675  0070                     ?_main:	
  4676                           ; 1 bytes @ 0x0
  4677                           
  4678  0070                     ?_Sort:	
  4679                           ; 1 bytes @ 0x0
  4680                           
  4681  0070                     ?_I2C_Master_Wait:	
  4682                           ; 1 bytes @ 0x0
  4683                           
  4684  0070                     ?_I2C_Master_Start:	
  4685                           ; 1 bytes @ 0x0
  4686                           
  4687  0070                     ?_I2C_Master_Stop:	
  4688                           ; 1 bytes @ 0x0
  4689                           
  4690  0070                     ?_I2C_Master_Write:	
  4691                           ; 1 bytes @ 0x0
  4692                           
  4693  0070                     ?_LCD_Write_4Bit:	
  4694                           ; 1 bytes @ 0x0
  4695                           
  4696  0070                     ?_LCD_Write_Char:	
  4697                           ; 1 bytes @ 0x0
  4698                           
  4699                           
  4700                           ; 1 bytes @ 0x0
  4701  0070                     	ds	3
  4702  0073                     ?_EUSART_SetRxInterruptHandler:
  4703  0073                     ??_EUSART_Receive_ISR:	
  4704                           ; 1 bytes @ 0x3
  4705                           
  4706  0073                     ?_EUSART_SetFramingErrorHandler:	
  4707                           ; 1 bytes @ 0x3
  4708                           
  4709  0073                     ?_EUSART_SetOverrunErrorHandler:	
  4710                           ; 1 bytes @ 0x3
  4711                           
  4712  0073                     ?_EUSART_SetErrorHandler:	
  4713                           ; 1 bytes @ 0x3
  4714                           
  4715  0073                     ??_EUSART_DefaultErrorHandler:	
  4716                           ; 1 bytes @ 0x3
  4717                           
  4718  0073                     ??_PMD_Initialize:	
  4719                           ; 1 bytes @ 0x3
  4720                           
  4721  0073                     ??_PIN_MANAGER_Initialize:	
  4722                           ; 1 bytes @ 0x3
  4723                           
  4724  0073                     ??_OSCILLATOR_Initialize:	
  4725                           ; 1 bytes @ 0x3
  4726                           
  4727  0073                     ??_TMR0_Initialize:	
  4728                           ; 1 bytes @ 0x3
  4729                           
  4730  0073                     ??_master_init:	
  4731                           ; 1 bytes @ 0x3
  4732                           
  4733  0073                     ?_Delay:	
  4734                           ; 1 bytes @ 0x3
  4735                           
  4736  0073                     ??_EUSART_Read:	
  4737                           ; 1 bytes @ 0x3
  4738                           
  4739  0073                     ??_EUSART_Write:	
  4740                           ; 1 bytes @ 0x3
  4741                           
  4742  0073                     ??_TMR0_ReadTimer:	
  4743                           ; 1 bytes @ 0x3
  4744                           
  4745  0073                     ??_INTERRUPT_InterruptManager:	
  4746                           ; 1 bytes @ 0x3
  4747                           
  4748  0073                     ??_Sort:	
  4749                           ; 1 bytes @ 0x3
  4750                           
  4751  0073                     ??_I2C_Master_Wait:	
  4752                           ; 1 bytes @ 0x3
  4753                           
  4754  0073                     ??_I2C_Master_Start:	
  4755                           ; 1 bytes @ 0x3
  4756                           
  4757  0073                     ??_I2C_Master_Stop:	
  4758                           ; 1 bytes @ 0x3
  4759                           
  4760  0073                     ??_I2C_Master_Write:	
  4761                           ; 1 bytes @ 0x3
  4762                           
  4763  0073                     ??___aodiv:	
  4764                           ; 1 bytes @ 0x3
  4765                           
  4766  0073                     ??___aomod:	
  4767                           ; 1 bytes @ 0x3
  4768                           
  4769  0073                     ?_strlen:	
  4770                           ; 1 bytes @ 0x3
  4771                           
  4772  0073                     ?___lwdiv:	
  4773                           ; 2 bytes @ 0x3
  4774                           
  4775  0073                     EUSART_Write@txData:	
  4776                           ; 2 bytes @ 0x3
  4777                           
  4778  0073                     I2C_Master_Write@data:	
  4779                           ; 1 bytes @ 0x3
  4780                           
  4781  0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4782                           ; 1 bytes @ 0x3
  4783                           
  4784  0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4785                           ; 2 bytes @ 0x3
  4786                           
  4787  0073                     EUSART_SetErrorHandler@interruptHandler:	
  4788                           ; 2 bytes @ 0x3
  4789                           
  4790  0073                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4791                           ; 2 bytes @ 0x3
  4792                           
  4793  0073                     Delay@counter:	
  4794                           ; 2 bytes @ 0x3
  4795                           
  4796  0073                     ___lwdiv@divisor:	
  4797                           ; 2 bytes @ 0x3
  4798                           
  4799                           
  4800                           ; 2 bytes @ 0x3
  4801  0073                     	ds	1
  4802  0074                     ??_IO_Expander_Write:
  4803  0074                     ??_putch:	
  4804                           ; 1 bytes @ 0x4
  4805                           
  4806  0074                     EUSART_Read@readValue:	
  4807                           ; 1 bytes @ 0x4
  4808                           
  4809  0074                     putch@txData:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0074                     TMR0_ReadTimer@readVal:	
  4813                           ; 1 bytes @ 0x4
  4814                           
  4815  0074                     IO_Expander_Write@Data:	
  4816                           ; 1 bytes @ 0x4
  4817                           
  4818  0074                     ___aomod@counter:	
  4819                           ; 1 bytes @ 0x4
  4820                           
  4821                           
  4822                           ; 1 bytes @ 0x4
  4823  0074                     	ds	1
  4824  0075                     ??_EUSART_SetRxInterruptHandler:
  4825  0075                     ??_EUSART_SetFramingErrorHandler:	
  4826                           ; 1 bytes @ 0x5
  4827                           
  4828  0075                     ??_EUSART_SetOverrunErrorHandler:	
  4829                           ; 1 bytes @ 0x5
  4830                           
  4831  0075                     ??_EUSART_SetErrorHandler:	
  4832                           ; 1 bytes @ 0x5
  4833                           
  4834  0075                     ??_Delay:	
  4835                           ; 1 bytes @ 0x5
  4836                           
  4837  0075                     ??_strlen:	
  4838                           ; 1 bytes @ 0x5
  4839                           
  4840  0075                     ??_EUSART_Initialize:	
  4841                           ; 1 bytes @ 0x5
  4842                           
  4843  0075                     ??_SYSTEM_Initialize:	
  4844                           ; 1 bytes @ 0x5
  4845                           
  4846  0075                     ??_LCD_Write_4Bit:	
  4847                           ; 1 bytes @ 0x5
  4848                           
  4849  0075                     ?_fputc:	
  4850                           ; 1 bytes @ 0x5
  4851                           
  4852  0075                     ___aomod@sign:	
  4853                           ; 2 bytes @ 0x5
  4854                           
  4855  0075                     ___lwdiv@dividend:	
  4856                           ; 1 bytes @ 0x5
  4857                           
  4858  0075                     fputc@c:	
  4859                           ; 2 bytes @ 0x5
  4860                           
  4861                           
  4862                           ; 2 bytes @ 0x5
  4863  0075                     	ds	1
  4864  0076                     ?_abs:
  4865  0076                     LCD_Write_4Bit@Nibble:	
  4866                           ; 2 bytes @ 0x6
  4867                           
  4868  0076                     strlen@a:	
  4869                           ; 1 bytes @ 0x6
  4870                           
  4871  0076                     abs@a:	
  4872                           ; 1 bytes @ 0x6
  4873                           
  4874                           
  4875                           ; 2 bytes @ 0x6
  4876  0076                     	ds	1
  4877  0077                     ??_LCD_CMD:
  4878  0077                     ??_LCD_Write_Char:	
  4879                           ; 1 bytes @ 0x7
  4880                           
  4881  0077                     ??___lwdiv:	
  4882                           ; 1 bytes @ 0x7
  4883                           
  4884  0077                     fputc@fp:	
  4885                           ; 1 bytes @ 0x7
  4886                           
  4887  0077                     strlen@s:	
  4888                           ; 1 bytes @ 0x7
  4889                           
  4890                           
  4891                           ; 1 bytes @ 0x7
  4892  0077                     	ds	1
  4893                           
  4894                           	psect	cstackBANK0
  4895  0020                     __pcstackBANK0:
  4896  0020                     ??_fputc:
  4897  0020                     ?___aodiv:	
  4898                           ; 1 bytes @ 0x0
  4899                           
  4900  0020                     ?___aomod:	
  4901                           ; 8 bytes @ 0x0
  4902                           
  4903  0020                     LCD_CMD@CMD:	
  4904                           ; 8 bytes @ 0x0
  4905                           
  4906  0020                     LCD_Write_Char@Data:	
  4907                           ; 1 bytes @ 0x0
  4908                           
  4909  0020                     ___lwdiv@counter:	
  4910                           ; 1 bytes @ 0x0
  4911                           
  4912  0020                     Sort@tmp:	
  4913                           ; 1 bytes @ 0x0
  4914                           
  4915  0020                     ___aodiv@divisor:	
  4916                           ; 2 bytes @ 0x0
  4917                           
  4918  0020                     ___aomod@divisor:	
  4919                           ; 8 bytes @ 0x0
  4920                           
  4921                           
  4922                           ; 8 bytes @ 0x0
  4923  0020                     	ds	1
  4924  0021                     ??_LCD_Init:
  4925  0021                     ?_LCD_Set_Cursor:	
  4926                           ; 1 bytes @ 0x1
  4927                           
  4928  0021                     ??_LCD_Write_String:	
  4929                           ; 1 bytes @ 0x1
  4930                           
  4931  0021                     LCD_Set_Cursor@COL:	
  4932                           ; 1 bytes @ 0x1
  4933                           
  4934  0021                     ___lwdiv@quotient:	
  4935                           ; 1 bytes @ 0x1
  4936                           
  4937                           
  4938                           ; 2 bytes @ 0x1
  4939  0021                     	ds	1
  4940  0022                     ??_LCD_Set_Cursor:
  4941  0022                     LCD_Init@I2C_Add:	
  4942                           ; 1 bytes @ 0x2
  4943                           
  4944  0022                     LCD_Write_String@i:	
  4945                           ; 1 bytes @ 0x2
  4946                           
  4947                           
  4948                           ; 2 bytes @ 0x2
  4949  0022                     	ds	1
  4950  0023                     ?_Get_Voltage:
  4951  0023                     Get_Voltage@k:	
  4952                           ; 1 bytes @ 0x3
  4953                           
  4954                           
  4955                           ; 2 bytes @ 0x3
  4956  0023                     	ds	1
  4957  0024                     LCD_Write_String@Str:
  4958  0024                     LCD_Set_Cursor@ROW:	
  4959                           ; 1 bytes @ 0x4
  4960                           
  4961  0024                     Sort@i:	
  4962                           ; 1 bytes @ 0x4
  4963                           
  4964                           
  4965                           ; 2 bytes @ 0x4
  4966  0024                     	ds	1
  4967  0025                     ??_Get_Voltage:
  4968  0025                     ?_fputs:	
  4969                           ; 1 bytes @ 0x5
  4970                           
  4971  0025                     fputs@fp:	
  4972                           ; 2 bytes @ 0x5
  4973                           
  4974                           
  4975                           ; 1 bytes @ 0x5
  4976  0025                     	ds	1
  4977  0026                     ??_fputs:
  4978  0026                     Sort@j:	
  4979                           ; 1 bytes @ 0x6
  4980                           
  4981                           
  4982                           ; 2 bytes @ 0x6
  4983  0026                     	ds	2
  4984  0028                     ??_BadBetteryFilter:
  4985  0028                     ___aodiv@dividend:	
  4986                           ; 1 bytes @ 0x8
  4987                           
  4988  0028                     ___aomod@dividend:	
  4989                           ; 8 bytes @ 0x8
  4990                           
  4991                           
  4992                           ; 8 bytes @ 0x8
  4993  0028                     	ds	1
  4994  0029                     fputs@c:
  4995                           
  4996                           ; 1 bytes @ 0x9
  4997  0029                     	ds	1
  4998  002A                     fputs@i:
  4999                           
  5000                           ; 2 bytes @ 0xA
  5001  002A                     	ds	2
  5002  002C                     fputs@s:
  5003                           
  5004                           ; 1 bytes @ 0xC
  5005  002C                     	ds	1
  5006  002D                     ?_pad:
  5007  002D                     pad@buf:	
  5008                           ; 2 bytes @ 0xD
  5009                           
  5010                           
  5011                           ; 1 bytes @ 0xD
  5012  002D                     	ds	1
  5013  002E                     BadBetteryFilter@k:
  5014  002E                     pad@p:	
  5015                           ; 2 bytes @ 0xE
  5016                           
  5017                           
  5018                           ; 2 bytes @ 0xE
  5019  002E                     	ds	2
  5020  0030                     ??_abs:
  5021  0030                     ??_pad:	
  5022                           ; 1 bytes @ 0x10
  5023                           
  5024  0030                     ___aodiv@counter:	
  5025                           ; 1 bytes @ 0x10
  5026                           
  5027                           
  5028                           ; 1 bytes @ 0x10
  5029  0030                     	ds	1
  5030  0031                     ___aodiv@sign:
  5031  0031                     pad@i:	
  5032                           ; 1 bytes @ 0x11
  5033                           
  5034                           
  5035                           ; 2 bytes @ 0x11
  5036  0031                     	ds	1
  5037  0032                     ___aodiv@quotient:
  5038                           
  5039                           ; 8 bytes @ 0x12
  5040  0032                     	ds	1
  5041  0033                     pad@w:
  5042                           
  5043                           ; 2 bytes @ 0x13
  5044  0033                     	ds	2
  5045  0035                     pad@fp:
  5046                           
  5047                           ; 1 bytes @ 0x15
  5048  0035                     	ds	5
  5049  003A                     ?_dtoa:
  5050  003A                     dtoa@d:	
  5051                           ; 2 bytes @ 0x1A
  5052                           
  5053                           
  5054                           ; 8 bytes @ 0x1A
  5055  003A                     	ds	8
  5056  0042                     ??_dtoa:
  5057                           
  5058                           ; 1 bytes @ 0x22
  5059  0042                     	ds	3
  5060  0045                     dtoa@fp:
  5061                           
  5062                           ; 1 bytes @ 0x25
  5063  0045                     	ds	1
  5064  0046                     _dtoa$1470:
  5065                           
  5066                           ; 2 bytes @ 0x26
  5067  0046                     	ds	2
  5068  0048                     dtoa@p:
  5069                           
  5070                           ; 2 bytes @ 0x28
  5071  0048                     	ds	2
  5072  004A                     dtoa@w:
  5073                           
  5074                           ; 2 bytes @ 0x2A
  5075  004A                     	ds	2
  5076  004C                     dtoa@s:
  5077                           
  5078                           ; 2 bytes @ 0x2C
  5079  004C                     	ds	2
  5080  004E                     dtoa@n:
  5081                           
  5082                           ; 8 bytes @ 0x2E
  5083  004E                     	ds	8
  5084  0056                     dtoa@i:
  5085                           
  5086                           ; 2 bytes @ 0x36
  5087  0056                     	ds	2
  5088  0058                     ?_vfpfcnvrt:
  5089  0058                     vfpfcnvrt@fmt:	
  5090                           ; 2 bytes @ 0x38
  5091                           
  5092                           
  5093                           ; 1 bytes @ 0x38
  5094  0058                     	ds	1
  5095  0059                     vfpfcnvrt@ap:
  5096                           
  5097                           ; 1 bytes @ 0x39
  5098  0059                     	ds	1
  5099  005A                     ??_vfpfcnvrt:
  5100                           
  5101                           ; 1 bytes @ 0x3A
  5102  005A                     	ds	5
  5103  005F                     vfpfcnvrt@ll:
  5104                           
  5105                           ; 8 bytes @ 0x3F
  5106  005F                     	ds	8
  5107  0067                     vfpfcnvrt@fp:
  5108                           
  5109                           ; 1 bytes @ 0x47
  5110  0067                     	ds	1
  5111  0068                     ?_vfprintf:
  5112  0068                     vfprintf@fmt:	
  5113                           ; 2 bytes @ 0x48
  5114                           
  5115                           
  5116                           ; 2 bytes @ 0x48
  5117  0068                     	ds	2
  5118  006A                     vfprintf@ap:
  5119                           
  5120                           ; 1 bytes @ 0x4A
  5121  006A                     	ds	1
  5122  006B                     ??_vfprintf:
  5123                           
  5124                           ; 1 bytes @ 0x4B
  5125  006B                     	ds	2
  5126  006D                     vfprintf@fp:
  5127                           
  5128                           ; 1 bytes @ 0x4D
  5129  006D                     	ds	1
  5130  006E                     vfprintf@cfmt:
  5131                           
  5132                           ; 2 bytes @ 0x4E
  5133  006E                     	ds	2
  5134                           
  5135                           	psect	maintext
  5136  0081                     __pmaintext:	
  5137 ;;
  5138 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  5139 ;;
  5140 ;; *************** function _main *****************
  5141 ;; Defined at:
  5142 ;;		line 51 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  index           2    8[BANK4 ] PTR unsigned int 
  5147 ;;		 -> Coulomb_Data.ID(2), Coulomb_Data(116), 
  5148 ;;  out             8    0[BANK4 ] unsigned char [8]
  5149 ;;  j               2   14[BANK4 ] int 
  5150 ;;  H_L_counter     2   12[BANK4 ] int 
  5151 ;;  i               2   10[BANK4 ] int 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : B1F/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5161 ;;      Params:         0       0       0       0       0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0      16       0       0
  5163 ;;      Temps:          0       0       6       0       0       0       0       0
  5164 ;;      Totals:         0       0       6       0       0      16       0       0
  5165 ;;Total ram usage:       22 bytes
  5166 ;; Hardware stack levels required when called:   13
  5167 ;; This function calls:
  5168 ;;		_BadBetteryFilter
  5169 ;;		_Delay
  5170 ;;		_EUSART_Read
  5171 ;;		_EUSART_Write
  5172 ;;		_Get_Voltage
  5173 ;;		_LCD_Init
  5174 ;;		_LCD_Set_Cursor
  5175 ;;		_LCD_Write_String
  5176 ;;		_SYSTEM_Initialize
  5177 ;;		_TMR0_ReadTimer
  5178 ;;		_sprintf
  5179 ;; This function is called by:
  5180 ;;		Startup code after reset
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           
  5185                           ;psect for function _main
  5186  0081                     _main:
  5187  0081                     l3476:	
  5188                           ;incstack = 0
  5189                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5190                           
  5191                           
  5192                           ;main.c: 53:     SYSTEM_Initialize();
  5193  0081  318B  23F2  3180   	fcall	_SYSTEM_Initialize
  5194  0084                     l3478:
  5195                           
  5196                           ;main.c: 54:     (INTCONbits.GIE = 1);
  5197  0084  178B               	bsf	11,7	;volatile
  5198  0085                     l3480:
  5199                           
  5200                           ;main.c: 55:     (INTCONbits.PEIE = 1);
  5201  0085  170B               	bsf	11,6	;volatile
  5202  0086                     l3482:
  5203                           
  5204                           ;main.c: 57:     unsigned char out[8]={0x01,0x03,0x00,0x03,0x00,0x11,0x75,0xC6};
  5205  0086  30D9               	movlw	low main@F12104
  5206  0087  0086               	movwf	6
  5207  0088  3000               	movlw	high main@F12104
  5208  0089  0087               	movwf	7
  5209  008A  3047               	movlw	low main@out
  5210  008B  0084               	movwf	4
  5211  008C  3002               	movlw	high main@out
  5212  008D  0085               	movwf	5
  5213  008E  3008               	movlw	8
  5214  008F  0021               	movlb	1	; select bank1
  5215  0090  00D3               	movwf	??_main^(0+128)
  5216  0091                     u2860:
  5217  0091  0016               	moviw fsr1++
  5218  0092  001A               	movwi fsr0++
  5219  0093  0BD3               	decfsz	??_main^(0+128),f
  5220  0094  2891               	goto	u2860
  5221  0095                     l3484:
  5222                           
  5223                           ;main.c: 58:     int i,j,H_L_counter=0;
  5224  0095  0024               	movlb	4	; select bank4
  5225  0096  01D3               	clrf	main@H_L_counter^(0+512)
  5226  0097  01D4               	clrf	(main@H_L_counter+1)^(0+512)
  5227  0098                     l3486:
  5228                           
  5229                           ;main.c: 61:         if(TMR0_ReadTimer()==0){
  5230  0098  318B  2372  3180   	fcall	_TMR0_ReadTimer
  5231  009B  3A00               	xorlw	0
  5232  009C  1D03               	skipz
  5233  009D  289F               	goto	u2871
  5234  009E  28A0               	goto	u2870
  5235  009F                     u2871:
  5236  009F  28C2               	goto	l3502
  5237  00A0                     u2870:
  5238  00A0                     l3488:
  5239                           
  5240                           ;main.c: 62:             for(i=0;i<8;i++){
  5241  00A0  0024               	movlb	4	; select bank4
  5242  00A1  01D1               	clrf	main@i^(0+512)
  5243  00A2  01D2               	clrf	(main@i+1)^(0+512)
  5244  00A3                     l3494:
  5245                           
  5246                           ;main.c: 63:                 EUSART_Write(out[i]);
  5247  00A3  0024               	movlb	4	; select bank4
  5248  00A4  0851               	movf	main@i^(0+512),w
  5249  00A5  3E47               	addlw	(low (main@out| (0+512)))& (0+255)
  5250  00A6  0086               	movwf	6
  5251  00A7  3002               	movlw	2	; select bank4/5
  5252  00A8  0087               	movwf	7
  5253  00A9  0801               	movf	1,w
  5254  00AA  318B  238A  3180   	fcall	_EUSART_Write
  5255  00AD                     l3496:
  5256                           
  5257                           ;main.c: 64:                 __nop();
  5258  00AD  0000               	nop
  5259  00AE                     l3498:
  5260                           
  5261                           ;main.c: 65:             }
  5262  00AE  3001               	movlw	1
  5263  00AF  0024               	movlb	4	; select bank4
  5264  00B0  07D1               	addwf	main@i^(0+512),f
  5265  00B1  3000               	movlw	0
  5266  00B2  3DD2               	addwfc	(main@i+1)^(0+512),f
  5267  00B3                     l3500:
  5268  00B3  0852               	movf	(main@i+1)^(0+512),w
  5269  00B4  3A80               	xorlw	128
  5270  00B5  0021               	movlb	1	; select bank1
  5271  00B6  00D3               	movwf	??_main^(0+128)
  5272  00B7  3080               	movlw	128
  5273  00B8  0253               	subwf	??_main^(0+128),w
  5274  00B9  1D03               	skipz
  5275  00BA  28BE               	goto	u2885
  5276  00BB  3008               	movlw	8
  5277  00BC  0024               	movlb	4	; select bank4
  5278  00BD  0251               	subwf	main@i^(0+512),w
  5279  00BE                     u2885:
  5280  00BE  1C03               	skipc
  5281  00BF  28C1               	goto	u2881
  5282  00C0  28C2               	goto	u2880
  5283  00C1                     u2881:
  5284  00C1  28A3               	goto	l3494
  5285  00C2                     u2880:
  5286  00C2                     l3502:
  5287                           
  5288                           ;main.c: 67:         if(eusartRxCount == 39){
  5289  00C2  3027               	movlw	39
  5290  00C3  0678               	xorwf	_eusartRxCount,w	;volatile
  5291  00C4  1D03               	btfss	3,2
  5292  00C5  28C7               	goto	u2891
  5293  00C6  28C8               	goto	u2890
  5294  00C7                     u2891:
  5295  00C7  2898               	goto	l3486
  5296  00C8                     u2890:
  5297  00C8                     l3504:
  5298                           
  5299                           ;main.c: 68:             unsigned int *index;;main.c: 69:             index=&Coulomb_Dat
      +                          a.ID;
  5300  00C8  307C               	movlw	124
  5301  00C9  0024               	movlb	4	; select bank4
  5302  00CA  00CF               	movwf	main@index^(0+512)
  5303  00CB  3021               	movlw	33
  5304  00CC  00D0               	movwf	(main@index^(0+512)+1)
  5305                           
  5306                           ;main.c: 70:             while(eusartRxCount != 0){
  5307  00CD  2916               	goto	l3520
  5308  00CE                     l3506:
  5309                           
  5310                           ;main.c: 71:                 *index = EUSART_Read();
  5311  00CE  318D  2512  3180   	fcall	_EUSART_Read
  5312  00D1  0021               	movlb	1	; select bank1
  5313  00D2  00D3               	movwf	??_main^(0+128)
  5314  00D3  01D4               	clrf	(??_main^(0+128)+1)
  5315  00D4  0024               	movlb	4	; select bank4
  5316  00D5  084F               	movf	main@index^(0+512),w
  5317  00D6  0086               	movwf	6
  5318  00D7  0850               	movf	(main@index+1)^(0+512),w
  5319  00D8  0087               	movwf	7
  5320  00D9  0021               	movlb	1	; select bank1
  5321  00DA  0853               	movf	??_main^(0+128),w
  5322  00DB  3FC0               	movwi [0]fsr1
  5323  00DC  0854               	movf	(??_main+1)^(0+128),w
  5324  00DD  3FC1               	movwi [1]fsr1
  5325  00DE                     l3508:
  5326                           
  5327                           ;main.c: 72:                 H_L_counter++;
  5328  00DE  3001               	movlw	1
  5329  00DF  0024               	movlb	4	; select bank4
  5330  00E0  07D3               	addwf	main@H_L_counter^(0+512),f
  5331  00E1  3000               	movlw	0
  5332  00E2  3DD4               	addwfc	(main@H_L_counter+1)^(0+512),f
  5333  00E3                     l3510:
  5334                           
  5335                           ;main.c: 73:                 if((H_L_counter<=3)||(H_L_counter>=0x27)) index++;
  5336  00E3  0854               	movf	(main@H_L_counter+1)^(0+512),w
  5337  00E4  3A80               	xorlw	128
  5338  00E5  0021               	movlb	1	; select bank1
  5339  00E6  00D3               	movwf	??_main^(0+128)
  5340  00E7  3080               	movlw	128
  5341  00E8  0253               	subwf	??_main^(0+128),w
  5342  00E9  1D03               	skipz
  5343  00EA  28EE               	goto	u2905
  5344  00EB  3004               	movlw	4
  5345  00EC  0024               	movlb	4	; select bank4
  5346  00ED  0253               	subwf	main@H_L_counter^(0+512),w
  5347  00EE                     u2905:
  5348  00EE  1C03               	skipc
  5349  00EF  28F1               	goto	u2901
  5350  00F0  28F2               	goto	u2900
  5351  00F1                     u2901:
  5352  00F1  2902               	goto	l3514
  5353  00F2                     u2900:
  5354  00F2                     l3512:
  5355  00F2  0024               	movlb	4	; select bank4
  5356  00F3  0854               	movf	(main@H_L_counter+1)^(0+512),w
  5357  00F4  3A80               	xorlw	128
  5358  00F5  0021               	movlb	1	; select bank1
  5359  00F6  00D3               	movwf	??_main^(0+128)
  5360  00F7  3080               	movlw	128
  5361  00F8  0253               	subwf	??_main^(0+128),w
  5362  00F9  1D03               	skipz
  5363  00FA  28FE               	goto	u2915
  5364  00FB  3027               	movlw	39
  5365  00FC  0024               	movlb	4	; select bank4
  5366  00FD  0253               	subwf	main@H_L_counter^(0+512),w
  5367  00FE                     u2915:
  5368  00FE  1C03               	skipc
  5369  00FF  2901               	goto	u2911
  5370  0100  2902               	goto	u2910
  5371  0101                     u2911:
  5372  0101  2908               	goto	l364
  5373  0102                     u2910:
  5374  0102                     l3514:
  5375  0102  3002               	movlw	2
  5376  0103  0024               	movlb	4	; select bank4
  5377  0104  07CF               	addwf	main@index^(0+512),f
  5378  0105  3000               	movlw	0
  5379  0106  3DD0               	addwfc	(main@index+1)^(0+512),f
  5380  0107  2916               	goto	l3520
  5381  0108                     l364:	
  5382                           ;main.c: 74:                 else{
  5383                           
  5384                           
  5385                           ;main.c: 75:                     if((H_L_counter%2)==0) index+=0x11;
  5386  0108  0024               	movlb	4	; select bank4
  5387  0109  1853               	btfsc	main@H_L_counter^(0+512),0
  5388  010A  290C               	goto	u2921
  5389  010B  290D               	goto	u2920
  5390  010C                     u2921:
  5391  010C  2912               	goto	l3518
  5392  010D                     u2920:
  5393  010D                     l3516:
  5394  010D  3022               	movlw	34
  5395  010E  07CF               	addwf	main@index^(0+512),f
  5396  010F  3000               	movlw	0
  5397  0110  3DD0               	addwfc	(main@index+1)^(0+512),f
  5398  0111  2916               	goto	l3520
  5399  0112                     l3518:
  5400  0112  3020               	movlw	32
  5401  0113  02CF               	subwf	main@index^(0+512),f
  5402  0114  3000               	movlw	0
  5403  0115  3BD0               	subwfb	(main@index+1)^(0+512),f
  5404  0116                     l3520:
  5405                           
  5406                           ;main.c: 70:             while(eusartRxCount != 0){
  5407  0116  0878               	movf	_eusartRxCount,w	;volatile
  5408  0117  1D03               	btfss	3,2
  5409  0118  291A               	goto	u2931
  5410  0119  291B               	goto	u2930
  5411  011A                     u2931:
  5412  011A  28CE               	goto	l3506
  5413  011B                     u2930:
  5414  011B                     l3522:
  5415                           
  5416                           ;main.c: 79:             for(j=0;j<=16;j++) {
  5417  011B  01D5               	clrf	main@j^(0+512)
  5418  011C  01D6               	clrf	(main@j+1)^(0+512)
  5419  011D                     l3528:
  5420                           
  5421                           ;main.c: 80:                 Get_Voltage(j);
  5422  011D  0024               	movlb	4	; select bank4
  5423  011E  0856               	movf	(main@j+1)^(0+512),w
  5424  011F  0020               	movlb	0	; select bank0
  5425  0120  00A4               	movwf	Get_Voltage@k+1
  5426  0121  0024               	movlb	4	; select bank4
  5427  0122  0855               	movf	main@j^(0+512),w
  5428  0123  0020               	movlb	0	; select bank0
  5429  0124  00A3               	movwf	Get_Voltage@k
  5430  0125  3183  238B  3180   	fcall	_Get_Voltage
  5431  0128                     l3530:
  5432                           
  5433                           ;main.c: 81:                 Voltage_sort[j] = Coulomb_Data.Voltage[j];
  5434  0128  0024               	movlb	4	; select bank4
  5435  0129  0856               	movf	(main@j+1)^(0+512),w
  5436  012A  0021               	movlb	1	; select bank1
  5437  012B  00D4               	movwf	(??_main^(0+128)+1)
  5438  012C  0024               	movlb	4	; select bank4
  5439  012D  0855               	movf	main@j^(0+512),w
  5440  012E  0021               	movlb	1	; select bank1
  5441  012F  00D3               	movwf	??_main^(0+128)
  5442  0130  35D3               	lslf	??_main^(0+128),f
  5443  0131  0DD4               	rlf	(??_main^(0+128)+1),f
  5444  0132  30CE               	movlw	206
  5445  0133  00D5               	movwf	(??_main+2)^(0+128)
  5446  0134  3021               	movlw	33
  5447  0135  00D6               	movwf	((??_main+2)^(0+128)+1)
  5448  0136  0853               	movf	??_main^(0+128),w
  5449  0137  0755               	addwf	(??_main+2)^(0+128),w
  5450  0138  0086               	movwf	6
  5451  0139  0854               	movf	(??_main+1)^(0+128),w
  5452  013A  3D56               	addwfc	(??_main+3)^(0+128),w
  5453  013B  0087               	movwf	7
  5454  013C  0024               	movlb	4	; select bank4
  5455  013D  3555               	lslf	main@j^(0+512),w
  5456  013E  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
  5457  013F  0084               	movwf	4
  5458  0140  3001               	movlw	1	; select bank2/3
  5459  0141  0085               	movwf	5
  5460  0142  3F40               	moviw [0]fsr1
  5461  0143  3F80               	movwi [0]fsr0
  5462  0144  3F41               	moviw [1]fsr1
  5463  0145  3F81               	movwi [1]fsr0
  5464  0146                     l3532:
  5465                           
  5466                           ;main.c: 82:             }
  5467  0146  3001               	movlw	1
  5468  0147  07D5               	addwf	main@j^(0+512),f
  5469  0148  3000               	movlw	0
  5470  0149  3DD6               	addwfc	(main@j+1)^(0+512),f
  5471  014A                     l3534:
  5472  014A  0856               	movf	(main@j+1)^(0+512),w
  5473  014B  3A80               	xorlw	128
  5474  014C  0021               	movlb	1	; select bank1
  5475  014D  00D3               	movwf	??_main^(0+128)
  5476  014E  3080               	movlw	128
  5477  014F  0253               	subwf	??_main^(0+128),w
  5478  0150  1D03               	skipz
  5479  0151  2955               	goto	u2945
  5480  0152  3011               	movlw	17
  5481  0153  0024               	movlb	4	; select bank4
  5482  0154  0255               	subwf	main@j^(0+512),w
  5483  0155                     u2945:
  5484  0155  1C03               	skipc
  5485  0156  2958               	goto	u2941
  5486  0157  2959               	goto	u2940
  5487  0158                     u2941:
  5488  0158  291D               	goto	l3528
  5489  0159                     u2940:
  5490  0159                     l3536:
  5491                           
  5492                           ;main.c: 83:             for(j=0;j<=16;j++){
  5493  0159  0024               	movlb	4	; select bank4
  5494  015A  01D5               	clrf	main@j^(0+512)
  5495  015B  01D6               	clrf	(main@j+1)^(0+512)
  5496  015C                     l3542:
  5497                           
  5498                           ;main.c: 84:                 if(Coulomb_Data.Voltage[j]>=3500) PORTAbits.RA2=1;
  5499  015C  0024               	movlb	4	; select bank4
  5500  015D  0856               	movf	(main@j+1)^(0+512),w
  5501  015E  0021               	movlb	1	; select bank1
  5502  015F  00D4               	movwf	(??_main^(0+128)+1)
  5503  0160  0024               	movlb	4	; select bank4
  5504  0161  0855               	movf	main@j^(0+512),w
  5505  0162  0021               	movlb	1	; select bank1
  5506  0163  00D3               	movwf	??_main^(0+128)
  5507  0164  35D3               	lslf	??_main^(0+128),f
  5508  0165  0DD4               	rlf	(??_main^(0+128)+1),f
  5509  0166  30CE               	movlw	206
  5510  0167  00D5               	movwf	(??_main+2)^(0+128)
  5511  0168  3021               	movlw	33
  5512  0169  00D6               	movwf	((??_main+2)^(0+128)+1)
  5513  016A  0853               	movf	??_main^(0+128),w
  5514  016B  0755               	addwf	(??_main+2)^(0+128),w
  5515  016C  0086               	movwf	6
  5516  016D  0854               	movf	(??_main+1)^(0+128),w
  5517  016E  3D56               	addwfc	(??_main+3)^(0+128),w
  5518  016F  0087               	movwf	7
  5519  0170  3F40               	moviw [0]fsr1
  5520  0171  00D7               	movwf	(??_main+4)^(0+128)
  5521  0172  3F41               	moviw [1]fsr1
  5522  0173  00D8               	movwf	((??_main+4)^(0+128)+1)
  5523  0174  300D               	movlw	13
  5524  0175  0258               	subwf	(??_main+5)^(0+128),w
  5525  0176  30AC               	movlw	172
  5526  0177  1903               	skipnz
  5527  0178  0257               	subwf	(??_main+4)^(0+128),w
  5528  0179  1C03               	skipc
  5529  017A  297C               	goto	u2951
  5530  017B  297D               	goto	u2950
  5531  017C                     u2951:
  5532  017C  297F               	goto	l3546
  5533  017D                     u2950:
  5534  017D                     l3544:
  5535  017D  0020               	movlb	0	; select bank0
  5536  017E  150C               	bsf	12,2	;volatile
  5537  017F                     l3546:
  5538                           
  5539                           ;main.c: 85:                 if(Coulomb_Data.Voltage[j]<=2500) PORTAbits.RA3=1;
  5540  017F  0024               	movlb	4	; select bank4
  5541  0180  0856               	movf	(main@j+1)^(0+512),w
  5542  0181  0021               	movlb	1	; select bank1
  5543  0182  00D4               	movwf	(??_main^(0+128)+1)
  5544  0183  0024               	movlb	4	; select bank4
  5545  0184  0855               	movf	main@j^(0+512),w
  5546  0185  0021               	movlb	1	; select bank1
  5547  0186  00D3               	movwf	??_main^(0+128)
  5548  0187  35D3               	lslf	??_main^(0+128),f
  5549  0188  0DD4               	rlf	(??_main^(0+128)+1),f
  5550  0189  30CE               	movlw	206
  5551  018A  00D5               	movwf	(??_main+2)^(0+128)
  5552  018B  3021               	movlw	33
  5553  018C  00D6               	movwf	((??_main+2)^(0+128)+1)
  5554  018D  0853               	movf	??_main^(0+128),w
  5555  018E  0755               	addwf	(??_main+2)^(0+128),w
  5556  018F  0086               	movwf	6
  5557  0190  0854               	movf	(??_main+1)^(0+128),w
  5558  0191  3D56               	addwfc	(??_main+3)^(0+128),w
  5559  0192  0087               	movwf	7
  5560  0193  3F40               	moviw [0]fsr1
  5561  0194  00D7               	movwf	(??_main+4)^(0+128)
  5562  0195  3F41               	moviw [1]fsr1
  5563  0196  00D8               	movwf	((??_main+4)^(0+128)+1)
  5564  0197  3009               	movlw	9
  5565  0198  0258               	subwf	(??_main+5)^(0+128),w
  5566  0199  30C5               	movlw	197
  5567  019A  1903               	skipnz
  5568  019B  0257               	subwf	(??_main+4)^(0+128),w
  5569  019C  1803               	skipnc
  5570  019D  299F               	goto	u2961
  5571  019E  29A0               	goto	u2960
  5572  019F                     u2961:
  5573  019F  29A2               	goto	l3550
  5574  01A0                     u2960:
  5575  01A0                     l3548:
  5576  01A0  0020               	movlb	0	; select bank0
  5577  01A1  158C               	bsf	12,3	;volatile
  5578  01A2                     l3550:
  5579                           
  5580                           ;main.c: 86:             }
  5581  01A2  3001               	movlw	1
  5582  01A3  0024               	movlb	4	; select bank4
  5583  01A4  07D5               	addwf	main@j^(0+512),f
  5584  01A5  3000               	movlw	0
  5585  01A6  3DD6               	addwfc	(main@j+1)^(0+512),f
  5586  01A7  0856               	movf	(main@j+1)^(0+512),w
  5587  01A8  3A80               	xorlw	128
  5588  01A9  0021               	movlb	1	; select bank1
  5589  01AA  00D3               	movwf	??_main^(0+128)
  5590  01AB  3080               	movlw	128
  5591  01AC  0253               	subwf	??_main^(0+128),w
  5592  01AD  1D03               	skipz
  5593  01AE  29B2               	goto	u2975
  5594  01AF  3011               	movlw	17
  5595  01B0  0024               	movlb	4	; select bank4
  5596  01B1  0255               	subwf	main@j^(0+512),w
  5597  01B2                     u2975:
  5598  01B2  1C03               	skipc
  5599  01B3  29B5               	goto	u2971
  5600  01B4  29B6               	goto	u2970
  5601  01B5                     u2971:
  5602  01B5  295C               	goto	l3542
  5603  01B6                     u2970:
  5604  01B6                     l3552:
  5605                           
  5606                           ;main.c: 87:             BadBetteryFilter();
  5607  01B6  318F  272A  3180   	fcall	_BadBetteryFilter
  5608  01B9                     l3554:
  5609                           
  5610                           ;main.c: 88:             for(j=1; j<=17 ;j++){
  5611  01B9  3001               	movlw	1
  5612  01BA  0024               	movlb	4	; select bank4
  5613  01BB  00D5               	movwf	main@j^(0+512)
  5614  01BC  3000               	movlw	0
  5615  01BD  00D6               	movwf	(main@j^(0+512)+1)
  5616  01BE                     l3560:
  5617                           
  5618                           ;main.c: 89:                 LCD_Init(0x4E);
  5619  01BE  304E               	movlw	78
  5620  01BF  318F  2795  3180   	fcall	_LCD_Init
  5621  01C2                     l3562:
  5622                           
  5623                           ;main.c: 90:                 LCD_Set_Cursor(1, 1);
  5624  01C2  0020               	movlb	0	; select bank0
  5625  01C3  01A1               	clrf	LCD_Set_Cursor@COL
  5626  01C4  0AA1               	incf	LCD_Set_Cursor@COL,f
  5627  01C5  3001               	movlw	1
  5628  01C6  318D  253C  3180   	fcall	_LCD_Set_Cursor
  5629  01C9                     l3564:
  5630                           
  5631                           ;main.c: 91:                 sprintf(&no, "%d", j);
  5632  01C9  3000               	movlw	low (STR_1| (0+32768))
  5633  01CA  0021               	movlb	1	; select bank1
  5634  01CB  00C5               	movwf	sprintf@fmt^(0+128)
  5635  01CC  3088               	movlw	high (STR_1| (0+32768))
  5636  01CD  00C6               	movwf	(sprintf@fmt^(0+128)+1)
  5637  01CE  0024               	movlb	4	; select bank4
  5638  01CF  0856               	movf	(main@j+1)^(0+512),w
  5639  01D0  0021               	movlb	1	; select bank1
  5640  01D1  00C8               	movwf	((?_sprintf+1)^(0+128)+2)
  5641  01D2  0024               	movlb	4	; select bank4
  5642  01D3  0855               	movf	main@j^(0+512),w
  5643  01D4  0021               	movlb	1	; select bank1
  5644  01D5  00C7               	movwf	(?_sprintf^(0+128)+2)
  5645  01D6  30E6               	movlw	(low (_no| (0+256)))& (0+255)
  5646  01D7  318C  24E9  3180   	fcall	_sprintf
  5647                           
  5648                           ;main.c: 92:                 LCD_Write_String(&no);
  5649  01DA  30E6               	movlw	(low (_no| (0+256)))& (0+255)
  5650  01DB  318C  249E  3180   	fcall	_LCD_Write_String
  5651  01DE                     l3566:
  5652                           
  5653                           ;main.c: 93:                 LCD_Set_Cursor(2, 1);
  5654  01DE  0020               	movlb	0	; select bank0
  5655  01DF  01A1               	clrf	LCD_Set_Cursor@COL
  5656  01E0  0AA1               	incf	LCD_Set_Cursor@COL,f
  5657  01E1  3002               	movlw	2
  5658  01E2  318D  253C  3180   	fcall	_LCD_Set_Cursor
  5659  01E5                     l3568:
  5660                           
  5661                           ;main.c: 94:                 sprintf(&ShowbadBettery, "%d", diffBettery[j-1]);
  5662  01E5  3000               	movlw	low (STR_1| (0+32768))
  5663  01E6  0021               	movlb	1	; select bank1
  5664  01E7  00C5               	movwf	sprintf@fmt^(0+128)
  5665  01E8  3088               	movlw	high (STR_1| (0+32768))
  5666  01E9  00C6               	movwf	(sprintf@fmt^(0+128)+1)
  5667  01EA  0024               	movlb	4	; select bank4
  5668  01EB  3555               	lslf	main@j^(0+512),w
  5669  01EC  3E9E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  5670  01ED  0086               	movwf	6
  5671  01EE  3001               	movlw	1	; select bank3/4
  5672  01EF  0087               	movwf	7
  5673  01F0  3F40               	moviw [0]fsr1
  5674  01F1  0021               	movlb	1	; select bank1
  5675  01F2  00C7               	movwf	(?_sprintf^(0+128)+2)
  5676  01F3  3F41               	moviw [1]fsr1
  5677  01F4  00C8               	movwf	((?_sprintf+1)^(0+128)+2)
  5678  01F5  30E7               	movlw	(low (_ShowbadBettery| (0+256)))& (0+255)
  5679  01F6  318C  24E9  3180   	fcall	_sprintf
  5680  01F9                     l3570:
  5681                           
  5682                           ;main.c: 95:                 LCD_Write_String(&ShowbadBettery);
  5683  01F9  30E7               	movlw	(low (_ShowbadBettery| (0+256)))& (0+255)
  5684  01FA  318C  249E  3180   	fcall	_LCD_Write_String
  5685  01FD                     l3572:
  5686                           
  5687                           ;main.c: 96:                 Delay(25000);
  5688  01FD  30A8               	movlw	168
  5689  01FE  00F3               	movwf	Delay@counter
  5690  01FF  3061               	movlw	97
  5691  0200  00F4               	movwf	Delay@counter+1
  5692  0201  318B  239F  3180   	fcall	_Delay
  5693  0204                     l3574:
  5694                           
  5695                           ;main.c: 97:             }
  5696  0204  3001               	movlw	1
  5697  0205  0024               	movlb	4	; select bank4
  5698  0206  07D5               	addwf	main@j^(0+512),f
  5699  0207  3000               	movlw	0
  5700  0208  3DD6               	addwfc	(main@j+1)^(0+512),f
  5701  0209                     l3576:
  5702  0209  0856               	movf	(main@j+1)^(0+512),w
  5703  020A  3A80               	xorlw	128
  5704  020B  0021               	movlb	1	; select bank1
  5705  020C  00D3               	movwf	??_main^(0+128)
  5706  020D  3080               	movlw	128
  5707  020E  0253               	subwf	??_main^(0+128),w
  5708  020F  1D03               	skipz
  5709  0210  2A14               	goto	u2985
  5710  0211  3012               	movlw	18
  5711  0212  0024               	movlb	4	; select bank4
  5712  0213  0255               	subwf	main@j^(0+512),w
  5713  0214                     u2985:
  5714  0214  1C03               	skipc
  5715  0215  2A17               	goto	u2981
  5716  0216  2A18               	goto	u2980
  5717  0217                     u2981:
  5718  0217  29BE               	goto	l3560
  5719  0218                     u2980:
  5720  0218  2898               	goto	l3486
  5721  0219  3180  2827         	ljmp	start
  5722  021B                     __end_of_main:
  5723                           
  5724                           	psect	text1
  5725  0CE9                     __ptext1:	
  5726 ;; *************** function _sprintf *****************
  5727 ;; Defined at:
  5728 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  s               1    wreg     PTR unsigned char 
  5731 ;;		 -> ShowbadBettery(1), no(1), 
  5732 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  5733 ;;		 -> STR_2(3), STR_1(3), 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  s               1    8[BANK1 ] PTR unsigned char 
  5736 ;;		 -> ShowbadBettery(1), no(1), 
  5737 ;;  f               5    9[BANK1 ] struct _IO_FILE
  5738 ;;  ret             2    0        int 
  5739 ;;  ap              1    7[BANK1 ] PTR void [1]
  5740 ;;		 -> ?_sprintf(2), 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2    0[BANK1 ] int 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5750 ;;      Params:         0       0       4       0       0       0       0       0
  5751 ;;      Locals:         0       0       9       0       0       0       0       0
  5752 ;;      Temps:          0       0       1       0       0       0       0       0
  5753 ;;      Totals:         0       0      14       0       0       0       0       0
  5754 ;;Total ram usage:       14 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:   12
  5757 ;; This function calls:
  5758 ;;		_vfprintf
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _sprintf
  5766  0CE9                     _sprintf:
  5767                           
  5768                           ;incstack = 0
  5769                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5770                           ;sprintf@s stored from wreg
  5771  0CE9  0021               	movlb	1	; select bank1
  5772  0CEA  00CD               	movwf	sprintf@s^(0+128)
  5773  0CEB                     l3452:
  5774  0CEB  30C7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5775  0CEC  00C9               	movwf	??_sprintf^(0+128)
  5776  0CED  0849               	movf	??_sprintf^(0+128),w
  5777  0CEE  00CC               	movwf	sprintf@ap^(0+128)
  5778  0CEF  084D               	movf	sprintf@s^(0+128),w
  5779  0CF0  00C9               	movwf	??_sprintf^(0+128)
  5780  0CF1  0849               	movf	??_sprintf^(0+128),w
  5781  0CF2  00CE               	movwf	sprintf@f^(0+128)
  5782  0CF3                     l3454:
  5783  0CF3  01CF               	clrf	(sprintf@f^(0+128)+1)
  5784  0CF4  01D0               	clrf	((sprintf@f+1)^(0+128)+1)
  5785  0CF5                     l3456:
  5786  0CF5  01D1               	clrf	(sprintf@f^(0+128)+3)
  5787  0CF6  01D2               	clrf	((sprintf@f+1)^(0+128)+3)
  5788  0CF7                     l3458:
  5789  0CF7  0846               	movf	(sprintf@fmt+1)^(0+128),w
  5790  0CF8  0020               	movlb	0	; select bank0
  5791  0CF9  00E9               	movwf	vfprintf@fmt+1
  5792  0CFA  0021               	movlb	1	; select bank1
  5793  0CFB  0845               	movf	sprintf@fmt^(0+128),w
  5794  0CFC  0020               	movlb	0	; select bank0
  5795  0CFD  00E8               	movwf	vfprintf@fmt
  5796  0CFE  30CC               	movlw	(low (sprintf@ap| 0))& (0+255)
  5797  0CFF  0021               	movlb	1	; select bank1
  5798  0D00  00C9               	movwf	??_sprintf^(0+128)
  5799  0D01  0849               	movf	??_sprintf^(0+128),w
  5800  0D02  0020               	movlb	0	; select bank0
  5801  0D03  00EA               	movwf	vfprintf@ap
  5802  0D04  30CE               	movlw	(low (sprintf@f| 0))& (0+255)
  5803  0D05  318D  259B  318C   	fcall	_vfprintf
  5804  0D08                     l3460:
  5805  0D08  0021               	movlb	1	; select bank1
  5806  0D09  084F               	movf	(sprintf@f^(0+128)+1),w
  5807  0D0A  074D               	addwf	sprintf@s^(0+128),w
  5808  0D0B  00C9               	movwf	??_sprintf^(0+128)
  5809  0D0C  0849               	movf	??_sprintf^(0+128),w
  5810  0D0D  0086               	movwf	6
  5811  0D0E  3001               	movlw	1	; select bank2/3
  5812  0D0F  0087               	movwf	7
  5813  0D10  0181               	clrf	1
  5814  0D11                     l1129:
  5815  0D11  0008               	return
  5816  0D12                     __end_of_sprintf:
  5817                           
  5818                           	psect	text2
  5819  0D9B                     __ptext2:	
  5820 ;; *************** function _vfprintf *****************
  5821 ;; Defined at:
  5822 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  fp              1    wreg     PTR struct _IO_FILE
  5825 ;;		 -> sprintf@f(5), 
  5826 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  5827 ;;		 -> STR_2(3), STR_1(3), 
  5828 ;;  ap              1   74[BANK0 ] PTR PTR void 
  5829 ;;		 -> sprintf@ap(1), 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  5832 ;;		 -> sprintf@f(5), 
  5833 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  5834 ;;		 -> STR_2(3), STR_1(3), 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2   72[BANK0 ] int 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5844 ;;      Params:         0       3       0       0       0       0       0       0
  5845 ;;      Locals:         0       3       0       0       0       0       0       0
  5846 ;;      Temps:          0       2       0       0       0       0       0       0
  5847 ;;      Totals:         0       8       0       0       0       0       0       0
  5848 ;;Total ram usage:        8 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:   11
  5851 ;; This function calls:
  5852 ;;		_vfpfcnvrt
  5853 ;; This function is called by:
  5854 ;;		_sprintf
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _vfprintf
  5860  0D9B                     _vfprintf:
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5864                           ;vfprintf@fp stored from wreg
  5865  0D9B  0020               	movlb	0	; select bank0
  5866  0D9C  00ED               	movwf	vfprintf@fp
  5867  0D9D                     l3308:
  5868                           
  5869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5870  0D9D  0869               	movf	vfprintf@fmt+1,w
  5871  0D9E  00EF               	movwf	vfprintf@cfmt+1
  5872  0D9F  0868               	movf	vfprintf@fmt,w
  5873  0DA0  00EE               	movwf	vfprintf@cfmt
  5874  0DA1                     l3310:
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  5877  0DA1  0023               	movlb	3	; select bank3
  5878  0DA2  01C2               	clrf	_nout^(0+384)
  5879  0DA3  01C3               	clrf	(_nout+1)^(0+384)
  5880                           
  5881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5882  0DA4  2DB9               	goto	l3314
  5883  0DA5                     l3312:
  5884                           
  5885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5886  0DA5  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5887  0DA6  00EB               	movwf	??_vfprintf
  5888  0DA7  086B               	movf	??_vfprintf,w
  5889  0DA8  00D8               	movwf	vfpfcnvrt@fmt
  5890  0DA9  086A               	movf	vfprintf@ap,w
  5891  0DAA  00EC               	movwf	??_vfprintf+1
  5892  0DAB  086C               	movf	??_vfprintf+1,w
  5893  0DAC  00D9               	movwf	vfpfcnvrt@ap
  5894  0DAD  086D               	movf	vfprintf@fp,w
  5895  0DAE  3186  26AC  318D   	fcall	_vfpfcnvrt
  5896  0DB1  0020               	movlb	0	; select bank0
  5897  0DB2  0858               	movf	?_vfpfcnvrt,w
  5898  0DB3  0023               	movlb	3	; select bank3
  5899  0DB4  07C2               	addwf	_nout^(0+384),f
  5900  0DB5  0020               	movlb	0	; select bank0
  5901  0DB6  0859               	movf	?_vfpfcnvrt+1,w
  5902  0DB7  0023               	movlb	3	; select bank3
  5903  0DB8  3DC3               	addwfc	(_nout+1)^(0+384),f
  5904  0DB9                     l3314:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5907  0DB9  0020               	movlb	0	; select bank0
  5908  0DBA  086E               	movf	vfprintf@cfmt,w
  5909  0DBB  0084               	movwf	4
  5910  0DBC  086F               	movf	vfprintf@cfmt+1,w
  5911  0DBD  0085               	movwf	5
  5912  0DBE  0012               	moviw fsr0++
  5913  0DBF  1D03               	btfss	3,2
  5914  0DC0  2DC2               	goto	u2761
  5915  0DC1  2DC3               	goto	u2760
  5916  0DC2                     u2761:
  5917  0DC2  2DA5               	goto	l3312
  5918  0DC3                     u2760:
  5919  0DC3                     l3316:
  5920                           
  5921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  5922  0DC3  0023               	movlb	3	; select bank3
  5923  0DC4  0843               	movf	(_nout+1)^(0+384),w
  5924  0DC5  0020               	movlb	0	; select bank0
  5925  0DC6  00E9               	movwf	?_vfprintf+1
  5926  0DC7  0023               	movlb	3	; select bank3
  5927  0DC8  0842               	movf	_nout^(0+384),w
  5928  0DC9  0020               	movlb	0	; select bank0
  5929  0DCA  00E8               	movwf	?_vfprintf
  5930  0DCB                     l1201:
  5931  0DCB  0008               	return
  5932  0DCC                     __end_of_vfprintf:
  5933                           
  5934                           	psect	text3
  5935  06AC                     __ptext3:	
  5936 ;; *************** function _vfpfcnvrt *****************
  5937 ;; Defined at:
  5938 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  fp              1    wreg     PTR struct _IO_FILE
  5941 ;;		 -> sprintf@f(5), 
  5942 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  5943 ;;		 -> vfprintf@cfmt(2), 
  5944 ;;  ap              1   57[BANK0 ] PTR PTR void 
  5945 ;;		 -> sprintf@ap(1), 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  5948 ;;		 -> sprintf@f(5), 
  5949 ;;  ll              8   63[BANK0 ] long long 
  5950 ;;  llu             8    0        unsigned long long 
  5951 ;;  f               4    0        unsigned long long 
  5952 ;;  ct              3    0        unsigned char [3]
  5953 ;;  vp              2    0        PTR void 
  5954 ;;  i               2    0        int 
  5955 ;;  done            2    0        int 
  5956 ;;  cp              2    0        PTR unsigned char 
  5957 ;;  c               1    0        unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  2   56[BANK0 ] int 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5967 ;;      Params:         0       2       0       0       0       0       0       0
  5968 ;;      Locals:         0       9       0       0       0       0       0       0
  5969 ;;      Temps:          0       5       0       0       0       0       0       0
  5970 ;;      Totals:         0      16       0       0       0       0       0       0
  5971 ;;Total ram usage:       16 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:   10
  5974 ;; This function calls:
  5975 ;;		_dtoa
  5976 ;;		_fputc
  5977 ;; This function is called by:
  5978 ;;		_vfprintf
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _vfpfcnvrt
  5984  06AC                     _vfpfcnvrt:
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5988                           ;vfpfcnvrt@fp stored from wreg
  5989  06AC  0020               	movlb	0	; select bank0
  5990  06AD  00E7               	movwf	vfpfcnvrt@fp
  5991  06AE                     l3112:
  5992                           
  5993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  5994  06AE  0858               	movf	vfpfcnvrt@fmt,w
  5995  06AF  0086               	movwf	6
  5996  06B0  0187               	clrf	7
  5997  06B1  3F40               	moviw [0]fsr1
  5998  06B2  00DA               	movwf	??_vfpfcnvrt
  5999  06B3  3F41               	moviw [1]fsr1
  6000  06B4  00DB               	movwf	??_vfpfcnvrt+1
  6001  06B5  085A               	movf	??_vfpfcnvrt,w
  6002  06B6  0084               	movwf	4
  6003  06B7  085B               	movf	??_vfpfcnvrt+1,w
  6004  06B8  0085               	movwf	5
  6005  06B9  0012               	moviw fsr0++
  6006  06BA  3A25               	xorlw	37
  6007  06BB  1D03               	btfss	3,2
  6008  06BC  2EBE               	goto	u2601
  6009  06BD  2EBF               	goto	u2600
  6010  06BE                     u2601:
  6011  06BE  2F63               	goto	l3148
  6012  06BF                     u2600:
  6013  06BF                     l3114:
  6014                           
  6015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6016  06BF  0858               	movf	vfpfcnvrt@fmt,w
  6017  06C0  0086               	movwf	6
  6018  06C1  0187               	clrf	7
  6019  06C2  3001               	movlw	1
  6020  06C3  0781               	addwf	1,f
  6021  06C4  3141               	addfsr 1,1
  6022  06C5  1803               	skipnc
  6023  06C6  0A81               	incf	1,f
  6024  06C7                     l3116:
  6025                           
  6026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6027  06C7  0022               	movlb	2	; select bank2
  6028  06C8  01E9               	clrf	_width^(0+256)
  6029  06C9  01EA               	clrf	(_width+1)^(0+256)
  6030  06CA  01ED               	clrf	_flags^(0+256)
  6031  06CB  01EE               	clrf	(_flags+1)^(0+256)
  6032  06CC                     l3118:
  6033                           
  6034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6035  06CC  30FF               	movlw	255
  6036  06CD  00EB               	movwf	_prec^(0+256)
  6037  06CE  30FF               	movlw	255
  6038  06CF  00EC               	movwf	(_prec^(0+256)+1)
  6039  06D0                     l3120:
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6042  06D0  0020               	movlb	0	; select bank0
  6043  06D1  0858               	movf	vfpfcnvrt@fmt,w
  6044  06D2  0086               	movwf	6
  6045  06D3  0187               	clrf	7
  6046  06D4  3F40               	moviw [0]fsr1
  6047  06D5  00DA               	movwf	??_vfpfcnvrt
  6048  06D6  3F41               	moviw [1]fsr1
  6049  06D7  00DB               	movwf	??_vfpfcnvrt+1
  6050  06D8  085A               	movf	??_vfpfcnvrt,w
  6051  06D9  0084               	movwf	4
  6052  06DA  085B               	movf	??_vfpfcnvrt+1,w
  6053  06DB  0085               	movwf	5
  6054  06DC  0012               	moviw fsr0++
  6055  06DD  3A64               	xorlw	100
  6056  06DE  1903               	btfsc	3,2
  6057  06DF  2EE1               	goto	u2611
  6058  06E0  2EE2               	goto	u2610
  6059  06E1                     u2611:
  6060  06E1  2EF3               	goto	l3124
  6061  06E2                     u2610:
  6062  06E2                     l3122:
  6063  06E2  0858               	movf	vfpfcnvrt@fmt,w
  6064  06E3  0086               	movwf	6
  6065  06E4  0187               	clrf	7
  6066  06E5  3F40               	moviw [0]fsr1
  6067  06E6  00DA               	movwf	??_vfpfcnvrt
  6068  06E7  3F41               	moviw [1]fsr1
  6069  06E8  00DB               	movwf	??_vfpfcnvrt+1
  6070  06E9  085A               	movf	??_vfpfcnvrt,w
  6071  06EA  0084               	movwf	4
  6072  06EB  085B               	movf	??_vfpfcnvrt+1,w
  6073  06EC  0085               	movwf	5
  6074  06ED  0012               	moviw fsr0++
  6075  06EE  3A69               	xorlw	105
  6076  06EF  1D03               	btfss	3,2
  6077  06F0  2EF2               	goto	u2621
  6078  06F1  2EF3               	goto	u2620
  6079  06F2                     u2621:
  6080  06F2  2F2E               	goto	l3132
  6081  06F3                     u2620:
  6082  06F3                     l3124:
  6083                           
  6084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6085  06F3  0858               	movf	vfpfcnvrt@fmt,w
  6086  06F4  0086               	movwf	6
  6087  06F5  0187               	clrf	7
  6088  06F6  3001               	movlw	1
  6089  06F7  0781               	addwf	1,f
  6090  06F8  3141               	addfsr 1,1
  6091  06F9  1803               	skipnc
  6092  06FA  0A81               	incf	1,f
  6093  06FB                     l3126:
  6094                           
  6095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6096  06FB  0859               	movf	vfpfcnvrt@ap,w
  6097  06FC  0086               	movwf	6
  6098  06FD  0187               	clrf	7
  6099  06FE  0801               	movf	1,w
  6100  06FF  0084               	movwf	4
  6101  0700  0185               	clrf	5
  6102  0701  3002               	movlw	2
  6103  0702  0781               	addwf	1,f
  6104  0703  3F00               	moviw [0]fsr0
  6105  0704  00DA               	movwf	??_vfpfcnvrt
  6106  0705  3F01               	moviw [1]fsr0
  6107  0706  00DB               	movwf	??_vfpfcnvrt+1
  6108  0707  085A               	movf	??_vfpfcnvrt,w
  6109  0708  00DF               	movwf	vfpfcnvrt@ll
  6110  0709  085B               	movf	??_vfpfcnvrt+1,w
  6111  070A  00E0               	movwf	vfpfcnvrt@ll+1
  6112  070B  0D89               	rlf	9,f
  6113  070C  3B89               	subwfb	9,f
  6114  070D  0989               	comf	9,f
  6115  070E  00E1               	movwf	vfpfcnvrt@ll+2
  6116  070F  00E2               	movwf	vfpfcnvrt@ll+3
  6117  0710  00E3               	movwf	vfpfcnvrt@ll+4
  6118  0711  00E4               	movwf	vfpfcnvrt@ll+5
  6119  0712  00E5               	movwf	vfpfcnvrt@ll+6
  6120  0713  00E6               	movwf	vfpfcnvrt@ll+7
  6121  0714                     l3128:
  6122                           
  6123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6124  0714  085F               	movf	vfpfcnvrt@ll,w
  6125  0715  00BA               	movwf	dtoa@d
  6126  0716  0860               	movf	vfpfcnvrt@ll+1,w
  6127  0717  00BB               	movwf	dtoa@d+1
  6128  0718  0861               	movf	vfpfcnvrt@ll+2,w
  6129  0719  00BC               	movwf	dtoa@d+2
  6130  071A  0862               	movf	vfpfcnvrt@ll+3,w
  6131  071B  00BD               	movwf	dtoa@d+3
  6132  071C  0863               	movf	vfpfcnvrt@ll+4,w
  6133  071D  00BE               	movwf	dtoa@d+4
  6134  071E  0864               	movf	vfpfcnvrt@ll+5,w
  6135  071F  00BF               	movwf	dtoa@d+5
  6136  0720  0865               	movf	vfpfcnvrt@ll+6,w
  6137  0721  00C0               	movwf	dtoa@d+6
  6138  0722  0866               	movf	vfpfcnvrt@ll+7,w
  6139  0723  00C1               	movwf	dtoa@d+7
  6140  0724  0867               	movf	vfpfcnvrt@fp,w
  6141  0725  3182  221B  3186   	fcall	_dtoa
  6142  0728  0020               	movlb	0	; select bank0
  6143  0729  083B               	movf	?_dtoa+1,w
  6144  072A  00D9               	movwf	?_vfpfcnvrt+1
  6145  072B  083A               	movf	?_dtoa,w
  6146  072C  00D8               	movwf	?_vfpfcnvrt
  6147  072D  2F86               	goto	l1194
  6148  072E                     l3132:
  6149                           
  6150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6151  072E  0858               	movf	vfpfcnvrt@fmt,w
  6152  072F  0086               	movwf	6
  6153  0730  0187               	clrf	7
  6154  0731  3F40               	moviw [0]fsr1
  6155  0732  00DA               	movwf	??_vfpfcnvrt
  6156  0733  3F41               	moviw [1]fsr1
  6157  0734  00DB               	movwf	??_vfpfcnvrt+1
  6158  0735  085A               	movf	??_vfpfcnvrt,w
  6159  0736  0084               	movwf	4
  6160  0737  085B               	movf	??_vfpfcnvrt+1,w
  6161  0738  0085               	movwf	5
  6162  0739  0012               	moviw fsr0++
  6163  073A  3A25               	xorlw	37
  6164  073B  1D03               	btfss	3,2
  6165  073C  2F3E               	goto	u2631
  6166  073D  2F3F               	goto	u2630
  6167  073E                     u2631:
  6168  073E  2F58               	goto	l3142
  6169  073F                     u2630:
  6170  073F                     l3134:
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6173  073F  0858               	movf	vfpfcnvrt@fmt,w
  6174  0740  0086               	movwf	6
  6175  0741  0187               	clrf	7
  6176  0742  3001               	movlw	1
  6177  0743  0781               	addwf	1,f
  6178  0744  3141               	addfsr 1,1
  6179  0745  1803               	skipnc
  6180  0746  0A81               	incf	1,f
  6181  0747                     l3136:
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6184  0747  3025               	movlw	37
  6185  0748  00F5               	movwf	fputc@c
  6186  0749  3000               	movlw	0
  6187  074A  00F6               	movwf	fputc@c+1
  6188  074B  0867               	movf	vfpfcnvrt@fp,w
  6189  074C  00DA               	movwf	??_vfpfcnvrt
  6190  074D  085A               	movf	??_vfpfcnvrt,w
  6191  074E  00F7               	movwf	fputc@fp
  6192  074F  318E  267F  3186   	fcall	_fputc
  6193  0752                     l3138:
  6194                           
  6195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6196  0752  3001               	movlw	1
  6197  0753  0020               	movlb	0	; select bank0
  6198  0754  00D8               	movwf	?_vfpfcnvrt
  6199  0755  3000               	movlw	0
  6200  0756  00D9               	movwf	?_vfpfcnvrt+1
  6201  0757  2F86               	goto	l1194
  6202  0758                     l3142:
  6203                           
  6204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6205  0758  0858               	movf	vfpfcnvrt@fmt,w
  6206  0759  0086               	movwf	6
  6207  075A  0187               	clrf	7
  6208  075B  3001               	movlw	1
  6209  075C  0781               	addwf	1,f
  6210  075D  3141               	addfsr 1,1
  6211  075E  1803               	skipnc
  6212  075F  0A81               	incf	1,f
  6213  0760                     l3144:
  6214                           
  6215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6216  0760  01D8               	clrf	?_vfpfcnvrt
  6217  0761  01D9               	clrf	?_vfpfcnvrt+1
  6218  0762  2F86               	goto	l1194
  6219  0763                     l3148:
  6220                           
  6221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6222  0763  0858               	movf	vfpfcnvrt@fmt,w
  6223  0764  0086               	movwf	6
  6224  0765  0187               	clrf	7
  6225  0766  3F40               	moviw [0]fsr1
  6226  0767  00DA               	movwf	??_vfpfcnvrt
  6227  0768  3F41               	moviw [1]fsr1
  6228  0769  00DB               	movwf	??_vfpfcnvrt+1
  6229  076A  085A               	movf	??_vfpfcnvrt,w
  6230  076B  0084               	movwf	4
  6231  076C  085B               	movf	??_vfpfcnvrt+1,w
  6232  076D  0085               	movwf	5
  6233  076E  0800               	movf	0,w	;code access
  6234  076F  00DC               	movwf	??_vfpfcnvrt+2
  6235  0770  01DD               	clrf	??_vfpfcnvrt+3
  6236  0771  085C               	movf	??_vfpfcnvrt+2,w
  6237  0772  00F5               	movwf	fputc@c
  6238  0773  085D               	movf	??_vfpfcnvrt+3,w
  6239  0774  00F6               	movwf	fputc@c+1
  6240  0775  0867               	movf	vfpfcnvrt@fp,w
  6241  0776  00DE               	movwf	??_vfpfcnvrt+4
  6242  0777  085E               	movf	??_vfpfcnvrt+4,w
  6243  0778  00F7               	movwf	fputc@fp
  6244  0779  318E  267F  3186   	fcall	_fputc
  6245  077C                     l3150:
  6246                           
  6247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6248  077C  0020               	movlb	0	; select bank0
  6249  077D  0858               	movf	vfpfcnvrt@fmt,w
  6250  077E  0086               	movwf	6
  6251  077F  0187               	clrf	7
  6252  0780  3001               	movlw	1
  6253  0781  0781               	addwf	1,f
  6254  0782  3141               	addfsr 1,1
  6255  0783  1803               	skipnc
  6256  0784  0A81               	incf	1,f
  6257  0785  2F52               	goto	l3138
  6258  0786                     l1194:
  6259  0786  0008               	return
  6260  0787                     __end_of_vfpfcnvrt:
  6261                           
  6262                           	psect	text4
  6263  021B                     __ptext4:	
  6264 ;; *************** function _dtoa *****************
  6265 ;; Defined at:
  6266 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  fp              1    wreg     PTR struct _IO_FILE
  6269 ;;		 -> sprintf@f(5), 
  6270 ;;  d               8   26[BANK0 ] long long 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  6273 ;;		 -> sprintf@f(5), 
  6274 ;;  n               8   46[BANK0 ] long long 
  6275 ;;  i               2   54[BANK0 ] int 
  6276 ;;  s               2   44[BANK0 ] int 
  6277 ;;  w               2   42[BANK0 ] int 
  6278 ;;  p               2   40[BANK0 ] int 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  2   26[BANK0 ] int 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6288 ;;      Params:         0       8       0       0       0       0       0       0
  6289 ;;      Locals:         0      19       0       0       0       0       0       0
  6290 ;;      Temps:          0       3       0       0       0       0       0       0
  6291 ;;      Totals:         0      30       0       0       0       0       0       0
  6292 ;;Total ram usage:       30 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    9
  6295 ;; This function calls:
  6296 ;;		___aodiv
  6297 ;;		___aomod
  6298 ;;		_abs
  6299 ;;		_pad
  6300 ;; This function is called by:
  6301 ;;		_vfpfcnvrt
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           
  6306                           ;psect for function _dtoa
  6307  021B                     _dtoa:
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6311                           ;dtoa@fp stored from wreg
  6312  021B  0020               	movlb	0	; select bank0
  6313  021C  00C5               	movwf	dtoa@fp
  6314  021D                     l3038:
  6315                           
  6316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  6317  021D  083A               	movf	dtoa@d,w
  6318  021E  00CE               	movwf	dtoa@n
  6319  021F  083B               	movf	dtoa@d+1,w
  6320  0220  00CF               	movwf	dtoa@n+1
  6321  0221  083C               	movf	dtoa@d+2,w
  6322  0222  00D0               	movwf	dtoa@n+2
  6323  0223  083D               	movf	dtoa@d+3,w
  6324  0224  00D1               	movwf	dtoa@n+3
  6325  0225  083E               	movf	dtoa@d+4,w
  6326  0226  00D2               	movwf	dtoa@n+4
  6327  0227  083F               	movf	dtoa@d+5,w
  6328  0228  00D3               	movwf	dtoa@n+5
  6329  0229  0840               	movf	dtoa@d+6,w
  6330  022A  00D4               	movwf	dtoa@n+6
  6331  022B  0841               	movf	dtoa@d+7,w
  6332  022C  00D5               	movwf	dtoa@n+7
  6333  022D                     l3040:
  6334                           
  6335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  6336  022D  304E               	movlw	low dtoa@n
  6337  022E  0086               	movwf	6
  6338  022F  3000               	movlw	high dtoa@n
  6339  0230  0087               	movwf	7
  6340  0231  3F47               	moviw [7]fsr1
  6341  0232  00C2               	movwf	??_dtoa
  6342  0233  1BC2               	btfsc	??_dtoa,7
  6343  0234  2A36               	goto	u2441
  6344  0235  2A38               	goto	u2440
  6345  0236                     u2441:
  6346  0236  3001               	movlw	1
  6347  0237  2A39               	goto	u2450
  6348  0238                     u2440:
  6349  0238  3000               	movlw	0
  6350  0239                     u2450:
  6351  0239  0020               	movlb	0	; select bank0
  6352  023A  00C3               	movwf	??_dtoa+1
  6353  023B  01C4               	clrf	??_dtoa+2
  6354  023C  0843               	movf	??_dtoa+1,w
  6355  023D  00CC               	movwf	dtoa@s
  6356  023E  0844               	movf	??_dtoa+2,w
  6357  023F  00CD               	movwf	dtoa@s+1
  6358  0240                     l3042:
  6359                           
  6360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  6361  0240  084C               	movf	dtoa@s,w
  6362  0241  044D               	iorwf	dtoa@s+1,w
  6363  0242  1903               	btfsc	3,2
  6364  0243  2A45               	goto	u2461
  6365  0244  2A46               	goto	u2460
  6366  0245                     u2461:
  6367  0245  2A64               	goto	l1164
  6368  0246                     u2460:
  6369  0246                     l3044:
  6370                           
  6371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  6372  0246  09CE               	comf	dtoa@n,f
  6373  0247  09CF               	comf	dtoa@n+1,f
  6374  0248  09D0               	comf	dtoa@n+2,f
  6375  0249  09D1               	comf	dtoa@n+3,f
  6376  024A  09D2               	comf	dtoa@n+4,f
  6377  024B  09D3               	comf	dtoa@n+5,f
  6378  024C  09D4               	comf	dtoa@n+6,f
  6379  024D  09D5               	comf	dtoa@n+7,f
  6380  024E  0ACE               	incf	dtoa@n,f
  6381  024F  1D03               	skipz
  6382  0250  2A64               	goto	u247lld
  6383  0251  0ACF               	incf	dtoa@n+1,f
  6384  0252  1D03               	skipz
  6385  0253  2A64               	goto	u247lld
  6386  0254  0AD0               	incf	dtoa@n+2,f
  6387  0255  1D03               	skipz
  6388  0256  2A64               	goto	u247lld
  6389  0257  0AD1               	incf	dtoa@n+3,f
  6390  0258  1D03               	skipz
  6391  0259  2A64               	goto	u247lld
  6392  025A  0AD2               	incf	dtoa@n+4,f
  6393  025B  1D03               	skipz
  6394  025C  2A64               	goto	u247lld
  6395  025D  0AD3               	incf	dtoa@n+5,f
  6396  025E  1D03               	skipz
  6397  025F  2A64               	goto	u247lld
  6398  0260  0AD4               	incf	dtoa@n+6,f
  6399  0261  1D03               	skipz
  6400  0262  2A64               	goto	u247lld
  6401  0263  0AD5               	incf	dtoa@n+7,f
  6402  0264                     u247lld:
  6403  0264                     l1164:	
  6404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 284:     }
  6405                           
  6406                           
  6407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  6408  0264  0022               	movlb	2	; select bank2
  6409  0265  1BEC               	btfsc	(_prec+1)^(0+256),7
  6410  0266  2A68               	goto	u2481
  6411  0267  2A69               	goto	u2480
  6412  0268                     u2481:
  6413  0268  2A6D               	goto	l1165
  6414  0269                     u2480:
  6415  0269                     l3046:
  6416                           
  6417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  6418  0269  30FD               	movlw	253
  6419  026A  05ED               	andwf	_flags^(0+256),f
  6420  026B  30FF               	movlw	255
  6421  026C  05EE               	andwf	(_flags+1)^(0+256),f
  6422  026D                     l1165:	
  6423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 289:     }
  6424                           
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  6427  026D  086C               	movf	(_prec+1)^(0+256),w
  6428  026E  3A80               	xorlw	128
  6429  026F  0020               	movlb	0	; select bank0
  6430  0270  00C2               	movwf	??_dtoa
  6431  0271  3080               	movlw	128
  6432  0272  0242               	subwf	??_dtoa,w
  6433  0273  1D03               	skipz
  6434  0274  2A78               	goto	u2495
  6435  0275  3001               	movlw	1
  6436  0276  0022               	movlb	2	; select bank2
  6437  0277  026B               	subwf	_prec^(0+256),w
  6438  0278                     u2495:
  6439  0278  1803               	skipnc
  6440  0279  2A7B               	goto	u2491
  6441  027A  2A7C               	goto	u2490
  6442  027B                     u2491:
  6443  027B  2A82               	goto	l3050
  6444  027C                     u2490:
  6445  027C                     l3048:
  6446  027C  3001               	movlw	1
  6447  027D  0020               	movlb	0	; select bank0
  6448  027E  00C8               	movwf	dtoa@p
  6449  027F  3000               	movlw	0
  6450  0280  00C9               	movwf	dtoa@p+1
  6451  0281  2A8A               	goto	l1169
  6452  0282                     l3050:
  6453  0282  0022               	movlb	2	; select bank2
  6454  0283  086C               	movf	(_prec+1)^(0+256),w
  6455  0284  0020               	movlb	0	; select bank0
  6456  0285  00C9               	movwf	dtoa@p+1
  6457  0286  0022               	movlb	2	; select bank2
  6458  0287  086B               	movf	_prec^(0+256),w
  6459  0288  0020               	movlb	0	; select bank0
  6460  0289  00C8               	movwf	dtoa@p
  6461  028A                     l1169:
  6462                           
  6463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  6464  028A  0022               	movlb	2	; select bank2
  6465  028B  086A               	movf	(_width+1)^(0+256),w
  6466  028C  0020               	movlb	0	; select bank0
  6467  028D  00CB               	movwf	dtoa@w+1
  6468  028E  0022               	movlb	2	; select bank2
  6469  028F  0869               	movf	_width^(0+256),w
  6470  0290  0020               	movlb	0	; select bank0
  6471  0291  00CA               	movwf	dtoa@w
  6472  0292                     l3052:
  6473                           
  6474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  6475  0292  084C               	movf	dtoa@s,w
  6476  0293  044D               	iorwf	dtoa@s+1,w
  6477  0294  1D03               	btfss	3,2
  6478  0295  2A97               	goto	u2501
  6479  0296  2A98               	goto	u2500
  6480  0297                     u2501:
  6481  0297  2A9D               	goto	l3056
  6482  0298                     u2500:
  6483  0298                     l3054:
  6484  0298  0022               	movlb	2	; select bank2
  6485  0299  1D6D               	btfss	_flags^(0+256),2
  6486  029A  2A9C               	goto	u2511
  6487  029B  2A9D               	goto	u2510
  6488  029C                     u2511:
  6489  029C  2AA2               	goto	l1170
  6490  029D                     u2510:
  6491  029D                     l3056:
  6492                           
  6493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  6494  029D  30FF               	movlw	255
  6495  029E  0020               	movlb	0	; select bank0
  6496  029F  07CA               	addwf	dtoa@w,f
  6497  02A0  30FF               	movlw	255
  6498  02A1  3DCB               	addwfc	dtoa@w+1,f
  6499  02A2                     l1170:	
  6500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 294:     }
  6501                           
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  6504  02A2  301F               	movlw	31
  6505  02A3  0020               	movlb	0	; select bank0
  6506  02A4  00D6               	movwf	dtoa@i
  6507  02A5  3000               	movlw	0
  6508  02A6  00D7               	movwf	dtoa@i+1
  6509  02A7                     l3058:
  6510                           
  6511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  6512  02A7  0023               	movlb	3	; select bank3
  6513  02A8  01E5               	clrf	(_dbuf^(0+384)+31)
  6514                           
  6515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6516  02A9  2B13               	goto	l1173
  6517  02AA                     l3060:
  6518                           
  6519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  6520  02AA  30FF               	movlw	255
  6521  02AB  0020               	movlb	0	; select bank0
  6522  02AC  07D6               	addwf	dtoa@i,f
  6523  02AD  30FF               	movlw	255
  6524  02AE  3DD7               	addwfc	dtoa@i+1,f
  6525  02AF                     l3062:
  6526                           
  6527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  6528  02AF  300A               	movlw	10
  6529  02B0  00A0               	movwf	___aomod@divisor
  6530  02B1  01A1               	clrf	___aomod@divisor+1
  6531  02B2  01A2               	clrf	___aomod@divisor+2
  6532  02B3  01A3               	clrf	___aomod@divisor+3
  6533  02B4  01A4               	clrf	___aomod@divisor+4
  6534  02B5  01A5               	clrf	___aomod@divisor+5
  6535  02B6  01A6               	clrf	___aomod@divisor+6
  6536  02B7  01A7               	clrf	___aomod@divisor+7
  6537  02B8  084E               	movf	dtoa@n,w
  6538  02B9  00A8               	movwf	___aomod@dividend
  6539  02BA  084F               	movf	dtoa@n+1,w
  6540  02BB  00A9               	movwf	___aomod@dividend+1
  6541  02BC  0850               	movf	dtoa@n+2,w
  6542  02BD  00AA               	movwf	___aomod@dividend+2
  6543  02BE  0851               	movf	dtoa@n+3,w
  6544  02BF  00AB               	movwf	___aomod@dividend+3
  6545  02C0  0852               	movf	dtoa@n+4,w
  6546  02C1  00AC               	movwf	___aomod@dividend+4
  6547  02C2  0853               	movf	dtoa@n+5,w
  6548  02C3  00AD               	movwf	___aomod@dividend+5
  6549  02C4  0854               	movf	dtoa@n+6,w
  6550  02C5  00AE               	movwf	___aomod@dividend+6
  6551  02C6  0855               	movf	dtoa@n+7,w
  6552  02C7  00AF               	movwf	___aomod@dividend+7
  6553  02C8  3185  25C2  3182   	fcall	___aomod
  6554  02CB  0020               	movlb	0	; select bank0
  6555  02CC  0821               	movf	?___aomod+1,w
  6556  02CD  00F7               	movwf	abs@a+1
  6557  02CE  0820               	movf	?___aomod,w
  6558  02CF  00F6               	movwf	abs@a
  6559  02D0  318C  2482  3182   	fcall	_abs
  6560  02D3  0876               	movf	?_abs,w
  6561  02D4  3E30               	addlw	48
  6562  02D5  0020               	movlb	0	; select bank0
  6563  02D6  00C2               	movwf	??_dtoa
  6564  02D7  0856               	movf	dtoa@i,w
  6565  02D8  3EC6               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6566  02D9  0086               	movwf	6
  6567  02DA  3001               	movlw	1	; select bank3/4
  6568  02DB  0087               	movwf	7
  6569  02DC  0842               	movf	??_dtoa,w
  6570  02DD  0081               	movwf	1
  6571  02DE                     l3064:
  6572                           
  6573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  6574  02DE  30FF               	movlw	255
  6575  02DF  07C8               	addwf	dtoa@p,f
  6576  02E0  30FF               	movlw	255
  6577  02E1  3DC9               	addwfc	dtoa@p+1,f
  6578  02E2                     l3066:
  6579                           
  6580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  6581  02E2  30FF               	movlw	255
  6582  02E3  07CA               	addwf	dtoa@w,f
  6583  02E4  30FF               	movlw	255
  6584  02E5  3DCB               	addwfc	dtoa@w+1,f
  6585  02E6                     l3068:
  6586                           
  6587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  6588  02E6  300A               	movlw	10
  6589  02E7  00A0               	movwf	___aodiv@divisor
  6590  02E8  01A1               	clrf	___aodiv@divisor+1
  6591  02E9  01A2               	clrf	___aodiv@divisor+2
  6592  02EA  01A3               	clrf	___aodiv@divisor+3
  6593  02EB  01A4               	clrf	___aodiv@divisor+4
  6594  02EC  01A5               	clrf	___aodiv@divisor+5
  6595  02ED  01A6               	clrf	___aodiv@divisor+6
  6596  02EE  01A7               	clrf	___aodiv@divisor+7
  6597  02EF  084E               	movf	dtoa@n,w
  6598  02F0  00A8               	movwf	___aodiv@dividend
  6599  02F1  084F               	movf	dtoa@n+1,w
  6600  02F2  00A9               	movwf	___aodiv@dividend+1
  6601  02F3  0850               	movf	dtoa@n+2,w
  6602  02F4  00AA               	movwf	___aodiv@dividend+2
  6603  02F5  0851               	movf	dtoa@n+3,w
  6604  02F6  00AB               	movwf	___aodiv@dividend+3
  6605  02F7  0852               	movf	dtoa@n+4,w
  6606  02F8  00AC               	movwf	___aodiv@dividend+4
  6607  02F9  0853               	movf	dtoa@n+5,w
  6608  02FA  00AD               	movwf	___aodiv@dividend+5
  6609  02FB  0854               	movf	dtoa@n+6,w
  6610  02FC  00AE               	movwf	___aodiv@dividend+6
  6611  02FD  0855               	movf	dtoa@n+7,w
  6612  02FE  00AF               	movwf	___aodiv@dividend+7
  6613  02FF  3184  24BE  3182   	fcall	___aodiv
  6614  0302  0020               	movlb	0	; select bank0
  6615  0303  0820               	movf	?___aodiv,w
  6616  0304  00CE               	movwf	dtoa@n
  6617  0305  0821               	movf	?___aodiv+1,w
  6618  0306  00CF               	movwf	dtoa@n+1
  6619  0307  0822               	movf	?___aodiv+2,w
  6620  0308  00D0               	movwf	dtoa@n+2
  6621  0309  0823               	movf	?___aodiv+3,w
  6622  030A  00D1               	movwf	dtoa@n+3
  6623  030B  0824               	movf	?___aodiv+4,w
  6624  030C  00D2               	movwf	dtoa@n+4
  6625  030D  0825               	movf	?___aodiv+5,w
  6626  030E  00D3               	movwf	dtoa@n+5
  6627  030F  0826               	movf	?___aodiv+6,w
  6628  0310  00D4               	movwf	dtoa@n+6
  6629  0311  0827               	movf	?___aodiv+7,w
  6630  0312  00D5               	movwf	dtoa@n+7
  6631  0313                     l1173:	
  6632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 305:     }
  6633                           
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6636  0313  0020               	movlb	0	; select bank0
  6637  0314  0857               	movf	dtoa@i+1,w
  6638  0315  3A80               	xorlw	128
  6639  0316  00C2               	movwf	??_dtoa
  6640  0317  3080               	movlw	128
  6641  0318  0242               	subwf	??_dtoa,w
  6642  0319  1D03               	skipz
  6643  031A  2B1D               	goto	u2525
  6644  031B  3001               	movlw	1
  6645  031C  0256               	subwf	dtoa@i,w
  6646  031D                     u2525:
  6647  031D  1C03               	skipc
  6648  031E  2B20               	goto	u2521
  6649  031F  2B21               	goto	u2520
  6650  0320                     u2521:
  6651  0320  2B4E               	goto	l3078
  6652  0321                     u2520:
  6653  0321                     l3070:
  6654  0321  0020               	movlb	0	; select bank0
  6655  0322  084E               	movf	dtoa@n,w
  6656  0323  044F               	iorwf	dtoa@n+1,w
  6657  0324  0450               	iorwf	dtoa@n+2,w
  6658  0325  0451               	iorwf	dtoa@n+3,w
  6659  0326  0452               	iorwf	dtoa@n+4,w
  6660  0327  0453               	iorwf	dtoa@n+5,w
  6661  0328  0454               	iorwf	dtoa@n+6,w
  6662  0329  0455               	iorwf	dtoa@n+7,w
  6663  032A  1D03               	skipz
  6664  032B  2B2D               	goto	u2531
  6665  032C  2B2E               	goto	u2530
  6666  032D                     u2531:
  6667  032D  2AAA               	goto	l3060
  6668  032E                     u2530:
  6669  032E                     l3072:
  6670  032E  0849               	movf	dtoa@p+1,w
  6671  032F  3A80               	xorlw	128
  6672  0330  00C2               	movwf	??_dtoa
  6673  0331  3080               	movlw	128
  6674  0332  0242               	subwf	??_dtoa,w
  6675  0333  1D03               	skipz
  6676  0334  2B37               	goto	u2545
  6677  0335  3001               	movlw	1
  6678  0336  0248               	subwf	dtoa@p,w
  6679  0337                     u2545:
  6680  0337  1803               	skipnc
  6681  0338  2B3A               	goto	u2541
  6682  0339  2B3B               	goto	u2540
  6683  033A                     u2541:
  6684  033A  2AAA               	goto	l3060
  6685  033B                     u2540:
  6686  033B                     l3074:
  6687  033B  0020               	movlb	0	; select bank0
  6688  033C  084B               	movf	dtoa@w+1,w
  6689  033D  3A80               	xorlw	128
  6690  033E  00C2               	movwf	??_dtoa
  6691  033F  3080               	movlw	128
  6692  0340  0242               	subwf	??_dtoa,w
  6693  0341  1D03               	skipz
  6694  0342  2B45               	goto	u2555
  6695  0343  3001               	movlw	1
  6696  0344  024A               	subwf	dtoa@w,w
  6697  0345                     u2555:
  6698  0345  1C03               	skipc
  6699  0346  2B48               	goto	u2551
  6700  0347  2B49               	goto	u2550
  6701  0348                     u2551:
  6702  0348  2B4E               	goto	l3078
  6703  0349                     u2550:
  6704  0349                     l3076:
  6705  0349  0022               	movlb	2	; select bank2
  6706  034A  18ED               	btfsc	_flags^(0+256),1
  6707  034B  2B4D               	goto	u2561
  6708  034C  2B4E               	goto	u2560
  6709  034D                     u2561:
  6710  034D  2AAA               	goto	l3060
  6711  034E                     u2560:
  6712  034E                     l3078:
  6713                           
  6714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  6715  034E  0020               	movlb	0	; select bank0
  6716  034F  084C               	movf	dtoa@s,w
  6717  0350  044D               	iorwf	dtoa@s+1,w
  6718  0351  1D03               	btfss	3,2
  6719  0352  2B54               	goto	u2571
  6720  0353  2B55               	goto	u2570
  6721  0354                     u2571:
  6722  0354  2B5A               	goto	l3082
  6723  0355                     u2570:
  6724  0355                     l3080:
  6725  0355  0022               	movlb	2	; select bank2
  6726  0356  1D6D               	btfss	_flags^(0+256),2
  6727  0357  2B59               	goto	u2581
  6728  0358  2B5A               	goto	u2580
  6729  0359                     u2581:
  6730  0359  2B77               	goto	l3092
  6731  035A                     u2580:
  6732  035A                     l3082:
  6733                           
  6734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  6735  035A  30FF               	movlw	255
  6736  035B  0020               	movlb	0	; select bank0
  6737  035C  07D6               	addwf	dtoa@i,f
  6738  035D  30FF               	movlw	255
  6739  035E  3DD7               	addwfc	dtoa@i+1,f
  6740  035F                     l3084:
  6741                           
  6742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  6743  035F  084C               	movf	dtoa@s,w
  6744  0360  044D               	iorwf	dtoa@s+1,w
  6745  0361  1D03               	btfss	3,2
  6746  0362  2B64               	goto	u2591
  6747  0363  2B65               	goto	u2590
  6748  0364                     u2591:
  6749  0364  2B6A               	goto	l3088
  6750  0365                     u2590:
  6751  0365                     l3086:
  6752  0365  302B               	movlw	43
  6753  0366  00C6               	movwf	_dtoa$1470
  6754  0367  3000               	movlw	0
  6755  0368  00C7               	movwf	_dtoa$1470+1
  6756  0369  2B6E               	goto	l3090
  6757  036A                     l3088:
  6758  036A  302D               	movlw	45
  6759  036B  00C6               	movwf	_dtoa$1470
  6760  036C  3000               	movlw	0
  6761  036D  00C7               	movwf	_dtoa$1470+1
  6762  036E                     l3090:
  6763  036E  0846               	movf	_dtoa$1470,w
  6764  036F  00C2               	movwf	??_dtoa
  6765  0370  0856               	movf	dtoa@i,w
  6766  0371  3EC6               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6767  0372  0086               	movwf	6
  6768  0373  3001               	movlw	1	; select bank3/4
  6769  0374  0087               	movwf	7
  6770  0375  0842               	movf	??_dtoa,w
  6771  0376  0081               	movwf	1
  6772  0377                     l3092:
  6773                           
  6774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  6775  0377  0020               	movlb	0	; select bank0
  6776  0378  0856               	movf	dtoa@i,w
  6777  0379  3EC6               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6778  037A  00C2               	movwf	??_dtoa
  6779  037B  0842               	movf	??_dtoa,w
  6780  037C  00AD               	movwf	pad@buf
  6781  037D  084B               	movf	dtoa@w+1,w
  6782  037E  00AF               	movwf	pad@p+1
  6783  037F  084A               	movf	dtoa@w,w
  6784  0380  00AE               	movwf	pad@p
  6785  0381  0845               	movf	dtoa@fp,w
  6786  0382  318E  26D1  3182   	fcall	_pad
  6787  0385  0020               	movlb	0	; select bank0
  6788  0386  082E               	movf	?_pad+1,w
  6789  0387  00BB               	movwf	?_dtoa+1
  6790  0388  082D               	movf	?_pad,w
  6791  0389  00BA               	movwf	?_dtoa
  6792  038A                     l1187:
  6793  038A  0008               	return
  6794  038B                     __end_of_dtoa:
  6795                           
  6796                           	psect	text5
  6797  0ED1                     __ptext5:	
  6798 ;; *************** function _pad *****************
  6799 ;; Defined at:
  6800 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  fp              1    wreg     PTR struct _IO_FILE
  6803 ;;		 -> sprintf@f(5), 
  6804 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  6805 ;;		 -> dbuf(32), 
  6806 ;;  p               2   14[BANK0 ] int 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  6809 ;;		 -> sprintf@f(5), 
  6810 ;;  w               2   19[BANK0 ] int 
  6811 ;;  i               2   17[BANK0 ] int 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2   13[BANK0 ] int 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6821 ;;      Params:         0       3       0       0       0       0       0       0
  6822 ;;      Locals:         0       5       0       0       0       0       0       0
  6823 ;;      Temps:          0       1       0       0       0       0       0       0
  6824 ;;      Totals:         0       9       0       0       0       0       0       0
  6825 ;;Total ram usage:        9 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    8
  6828 ;; This function calls:
  6829 ;;		_fputc
  6830 ;;		_fputs
  6831 ;;		_strlen
  6832 ;; This function is called by:
  6833 ;;		_dtoa
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function _pad
  6839  0ED1                     _pad:
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6843                           ;pad@fp stored from wreg
  6844  0ED1  0020               	movlb	0	; select bank0
  6845  0ED2  00B5               	movwf	pad@fp
  6846  0ED3                     l3004:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6849  0ED3  0022               	movlb	2	; select bank2
  6850  0ED4  1C6D               	btfss	_flags^(0+256),0
  6851  0ED5  2ED7               	goto	u2381
  6852  0ED6  2ED8               	goto	u2380
  6853  0ED7                     u2381:
  6854  0ED7  2EE1               	goto	l3008
  6855  0ED8                     u2380:
  6856  0ED8                     l3006:
  6857                           
  6858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6859  0ED8  0020               	movlb	0	; select bank0
  6860  0ED9  0835               	movf	pad@fp,w
  6861  0EDA  00B0               	movwf	??_pad
  6862  0EDB  0830               	movf	??_pad,w
  6863  0EDC  00A5               	movwf	fputs@fp
  6864  0EDD  082D               	movf	pad@buf,w
  6865  0EDE  318C  24C0  318E   	fcall	_fputs
  6866  0EE1                     l3008:
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6869  0EE1  0020               	movlb	0	; select bank0
  6870  0EE2  1BAF               	btfsc	pad@p+1,7
  6871  0EE3  2EE5               	goto	u2391
  6872  0EE4  2EE6               	goto	u2390
  6873  0EE5                     u2391:
  6874  0EE5  2EEB               	goto	l3012
  6875  0EE6                     u2390:
  6876  0EE6                     l3010:
  6877  0EE6  082F               	movf	pad@p+1,w
  6878  0EE7  00B4               	movwf	pad@w+1
  6879  0EE8  082E               	movf	pad@p,w
  6880  0EE9  00B3               	movwf	pad@w
  6881  0EEA  2EED               	goto	l1156
  6882  0EEB                     l3012:
  6883  0EEB  01B3               	clrf	pad@w
  6884  0EEC  01B4               	clrf	pad@w+1
  6885  0EED                     l1156:
  6886                           
  6887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6888  0EED  01B1               	clrf	pad@i
  6889  0EEE  01B2               	clrf	pad@i+1
  6890                           
  6891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6892  0EEF  2F01               	goto	l3018
  6893  0EF0                     l3014:
  6894                           
  6895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6896  0EF0  3020               	movlw	32
  6897  0EF1  00F5               	movwf	fputc@c
  6898  0EF2  3000               	movlw	0
  6899  0EF3  00F6               	movwf	fputc@c+1
  6900  0EF4  0020               	movlb	0	; select bank0
  6901  0EF5  0835               	movf	pad@fp,w
  6902  0EF6  00B0               	movwf	??_pad
  6903  0EF7  0830               	movf	??_pad,w
  6904  0EF8  00F7               	movwf	fputc@fp
  6905  0EF9  318E  267F  318E   	fcall	_fputc
  6906  0EFC                     l3016:
  6907                           
  6908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6909  0EFC  3001               	movlw	1
  6910  0EFD  0020               	movlb	0	; select bank0
  6911  0EFE  07B1               	addwf	pad@i,f
  6912  0EFF  3000               	movlw	0
  6913  0F00  3DB2               	addwfc	pad@i+1,f
  6914  0F01                     l3018:
  6915                           
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6917  0F01  0832               	movf	pad@i+1,w
  6918  0F02  3A80               	xorlw	128
  6919  0F03  00B0               	movwf	??_pad
  6920  0F04  0834               	movf	pad@w+1,w
  6921  0F05  3A80               	xorlw	128
  6922  0F06  0230               	subwf	??_pad,w
  6923  0F07  1D03               	skipz
  6924  0F08  2F0B               	goto	u2405
  6925  0F09  0833               	movf	pad@w,w
  6926  0F0A  0231               	subwf	pad@i,w
  6927  0F0B                     u2405:
  6928  0F0B  1C03               	skipc
  6929  0F0C  2F0E               	goto	u2401
  6930  0F0D  2F0F               	goto	u2400
  6931  0F0E                     u2401:
  6932  0F0E  2EF0               	goto	l3014
  6933  0F0F                     u2400:
  6934  0F0F                     l1159:
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6937  0F0F  0022               	movlb	2	; select bank2
  6938  0F10  186D               	btfsc	_flags^(0+256),0
  6939  0F11  2F13               	goto	u2411
  6940  0F12  2F14               	goto	u2410
  6941  0F13                     u2411:
  6942  0F13  2F1D               	goto	l3022
  6943  0F14                     u2410:
  6944  0F14                     l3020:
  6945                           
  6946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6947  0F14  0020               	movlb	0	; select bank0
  6948  0F15  0835               	movf	pad@fp,w
  6949  0F16  00B0               	movwf	??_pad
  6950  0F17  0830               	movf	??_pad,w
  6951  0F18  00A5               	movwf	fputs@fp
  6952  0F19  082D               	movf	pad@buf,w
  6953  0F1A  318C  24C0  318E   	fcall	_fputs
  6954  0F1D                     l3022:
  6955                           
  6956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  6957  0F1D  0020               	movlb	0	; select bank0
  6958  0F1E  082D               	movf	pad@buf,w
  6959  0F1F  318C  2468  318E   	fcall	_strlen
  6960  0F22  0020               	movlb	0	; select bank0
  6961  0F23  0833               	movf	pad@w,w
  6962  0F24  0773               	addwf	?_strlen,w
  6963  0F25  00AD               	movwf	?_pad
  6964  0F26  0834               	movf	pad@w+1,w
  6965  0F27  3D74               	addwfc	?_strlen+1,w
  6966  0F28  00AE               	movwf	?_pad+1
  6967  0F29                     l1161:
  6968  0F29  0008               	return
  6969  0F2A                     __end_of_pad:
  6970                           
  6971                           	psect	text6
  6972  0C68                     __ptext6:	
  6973 ;; *************** function _strlen *****************
  6974 ;; Defined at:
  6975 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  s               1    wreg     PTR const unsigned char 
  6978 ;;		 -> dbuf(32), 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  s               1    7[COMMON] PTR const unsigned char 
  6981 ;;		 -> dbuf(32), 
  6982 ;;  a               1    6[COMMON] PTR const unsigned char 
  6983 ;;		 -> dbuf(32), 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  2    3[COMMON] unsigned int 
  6986 ;; Registers used:
  6987 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6993 ;;      Params:         2       0       0       0       0       0       0       0
  6994 ;;      Locals:         2       0       0       0       0       0       0       0
  6995 ;;      Temps:          1       0       0       0       0       0       0       0
  6996 ;;      Totals:         5       0       0       0       0       0       0       0
  6997 ;;Total ram usage:        5 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    4
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_pad
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _strlen
  7009  0C68                     _strlen:
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7013                           ;strlen@s stored from wreg
  7014  0C68  00F7               	movwf	strlen@s
  7015  0C69                     l2910:
  7016  0C69  0877               	movf	strlen@s,w
  7017  0C6A  00F5               	movwf	??_strlen
  7018  0C6B  0875               	movf	??_strlen,w
  7019  0C6C  00F6               	movwf	strlen@a
  7020  0C6D  2C72               	goto	l2914
  7021  0C6E                     l2912:
  7022  0C6E  3001               	movlw	1
  7023  0C6F  00F5               	movwf	??_strlen
  7024  0C70  0875               	movf	??_strlen,w
  7025  0C71  07F7               	addwf	strlen@s,f
  7026  0C72                     l2914:
  7027  0C72  0877               	movf	strlen@s,w
  7028  0C73  0086               	movwf	6
  7029  0C74  3001               	movlw	1	; select bank2/3
  7030  0C75  0087               	movwf	7
  7031  0C76  0801               	movf	1,w
  7032  0C77  1D03               	btfss	3,2
  7033  0C78  2C7A               	goto	u2151
  7034  0C79  2C7B               	goto	u2150
  7035  0C7A                     u2151:
  7036  0C7A  2C6E               	goto	l2912
  7037  0C7B                     u2150:
  7038  0C7B                     l2916:
  7039  0C7B  0876               	movf	strlen@a,w
  7040  0C7C  0277               	subwf	strlen@s,w
  7041  0C7D  00F3               	movwf	?_strlen
  7042  0C7E  01F4               	clrf	?_strlen+1
  7043  0C7F  1BF3               	btfsc	?_strlen,7
  7044  0C80  03F4               	decf	?_strlen+1,f
  7045  0C81                     l1234:
  7046  0C81  0008               	return
  7047  0C82                     __end_of_strlen:
  7048                           
  7049                           	psect	text7
  7050  0CC0                     __ptext7:	
  7051 ;; *************** function _fputs *****************
  7052 ;; Defined at:
  7053 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  s               1    wreg     PTR const unsigned char 
  7056 ;;		 -> dbuf(32), 
  7057 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7058 ;;		 -> sprintf@f(5), 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  7061 ;;		 -> dbuf(32), 
  7062 ;;  i               2   10[BANK0 ] int 
  7063 ;;  c               1    9[BANK0 ] unsigned char 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  2    5[BANK0 ] int 
  7066 ;; Registers used:
  7067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7073 ;;      Params:         0       1       0       0       0       0       0       0
  7074 ;;      Locals:         0       4       0       0       0       0       0       0
  7075 ;;      Temps:          0       3       0       0       0       0       0       0
  7076 ;;      Totals:         0       8       0       0       0       0       0       0
  7077 ;;Total ram usage:        8 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; Hardware stack levels required when called:    7
  7080 ;; This function calls:
  7081 ;;		_fputc
  7082 ;; This function is called by:
  7083 ;;		_pad
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           
  7088                           ;psect for function _fputs
  7089  0CC0                     _fputs:
  7090                           
  7091                           ;incstack = 0
  7092                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7093                           ;fputs@s stored from wreg
  7094  0CC0  0020               	movlb	0	; select bank0
  7095  0CC1  00AC               	movwf	fputs@s
  7096  0CC2                     l2902:
  7097  0CC2  01AA               	clrf	fputs@i
  7098  0CC3  01AB               	clrf	fputs@i+1
  7099  0CC4  2CD8               	goto	l2908
  7100  0CC5                     l2904:
  7101  0CC5  0829               	movf	fputs@c,w
  7102  0CC6  00A6               	movwf	??_fputs
  7103  0CC7  01A7               	clrf	??_fputs+1
  7104  0CC8  0826               	movf	??_fputs,w
  7105  0CC9  00F5               	movwf	fputc@c
  7106  0CCA  0827               	movf	??_fputs+1,w
  7107  0CCB  00F6               	movwf	fputc@c+1
  7108  0CCC  0825               	movf	fputs@fp,w
  7109  0CCD  00A8               	movwf	??_fputs+2
  7110  0CCE  0828               	movf	??_fputs+2,w
  7111  0CCF  00F7               	movwf	fputc@fp
  7112  0CD0  318E  267F  318C   	fcall	_fputc
  7113  0CD3                     l2906:
  7114  0CD3  3001               	movlw	1
  7115  0CD4  0020               	movlb	0	; select bank0
  7116  0CD5  07AA               	addwf	fputs@i,f
  7117  0CD6  3000               	movlw	0
  7118  0CD7  3DAB               	addwfc	fputs@i+1,f
  7119  0CD8                     l2908:
  7120  0CD8  082A               	movf	fputs@i,w
  7121  0CD9  072C               	addwf	fputs@s,w
  7122  0CDA  00A6               	movwf	??_fputs
  7123  0CDB  0826               	movf	??_fputs,w
  7124  0CDC  0086               	movwf	6
  7125  0CDD  3001               	movlw	1	; select bank2/3
  7126  0CDE  0087               	movwf	7
  7127  0CDF  0801               	movf	1,w
  7128  0CE0  00A7               	movwf	??_fputs+1
  7129  0CE1  0827               	movf	??_fputs+1,w
  7130  0CE2  00A9               	movwf	fputs@c
  7131  0CE3  0829               	movf	fputs@c,w
  7132  0CE4  1D03               	btfss	3,2
  7133  0CE5  2CE7               	goto	u2141
  7134  0CE6  2CE8               	goto	u2140
  7135  0CE7                     u2141:
  7136  0CE7  2CC5               	goto	l2904
  7137  0CE8                     u2140:
  7138  0CE8                     l1228:
  7139  0CE8  0008               	return
  7140  0CE9                     __end_of_fputs:
  7141                           
  7142                           	psect	text8
  7143  0E7F                     __ptext8:	
  7144 ;; *************** function _fputc *****************
  7145 ;; Defined at:
  7146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  c               2    5[COMMON] int 
  7149 ;;  fp              1    7[COMMON] PTR struct _IO_FILE
  7150 ;;		 -> sprintf@f(5), 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  2    5[COMMON] int 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7162 ;;      Params:         3       0       0       0       0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0
  7164 ;;      Temps:          0       5       0       0       0       0       0       0
  7165 ;;      Totals:         3       5       0       0       0       0       0       0
  7166 ;;Total ram usage:        8 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    6
  7169 ;; This function calls:
  7170 ;;		_putch
  7171 ;; This function is called by:
  7172 ;;		_pad
  7173 ;;		_vfpfcnvrt
  7174 ;;		_fputs
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           
  7179                           ;psect for function _fputc
  7180  0E7F                     _fputc:
  7181  0E7F                     l2882:	
  7182                           ;incstack = 0
  7183                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7184                           
  7185  0E7F  0877               	movf	fputc@fp,w
  7186  0E80  1903               	btfsc	3,2
  7187  0E81  2E83               	goto	u2081
  7188  0E82  2E84               	goto	u2080
  7189  0E83                     u2081:
  7190  0E83  2E89               	goto	l2886
  7191  0E84                     u2080:
  7192  0E84                     l2884:
  7193  0E84  0877               	movf	fputc@fp,w
  7194  0E85  1D03               	btfss	3,2
  7195  0E86  2E88               	goto	u2091
  7196  0E87  2E89               	goto	u2090
  7197  0E88                     u2091:
  7198  0E88  2E8E               	goto	l2888
  7199  0E89                     u2090:
  7200  0E89                     l2886:
  7201  0E89  0875               	movf	fputc@c,w
  7202  0E8A  318B  236C  318E   	fcall	_putch
  7203  0E8D  2ED0               	goto	l1220
  7204  0E8E                     l2888:
  7205  0E8E  0877               	movf	fputc@fp,w
  7206  0E8F  3E03               	addlw	3
  7207  0E90  0086               	movwf	6
  7208  0E91  0187               	clrf	7
  7209  0E92  0016               	moviw fsr1++
  7210  0E93  0401               	iorwf	1,w
  7211  0E94  1903               	btfsc	3,2
  7212  0E95  2E97               	goto	u2101
  7213  0E96  2E98               	goto	u2100
  7214  0E97                     u2101:
  7215  0E97  2EB6               	goto	l2892
  7216  0E98                     u2100:
  7217  0E98                     l2890:
  7218  0E98  0877               	movf	fputc@fp,w
  7219  0E99  3E03               	addlw	3
  7220  0E9A  0086               	movwf	6
  7221  0E9B  0187               	clrf	7
  7222  0E9C  3F40               	moviw [0]fsr1
  7223  0E9D  0020               	movlb	0	; select bank0
  7224  0E9E  00A0               	movwf	??_fputc
  7225  0E9F  3F41               	moviw [1]fsr1
  7226  0EA0  00A1               	movwf	??_fputc+1
  7227  0EA1  0A77               	incf	fputc@fp,w
  7228  0EA2  0086               	movwf	6
  7229  0EA3  0187               	clrf	7
  7230  0EA4  3F40               	moviw [0]fsr1
  7231  0EA5  00A2               	movwf	??_fputc+2
  7232  0EA6  3F41               	moviw [1]fsr1
  7233  0EA7  00A3               	movwf	??_fputc+3
  7234  0EA8  0823               	movf	??_fputc+3,w
  7235  0EA9  3A80               	xorlw	128
  7236  0EAA  00A4               	movwf	??_fputc+4
  7237  0EAB  0821               	movf	??_fputc+1,w
  7238  0EAC  3A80               	xorlw	128
  7239  0EAD  0224               	subwf	??_fputc+4,w
  7240  0EAE  1D03               	skipz
  7241  0EAF  2EB2               	goto	u2115
  7242  0EB0  0820               	movf	??_fputc,w
  7243  0EB1  0222               	subwf	??_fputc+2,w
  7244  0EB2                     u2115:
  7245  0EB2  1803               	skipnc
  7246  0EB3  2EB5               	goto	u2111
  7247  0EB4  2EB6               	goto	u2110
  7248  0EB5                     u2111:
  7249  0EB5  2ED0               	goto	l1220
  7250  0EB6                     u2110:
  7251  0EB6                     l2892:
  7252  0EB6  0875               	movf	fputc@c,w
  7253  0EB7  0020               	movlb	0	; select bank0
  7254  0EB8  00A0               	movwf	??_fputc
  7255  0EB9  0877               	movf	fputc@fp,w
  7256  0EBA  0086               	movwf	6
  7257  0EBB  0187               	clrf	7
  7258  0EBC  0A77               	incf	fputc@fp,w
  7259  0EBD  0084               	movwf	4
  7260  0EBE  0185               	clrf	5
  7261  0EBF  0800               	movf	0,w
  7262  0EC0  0701               	addwf	1,w
  7263  0EC1  00A1               	movwf	??_fputc+1
  7264  0EC2  0821               	movf	??_fputc+1,w
  7265  0EC3  0086               	movwf	6
  7266  0EC4  3001               	movlw	1	; select bank2/3
  7267  0EC5  0087               	movwf	7
  7268  0EC6  0820               	movf	??_fputc,w
  7269  0EC7  0081               	movwf	1
  7270  0EC8                     l2894:
  7271  0EC8  0A77               	incf	fputc@fp,w
  7272  0EC9  0086               	movwf	6
  7273  0ECA  0187               	clrf	7
  7274  0ECB  3001               	movlw	1
  7275  0ECC  0781               	addwf	1,f
  7276  0ECD  3141               	addfsr 1,1
  7277  0ECE  1803               	skipnc
  7278  0ECF  0A81               	incf	1,f
  7279  0ED0                     l1220:
  7280  0ED0  0008               	return
  7281  0ED1                     __end_of_fputc:
  7282                           
  7283                           	psect	text9
  7284  0B6C                     __ptext9:	
  7285 ;; *************** function _putch *****************
  7286 ;; Defined at:
  7287 ;;		line 122 in file "mcc_generated_files/eusart.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  txData          1    wreg     unsigned char 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  txData          1    4[COMMON] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7301 ;;      Params:         0       0       0       0       0       0       0       0
  7302 ;;      Locals:         1       0       0       0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0
  7304 ;;      Totals:         1       0       0       0       0       0       0       0
  7305 ;;Total ram usage:        1 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    5
  7308 ;; This function calls:
  7309 ;;		_EUSART_Write
  7310 ;; This function is called by:
  7311 ;;		_fputc
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function _putch
  7317  0B6C                     _putch:
  7318                           
  7319                           ;incstack = 0
  7320                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7321                           ;putch@txData stored from wreg
  7322  0B6C  00F4               	movwf	putch@txData
  7323  0B6D                     l2880:
  7324                           
  7325                           ;mcc_generated_files/eusart.c: 122: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 123: {;mcc_generated_files/eusart.c: 124:     EUSART_Write(txData);
  7326  0B6D  0874               	movf	putch@txData,w
  7327  0B6E  318B  238A  318B   	fcall	_EUSART_Write
  7328  0B71                     l96:
  7329  0B71  0008               	return
  7330  0B72                     __end_of_putch:
  7331                           
  7332                           	psect	text10
  7333  0B8A                     __ptext10:	
  7334 ;; *************** function _EUSART_Write *****************
  7335 ;; Defined at:
  7336 ;;		line 108 in file "mcc_generated_files/eusart.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  txData          1    wreg     unsigned char 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  txData          1    3[COMMON] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7350 ;;      Params:         0       0       0       0       0       0       0       0
  7351 ;;      Locals:         1       0       0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0
  7353 ;;      Totals:         1       0       0       0       0       0       0       0
  7354 ;;Total ram usage:        1 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    4
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_putch
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           
  7366                           ;psect for function _EUSART_Write
  7367  0B8A                     _EUSART_Write:
  7368                           
  7369                           ;incstack = 0
  7370                           ; Regs used in _EUSART_Write: [wreg]
  7371                           ;EUSART_Write@txData stored from wreg
  7372  0B8A  00F3               	movwf	EUSART_Write@txData
  7373  0B8B                     l2876:
  7374  0B8B                     l87:	
  7375                           ;mcc_generated_files/eusart.c: 111:     {;mcc_generated_files/eusart.c: 112:     }
  7376                           
  7377                           
  7378                           ;mcc_generated_files/eusart.c: 110:     while(0 == PIR3bits.TXIF)
  7379  0B8B  002E               	movlb	14	; select bank14
  7380  0B8C  1E0F               	btfss	15,4	;volatile
  7381  0B8D  2B8F               	goto	u2071
  7382  0B8E  2B90               	goto	u2070
  7383  0B8F                     u2071:
  7384  0B8F  2B8B               	goto	l87
  7385  0B90                     u2070:
  7386  0B90                     l2878:
  7387                           
  7388                           ;mcc_generated_files/eusart.c: 114:     TX1REG = txData;
  7389  0B90  0873               	movf	EUSART_Write@txData,w
  7390  0B91  0022               	movlb	2	; select bank2
  7391  0B92  009A               	movwf	26	;volatile
  7392  0B93                     l90:
  7393  0B93  0008               	return
  7394  0B94                     __end_of_EUSART_Write:
  7395                           
  7396                           	psect	text11
  7397  0C82                     __ptext11:	
  7398 ;; *************** function _abs *****************
  7399 ;; Defined at:
  7400 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  a               2    6[COMMON] int 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  2    6[COMMON] int 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7414 ;;      Params:         2       0       0       0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0
  7416 ;;      Temps:          0       2       0       0       0       0       0       0
  7417 ;;      Totals:         2       2       0       0       0       0       0       0
  7418 ;;Total ram usage:        4 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    4
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_dtoa
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _abs
  7430  0C82                     _abs:
  7431  0C82                     l3026:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _abs: [wreg+status,2+status,0]
  7434                           
  7435  0C82  0877               	movf	abs@a+1,w
  7436  0C83  3A80               	xorlw	128
  7437  0C84  0020               	movlb	0	; select bank0
  7438  0C85  00B0               	movwf	??_abs
  7439  0C86  3080               	movlw	128
  7440  0C87  0230               	subwf	??_abs,w
  7441  0C88  1D03               	skipz
  7442  0C89  2C8C               	goto	u2425
  7443  0C8A  3001               	movlw	1
  7444  0C8B  0276               	subwf	abs@a,w
  7445  0C8C                     u2425:
  7446  0C8C  1803               	skipnc
  7447  0C8D  2C8F               	goto	u2421
  7448  0C8E  2C90               	goto	u2420
  7449  0C8F                     u2421:
  7450  0C8F  2C9D               	goto	l1205
  7451  0C90                     u2420:
  7452  0C90                     l3028:
  7453  0C90  0976               	comf	abs@a,w
  7454  0C91  0020               	movlb	0	; select bank0
  7455  0C92  00B0               	movwf	??_abs
  7456  0C93  0977               	comf	abs@a+1,w
  7457  0C94  00B1               	movwf	??_abs+1
  7458  0C95  0AB0               	incf	??_abs,f
  7459  0C96  1903               	skipnz
  7460  0C97  0AB1               	incf	??_abs+1,f
  7461  0C98  0830               	movf	??_abs,w
  7462  0C99  00F6               	movwf	?_abs
  7463  0C9A  0831               	movf	??_abs+1,w
  7464  0C9B  00F7               	movwf	?_abs+1
  7465  0C9C  2C9D               	goto	l1208
  7466  0C9D                     l1205:
  7467  0C9D                     l1208:
  7468  0C9D  0008               	return
  7469  0C9E                     __end_of_abs:
  7470                           
  7471                           	psect	text12
  7472  05C2                     __ptext12:	
  7473 ;; *************** function ___aomod *****************
  7474 ;; Defined at:
  7475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  divisor         8    0[BANK0 ] long long 
  7478 ;;  dividend        8    8[BANK0 ] long long 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  sign            1    5[COMMON] unsigned char 
  7481 ;;  counter         1    4[COMMON] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  8    0[BANK0 ] long long 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7491 ;;      Params:         0      16       0       0       0       0       0       0
  7492 ;;      Locals:         2       0       0       0       0       0       0       0
  7493 ;;      Temps:          1       0       0       0       0       0       0       0
  7494 ;;      Totals:         3      16       0       0       0       0       0       0
  7495 ;;Total ram usage:       19 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; Hardware stack levels required when called:    4
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_dtoa
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           
  7506                           ;psect for function ___aomod
  7507  05C2                     ___aomod:
  7508  05C2                     l2974:	
  7509                           ;incstack = 0
  7510                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7511                           
  7512  05C2  01F5               	clrf	___aomod@sign
  7513  05C3                     l2976:
  7514  05C3  3028               	movlw	low ___aomod@dividend
  7515  05C4  0086               	movwf	6
  7516  05C5  3000               	movlw	high ___aomod@dividend
  7517  05C6  0087               	movwf	7
  7518  05C7  3F47               	moviw [7]fsr1
  7519  05C8  00F3               	movwf	??___aomod
  7520  05C9  1FF3               	btfss	??___aomod,7
  7521  05CA  2DCC               	goto	u2281
  7522  05CB  2DCD               	goto	u2280
  7523  05CC                     u2281:
  7524  05CC  2DEE               	goto	l2980
  7525  05CD                     u2280:
  7526  05CD                     l2978:
  7527  05CD  0020               	movlb	0	; select bank0
  7528  05CE  09A8               	comf	___aomod@dividend,f
  7529  05CF  09A9               	comf	___aomod@dividend+1,f
  7530  05D0  09AA               	comf	___aomod@dividend+2,f
  7531  05D1  09AB               	comf	___aomod@dividend+3,f
  7532  05D2  09AC               	comf	___aomod@dividend+4,f
  7533  05D3  09AD               	comf	___aomod@dividend+5,f
  7534  05D4  09AE               	comf	___aomod@dividend+6,f
  7535  05D5  09AF               	comf	___aomod@dividend+7,f
  7536  05D6  0AA8               	incf	___aomod@dividend,f
  7537  05D7  1D03               	skipz
  7538  05D8  2DEC               	goto	u229lld
  7539  05D9  0AA9               	incf	___aomod@dividend+1,f
  7540  05DA  1D03               	skipz
  7541  05DB  2DEC               	goto	u229lld
  7542  05DC  0AAA               	incf	___aomod@dividend+2,f
  7543  05DD  1D03               	skipz
  7544  05DE  2DEC               	goto	u229lld
  7545  05DF  0AAB               	incf	___aomod@dividend+3,f
  7546  05E0  1D03               	skipz
  7547  05E1  2DEC               	goto	u229lld
  7548  05E2  0AAC               	incf	___aomod@dividend+4,f
  7549  05E3  1D03               	skipz
  7550  05E4  2DEC               	goto	u229lld
  7551  05E5  0AAD               	incf	___aomod@dividend+5,f
  7552  05E6  1D03               	skipz
  7553  05E7  2DEC               	goto	u229lld
  7554  05E8  0AAE               	incf	___aomod@dividend+6,f
  7555  05E9  1D03               	skipz
  7556  05EA  2DEC               	goto	u229lld
  7557  05EB  0AAF               	incf	___aomod@dividend+7,f
  7558  05EC                     u229lld:
  7559  05EC  01F5               	clrf	___aomod@sign
  7560  05ED  0AF5               	incf	___aomod@sign,f
  7561  05EE                     l2980:
  7562  05EE  3020               	movlw	low ___aomod@divisor
  7563  05EF  0086               	movwf	6
  7564  05F0  3000               	movlw	high ___aomod@divisor
  7565  05F1  0087               	movwf	7
  7566  05F2  3F47               	moviw [7]fsr1
  7567  05F3  00F3               	movwf	??___aomod
  7568  05F4  1FF3               	btfss	??___aomod,7
  7569  05F5  2DF7               	goto	u2301
  7570  05F6  2DF8               	goto	u2300
  7571  05F7                     u2301:
  7572  05F7  2E17               	goto	l2984
  7573  05F8                     u2300:
  7574  05F8                     l2982:
  7575  05F8  0020               	movlb	0	; select bank0
  7576  05F9  09A0               	comf	___aomod@divisor,f
  7577  05FA  09A1               	comf	___aomod@divisor+1,f
  7578  05FB  09A2               	comf	___aomod@divisor+2,f
  7579  05FC  09A3               	comf	___aomod@divisor+3,f
  7580  05FD  09A4               	comf	___aomod@divisor+4,f
  7581  05FE  09A5               	comf	___aomod@divisor+5,f
  7582  05FF  09A6               	comf	___aomod@divisor+6,f
  7583  0600  09A7               	comf	___aomod@divisor+7,f
  7584  0601  0AA0               	incf	___aomod@divisor,f
  7585  0602  1D03               	skipz
  7586  0603  2E17               	goto	u231lld
  7587  0604  0AA1               	incf	___aomod@divisor+1,f
  7588  0605  1D03               	skipz
  7589  0606  2E17               	goto	u231lld
  7590  0607  0AA2               	incf	___aomod@divisor+2,f
  7591  0608  1D03               	skipz
  7592  0609  2E17               	goto	u231lld
  7593  060A  0AA3               	incf	___aomod@divisor+3,f
  7594  060B  1D03               	skipz
  7595  060C  2E17               	goto	u231lld
  7596  060D  0AA4               	incf	___aomod@divisor+4,f
  7597  060E  1D03               	skipz
  7598  060F  2E17               	goto	u231lld
  7599  0610  0AA5               	incf	___aomod@divisor+5,f
  7600  0611  1D03               	skipz
  7601  0612  2E17               	goto	u231lld
  7602  0613  0AA6               	incf	___aomod@divisor+6,f
  7603  0614  1D03               	skipz
  7604  0615  2E17               	goto	u231lld
  7605  0616  0AA7               	incf	___aomod@divisor+7,f
  7606  0617                     u231lld:
  7607  0617                     l2984:
  7608  0617  0020               	movlb	0	; select bank0
  7609  0618  0820               	movf	___aomod@divisor,w
  7610  0619  0421               	iorwf	___aomod@divisor+1,w
  7611  061A  0422               	iorwf	___aomod@divisor+2,w
  7612  061B  0423               	iorwf	___aomod@divisor+3,w
  7613  061C  0424               	iorwf	___aomod@divisor+4,w
  7614  061D  0425               	iorwf	___aomod@divisor+5,w
  7615  061E  0426               	iorwf	___aomod@divisor+6,w
  7616  061F  0427               	iorwf	___aomod@divisor+7,w
  7617  0620  1903               	skipnz
  7618  0621  2E23               	goto	u2321
  7619  0622  2E24               	goto	u2320
  7620  0623                     u2321:
  7621  0623  2E77               	goto	l3000
  7622  0624                     u2320:
  7623  0624                     l2986:
  7624  0624  01F4               	clrf	___aomod@counter
  7625  0625  0AF4               	incf	___aomod@counter,f
  7626  0626  2E33               	goto	l2992
  7627  0627                     l2988:
  7628  0627  35A0               	lslf	___aomod@divisor,f
  7629  0628  0DA1               	rlf	___aomod@divisor+1,f
  7630  0629  0DA2               	rlf	___aomod@divisor+2,f
  7631  062A  0DA3               	rlf	___aomod@divisor+3,f
  7632  062B  0DA4               	rlf	___aomod@divisor+4,f
  7633  062C  0DA5               	rlf	___aomod@divisor+5,f
  7634  062D  0DA6               	rlf	___aomod@divisor+6,f
  7635  062E  0DA7               	rlf	___aomod@divisor+7,f
  7636  062F                     l2990:
  7637  062F  3001               	movlw	1
  7638  0630  00F3               	movwf	??___aomod
  7639  0631  0873               	movf	??___aomod,w
  7640  0632  07F4               	addwf	___aomod@counter,f
  7641  0633                     l2992:
  7642  0633  1FA7               	btfss	___aomod@divisor+7,7
  7643  0634  2E36               	goto	u2331
  7644  0635  2E37               	goto	u2330
  7645  0636                     u2331:
  7646  0636  2E27               	goto	l2988
  7647  0637                     u2330:
  7648  0637                     l2994:
  7649  0637  0827               	movf	___aomod@divisor+7,w
  7650  0638  022F               	subwf	___aomod@dividend+7,w
  7651  0639  1D03               	skipz
  7652  063A  2E55               	goto	u2345
  7653  063B  0826               	movf	___aomod@divisor+6,w
  7654  063C  022E               	subwf	___aomod@dividend+6,w
  7655  063D  1D03               	skipz
  7656  063E  2E55               	goto	u2345
  7657  063F  0825               	movf	___aomod@divisor+5,w
  7658  0640  022D               	subwf	___aomod@dividend+5,w
  7659  0641  1D03               	skipz
  7660  0642  2E55               	goto	u2345
  7661  0643  0824               	movf	___aomod@divisor+4,w
  7662  0644  022C               	subwf	___aomod@dividend+4,w
  7663  0645  1D03               	skipz
  7664  0646  2E55               	goto	u2345
  7665  0647  0823               	movf	___aomod@divisor+3,w
  7666  0648  022B               	subwf	___aomod@dividend+3,w
  7667  0649  1D03               	skipz
  7668  064A  2E55               	goto	u2345
  7669  064B  0822               	movf	___aomod@divisor+2,w
  7670  064C  022A               	subwf	___aomod@dividend+2,w
  7671  064D  1D03               	skipz
  7672  064E  2E55               	goto	u2345
  7673  064F  0821               	movf	___aomod@divisor+1,w
  7674  0650  0229               	subwf	___aomod@dividend+1,w
  7675  0651  1D03               	skipz
  7676  0652  2E55               	goto	u2345
  7677  0653  0820               	movf	___aomod@divisor,w
  7678  0654  0228               	subwf	___aomod@dividend,w
  7679  0655                     u2345:
  7680  0655  1C03               	skipc
  7681  0656  2E58               	goto	u2341
  7682  0657  2E59               	goto	u2340
  7683  0658                     u2341:
  7684  0658  2E69               	goto	l2998
  7685  0659                     u2340:
  7686  0659                     l2996:
  7687  0659  0820               	movf	___aomod@divisor,w
  7688  065A  02A8               	subwf	___aomod@dividend,f
  7689  065B  0821               	movf	___aomod@divisor+1,w
  7690  065C  3BA9               	subwfb	___aomod@dividend+1,f
  7691  065D  0822               	movf	___aomod@divisor+2,w
  7692  065E  3BAA               	subwfb	___aomod@dividend+2,f
  7693  065F  0823               	movf	___aomod@divisor+3,w
  7694  0660  3BAB               	subwfb	___aomod@dividend+3,f
  7695  0661  0824               	movf	___aomod@divisor+4,w
  7696  0662  3BAC               	subwfb	___aomod@dividend+4,f
  7697  0663  0825               	movf	___aomod@divisor+5,w
  7698  0664  3BAD               	subwfb	___aomod@dividend+5,f
  7699  0665  0826               	movf	___aomod@divisor+6,w
  7700  0666  3BAE               	subwfb	___aomod@dividend+6,f
  7701  0667  0827               	movf	___aomod@divisor+7,w
  7702  0668  3BAF               	subwfb	___aomod@dividend+7,f
  7703  0669                     l2998:
  7704  0669  36A7               	lsrf	___aomod@divisor+7,f
  7705  066A  0CA6               	rrf	___aomod@divisor+6,f
  7706  066B  0CA5               	rrf	___aomod@divisor+5,f
  7707  066C  0CA4               	rrf	___aomod@divisor+4,f
  7708  066D  0CA3               	rrf	___aomod@divisor+3,f
  7709  066E  0CA2               	rrf	___aomod@divisor+2,f
  7710  066F  0CA1               	rrf	___aomod@divisor+1,f
  7711  0670  0CA0               	rrf	___aomod@divisor,f
  7712  0671  3001               	movlw	1
  7713  0672  02F4               	subwf	___aomod@counter,f
  7714  0673  1D03               	btfss	3,2
  7715  0674  2E76               	goto	u2351
  7716  0675  2E77               	goto	u2350
  7717  0676                     u2351:
  7718  0676  2E37               	goto	l2994
  7719  0677                     u2350:
  7720  0677                     l3000:
  7721  0677  0875               	movf	___aomod@sign,w
  7722  0678  1903               	btfsc	3,2
  7723  0679  2E7B               	goto	u2361
  7724  067A  2E7C               	goto	u2360
  7725  067B                     u2361:
  7726  067B  2E9A               	goto	l779
  7727  067C                     u2360:
  7728  067C                     l3002:
  7729  067C  09A8               	comf	___aomod@dividend,f
  7730  067D  09A9               	comf	___aomod@dividend+1,f
  7731  067E  09AA               	comf	___aomod@dividend+2,f
  7732  067F  09AB               	comf	___aomod@dividend+3,f
  7733  0680  09AC               	comf	___aomod@dividend+4,f
  7734  0681  09AD               	comf	___aomod@dividend+5,f
  7735  0682  09AE               	comf	___aomod@dividend+6,f
  7736  0683  09AF               	comf	___aomod@dividend+7,f
  7737  0684  0AA8               	incf	___aomod@dividend,f
  7738  0685  1D03               	skipz
  7739  0686  2E9A               	goto	u237lld
  7740  0687  0AA9               	incf	___aomod@dividend+1,f
  7741  0688  1D03               	skipz
  7742  0689  2E9A               	goto	u237lld
  7743  068A  0AAA               	incf	___aomod@dividend+2,f
  7744  068B  1D03               	skipz
  7745  068C  2E9A               	goto	u237lld
  7746  068D  0AAB               	incf	___aomod@dividend+3,f
  7747  068E  1D03               	skipz
  7748  068F  2E9A               	goto	u237lld
  7749  0690  0AAC               	incf	___aomod@dividend+4,f
  7750  0691  1D03               	skipz
  7751  0692  2E9A               	goto	u237lld
  7752  0693  0AAD               	incf	___aomod@dividend+5,f
  7753  0694  1D03               	skipz
  7754  0695  2E9A               	goto	u237lld
  7755  0696  0AAE               	incf	___aomod@dividend+6,f
  7756  0697  1D03               	skipz
  7757  0698  2E9A               	goto	u237lld
  7758  0699  0AAF               	incf	___aomod@dividend+7,f
  7759  069A                     u237lld:
  7760  069A                     l779:
  7761  069A  0020               	movlb	0	; select bank0
  7762  069B  0828               	movf	___aomod@dividend,w
  7763  069C  00A0               	movwf	?___aomod
  7764  069D  0829               	movf	___aomod@dividend+1,w
  7765  069E  00A1               	movwf	?___aomod+1
  7766  069F  082A               	movf	___aomod@dividend+2,w
  7767  06A0  00A2               	movwf	?___aomod+2
  7768  06A1  082B               	movf	___aomod@dividend+3,w
  7769  06A2  00A3               	movwf	?___aomod+3
  7770  06A3  082C               	movf	___aomod@dividend+4,w
  7771  06A4  00A4               	movwf	?___aomod+4
  7772  06A5  082D               	movf	___aomod@dividend+5,w
  7773  06A6  00A5               	movwf	?___aomod+5
  7774  06A7  082E               	movf	___aomod@dividend+6,w
  7775  06A8  00A6               	movwf	?___aomod+6
  7776  06A9  082F               	movf	___aomod@dividend+7,w
  7777  06AA  00A7               	movwf	?___aomod+7
  7778  06AB                     l780:
  7779  06AB  0008               	return
  7780  06AC                     __end_of___aomod:
  7781                           
  7782                           	psect	text13
  7783  04BE                     __ptext13:	
  7784 ;; *************** function ___aodiv *****************
  7785 ;; Defined at:
  7786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  divisor         8    0[BANK0 ] long long 
  7789 ;;  dividend        8    8[BANK0 ] long long 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  quotient        8   18[BANK0 ] long long 
  7792 ;;  sign            1   17[BANK0 ] unsigned char 
  7793 ;;  counter         1   16[BANK0 ] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  8    0[BANK0 ] long long 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7803 ;;      Params:         0      16       0       0       0       0       0       0
  7804 ;;      Locals:         0      10       0       0       0       0       0       0
  7805 ;;      Temps:          1       0       0       0       0       0       0       0
  7806 ;;      Totals:         1      26       0       0       0       0       0       0
  7807 ;;Total ram usage:       27 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    4
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_dtoa
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           
  7818                           ;psect for function ___aodiv
  7819  04BE                     ___aodiv:
  7820  04BE                     l2936:	
  7821                           ;incstack = 0
  7822                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7823                           
  7824  04BE  0020               	movlb	0	; select bank0
  7825  04BF  01B1               	clrf	___aodiv@sign
  7826  04C0                     l2938:
  7827  04C0  3020               	movlw	low ___aodiv@divisor
  7828  04C1  0086               	movwf	6
  7829  04C2  3000               	movlw	high ___aodiv@divisor
  7830  04C3  0087               	movwf	7
  7831  04C4  3F47               	moviw [7]fsr1
  7832  04C5  00F3               	movwf	??___aodiv
  7833  04C6  1FF3               	btfss	??___aodiv,7
  7834  04C7  2CC9               	goto	u2171
  7835  04C8  2CCA               	goto	u2170
  7836  04C9                     u2171:
  7837  04C9  2CEC               	goto	l2942
  7838  04CA                     u2170:
  7839  04CA                     l2940:
  7840  04CA  0020               	movlb	0	; select bank0
  7841  04CB  09A0               	comf	___aodiv@divisor,f
  7842  04CC  09A1               	comf	___aodiv@divisor+1,f
  7843  04CD  09A2               	comf	___aodiv@divisor+2,f
  7844  04CE  09A3               	comf	___aodiv@divisor+3,f
  7845  04CF  09A4               	comf	___aodiv@divisor+4,f
  7846  04D0  09A5               	comf	___aodiv@divisor+5,f
  7847  04D1  09A6               	comf	___aodiv@divisor+6,f
  7848  04D2  09A7               	comf	___aodiv@divisor+7,f
  7849  04D3  0AA0               	incf	___aodiv@divisor,f
  7850  04D4  1D03               	skipz
  7851  04D5  2CE9               	goto	u218lld
  7852  04D6  0AA1               	incf	___aodiv@divisor+1,f
  7853  04D7  1D03               	skipz
  7854  04D8  2CE9               	goto	u218lld
  7855  04D9  0AA2               	incf	___aodiv@divisor+2,f
  7856  04DA  1D03               	skipz
  7857  04DB  2CE9               	goto	u218lld
  7858  04DC  0AA3               	incf	___aodiv@divisor+3,f
  7859  04DD  1D03               	skipz
  7860  04DE  2CE9               	goto	u218lld
  7861  04DF  0AA4               	incf	___aodiv@divisor+4,f
  7862  04E0  1D03               	skipz
  7863  04E1  2CE9               	goto	u218lld
  7864  04E2  0AA5               	incf	___aodiv@divisor+5,f
  7865  04E3  1D03               	skipz
  7866  04E4  2CE9               	goto	u218lld
  7867  04E5  0AA6               	incf	___aodiv@divisor+6,f
  7868  04E6  1D03               	skipz
  7869  04E7  2CE9               	goto	u218lld
  7870  04E8  0AA7               	incf	___aodiv@divisor+7,f
  7871  04E9                     u218lld:
  7872  04E9  0020               	movlb	0	; select bank0
  7873  04EA  01B1               	clrf	___aodiv@sign
  7874  04EB  0AB1               	incf	___aodiv@sign,f
  7875  04EC                     l2942:
  7876  04EC  3028               	movlw	low ___aodiv@dividend
  7877  04ED  0086               	movwf	6
  7878  04EE  3000               	movlw	high ___aodiv@dividend
  7879  04EF  0087               	movwf	7
  7880  04F0  3F47               	moviw [7]fsr1
  7881  04F1  00F3               	movwf	??___aodiv
  7882  04F2  1FF3               	btfss	??___aodiv,7
  7883  04F3  2CF5               	goto	u2191
  7884  04F4  2CF6               	goto	u2190
  7885  04F5                     u2191:
  7886  04F5  2D1A               	goto	l2948
  7887  04F6                     u2190:
  7888  04F6                     l2944:
  7889  04F6  0020               	movlb	0	; select bank0
  7890  04F7  09A8               	comf	___aodiv@dividend,f
  7891  04F8  09A9               	comf	___aodiv@dividend+1,f
  7892  04F9  09AA               	comf	___aodiv@dividend+2,f
  7893  04FA  09AB               	comf	___aodiv@dividend+3,f
  7894  04FB  09AC               	comf	___aodiv@dividend+4,f
  7895  04FC  09AD               	comf	___aodiv@dividend+5,f
  7896  04FD  09AE               	comf	___aodiv@dividend+6,f
  7897  04FE  09AF               	comf	___aodiv@dividend+7,f
  7898  04FF  0AA8               	incf	___aodiv@dividend,f
  7899  0500  1D03               	skipz
  7900  0501  2D15               	goto	u220lld
  7901  0502  0AA9               	incf	___aodiv@dividend+1,f
  7902  0503  1D03               	skipz
  7903  0504  2D15               	goto	u220lld
  7904  0505  0AAA               	incf	___aodiv@dividend+2,f
  7905  0506  1D03               	skipz
  7906  0507  2D15               	goto	u220lld
  7907  0508  0AAB               	incf	___aodiv@dividend+3,f
  7908  0509  1D03               	skipz
  7909  050A  2D15               	goto	u220lld
  7910  050B  0AAC               	incf	___aodiv@dividend+4,f
  7911  050C  1D03               	skipz
  7912  050D  2D15               	goto	u220lld
  7913  050E  0AAD               	incf	___aodiv@dividend+5,f
  7914  050F  1D03               	skipz
  7915  0510  2D15               	goto	u220lld
  7916  0511  0AAE               	incf	___aodiv@dividend+6,f
  7917  0512  1D03               	skipz
  7918  0513  2D15               	goto	u220lld
  7919  0514  0AAF               	incf	___aodiv@dividend+7,f
  7920  0515                     u220lld:
  7921  0515                     l2946:
  7922  0515  3001               	movlw	1
  7923  0516  00F3               	movwf	??___aodiv
  7924  0517  0873               	movf	??___aodiv,w
  7925  0518  0020               	movlb	0	; select bank0
  7926  0519  06B1               	xorwf	___aodiv@sign,f
  7927  051A                     l2948:
  7928  051A  3032               	movlw	low ___aodiv@quotient
  7929  051B  0086               	movwf	6
  7930  051C  3000               	movlw	high ___aodiv@quotient
  7931  051D  0087               	movwf	7
  7932  051E  3008               	movlw	8
  7933  051F  00F3               	movwf	??___aodiv
  7934  0520  3000               	movlw	0
  7935  0521                     u2210:
  7936  0521  001E               	movwi fsr1++
  7937  0522  0BF3               	decfsz	??___aodiv,f
  7938  0523  2D21               	goto	u2210
  7939  0524                     l2950:
  7940  0524  0020               	movlb	0	; select bank0
  7941  0525  0820               	movf	___aodiv@divisor,w
  7942  0526  0421               	iorwf	___aodiv@divisor+1,w
  7943  0527  0422               	iorwf	___aodiv@divisor+2,w
  7944  0528  0423               	iorwf	___aodiv@divisor+3,w
  7945  0529  0424               	iorwf	___aodiv@divisor+4,w
  7946  052A  0425               	iorwf	___aodiv@divisor+5,w
  7947  052B  0426               	iorwf	___aodiv@divisor+6,w
  7948  052C  0427               	iorwf	___aodiv@divisor+7,w
  7949  052D  1903               	skipnz
  7950  052E  2D30               	goto	u2221
  7951  052F  2D31               	goto	u2220
  7952  0530                     u2221:
  7953  0530  2D8D               	goto	l2970
  7954  0531                     u2220:
  7955  0531                     l2952:
  7956  0531  01B0               	clrf	___aodiv@counter
  7957  0532  0AB0               	incf	___aodiv@counter,f
  7958  0533  2D40               	goto	l2958
  7959  0534                     l2954:
  7960  0534  35A0               	lslf	___aodiv@divisor,f
  7961  0535  0DA1               	rlf	___aodiv@divisor+1,f
  7962  0536  0DA2               	rlf	___aodiv@divisor+2,f
  7963  0537  0DA3               	rlf	___aodiv@divisor+3,f
  7964  0538  0DA4               	rlf	___aodiv@divisor+4,f
  7965  0539  0DA5               	rlf	___aodiv@divisor+5,f
  7966  053A  0DA6               	rlf	___aodiv@divisor+6,f
  7967  053B  0DA7               	rlf	___aodiv@divisor+7,f
  7968  053C                     l2956:
  7969  053C  3001               	movlw	1
  7970  053D  00F3               	movwf	??___aodiv
  7971  053E  0873               	movf	??___aodiv,w
  7972  053F  07B0               	addwf	___aodiv@counter,f
  7973  0540                     l2958:
  7974  0540  1FA7               	btfss	___aodiv@divisor+7,7
  7975  0541  2D43               	goto	u2231
  7976  0542  2D44               	goto	u2230
  7977  0543                     u2231:
  7978  0543  2D34               	goto	l2954
  7979  0544                     u2230:
  7980  0544                     l2960:
  7981  0544  35B2               	lslf	___aodiv@quotient,f
  7982  0545  0DB3               	rlf	___aodiv@quotient+1,f
  7983  0546  0DB4               	rlf	___aodiv@quotient+2,f
  7984  0547  0DB5               	rlf	___aodiv@quotient+3,f
  7985  0548  0DB6               	rlf	___aodiv@quotient+4,f
  7986  0549  0DB7               	rlf	___aodiv@quotient+5,f
  7987  054A  0DB8               	rlf	___aodiv@quotient+6,f
  7988  054B  0DB9               	rlf	___aodiv@quotient+7,f
  7989  054C                     l2962:
  7990  054C  0827               	movf	___aodiv@divisor+7,w
  7991  054D  022F               	subwf	___aodiv@dividend+7,w
  7992  054E  1D03               	skipz
  7993  054F  2D6A               	goto	u2245
  7994  0550  0826               	movf	___aodiv@divisor+6,w
  7995  0551  022E               	subwf	___aodiv@dividend+6,w
  7996  0552  1D03               	skipz
  7997  0553  2D6A               	goto	u2245
  7998  0554  0825               	movf	___aodiv@divisor+5,w
  7999  0555  022D               	subwf	___aodiv@dividend+5,w
  8000  0556  1D03               	skipz
  8001  0557  2D6A               	goto	u2245
  8002  0558  0824               	movf	___aodiv@divisor+4,w
  8003  0559  022C               	subwf	___aodiv@dividend+4,w
  8004  055A  1D03               	skipz
  8005  055B  2D6A               	goto	u2245
  8006  055C  0823               	movf	___aodiv@divisor+3,w
  8007  055D  022B               	subwf	___aodiv@dividend+3,w
  8008  055E  1D03               	skipz
  8009  055F  2D6A               	goto	u2245
  8010  0560  0822               	movf	___aodiv@divisor+2,w
  8011  0561  022A               	subwf	___aodiv@dividend+2,w
  8012  0562  1D03               	skipz
  8013  0563  2D6A               	goto	u2245
  8014  0564  0821               	movf	___aodiv@divisor+1,w
  8015  0565  0229               	subwf	___aodiv@dividend+1,w
  8016  0566  1D03               	skipz
  8017  0567  2D6A               	goto	u2245
  8018  0568  0820               	movf	___aodiv@divisor,w
  8019  0569  0228               	subwf	___aodiv@dividend,w
  8020  056A                     u2245:
  8021  056A  1C03               	skipc
  8022  056B  2D6D               	goto	u2241
  8023  056C  2D6E               	goto	u2240
  8024  056D                     u2241:
  8025  056D  2D7F               	goto	l2968
  8026  056E                     u2240:
  8027  056E                     l2964:
  8028  056E  0820               	movf	___aodiv@divisor,w
  8029  056F  02A8               	subwf	___aodiv@dividend,f
  8030  0570  0821               	movf	___aodiv@divisor+1,w
  8031  0571  3BA9               	subwfb	___aodiv@dividend+1,f
  8032  0572  0822               	movf	___aodiv@divisor+2,w
  8033  0573  3BAA               	subwfb	___aodiv@dividend+2,f
  8034  0574  0823               	movf	___aodiv@divisor+3,w
  8035  0575  3BAB               	subwfb	___aodiv@dividend+3,f
  8036  0576  0824               	movf	___aodiv@divisor+4,w
  8037  0577  3BAC               	subwfb	___aodiv@dividend+4,f
  8038  0578  0825               	movf	___aodiv@divisor+5,w
  8039  0579  3BAD               	subwfb	___aodiv@dividend+5,f
  8040  057A  0826               	movf	___aodiv@divisor+6,w
  8041  057B  3BAE               	subwfb	___aodiv@dividend+6,f
  8042  057C  0827               	movf	___aodiv@divisor+7,w
  8043  057D  3BAF               	subwfb	___aodiv@dividend+7,f
  8044  057E                     l2966:
  8045  057E  1432               	bsf	___aodiv@quotient,0
  8046  057F                     l2968:
  8047  057F  36A7               	lsrf	___aodiv@divisor+7,f
  8048  0580  0CA6               	rrf	___aodiv@divisor+6,f
  8049  0581  0CA5               	rrf	___aodiv@divisor+5,f
  8050  0582  0CA4               	rrf	___aodiv@divisor+4,f
  8051  0583  0CA3               	rrf	___aodiv@divisor+3,f
  8052  0584  0CA2               	rrf	___aodiv@divisor+2,f
  8053  0585  0CA1               	rrf	___aodiv@divisor+1,f
  8054  0586  0CA0               	rrf	___aodiv@divisor,f
  8055  0587  3001               	movlw	1
  8056  0588  02B0               	subwf	___aodiv@counter,f
  8057  0589  1D03               	btfss	3,2
  8058  058A  2D8C               	goto	u2251
  8059  058B  2D8D               	goto	u2250
  8060  058C                     u2251:
  8061  058C  2D44               	goto	l2960
  8062  058D                     u2250:
  8063  058D                     l2970:
  8064  058D  0831               	movf	___aodiv@sign,w
  8065  058E  1903               	btfsc	3,2
  8066  058F  2D91               	goto	u2261
  8067  0590  2D92               	goto	u2260
  8068  0591                     u2261:
  8069  0591  2DB0               	goto	l766
  8070  0592                     u2260:
  8071  0592                     l2972:
  8072  0592  09B2               	comf	___aodiv@quotient,f
  8073  0593  09B3               	comf	___aodiv@quotient+1,f
  8074  0594  09B4               	comf	___aodiv@quotient+2,f
  8075  0595  09B5               	comf	___aodiv@quotient+3,f
  8076  0596  09B6               	comf	___aodiv@quotient+4,f
  8077  0597  09B7               	comf	___aodiv@quotient+5,f
  8078  0598  09B8               	comf	___aodiv@quotient+6,f
  8079  0599  09B9               	comf	___aodiv@quotient+7,f
  8080  059A  0AB2               	incf	___aodiv@quotient,f
  8081  059B  1D03               	skipz
  8082  059C  2DB0               	goto	u227lld
  8083  059D  0AB3               	incf	___aodiv@quotient+1,f
  8084  059E  1D03               	skipz
  8085  059F  2DB0               	goto	u227lld
  8086  05A0  0AB4               	incf	___aodiv@quotient+2,f
  8087  05A1  1D03               	skipz
  8088  05A2  2DB0               	goto	u227lld
  8089  05A3  0AB5               	incf	___aodiv@quotient+3,f
  8090  05A4  1D03               	skipz
  8091  05A5  2DB0               	goto	u227lld
  8092  05A6  0AB6               	incf	___aodiv@quotient+4,f
  8093  05A7  1D03               	skipz
  8094  05A8  2DB0               	goto	u227lld
  8095  05A9  0AB7               	incf	___aodiv@quotient+5,f
  8096  05AA  1D03               	skipz
  8097  05AB  2DB0               	goto	u227lld
  8098  05AC  0AB8               	incf	___aodiv@quotient+6,f
  8099  05AD  1D03               	skipz
  8100  05AE  2DB0               	goto	u227lld
  8101  05AF  0AB9               	incf	___aodiv@quotient+7,f
  8102  05B0                     u227lld:
  8103  05B0                     l766:
  8104  05B0  0020               	movlb	0	; select bank0
  8105  05B1  0832               	movf	___aodiv@quotient,w
  8106  05B2  00A0               	movwf	?___aodiv
  8107  05B3  0833               	movf	___aodiv@quotient+1,w
  8108  05B4  00A1               	movwf	?___aodiv+1
  8109  05B5  0834               	movf	___aodiv@quotient+2,w
  8110  05B6  00A2               	movwf	?___aodiv+2
  8111  05B7  0835               	movf	___aodiv@quotient+3,w
  8112  05B8  00A3               	movwf	?___aodiv+3
  8113  05B9  0836               	movf	___aodiv@quotient+4,w
  8114  05BA  00A4               	movwf	?___aodiv+4
  8115  05BB  0837               	movf	___aodiv@quotient+5,w
  8116  05BC  00A5               	movwf	?___aodiv+5
  8117  05BD  0838               	movf	___aodiv@quotient+6,w
  8118  05BE  00A6               	movwf	?___aodiv+6
  8119  05BF  0839               	movf	___aodiv@quotient+7,w
  8120  05C0  00A7               	movwf	?___aodiv+7
  8121  05C1                     l767:
  8122  05C1  0008               	return
  8123  05C2                     __end_of___aodiv:
  8124                           
  8125                           	psect	text14
  8126  0B72                     __ptext14:	
  8127 ;; *************** function _TMR0_ReadTimer *****************
  8128 ;; Defined at:
  8129 ;;		line 92 in file "mcc_generated_files/tmr0.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  readVal         1    4[COMMON] unsigned char 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      unsigned char 
  8136 ;; Registers used:
  8137 ;;		wreg
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8143 ;;      Params:         0       0       0       0       0       0       0       0
  8144 ;;      Locals:         1       0       0       0       0       0       0       0
  8145 ;;      Temps:          1       0       0       0       0       0       0       0
  8146 ;;      Totals:         2       0       0       0       0       0       0       0
  8147 ;;Total ram usage:        2 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    4
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_main
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           
  8158                           ;psect for function _TMR0_ReadTimer
  8159  0B72                     _TMR0_ReadTimer:
  8160  0B72                     l3354:	
  8161                           ;incstack = 0
  8162                           ; Regs used in _TMR0_ReadTimer: [wreg]
  8163                           
  8164                           
  8165                           ;mcc_generated_files/tmr0.c: 94:     uint8_t readVal;;mcc_generated_files/tmr0.c: 97:   
      +                            readVal = TMR0L;
  8166  0B72  0020               	movlb	0	; select bank0
  8167  0B73  081C               	movf	28,w	;volatile
  8168  0B74  00F3               	movwf	??_TMR0_ReadTimer
  8169  0B75  0873               	movf	??_TMR0_ReadTimer,w
  8170  0B76  00F4               	movwf	TMR0_ReadTimer@readVal
  8171                           
  8172                           ;mcc_generated_files/tmr0.c: 99:     return readVal;
  8173  0B77  0874               	movf	TMR0_ReadTimer@readVal,w
  8174  0B78                     l274:
  8175  0B78  0008               	return
  8176  0B79                     __end_of_TMR0_ReadTimer:
  8177                           
  8178                           	psect	text15
  8179  0BF2                     __ptext15:	
  8180 ;; *************** function _SYSTEM_Initialize *****************
  8181 ;; Defined at:
  8182 ;;		line 5 in file "mcc_generated_files/mcc.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, status,2, status,0, pclath, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8196 ;;      Params:         0       0       0       0       0       0       0       0
  8197 ;;      Locals:         0       0       0       0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0
  8199 ;;      Totals:         0       0       0       0       0       0       0       0
  8200 ;;Total ram usage:        0 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    6
  8203 ;; This function calls:
  8204 ;;		_EUSART_Initialize
  8205 ;;		_OSCILLATOR_Initialize
  8206 ;;		_PIN_MANAGER_Initialize
  8207 ;;		_PMD_Initialize
  8208 ;;		_TMR0_Initialize
  8209 ;;		_master_init
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _SYSTEM_Initialize
  8217  0BF2                     _SYSTEM_Initialize:
  8218  0BF2                     l3342:	
  8219                           ;incstack = 0
  8220                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8221                           
  8222                           
  8223                           ;mcc_generated_files/mcc.c: 7:     PMD_Initialize();
  8224  0BF2  318B  2379  318B   	fcall	_PMD_Initialize
  8225  0BF5                     l3344:
  8226                           
  8227                           ;mcc_generated_files/mcc.c: 8:     PIN_MANAGER_Initialize();
  8228  0BF5  318D  25CC  318B   	fcall	_PIN_MANAGER_Initialize
  8229  0BF8                     l3346:
  8230                           
  8231                           ;mcc_generated_files/mcc.c: 9:     OSCILLATOR_Initialize();
  8232  0BF8  318B  2381  318B   	fcall	_OSCILLATOR_Initialize
  8233  0BFB                     l3348:
  8234                           
  8235                           ;mcc_generated_files/mcc.c: 10:     TMR0_Initialize();
  8236  0BFB  318B  23B7  318B   	fcall	_TMR0_Initialize
  8237  0BFE                     l3350:
  8238                           
  8239                           ;mcc_generated_files/mcc.c: 11:     EUSART_Initialize();
  8240  0BFE  318D  256B  318B   	fcall	_EUSART_Initialize
  8241  0C01                     l3352:
  8242                           
  8243                           ;mcc_generated_files/mcc.c: 12:     master_init();
  8244  0C01  318B  2394  318B   	fcall	_master_init
  8245  0C04                     l175:
  8246  0C04  0008               	return
  8247  0C05                     __end_of_SYSTEM_Initialize:
  8248                           
  8249                           	psect	text16
  8250  0B94                     __ptext16:	
  8251 ;; *************** function _master_init *****************
  8252 ;; Defined at:
  8253 ;;		line 44 in file "mcc_generated_files/mcc.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;		None
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8267 ;;      Params:         0       0       0       0       0       0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0
  8270 ;;      Totals:         0       0       0       0       0       0       0       0
  8271 ;;Total ram usage:        0 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    4
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_SYSTEM_Initialize
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           
  8282                           ;psect for function _master_init
  8283  0B94                     _master_init:
  8284  0B94                     l3236:	
  8285                           ;incstack = 0
  8286                           ; Regs used in _master_init: [wreg+status,2]
  8287                           
  8288                           
  8289                           ;mcc_generated_files/mcc.c: 45:     SSP1CON1=0x28;
  8290  0B94  3028               	movlw	40
  8291  0B95  0023               	movlb	3	; select bank3
  8292  0B96  0090               	movwf	16	;volatile
  8293  0B97                     l3238:
  8294                           
  8295                           ;mcc_generated_files/mcc.c: 46:     SSP1CON2=0x00;
  8296  0B97  0191               	clrf	17	;volatile
  8297  0B98                     l3240:
  8298                           
  8299                           ;mcc_generated_files/mcc.c: 47:     SSP1STATbits.SMP=1;
  8300  0B98  178F               	bsf	15,7	;volatile
  8301  0B99                     l3242:
  8302                           
  8303                           ;mcc_generated_files/mcc.c: 48:     SSP1STATbits.CKE=1;
  8304  0B99  170F               	bsf	15,6	;volatile
  8305  0B9A                     l3244:
  8306                           
  8307                           ;mcc_generated_files/mcc.c: 49:     SSP1ADD=0x06;
  8308  0B9A  3006               	movlw	6
  8309  0B9B  008D               	movwf	13	;volatile
  8310  0B9C                     l3246:
  8311                           
  8312                           ;mcc_generated_files/mcc.c: 50:     SSP1MSK=0xFF;
  8313  0B9C  30FF               	movlw	255
  8314  0B9D  008E               	movwf	14	;volatile
  8315  0B9E                     l184:
  8316  0B9E  0008               	return
  8317  0B9F                     __end_of_master_init:
  8318                           
  8319                           	psect	text17
  8320  0BB7                     __ptext17:	
  8321 ;; *************** function _TMR0_Initialize *****************
  8322 ;; Defined at:
  8323 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8337 ;;      Params:         0       0       0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    4
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_SYSTEM_Initialize
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _TMR0_Initialize
  8353  0BB7                     _TMR0_Initialize:
  8354  0BB7                     l3228:	
  8355                           ;incstack = 0
  8356                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  8357                           
  8358                           
  8359                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x6E;
  8360  0BB7  306E               	movlw	110
  8361  0BB8  0020               	movlb	0	; select bank0
  8362  0BB9  009F               	movwf	31	;volatile
  8363                           
  8364                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x79;
  8365  0BBA  3079               	movlw	121
  8366  0BBB  009D               	movwf	29	;volatile
  8367  0BBC                     l3230:
  8368                           
  8369                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  8370  0BBC  019C               	clrf	28	;volatile
  8371  0BBD                     l3232:
  8372                           
  8373                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
  8374  0BBD  002E               	movlb	14	; select bank14
  8375  0BBE  128C               	bcf	12,5	;volatile
  8376  0BBF                     l3234:
  8377                           
  8378                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
  8379  0BBF  3080               	movlw	128
  8380  0BC0  0020               	movlb	0	; select bank0
  8381  0BC1  009E               	movwf	30	;volatile
  8382  0BC2                     l265:
  8383  0BC2  0008               	return
  8384  0BC3                     __end_of_TMR0_Initialize:
  8385                           
  8386                           	psect	text18
  8387  0B79                     __ptext18:	
  8388 ;; *************** function _PMD_Initialize *****************
  8389 ;; Defined at:
  8390 ;;		line 29 in file "mcc_generated_files/mcc.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		status,2
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8404 ;;      Params:         0       0       0       0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    4
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_SYSTEM_Initialize
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function _PMD_Initialize
  8420  0B79                     _PMD_Initialize:
  8421  0B79                     l3178:	
  8422                           ;incstack = 0
  8423                           ; Regs used in _PMD_Initialize: [status,2]
  8424                           
  8425                           
  8426                           ;mcc_generated_files/mcc.c: 32:     PMD0 = 0x00;
  8427  0B79  002F               	movlb	15	; select bank15
  8428  0B7A  0196               	clrf	22	;volatile
  8429                           
  8430                           ;mcc_generated_files/mcc.c: 34:     PMD1 = 0x00;
  8431  0B7B  0197               	clrf	23	;volatile
  8432                           
  8433                           ;mcc_generated_files/mcc.c: 36:     PMD2 = 0x00;
  8434  0B7C  0198               	clrf	24	;volatile
  8435                           
  8436                           ;mcc_generated_files/mcc.c: 38:     PMD3 = 0x00;
  8437  0B7D  0199               	clrf	25	;volatile
  8438                           
  8439                           ;mcc_generated_files/mcc.c: 40:     PMD4 = 0x00;
  8440  0B7E  019A               	clrf	26	;volatile
  8441                           
  8442                           ;mcc_generated_files/mcc.c: 42:     PMD5 = 0x00;
  8443  0B7F  019B               	clrf	27	;volatile
  8444  0B80                     l181:
  8445  0B80  0008               	return
  8446  0B81                     __end_of_PMD_Initialize:
  8447                           
  8448                           	psect	text19
  8449  0DCC                     __ptext19:	
  8450 ;; *************** function _PIN_MANAGER_Initialize *****************
  8451 ;; Defined at:
  8452 ;;		line 2 in file "mcc_generated_files/pin_manager.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8466 ;;      Params:         0       0       0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    4
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_SYSTEM_Initialize
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           
  8481                           ;psect for function _PIN_MANAGER_Initialize
  8482  0DCC                     _PIN_MANAGER_Initialize:
  8483  0DCC                     l3180:	
  8484                           ;incstack = 0
  8485                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8486                           
  8487                           
  8488                           ;mcc_generated_files/pin_manager.c: 4:     PORTA = 0x00;
  8489  0DCC  0020               	movlb	0	; select bank0
  8490  0DCD  018C               	clrf	12	;volatile
  8491                           
  8492                           ;mcc_generated_files/pin_manager.c: 8:     LATA = 0x00;
  8493  0DCE  0196               	clrf	22	;volatile
  8494                           
  8495                           ;mcc_generated_files/pin_manager.c: 9:     LATB = 0x00;
  8496  0DCF  0197               	clrf	23	;volatile
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 10:     LATC = 0x00;
  8499  0DD0  0198               	clrf	24	;volatile
  8500  0DD1                     l3182:
  8501                           
  8502                           ;mcc_generated_files/pin_manager.c: 15:     TRISA = 0xF1;
  8503  0DD1  30F1               	movlw	241
  8504  0DD2  0091               	movwf	17	;volatile
  8505  0DD3                     l3184:
  8506                           
  8507                           ;mcc_generated_files/pin_manager.c: 16:     TRISB = 0xFF;
  8508  0DD3  30FF               	movlw	255
  8509  0DD4  0092               	movwf	18	;volatile
  8510  0DD5                     l3186:
  8511                           
  8512                           ;mcc_generated_files/pin_manager.c: 17:     TRISC = 0xBF;
  8513  0DD5  30BF               	movlw	191
  8514  0DD6  0093               	movwf	19	;volatile
  8515  0DD7                     l3188:
  8516                           
  8517                           ;mcc_generated_files/pin_manager.c: 22:     ANSELC = 0x27;
  8518  0DD7  3027               	movlw	39
  8519  0DD8  003E               	movlb	30	; select bank30
  8520  0DD9  00CE               	movwf	78	;volatile
  8521  0DDA                     l3190:
  8522                           
  8523                           ;mcc_generated_files/pin_manager.c: 23:     ANSELB = 0xFF;
  8524  0DDA  30FF               	movlw	255
  8525  0DDB  00C3               	movwf	67	;volatile
  8526  0DDC                     l3192:
  8527                           
  8528                           ;mcc_generated_files/pin_manager.c: 24:     ANSELA = 0xF1;
  8529  0DDC  30F1               	movlw	241
  8530  0DDD  00B8               	movwf	56	;volatile
  8531                           
  8532                           ;mcc_generated_files/pin_manager.c: 29:     WPUE = 0x00;
  8533  0DDE  01E5               	clrf	101	;volatile
  8534                           
  8535                           ;mcc_generated_files/pin_manager.c: 30:     WPUB = 0x00;
  8536  0DDF  01C4               	clrf	68	;volatile
  8537                           
  8538                           ;mcc_generated_files/pin_manager.c: 31:     WPUA = 0x00;
  8539  0DE0  01B9               	clrf	57	;volatile
  8540                           
  8541                           ;mcc_generated_files/pin_manager.c: 32:     WPUC = 0x00;
  8542  0DE1  01CF               	clrf	79	;volatile
  8543                           
  8544                           ;mcc_generated_files/pin_manager.c: 37:     ODCONA = 0x00;
  8545  0DE2  01BA               	clrf	58	;volatile
  8546                           
  8547                           ;mcc_generated_files/pin_manager.c: 38:     ODCONB = 0x00;
  8548  0DE3  01C5               	clrf	69	;volatile
  8549                           
  8550                           ;mcc_generated_files/pin_manager.c: 39:     ODCONC = 0x00;
  8551  0DE4  01D0               	clrf	80	;volatile
  8552  0DE5                     l3194:
  8553                           
  8554                           ;mcc_generated_files/pin_manager.c: 44:     SLRCONA = 0xFF;
  8555  0DE5  30FF               	movlw	255
  8556  0DE6  00BB               	movwf	59	;volatile
  8557  0DE7                     l3196:
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 45:     SLRCONB = 0xFF;
  8560  0DE7  30FF               	movlw	255
  8561  0DE8  00C6               	movwf	70	;volatile
  8562  0DE9                     l3198:
  8563                           
  8564                           ;mcc_generated_files/pin_manager.c: 46:     SLRCONC = 0xFF;
  8565  0DE9  30FF               	movlw	255
  8566  0DEA  00D1               	movwf	81	;volatile
  8567  0DEB                     l3200:
  8568                           
  8569                           ;mcc_generated_files/pin_manager.c: 51:     INLVLA = 0xFF;
  8570  0DEB  30FF               	movlw	255
  8571  0DEC  00BC               	movwf	60	;volatile
  8572  0DED                     l3202:
  8573                           
  8574                           ;mcc_generated_files/pin_manager.c: 52:     INLVLB = 0xFF;
  8575  0DED  30FF               	movlw	255
  8576  0DEE  00C7               	movwf	71	;volatile
  8577  0DEF                     l3204:
  8578                           
  8579                           ;mcc_generated_files/pin_manager.c: 53:     INLVLC = 0xFF;
  8580  0DEF  30FF               	movlw	255
  8581  0DF0  00D2               	movwf	82	;volatile
  8582  0DF1                     l3206:
  8583                           
  8584                           ;mcc_generated_files/pin_manager.c: 54:     INLVLE = 0x08;
  8585  0DF1  3008               	movlw	8
  8586  0DF2  00E8               	movwf	104	;volatile
  8587  0DF3                     l3208:
  8588                           
  8589                           ;mcc_generated_files/pin_manager.c: 56:     RXPPS = 0x17;
  8590  0DF3  3017               	movlw	23
  8591  0DF4  003D               	movlb	29	; select bank29
  8592  0DF5  00CB               	movwf	75	;volatile
  8593  0DF6                     l3210:
  8594                           
  8595                           ;mcc_generated_files/pin_manager.c: 57:     RC6PPS = 0x10;
  8596  0DF6  3010               	movlw	16
  8597  0DF7  003E               	movlb	30	; select bank30
  8598  0DF8  00A6               	movwf	38	;volatile
  8599  0DF9                     l3212:
  8600                           
  8601                           ;mcc_generated_files/pin_manager.c: 58:     SSP1CLKPPS = 0x13;
  8602  0DF9  3013               	movlw	19
  8603  0DFA  003D               	movlb	29	; select bank29
  8604  0DFB  00C5               	movwf	69	;volatile
  8605  0DFC                     l3214:
  8606                           
  8607                           ;mcc_generated_files/pin_manager.c: 59:     RC3PPS = 0x14;
  8608  0DFC  3014               	movlw	20
  8609  0DFD  003E               	movlb	30	; select bank30
  8610  0DFE  00A3               	movwf	35	;volatile
  8611  0DFF                     l3216:
  8612                           
  8613                           ;mcc_generated_files/pin_manager.c: 60:     RC4PPS = 0x15;
  8614  0DFF  3015               	movlw	21
  8615  0E00  00A4               	movwf	36	;volatile
  8616  0E01                     l3218:
  8617                           
  8618                           ;mcc_generated_files/pin_manager.c: 61:     SSP1DATPPS = 0x14;
  8619  0E01  3014               	movlw	20
  8620  0E02  003D               	movlb	29	; select bank29
  8621  0E03  00C6               	movwf	70	;volatile
  8622  0E04                     l247:
  8623  0E04  0008               	return
  8624  0E05                     __end_of_PIN_MANAGER_Initialize:
  8625                           
  8626                           	psect	text20
  8627  0B81                     __ptext20:	
  8628 ;; *************** function _OSCILLATOR_Initialize *****************
  8629 ;; Defined at:
  8630 ;;		line 15 in file "mcc_generated_files/mcc.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8644 ;;      Params:         0       0       0       0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    4
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_SYSTEM_Initialize
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           
  8659                           ;psect for function _OSCILLATOR_Initialize
  8660  0B81                     _OSCILLATOR_Initialize:
  8661  0B81                     l3220:	
  8662                           ;incstack = 0
  8663                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8664                           
  8665                           
  8666                           ;mcc_generated_files/mcc.c: 18:     OSCCON1 = 0x62;
  8667  0B81  3062               	movlw	98
  8668  0B82  0031               	movlb	17	; select bank17
  8669  0B83  008D               	movwf	13	;volatile
  8670  0B84                     l3222:
  8671                           
  8672                           ;mcc_generated_files/mcc.c: 20:     OSCCON3 = 0x00;
  8673  0B84  018F               	clrf	15	;volatile
  8674  0B85                     l3224:
  8675                           
  8676                           ;mcc_generated_files/mcc.c: 22:     OSCEN = 0x00;
  8677  0B85  0191               	clrf	17	;volatile
  8678                           
  8679                           ;mcc_generated_files/mcc.c: 24:     OSCFRQ = 0x02;
  8680  0B86  3002               	movlw	2
  8681  0B87  0093               	movwf	19	;volatile
  8682  0B88                     l3226:
  8683                           
  8684                           ;mcc_generated_files/mcc.c: 26:     OSCTUNE = 0x00;
  8685  0B88  0192               	clrf	18	;volatile
  8686  0B89                     l178:
  8687  0B89  0008               	return
  8688  0B8A                     __end_of_OSCILLATOR_Initialize:
  8689                           
  8690                           	psect	text21
  8691  0D6B                     __ptext21:	
  8692 ;; *************** function _EUSART_Initialize *****************
  8693 ;; Defined at:
  8694 ;;		line 29 in file "mcc_generated_files/eusart.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8708 ;;      Params:         0       0       0       0       0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0
  8711 ;;      Totals:         0       0       0       0       0       0       0       0
  8712 ;;Total ram usage:        0 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    5
  8715 ;; This function calls:
  8716 ;;		_EUSART_SetErrorHandler
  8717 ;;		_EUSART_SetFramingErrorHandler
  8718 ;;		_EUSART_SetOverrunErrorHandler
  8719 ;;		_EUSART_SetRxInterruptHandler
  8720 ;; This function is called by:
  8721 ;;		_SYSTEM_Initialize
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function _EUSART_Initialize
  8727  0D6B                     _EUSART_Initialize:
  8728  0D6B                     l3156:	
  8729                           ;incstack = 0
  8730                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8731                           
  8732                           
  8733                           ;mcc_generated_files/eusart.c: 32:     PIE3bits.RCIE = 0;
  8734  0D6B  002E               	movlb	14	; select bank14
  8735  0D6C  1299               	bcf	25,5	;volatile
  8736  0D6D                     l3158:
  8737                           
  8738                           ;mcc_generated_files/eusart.c: 33:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8739  0D6D  3005               	movlw	low _EUSART_Receive_ISR
  8740  0D6E  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8741  0D6F  300E               	movlw	high _EUSART_Receive_ISR
  8742  0D70  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8743  0D71  318B  2366  318D   	fcall	_EUSART_SetRxInterruptHandler
  8744  0D74                     l3160:
  8745                           
  8746                           ;mcc_generated_files/eusart.c: 37:     BAUD1CON = 0x08;
  8747  0D74  3008               	movlw	8
  8748  0D75  0022               	movlb	2	; select bank2
  8749  0D76  009F               	movwf	31	;volatile
  8750  0D77                     l3162:
  8751                           
  8752                           ;mcc_generated_files/eusart.c: 40:     RC1STA = 0x90;
  8753  0D77  3090               	movlw	144
  8754  0D78  009D               	movwf	29	;volatile
  8755  0D79                     l3164:
  8756                           
  8757                           ;mcc_generated_files/eusart.c: 43:     TX1STA = 0x24;
  8758  0D79  3024               	movlw	36
  8759  0D7A  009E               	movwf	30	;volatile
  8760  0D7B                     l3166:
  8761                           
  8762                           ;mcc_generated_files/eusart.c: 46:     SP1BRGL = 0x19;
  8763  0D7B  3019               	movlw	25
  8764  0D7C  009B               	movwf	27	;volatile
  8765  0D7D                     l3168:
  8766                           
  8767                           ;mcc_generated_files/eusart.c: 49:     SP1BRGH = 0x00;
  8768  0D7D  019C               	clrf	28	;volatile
  8769  0D7E                     l3170:
  8770                           
  8771                           ;mcc_generated_files/eusart.c: 52:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8772  0D7E  3002               	movlw	low _EUSART_DefaultFramingErrorHandler
  8773  0D7F  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8774  0D80  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  8775  0D81  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8776  0D82  318B  235A  318D   	fcall	_EUSART_SetFramingErrorHandler
  8777  0D85                     l3172:
  8778                           
  8779                           ;mcc_generated_files/eusart.c: 53:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8780  0D85  3044               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8781  0D86  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8782  0D87  300B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8783  0D88  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8784  0D89  318B  2360  318D   	fcall	_EUSART_SetOverrunErrorHandler
  8785  0D8C                     l3174:
  8786                           
  8787                           ;mcc_generated_files/eusart.c: 54:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8788  0D8C  3040               	movlw	low _EUSART_DefaultErrorHandler
  8789  0D8D  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  8790  0D8E  300B               	movlw	high _EUSART_DefaultErrorHandler
  8791  0D8F  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8792  0D90  318B  2354  318D   	fcall	_EUSART_SetErrorHandler
  8793                           
  8794                           ;mcc_generated_files/eusart.c: 56:     eusartRxLastError.status = 0;
  8795  0D93  0021               	movlb	1	; select bank1
  8796  0D94  01C4               	clrf	_eusartRxLastError^(0+128)	;volatile
  8797                           
  8798                           ;mcc_generated_files/eusart.c: 59:     eusartRxHead = 0;
  8799  0D95  01FA               	clrf	_eusartRxHead	;volatile
  8800                           
  8801                           ;mcc_generated_files/eusart.c: 60:     eusartRxTail = 0;
  8802  0D96  01F9               	clrf	_eusartRxTail	;volatile
  8803                           
  8804                           ;mcc_generated_files/eusart.c: 61:     eusartRxCount = 0;
  8805  0D97  01F8               	clrf	_eusartRxCount	;volatile
  8806  0D98                     l3176:
  8807                           
  8808                           ;mcc_generated_files/eusart.c: 64:     PIE3bits.RCIE = 1;
  8809  0D98  002E               	movlb	14	; select bank14
  8810  0D99  1699               	bsf	25,5	;volatile
  8811  0D9A                     l63:
  8812  0D9A  0008               	return
  8813  0D9B                     __end_of_EUSART_Initialize:
  8814                           
  8815                           	psect	text22
  8816  0B66                     __ptext22:	
  8817 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8818 ;; Defined at:
  8819 ;;		line 191 in file "mcc_generated_files/eusart.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  8822 ;;		 -> EUSART_Receive_ISR(1), 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8834 ;;      Params:         2       0       0       0       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0
  8837 ;;      Totals:         2       0       0       0       0       0       0       0
  8838 ;;Total ram usage:        2 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    4
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_EUSART_Initialize
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           
  8849                           ;psect for function _EUSART_SetRxInterruptHandler
  8850  0B66                     _EUSART_SetRxInterruptHandler:
  8851  0B66                     l3096:	
  8852                           ;incstack = 0
  8853                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  8854                           
  8855                           
  8856                           ;mcc_generated_files/eusart.c: 192:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  8857  0B66  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  8858  0B67  0023               	movlb	3	; select bank3
  8859  0B68  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
  8860  0B69  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  8861  0B6A  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
  8862  0B6B                     l128:
  8863  0B6B  0008               	return
  8864  0B6C                     __end_of_EUSART_SetRxInterruptHandler:
  8865                           
  8866                           	psect	text23
  8867  0B60                     __ptext23:	
  8868 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8869 ;; Defined at:
  8870 ;;		line 182 in file "mcc_generated_files/eusart.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  8873 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8885 ;;      Params:         2       0       0       0       0       0       0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0
  8888 ;;      Totals:         2       0       0       0       0       0       0       0
  8889 ;;Total ram usage:        2 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    4
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_EUSART_Initialize
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _EUSART_SetOverrunErrorHandler
  8901  0B60                     _EUSART_SetOverrunErrorHandler:
  8902  0B60                     l3100:	
  8903                           ;incstack = 0
  8904                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8905                           
  8906                           
  8907                           ;mcc_generated_files/eusart.c: 183:     EUSART_OverrunErrorHandler = interruptHandler;
  8908  0B60  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8909  0B61  0023               	movlb	3	; select bank3
  8910  0B62  00E9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
  8911  0B63  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8912  0B64  00E8               	movwf	_EUSART_OverrunErrorHandler^(0+384)
  8913  0B65                     l122:
  8914  0B65  0008               	return
  8915  0B66                     __end_of_EUSART_SetOverrunErrorHandler:
  8916                           
  8917                           	psect	text24
  8918  0B5A                     __ptext24:	
  8919 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8920 ;; Defined at:
  8921 ;;		line 178 in file "mcc_generated_files/eusart.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  8924 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      void 
  8929 ;; Registers used:
  8930 ;;		wreg
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8936 ;;      Params:         2       0       0       0       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0
  8939 ;;      Totals:         2       0       0       0       0       0       0       0
  8940 ;;Total ram usage:        2 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    4
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_EUSART_Initialize
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function _EUSART_SetFramingErrorHandler
  8952  0B5A                     _EUSART_SetFramingErrorHandler:
  8953  0B5A                     l3098:	
  8954                           ;incstack = 0
  8955                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8956                           
  8957                           
  8958                           ;mcc_generated_files/eusart.c: 179:     EUSART_FramingErrorHandler = interruptHandler;
  8959  0B5A  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8960  0B5B  0023               	movlb	3	; select bank3
  8961  0B5C  00EB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
  8962  0B5D  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8963  0B5E  00EA               	movwf	_EUSART_FramingErrorHandler^(0+384)
  8964  0B5F                     l119:
  8965  0B5F  0008               	return
  8966  0B60                     __end_of_EUSART_SetFramingErrorHandler:
  8967                           
  8968                           	psect	text25
  8969  0B54                     __ptext25:	
  8970 ;; *************** function _EUSART_SetErrorHandler *****************
  8971 ;; Defined at:
  8972 ;;		line 186 in file "mcc_generated_files/eusart.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  8975 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      void 
  8980 ;; Registers used:
  8981 ;;		wreg
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8987 ;;      Params:         2       0       0       0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0
  8990 ;;      Totals:         2       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        2 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    4
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_EUSART_Initialize
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           
  9002                           ;psect for function _EUSART_SetErrorHandler
  9003  0B54                     _EUSART_SetErrorHandler:
  9004  0B54                     l3102:	
  9005                           ;incstack = 0
  9006                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9007                           
  9008                           
  9009                           ;mcc_generated_files/eusart.c: 187:     EUSART_ErrorHandler = interruptHandler;
  9010  0B54  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9011  0B55  0024               	movlb	4	; select bank4
  9012  0B56  00D8               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
  9013  0B57  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9014  0B58  00D7               	movwf	_EUSART_ErrorHandler^(0+512)
  9015  0B59                     l125:
  9016  0B59  0008               	return
  9017  0B5A                     __end_of_EUSART_SetErrorHandler:
  9018                           
  9019                           	psect	text26
  9020  0C9E                     __ptext26:	
  9021 ;; *************** function _LCD_Write_String *****************
  9022 ;; Defined at:
  9023 ;;		line 106 in file "I2C_LCD.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  Str             1    wreg     PTR unsigned char 
  9026 ;;		 -> ShowbadBettery(1), no(1), 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  Str             1    4[BANK0 ] PTR unsigned char 
  9029 ;;		 -> ShowbadBettery(1), no(1), 
  9030 ;;  i               2    2[BANK0 ] int 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9040 ;;      Params:         0       0       0       0       0       0       0       0
  9041 ;;      Locals:         0       3       0       0       0       0       0       0
  9042 ;;      Temps:          0       1       0       0       0       0       0       0
  9043 ;;      Totals:         0       4       0       0       0       0       0       0
  9044 ;;Total ram usage:        4 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    9
  9047 ;; This function calls:
  9048 ;;		_LCD_Write_Char
  9049 ;; This function is called by:
  9050 ;;		_main
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _LCD_Write_String
  9056  0C9E                     _LCD_Write_String:
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _LCD_Write_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9060                           ;LCD_Write_String@Str stored from wreg
  9061  0C9E  0020               	movlb	0	; select bank0
  9062  0C9F  00A4               	movwf	LCD_Write_String@Str
  9063  0CA0                     l3464:
  9064                           
  9065                           ;I2C_LCD.c: 106: void LCD_Write_String(char* Str);I2C_LCD.c: 107: {;I2C_LCD.c: 108:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
  9066  0CA0  01A2               	clrf	LCD_Write_String@i
  9067  0CA1  01A3               	clrf	LCD_Write_String@i+1
  9068  0CA2  2CB3               	goto	l3470
  9069  0CA3                     l3466:
  9070                           
  9071                           ;I2C_LCD.c: 109:     LCD_Write_Char(Str[i]);
  9072  0CA3  0822               	movf	LCD_Write_String@i,w
  9073  0CA4  0724               	addwf	LCD_Write_String@Str,w
  9074  0CA5  00A1               	movwf	??_LCD_Write_String
  9075  0CA6  0821               	movf	??_LCD_Write_String,w
  9076  0CA7  0086               	movwf	6
  9077  0CA8  3001               	movlw	1	; select bank2/3
  9078  0CA9  0087               	movwf	7
  9079  0CAA  0801               	movf	1,w
  9080  0CAB  318C  2435  318C   	fcall	_LCD_Write_Char
  9081  0CAE                     l3468:
  9082  0CAE  3001               	movlw	1
  9083  0CAF  0020               	movlb	0	; select bank0
  9084  0CB0  07A2               	addwf	LCD_Write_String@i,f
  9085  0CB1  3000               	movlw	0
  9086  0CB2  3DA3               	addwfc	LCD_Write_String@i+1,f
  9087  0CB3                     l3470:
  9088  0CB3  0822               	movf	LCD_Write_String@i,w
  9089  0CB4  0724               	addwf	LCD_Write_String@Str,w
  9090  0CB5  00A1               	movwf	??_LCD_Write_String
  9091  0CB6  0821               	movf	??_LCD_Write_String,w
  9092  0CB7  0086               	movwf	6
  9093  0CB8  3001               	movlw	1	; select bank2/3
  9094  0CB9  0087               	movwf	7
  9095  0CBA  0801               	movf	1,w
  9096  0CBB  1D03               	btfss	3,2
  9097  0CBC  2CBE               	goto	u2851
  9098  0CBD  2CBF               	goto	u2850
  9099  0CBE                     u2851:
  9100  0CBE  2CA3               	goto	l3466
  9101  0CBF                     u2850:
  9102  0CBF                     l484:
  9103  0CBF  0008               	return
  9104  0CC0                     __end_of_LCD_Write_String:
  9105                           
  9106                           	psect	text27
  9107  0C35                     __ptext27:	
  9108 ;; *************** function _LCD_Write_Char *****************
  9109 ;; Defined at:
  9110 ;;		line 100 in file "I2C_LCD.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  Data            1    wreg     unsigned char 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  Data            1    0[BANK0 ] unsigned char 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0, pclath, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9124 ;;      Params:         0       0       0       0       0       0       0       0
  9125 ;;      Locals:         0       1       0       0       0       0       0       0
  9126 ;;      Temps:          1       0       0       0       0       0       0       0
  9127 ;;      Totals:         1       1       0       0       0       0       0       0
  9128 ;;Total ram usage:        2 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    8
  9131 ;; This function calls:
  9132 ;;		_LCD_Write_4Bit
  9133 ;; This function is called by:
  9134 ;;		_LCD_Write_String
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           
  9139                           ;psect for function _LCD_Write_Char
  9140  0C35                     _LCD_Write_Char:
  9141                           
  9142                           ;incstack = 0
  9143                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9144                           ;LCD_Write_Char@Data stored from wreg
  9145  0C35  0020               	movlb	0	; select bank0
  9146  0C36  00A0               	movwf	LCD_Write_Char@Data
  9147  0C37                     l3278:
  9148                           
  9149                           ;I2C_LCD.c: 100: void LCD_Write_Char(char Data);I2C_LCD.c: 101: {;I2C_LCD.c: 102:   RS =
      +                           1;
  9150  0C37  0023               	movlb	3	; select bank3
  9151  0C38  01C5               	clrf	_RS^(0+384)
  9152  0C39  0AC5               	incf	_RS^(0+384),f
  9153  0C3A                     l3280:
  9154                           
  9155                           ;I2C_LCD.c: 103:   LCD_Write_4Bit(Data & 0xF0);
  9156  0C3A  0020               	movlb	0	; select bank0
  9157  0C3B  0820               	movf	LCD_Write_Char@Data,w
  9158  0C3C  39F0               	andlw	240
  9159  0C3D  318C  2405  318C   	fcall	_LCD_Write_4Bit
  9160                           
  9161                           ;I2C_LCD.c: 104:   LCD_Write_4Bit((Data << 4) & 0xF0);
  9162  0C40  0020               	movlb	0	; select bank0
  9163  0C41  0820               	movf	LCD_Write_Char@Data,w
  9164  0C42  00F7               	movwf	??_LCD_Write_Char
  9165  0C43  3003               	movlw	3
  9166  0C44                     u2685:
  9167  0C44  35F7               	lslf	??_LCD_Write_Char,f
  9168  0C45  3EFF               	addlw	-1
  9169  0C46  1D03               	skipz
  9170  0C47  2C44               	goto	u2685
  9171  0C48  3577               	lslf	??_LCD_Write_Char,w
  9172  0C49  39F0               	andlw	240
  9173  0C4A  318C  2405  318C   	fcall	_LCD_Write_4Bit
  9174  0C4D                     l478:
  9175  0C4D  0008               	return
  9176  0C4E                     __end_of_LCD_Write_Char:
  9177                           
  9178                           	psect	text28
  9179  0D3C                     __ptext28:	
  9180 ;; *************** function _LCD_Set_Cursor *****************
  9181 ;; Defined at:
  9182 ;;		line 111 in file "I2C_LCD.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  ROW             1    wreg     unsigned char 
  9185 ;;  COL             1    1[BANK0 ] unsigned char 
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;  ROW             1    4[BANK0 ] unsigned char 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  1    wreg      void 
  9190 ;; Registers used:
  9191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9192 ;; Tracked objects:
  9193 ;;		On entry : 0/0
  9194 ;;		On exit  : 0/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9197 ;;      Params:         0       1       0       0       0       0       0       0
  9198 ;;      Locals:         0       1       0       0       0       0       0       0
  9199 ;;      Temps:          0       2       0       0       0       0       0       0
  9200 ;;      Totals:         0       4       0       0       0       0       0       0
  9201 ;;Total ram usage:        4 bytes
  9202 ;; Hardware stack levels used:    1
  9203 ;; Hardware stack levels required when called:    9
  9204 ;; This function calls:
  9205 ;;		_LCD_CMD
  9206 ;; This function is called by:
  9207 ;;		_main
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function _LCD_Set_Cursor
  9213  0D3C                     _LCD_Set_Cursor:
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9217                           ;LCD_Set_Cursor@ROW stored from wreg
  9218  0D3C  0020               	movlb	0	; select bank0
  9219  0D3D  00A4               	movwf	LCD_Set_Cursor@ROW
  9220  0D3E                     l3434:
  9221                           
  9222                           ;I2C_LCD.c: 111: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          2: {;I2C_LCD.c: 113:   switch(ROW)
  9223  0D3E  2D57               	goto	l3444
  9224  0D3F                     l3436:
  9225                           
  9226                           ;I2C_LCD.c: 116:       LCD_CMD(0xC0 + COL-1);
  9227  0D3F  0821               	movf	LCD_Set_Cursor@COL,w
  9228  0D40  3EBF               	addlw	191
  9229  0D41  318C  241D  318D   	fcall	_LCD_CMD
  9230                           
  9231                           ;I2C_LCD.c: 117:       break;
  9232  0D44  2D6A               	goto	l493
  9233  0D45                     l3438:
  9234                           
  9235                           ;I2C_LCD.c: 119:       LCD_CMD(0x94 + COL-1);
  9236  0D45  0821               	movf	LCD_Set_Cursor@COL,w
  9237  0D46  3E93               	addlw	147
  9238  0D47  318C  241D  318D   	fcall	_LCD_CMD
  9239                           
  9240                           ;I2C_LCD.c: 120:       break;
  9241  0D4A  2D6A               	goto	l493
  9242  0D4B                     l3440:
  9243                           
  9244                           ;I2C_LCD.c: 122:       LCD_CMD(0xD4 + COL-1);
  9245  0D4B  0821               	movf	LCD_Set_Cursor@COL,w
  9246  0D4C  3ED3               	addlw	211
  9247  0D4D  318C  241D  318D   	fcall	_LCD_CMD
  9248                           
  9249                           ;I2C_LCD.c: 123:       break;
  9250  0D50  2D6A               	goto	l493
  9251  0D51                     l3442:
  9252                           
  9253                           ;I2C_LCD.c: 126:       LCD_CMD(0x80 + COL-1);
  9254  0D51  0821               	movf	LCD_Set_Cursor@COL,w
  9255  0D52  3E7F               	addlw	127
  9256  0D53  318C  241D  318D   	fcall	_LCD_CMD
  9257                           
  9258                           ;I2C_LCD.c: 127:   }
  9259  0D56  2D6A               	goto	l493
  9260  0D57                     l3444:
  9261  0D57  0824               	movf	LCD_Set_Cursor@ROW,w
  9262  0D58  00A2               	movwf	??_LCD_Set_Cursor
  9263  0D59  01A3               	clrf	??_LCD_Set_Cursor+1
  9264                           
  9265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9266                           ; Switch size 1, requested type "simple"
  9267                           ; Number of cases is 1, Range of values is 0 to 0
  9268                           ; switch strategies available:
  9269                           ; Name         Instructions Cycles
  9270                           ; simple_byte            4     3 (average)
  9271                           ; direct_byte            8     6 (fixed)
  9272                           ; jumptable            260     6 (fixed)
  9273                           ;	Chosen strategy is simple_byte
  9274  0D5A  0823               	movf	??_LCD_Set_Cursor+1,w
  9275  0D5B  3A00               	xorlw	0	; case 0
  9276  0D5C  1903               	skipnz
  9277  0D5D  2D5F               	goto	l3648
  9278  0D5E  2D51               	goto	l3442
  9279  0D5F                     l3648:
  9280                           
  9281                           ; Switch size 1, requested type "simple"
  9282                           ; Number of cases is 3, Range of values is 2 to 4
  9283                           ; switch strategies available:
  9284                           ; Name         Instructions Cycles
  9285                           ; simple_byte           10     6 (average)
  9286                           ; direct_byte           15     9 (fixed)
  9287                           ; jumptable            263     9 (fixed)
  9288                           ;	Chosen strategy is simple_byte
  9289  0D5F  0822               	movf	??_LCD_Set_Cursor,w
  9290  0D60  3A02               	xorlw	2	; case 2
  9291  0D61  1903               	skipnz
  9292  0D62  2D3F               	goto	l3436
  9293  0D63  3A01               	xorlw	1	; case 3
  9294  0D64  1903               	skipnz
  9295  0D65  2D45               	goto	l3438
  9296  0D66  3A07               	xorlw	7	; case 4
  9297  0D67  1903               	skipnz
  9298  0D68  2D4B               	goto	l3440
  9299  0D69  2D51               	goto	l3442
  9300  0D6A                     l493:
  9301  0D6A  0008               	return
  9302  0D6B                     __end_of_LCD_Set_Cursor:
  9303                           
  9304                           	psect	text29
  9305  0F95                     __ptext29:	
  9306 ;; *************** function _LCD_Init *****************
  9307 ;; Defined at:
  9308 ;;		line 57 in file "I2C_LCD.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  I2C_Add         1    wreg     unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  I2C_Add         1    2[BANK0 ] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, pclath, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9322 ;;      Params:         0       0       0       0       0       0       0       0
  9323 ;;      Locals:         0       1       0       0       0       0       0       0
  9324 ;;      Temps:          0       1       0       0       0       0       0       0
  9325 ;;      Totals:         0       2       0       0       0       0       0       0
  9326 ;;Total ram usage:        2 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    9
  9329 ;; This function calls:
  9330 ;;		_Delay
  9331 ;;		_IO_Expander_Write
  9332 ;;		_LCD_CMD
  9333 ;; This function is called by:
  9334 ;;		_main
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function _LCD_Init
  9340  0F95                     _LCD_Init:
  9341                           
  9342                           ;incstack = 0
  9343                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9344                           ;LCD_Init@I2C_Add stored from wreg
  9345  0F95  0020               	movlb	0	; select bank0
  9346  0F96  00A2               	movwf	LCD_Init@I2C_Add
  9347  0F97                     l3396:
  9348                           
  9349                           ;I2C_LCD.c: 57: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 58: {;I2C_LCD.c: 59:   i
      +                          2c_add = I2C_Add;
  9350  0F97  0822               	movf	LCD_Init@I2C_Add,w
  9351  0F98  00A1               	movwf	??_LCD_Init
  9352  0F99  0821               	movf	??_LCD_Init,w
  9353  0F9A  0023               	movlb	3	; select bank3
  9354  0F9B  00C4               	movwf	_i2c_add^(0+384)
  9355  0F9C                     l3398:
  9356                           
  9357                           ;I2C_LCD.c: 60:   IO_Expander_Write(0x00);
  9358  0F9C  3000               	movlw	0
  9359  0F9D  318B  23DF  318F   	fcall	_IO_Expander_Write
  9360  0FA0                     l3400:
  9361                           
  9362                           ;I2C_LCD.c: 61:   Delay(3000);
  9363  0FA0  30B8               	movlw	184
  9364  0FA1  00F3               	movwf	Delay@counter
  9365  0FA2  300B               	movlw	11
  9366  0FA3  00F4               	movwf	Delay@counter+1
  9367  0FA4  318B  239F  318F   	fcall	_Delay
  9368  0FA7                     l3402:
  9369                           
  9370                           ;I2C_LCD.c: 62:   LCD_CMD(0x03);
  9371  0FA7  3003               	movlw	3
  9372  0FA8  318C  241D  318F   	fcall	_LCD_CMD
  9373  0FAB                     l3404:
  9374                           
  9375                           ;I2C_LCD.c: 63:   Delay(500);
  9376  0FAB  30F4               	movlw	244
  9377  0FAC  00F3               	movwf	Delay@counter
  9378  0FAD  3001               	movlw	1
  9379  0FAE  00F4               	movwf	Delay@counter+1
  9380  0FAF  318B  239F  318F   	fcall	_Delay
  9381  0FB2                     l3406:
  9382                           
  9383                           ;I2C_LCD.c: 64:   LCD_CMD(0x03);
  9384  0FB2  3003               	movlw	3
  9385  0FB3  318C  241D  318F   	fcall	_LCD_CMD
  9386  0FB6                     l3408:
  9387                           
  9388                           ;I2C_LCD.c: 65:   Delay(500);
  9389  0FB6  30F4               	movlw	244
  9390  0FB7  00F3               	movwf	Delay@counter
  9391  0FB8  3001               	movlw	1
  9392  0FB9  00F4               	movwf	Delay@counter+1
  9393  0FBA  318B  239F  318F   	fcall	_Delay
  9394  0FBD                     l3410:
  9395                           
  9396                           ;I2C_LCD.c: 66:   LCD_CMD(0x03);
  9397  0FBD  3003               	movlw	3
  9398  0FBE  318C  241D  318F   	fcall	_LCD_CMD
  9399  0FC1                     l3412:
  9400                           
  9401                           ;I2C_LCD.c: 67:   Delay(500);
  9402  0FC1  30F4               	movlw	244
  9403  0FC2  00F3               	movwf	Delay@counter
  9404  0FC3  3001               	movlw	1
  9405  0FC4  00F4               	movwf	Delay@counter+1
  9406  0FC5  318B  239F  318F   	fcall	_Delay
  9407  0FC8                     l3414:
  9408                           
  9409                           ;I2C_LCD.c: 68:   LCD_CMD(0x02);
  9410  0FC8  3002               	movlw	2
  9411  0FC9  318C  241D  318F   	fcall	_LCD_CMD
  9412  0FCC                     l3416:
  9413                           
  9414                           ;I2C_LCD.c: 69:   Delay(500);
  9415  0FCC  30F4               	movlw	244
  9416  0FCD  00F3               	movwf	Delay@counter
  9417  0FCE  3001               	movlw	1
  9418  0FCF  00F4               	movwf	Delay@counter+1
  9419  0FD0  318B  239F  318F   	fcall	_Delay
  9420  0FD3                     l3418:
  9421                           
  9422                           ;I2C_LCD.c: 70:   LCD_CMD(0x20 | (2 << 2));
  9423  0FD3  3028               	movlw	40
  9424  0FD4  318C  241D  318F   	fcall	_LCD_CMD
  9425  0FD7                     l3420:
  9426                           
  9427                           ;I2C_LCD.c: 71:   Delay(5000);
  9428  0FD7  3088               	movlw	136
  9429  0FD8  00F3               	movwf	Delay@counter
  9430  0FD9  3013               	movlw	19
  9431  0FDA  00F4               	movwf	Delay@counter+1
  9432  0FDB  318B  239F  318F   	fcall	_Delay
  9433  0FDE                     l3422:
  9434                           
  9435                           ;I2C_LCD.c: 72:   LCD_CMD(0x0C);
  9436  0FDE  300C               	movlw	12
  9437  0FDF  318C  241D  318F   	fcall	_LCD_CMD
  9438  0FE2                     l3424:
  9439                           
  9440                           ;I2C_LCD.c: 73:   Delay(5000);
  9441  0FE2  3088               	movlw	136
  9442  0FE3  00F3               	movwf	Delay@counter
  9443  0FE4  3013               	movlw	19
  9444  0FE5  00F4               	movwf	Delay@counter+1
  9445  0FE6  318B  239F  318F   	fcall	_Delay
  9446  0FE9                     l3426:
  9447                           
  9448                           ;I2C_LCD.c: 74:   LCD_CMD(0x01);
  9449  0FE9  3001               	movlw	1
  9450  0FEA  318C  241D  318F   	fcall	_LCD_CMD
  9451  0FED                     l3428:
  9452                           
  9453                           ;I2C_LCD.c: 75:   Delay(5000);
  9454  0FED  3088               	movlw	136
  9455  0FEE  00F3               	movwf	Delay@counter
  9456  0FEF  3013               	movlw	19
  9457  0FF0  00F4               	movwf	Delay@counter+1
  9458  0FF1  318B  239F  318F   	fcall	_Delay
  9459  0FF4                     l3430:
  9460                           
  9461                           ;I2C_LCD.c: 76:   LCD_CMD(0x04 | 0x02);
  9462  0FF4  3006               	movlw	6
  9463  0FF5  318C  241D  318F   	fcall	_LCD_CMD
  9464  0FF8                     l3432:
  9465                           
  9466                           ;I2C_LCD.c: 77:   Delay(5000);
  9467  0FF8  3088               	movlw	136
  9468  0FF9  00F3               	movwf	Delay@counter
  9469  0FFA  3013               	movlw	19
  9470  0FFB  00F4               	movwf	Delay@counter+1
  9471  0FFC  318B  239F  318F   	fcall	_Delay
  9472  0FFF                     l466:
  9473  0FFF  0008               	return
  9474  1000                     __end_of_LCD_Init:
  9475                           
  9476                           	psect	text30
  9477  0C1D                     __ptext30:	
  9478 ;; *************** function _LCD_CMD *****************
  9479 ;; Defined at:
  9480 ;;		line 94 in file "I2C_LCD.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  CMD             1    wreg     unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  CMD             1    0[BANK0 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9494 ;;      Params:         0       0       0       0       0       0       0       0
  9495 ;;      Locals:         0       1       0       0       0       0       0       0
  9496 ;;      Temps:          1       0       0       0       0       0       0       0
  9497 ;;      Totals:         1       1       0       0       0       0       0       0
  9498 ;;Total ram usage:        2 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    8
  9501 ;; This function calls:
  9502 ;;		_LCD_Write_4Bit
  9503 ;; This function is called by:
  9504 ;;		_LCD_Init
  9505 ;;		_LCD_Set_Cursor
  9506 ;;		_LCD_SL
  9507 ;;		_LCD_SR
  9508 ;;		_LCD_Clear
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _LCD_CMD
  9514  0C1D                     _LCD_CMD:
  9515                           
  9516                           ;incstack = 0
  9517                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9518                           ;LCD_CMD@CMD stored from wreg
  9519  0C1D  0020               	movlb	0	; select bank0
  9520  0C1E  00A0               	movwf	LCD_CMD@CMD
  9521  0C1F                     l3272:
  9522                           
  9523                           ;I2C_LCD.c: 94: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 95: {;I2C_LCD.c: 96:   RS = 0
      +                          ;
  9524  0C1F  0023               	movlb	3	; select bank3
  9525  0C20  01C5               	clrf	_RS^(0+384)
  9526  0C21                     l3274:
  9527                           
  9528                           ;I2C_LCD.c: 97:   LCD_Write_4Bit(CMD & 0xF0);
  9529  0C21  0020               	movlb	0	; select bank0
  9530  0C22  0820               	movf	LCD_CMD@CMD,w
  9531  0C23  39F0               	andlw	240
  9532  0C24  318C  2405  318C   	fcall	_LCD_Write_4Bit
  9533  0C27                     l3276:
  9534                           
  9535                           ;I2C_LCD.c: 98:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  9536  0C27  0020               	movlb	0	; select bank0
  9537  0C28  0820               	movf	LCD_CMD@CMD,w
  9538  0C29  00F7               	movwf	??_LCD_CMD
  9539  0C2A  3003               	movlw	3
  9540  0C2B                     u2675:
  9541  0C2B  35F7               	lslf	??_LCD_CMD,f
  9542  0C2C  3EFF               	addlw	-1
  9543  0C2D  1D03               	skipz
  9544  0C2E  2C2B               	goto	u2675
  9545  0C2F  3577               	lslf	??_LCD_CMD,w
  9546  0C30  39F0               	andlw	240
  9547  0C31  318C  2405  318C   	fcall	_LCD_Write_4Bit
  9548  0C34                     l475:
  9549  0C34  0008               	return
  9550  0C35                     __end_of_LCD_CMD:
  9551                           
  9552                           	psect	text31
  9553  0C05                     __ptext31:	
  9554 ;; *************** function _LCD_Write_4Bit *****************
  9555 ;; Defined at:
  9556 ;;		line 86 in file "I2C_LCD.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  Nibble          1    wreg     unsigned char 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  Nibble          1    6[COMMON] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0, pclath, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9570 ;;      Params:         0       0       0       0       0       0       0       0
  9571 ;;      Locals:         1       0       0       0       0       0       0       0
  9572 ;;      Temps:          1       0       0       0       0       0       0       0
  9573 ;;      Totals:         2       0       0       0       0       0       0       0
  9574 ;;Total ram usage:        2 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    7
  9577 ;; This function calls:
  9578 ;;		_Delay
  9579 ;;		_IO_Expander_Write
  9580 ;; This function is called by:
  9581 ;;		_LCD_CMD
  9582 ;;		_LCD_Write_Char
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           
  9587                           ;psect for function _LCD_Write_4Bit
  9588  0C05                     _LCD_Write_4Bit:
  9589                           
  9590                           ;incstack = 0
  9591                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  9592                           ;LCD_Write_4Bit@Nibble stored from wreg
  9593  0C05  00F6               	movwf	LCD_Write_4Bit@Nibble
  9594  0C06                     l3104:
  9595                           
  9596                           ;I2C_LCD.c: 86: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 87: {;I2C_LCD.c: 89
      +                          :   Nibble |= RS;
  9597  0C06  0023               	movlb	3	; select bank3
  9598  0C07  0845               	movf	_RS^(0+384),w
  9599  0C08  00F5               	movwf	??_LCD_Write_4Bit
  9600  0C09  0875               	movf	??_LCD_Write_4Bit,w
  9601  0C0A  04F6               	iorwf	LCD_Write_4Bit@Nibble,f
  9602  0C0B                     l3106:
  9603                           
  9604                           ;I2C_LCD.c: 90:   IO_Expander_Write(Nibble | 0x04);
  9605  0C0B  0876               	movf	LCD_Write_4Bit@Nibble,w
  9606  0C0C  3804               	iorlw	4
  9607  0C0D  318B  23DF  318C   	fcall	_IO_Expander_Write
  9608  0C10                     l3108:
  9609                           
  9610                           ;I2C_LCD.c: 91:   IO_Expander_Write(Nibble & 0xFB);
  9611  0C10  0876               	movf	LCD_Write_4Bit@Nibble,w
  9612  0C11  39FB               	andlw	251
  9613  0C12  318B  23DF  318C   	fcall	_IO_Expander_Write
  9614  0C15                     l3110:
  9615                           
  9616                           ;I2C_LCD.c: 92:   Delay(50);
  9617  0C15  3032               	movlw	50
  9618  0C16  00F3               	movwf	Delay@counter
  9619  0C17  3000               	movlw	0
  9620  0C18  00F4               	movwf	Delay@counter+1
  9621  0C19  318B  239F  318C   	fcall	_Delay
  9622  0C1C                     l472:
  9623  0C1C  0008               	return
  9624  0C1D                     __end_of_LCD_Write_4Bit:
  9625                           
  9626                           	psect	text32
  9627  0BDF                     __ptext32:	
  9628 ;; *************** function _IO_Expander_Write *****************
  9629 ;; Defined at:
  9630 ;;		line 79 in file "I2C_LCD.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  Data            1    wreg     unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  Data            1    4[COMMON] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0, pclath, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9644 ;;      Params:         0       0       0       0       0       0       0       0
  9645 ;;      Locals:         1       0       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0
  9647 ;;      Totals:         1       0       0       0       0       0       0       0
  9648 ;;Total ram usage:        1 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    6
  9651 ;; This function calls:
  9652 ;;		_I2C_Master_Start
  9653 ;;		_I2C_Master_Stop
  9654 ;;		_I2C_Master_Write
  9655 ;; This function is called by:
  9656 ;;		_LCD_Init
  9657 ;;		_LCD_Write_4Bit
  9658 ;;		_Backlight
  9659 ;;		_noBacklight
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _IO_Expander_Write
  9665  0BDF                     _IO_Expander_Write:
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  9669                           ;IO_Expander_Write@Data stored from wreg
  9670  0BDF  00F4               	movwf	IO_Expander_Write@Data
  9671  0BE0                     l3036:
  9672                           
  9673                           ;I2C_LCD.c: 79: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 80: {;I2C_LCD.c: 8
      +                          1:   I2C_Master_Start();
  9674  0BE0  318B  2348  318B   	fcall	_I2C_Master_Start
  9675                           
  9676                           ;I2C_LCD.c: 82:   I2C_Master_Write(i2c_add);
  9677  0BE3  0023               	movlb	3	; select bank3
  9678  0BE4  0844               	movf	_i2c_add^(0+384),w
  9679  0BE5  318B  23CF  318B   	fcall	_I2C_Master_Write
  9680                           
  9681                           ;I2C_LCD.c: 83:   I2C_Master_Write(Data | BackLight_State);
  9682  0BE8  0874               	movf	IO_Expander_Write@Data,w
  9683  0BE9  0023               	movlb	3	; select bank3
  9684  0BEA  046E               	iorwf	_BackLight_State^(0+384),w
  9685  0BEB  318B  23CF  318B   	fcall	_I2C_Master_Write
  9686                           
  9687                           ;I2C_LCD.c: 84:   I2C_Master_Stop();
  9688  0BEE  318B  234E  318B   	fcall	_I2C_Master_Stop
  9689  0BF1                     l469:
  9690  0BF1  0008               	return
  9691  0BF2                     __end_of_IO_Expander_Write:
  9692                           
  9693                           	psect	text33
  9694  0BCF                     __ptext33:	
  9695 ;; *************** function _I2C_Master_Write *****************
  9696 ;; Defined at:
  9697 ;;		line 37 in file "I2C_LCD.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  data            1    wreg     unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  data            1    3[COMMON] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, pclath, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9711 ;;      Params:         0       0       0       0       0       0       0       0
  9712 ;;      Locals:         1       0       0       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0
  9714 ;;      Totals:         1       0       0       0       0       0       0       0
  9715 ;;Total ram usage:        1 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    5
  9718 ;; This function calls:
  9719 ;;		_I2C_Master_Wait
  9720 ;; This function is called by:
  9721 ;;		_IO_Expander_Write
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           
  9726                           ;psect for function _I2C_Master_Write
  9727  0BCF                     _I2C_Master_Write:
  9728                           
  9729                           ;incstack = 0
  9730                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9731                           ;I2C_Master_Write@data stored from wreg
  9732  0BCF  00F3               	movwf	I2C_Master_Write@data
  9733  0BD0                     l2928:
  9734                           
  9735                           ;I2C_LCD.c: 38:   I2C_Master_Wait();
  9736  0BD0  318B  23AB  318B   	fcall	_I2C_Master_Wait
  9737  0BD3                     l2930:
  9738                           
  9739                           ;I2C_LCD.c: 39:   SSP1BUF = data;
  9740  0BD3  0873               	movf	I2C_Master_Write@data,w
  9741  0BD4  0023               	movlb	3	; select bank3
  9742  0BD5  008C               	movwf	12	;volatile
  9743  0BD6                     l454:	
  9744                           ;I2C_LCD.c: 40:   while(!PIR3bits.SSP1IF);
  9745                           
  9746  0BD6  002E               	movlb	14	; select bank14
  9747  0BD7  1C0F               	btfss	15,0	;volatile
  9748  0BD8  2BDA               	goto	u2161
  9749  0BD9  2BDB               	goto	u2160
  9750  0BDA                     u2161:
  9751  0BDA  2BD6               	goto	l454
  9752  0BDB                     u2160:
  9753  0BDB                     l456:
  9754                           
  9755                           ;I2C_LCD.c: 41:   PIR3bits.SSP1IF = 0;
  9756  0BDB  100F               	bcf	15,0	;volatile
  9757  0BDC                     l2932:
  9758                           
  9759                           ;I2C_LCD.c: 42:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
  9760  0BDC  0023               	movlb	3	; select bank3
  9761  0BDD  0811               	movf	17,w	;volatile
  9762  0BDE                     l457:
  9763  0BDE  0008               	return
  9764  0BDF                     __end_of_I2C_Master_Write:
  9765                           
  9766                           	psect	text34
  9767  0B4E                     __ptext34:	
  9768 ;; *************** function _I2C_Master_Stop *****************
  9769 ;; Defined at:
  9770 ;;		line 20 in file "I2C_LCD.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0, pclath, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9784 ;;      Params:         0       0       0       0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0
  9787 ;;      Totals:         0       0       0       0       0       0       0       0
  9788 ;;Total ram usage:        0 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    5
  9791 ;; This function calls:
  9792 ;;		_I2C_Master_Wait
  9793 ;; This function is called by:
  9794 ;;		_IO_Expander_Write
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           
  9799                           ;psect for function _I2C_Master_Stop
  9800  0B4E                     _I2C_Master_Stop:
  9801  0B4E                     l2924:	
  9802                           ;incstack = 0
  9803                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9804                           
  9805                           
  9806                           ;I2C_LCD.c: 22:   I2C_Master_Wait();
  9807  0B4E  318B  23AB  318B   	fcall	_I2C_Master_Wait
  9808  0B51                     l2926:
  9809                           
  9810                           ;I2C_LCD.c: 23:   SSP1CON2bits.PEN = 1;
  9811  0B51  0023               	movlb	3	; select bank3
  9812  0B52  1511               	bsf	17,2	;volatile
  9813  0B53                     l445:
  9814  0B53  0008               	return
  9815  0B54                     __end_of_I2C_Master_Stop:
  9816                           
  9817                           	psect	text35
  9818  0B48                     __ptext35:	
  9819 ;; *************** function _I2C_Master_Start *****************
  9820 ;; Defined at:
  9821 ;;		line 10 in file "I2C_LCD.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      void 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0, pclath, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9835 ;;      Params:         0       0       0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    5
  9842 ;; This function calls:
  9843 ;;		_I2C_Master_Wait
  9844 ;; This function is called by:
  9845 ;;		_IO_Expander_Write
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           
  9850                           ;psect for function _I2C_Master_Start
  9851  0B48                     _I2C_Master_Start:
  9852  0B48                     l2920:	
  9853                           ;incstack = 0
  9854                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9855                           
  9856                           
  9857                           ;I2C_LCD.c: 12:   I2C_Master_Wait();
  9858  0B48  318B  23AB  318B   	fcall	_I2C_Master_Wait
  9859  0B4B                     l2922:
  9860                           
  9861                           ;I2C_LCD.c: 13:   SSP1CON2bits.SEN = 1;
  9862  0B4B  0023               	movlb	3	; select bank3
  9863  0B4C  1411               	bsf	17,0	;volatile
  9864  0B4D                     l439:
  9865  0B4D  0008               	return
  9866  0B4E                     __end_of_I2C_Master_Start:
  9867                           
  9868                           	psect	text36
  9869  0BAB                     __ptext36:	
  9870 ;; *************** function _I2C_Master_Wait *****************
  9871 ;; Defined at:
  9872 ;;		line 6 in file "I2C_LCD.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, status,2
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9886 ;;      Params:         0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    4
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_I2C_Master_Start
  9897 ;;		_I2C_Master_Stop
  9898 ;;		_I2C_Master_Write
  9899 ;;		_I2C_Master_RepeatedStart
  9900 ;;		_I2C_ACK
  9901 ;;		_I2C_NACK
  9902 ;;		_I2C_Read_Byte
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _I2C_Master_Wait
  9908  0BAB                     _I2C_Master_Wait:
  9909  0BAB                     l2898:	
  9910                           ;incstack = 0
  9911                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9912                           
  9913  0BAB                     l433:	
  9914                           ;I2C_LCD.c: 8:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  9915                           
  9916  0BAB  0023               	movlb	3	; select bank3
  9917  0BAC  190F               	btfsc	15,2	;volatile
  9918  0BAD  2BAF               	goto	u2121
  9919  0BAE  2BB0               	goto	u2120
  9920  0BAF                     u2121:
  9921  0BAF  2BAB               	goto	l433
  9922  0BB0                     u2120:
  9923  0BB0                     l2900:
  9924  0BB0  0811               	movf	17,w	;volatile
  9925  0BB1  391F               	andlw	31
  9926  0BB2  1D03               	btfss	3,2
  9927  0BB3  2BB5               	goto	u2131
  9928  0BB4  2BB6               	goto	u2130
  9929  0BB5                     u2131:
  9930  0BB5  2BAB               	goto	l433
  9931  0BB6                     u2130:
  9932  0BB6                     l436:
  9933  0BB6  0008               	return
  9934  0BB7                     __end_of_I2C_Master_Wait:
  9935                           
  9936                           	psect	text37
  9937  0B9F                     __ptext37:	
  9938 ;; *************** function _Delay *****************
  9939 ;; Defined at:
  9940 ;;		line 154 in file "I2C_LCD.c"
  9941 ;; Parameters:    Size  Location     Type
  9942 ;;  counter         2    3[COMMON] unsigned int 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;		None
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9954 ;;      Params:         2       0       0       0       0       0       0       0
  9955 ;;      Locals:         0       0       0       0       0       0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0
  9957 ;;      Totals:         2       0       0       0       0       0       0       0
  9958 ;;Total ram usage:        2 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    4
  9961 ;; This function calls:
  9962 ;;		Nothing
  9963 ;; This function is called by:
  9964 ;;		_main
  9965 ;;		_LCD_Init
  9966 ;;		_LCD_Write_4Bit
  9967 ;;		_LCD_SL
  9968 ;;		_LCD_SR
  9969 ;;		_LCD_Clear
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           
  9974                           ;psect for function _Delay
  9975  0B9F                     _Delay:
  9976  0B9F                     l3030:	
  9977                           ;incstack = 0
  9978                           ; Regs used in _Delay: [wreg+status,2+status,0]
  9979                           
  9980                           
  9981                           ;I2C_LCD.c: 155:   while(counter>0) counter--;
  9982  0B9F  2BA4               	goto	l3034
  9983  0BA0                     l3032:
  9984  0BA0  3001               	movlw	1
  9985  0BA1  02F3               	subwf	Delay@counter,f
  9986  0BA2  3000               	movlw	0
  9987  0BA3  3BF4               	subwfb	Delay@counter+1,f
  9988  0BA4                     l3034:
  9989  0BA4  0873               	movf	Delay@counter,w
  9990  0BA5  0474               	iorwf	Delay@counter+1,w
  9991  0BA6  1D03               	btfss	3,2
  9992  0BA7  2BA9               	goto	u2431
  9993  0BA8  2BAA               	goto	u2430
  9994  0BA9                     u2431:
  9995  0BA9  2BA0               	goto	l3032
  9996  0BAA                     u2430:
  9997  0BAA                     l514:
  9998  0BAA  0008               	return
  9999  0BAB                     __end_of_Delay:
 10000                           
 10001                           	psect	text38
 10002  038B                     __ptext38:	
 10003 ;; *************** function _Get_Voltage *****************
 10004 ;; Defined at:
 10005 ;;		line 102 in file "main.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  k               2    3[BANK0 ] int 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10019 ;;      Params:         0       2       0       0       0       0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0
 10021 ;;      Temps:          0      17       0       0       0       0       0       0
 10022 ;;      Totals:         0      19       0       0       0       0       0       0
 10023 ;;Total ram usage:       19 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    5
 10026 ;; This function calls:
 10027 ;;		___lwdiv
 10028 ;; This function is called by:
 10029 ;;		_main
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _Get_Voltage
 10035  038B                     _Get_Voltage:
 10036  038B                     l3358:	
 10037                           ;incstack = 0
 10038                           ; Regs used in _Get_Voltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10039                           
 10040                           
 10041                           ;main.c: 103:     Coulomb_Data.Voltage[k] = (Coulomb_Data.Voltage_H[k] << 8) + Coulomb_D
      +                          ata.Voltage_L[k];
 10042  038B  0020               	movlb	0	; select bank0
 10043  038C  0824               	movf	Get_Voltage@k+1,w
 10044  038D  00A6               	movwf	??_Get_Voltage+1
 10045  038E  0823               	movf	Get_Voltage@k,w
 10046  038F  00A5               	movwf	??_Get_Voltage
 10047  0390  35A5               	lslf	??_Get_Voltage,f
 10048  0391  0DA6               	rlf	??_Get_Voltage+1,f
 10049  0392  30A4               	movlw	164
 10050  0393  00A7               	movwf	??_Get_Voltage+2
 10051  0394  3021               	movlw	33
 10052  0395  00A8               	movwf	??_Get_Voltage+3
 10053  0396  0825               	movf	??_Get_Voltage,w
 10054  0397  0727               	addwf	??_Get_Voltage+2,w
 10055  0398  0086               	movwf	6
 10056  0399  0826               	movf	??_Get_Voltage+1,w
 10057  039A  3D28               	addwfc	??_Get_Voltage+3,w
 10058  039B  0087               	movwf	7
 10059  039C  0824               	movf	Get_Voltage@k+1,w
 10060  039D  00AA               	movwf	??_Get_Voltage+5
 10061  039E  0823               	movf	Get_Voltage@k,w
 10062  039F  00A9               	movwf	??_Get_Voltage+4
 10063  03A0  35A9               	lslf	??_Get_Voltage+4,f
 10064  03A1  0DAA               	rlf	??_Get_Voltage+5,f
 10065  03A2  3082               	movlw	130
 10066  03A3  00AB               	movwf	??_Get_Voltage+6
 10067  03A4  3021               	movlw	33
 10068  03A5  00AC               	movwf	??_Get_Voltage+7
 10069  03A6  0829               	movf	??_Get_Voltage+4,w
 10070  03A7  072B               	addwf	??_Get_Voltage+6,w
 10071  03A8  0084               	movwf	4
 10072  03A9  082A               	movf	??_Get_Voltage+5,w
 10073  03AA  3D2C               	addwfc	??_Get_Voltage+7,w
 10074  03AB  0085               	movwf	5
 10075  03AC  3F00               	moviw [0]fsr0
 10076  03AD  00AD               	movwf	??_Get_Voltage+8
 10077  03AE  3F01               	moviw [1]fsr0
 10078  03AF  00AE               	movwf	??_Get_Voltage+9
 10079  03B0  082D               	movf	??_Get_Voltage+8,w
 10080  03B1  00AE               	movwf	??_Get_Voltage+9
 10081  03B2  01AD               	clrf	??_Get_Voltage+8
 10082  03B3  3F40               	moviw [0]fsr1
 10083  03B4  072D               	addwf	??_Get_Voltage+8,w
 10084  03B5  00B0               	movwf	??_Get_Voltage+11
 10085  03B6  3F41               	moviw [1]fsr1
 10086  03B7  3D2E               	addwfc	??_Get_Voltage+9,w
 10087  03B8  00B1               	movwf	??_Get_Voltage+12
 10088  03B9  0824               	movf	Get_Voltage@k+1,w
 10089  03BA  00B3               	movwf	??_Get_Voltage+14
 10090  03BB  0823               	movf	Get_Voltage@k,w
 10091  03BC  00B2               	movwf	??_Get_Voltage+13
 10092  03BD  35B2               	lslf	??_Get_Voltage+13,f
 10093  03BE  0DB3               	rlf	??_Get_Voltage+14,f
 10094  03BF  30CE               	movlw	206
 10095  03C0  00B4               	movwf	??_Get_Voltage+15
 10096  03C1  3021               	movlw	33
 10097  03C2  00B5               	movwf	??_Get_Voltage+16
 10098  03C3  0832               	movf	??_Get_Voltage+13,w
 10099  03C4  0734               	addwf	??_Get_Voltage+15,w
 10100  03C5  0086               	movwf	6
 10101  03C6  0833               	movf	??_Get_Voltage+14,w
 10102  03C7  3D35               	addwfc	??_Get_Voltage+16,w
 10103  03C8  0087               	movwf	7
 10104  03C9  0830               	movf	??_Get_Voltage+11,w
 10105  03CA  3FC0               	movwi [0]fsr1
 10106  03CB  0831               	movf	??_Get_Voltage+12,w
 10107  03CC  3FC1               	movwi [1]fsr1
 10108  03CD                     l3360:
 10109                           
 10110                           ;main.c: 104:     if(Coulomb_Data.Voltage_Point==4) Coulomb_Data.Voltage[k] = Coulomb_Da
      +                          ta.Voltage[k]/10000;
 10111  03CD  30CA               	movlw	202
 10112  03CE  0086               	movwf	6
 10113  03CF  3021               	movlw	33
 10114  03D0  0087               	movwf	7
 10115  03D1  0801               	movf	1,w
 10116  03D2  390F               	andlw	15
 10117  03D3  3A04               	xorlw	4
 10118  03D4  1D03               	skipz
 10119  03D5  2BD7               	goto	u2791
 10120  03D6  2BD8               	goto	u2790
 10121  03D7                     u2791:
 10122  03D7  2C09               	goto	l3364
 10123  03D8                     u2790:
 10124  03D8                     l3362:
 10125  03D8  3010               	movlw	16
 10126  03D9  00F3               	movwf	___lwdiv@divisor
 10127  03DA  3027               	movlw	39
 10128  03DB  00F4               	movwf	___lwdiv@divisor+1
 10129  03DC  0824               	movf	Get_Voltage@k+1,w
 10130  03DD  00A6               	movwf	??_Get_Voltage+1
 10131  03DE  0823               	movf	Get_Voltage@k,w
 10132  03DF  00A5               	movwf	??_Get_Voltage
 10133  03E0  35A5               	lslf	??_Get_Voltage,f
 10134  03E1  0DA6               	rlf	??_Get_Voltage+1,f
 10135  03E2  30CE               	movlw	206
 10136  03E3  00A7               	movwf	??_Get_Voltage+2
 10137  03E4  3021               	movlw	33
 10138  03E5  00A8               	movwf	??_Get_Voltage+3
 10139  03E6  0825               	movf	??_Get_Voltage,w
 10140  03E7  0727               	addwf	??_Get_Voltage+2,w
 10141  03E8  0086               	movwf	6
 10142  03E9  0826               	movf	??_Get_Voltage+1,w
 10143  03EA  3D28               	addwfc	??_Get_Voltage+3,w
 10144  03EB  0087               	movwf	7
 10145  03EC  3F40               	moviw [0]fsr1
 10146  03ED  00F5               	movwf	___lwdiv@dividend
 10147  03EE  3F41               	moviw [1]fsr1
 10148  03EF  00F6               	movwf	___lwdiv@dividend+1
 10149  03F0  318E  2642  3183   	fcall	___lwdiv
 10150  03F3  0020               	movlb	0	; select bank0
 10151  03F4  0824               	movf	Get_Voltage@k+1,w
 10152  03F5  00AA               	movwf	??_Get_Voltage+5
 10153  03F6  0823               	movf	Get_Voltage@k,w
 10154  03F7  00A9               	movwf	??_Get_Voltage+4
 10155  03F8  35A9               	lslf	??_Get_Voltage+4,f
 10156  03F9  0DAA               	rlf	??_Get_Voltage+5,f
 10157  03FA  30CE               	movlw	206
 10158  03FB  00AB               	movwf	??_Get_Voltage+6
 10159  03FC  3021               	movlw	33
 10160  03FD  00AC               	movwf	??_Get_Voltage+7
 10161  03FE  0829               	movf	??_Get_Voltage+4,w
 10162  03FF  072B               	addwf	??_Get_Voltage+6,w
 10163  0400  0086               	movwf	6
 10164  0401  082A               	movf	??_Get_Voltage+5,w
 10165  0402  3D2C               	addwfc	??_Get_Voltage+7,w
 10166  0403  0087               	movwf	7
 10167  0404  0873               	movf	?___lwdiv,w
 10168  0405  3FC0               	movwi [0]fsr1
 10169  0406  0874               	movf	?___lwdiv+1,w
 10170  0407  3FC1               	movwi [1]fsr1
 10171  0408  2CBD               	goto	l393
 10172  0409                     l3364:
 10173  0409  30CA               	movlw	202
 10174  040A  0086               	movwf	6
 10175  040B  3021               	movlw	33
 10176  040C  0087               	movwf	7
 10177  040D  0801               	movf	1,w
 10178  040E  390F               	andlw	15
 10179  040F  3A03               	xorlw	3
 10180  0410  1D03               	skipz
 10181  0411  2C13               	goto	u2801
 10182  0412  2C14               	goto	u2800
 10183  0413                     u2801:
 10184  0413  2C45               	goto	l3368
 10185  0414                     u2800:
 10186  0414                     l3366:
 10187  0414  30E8               	movlw	232
 10188  0415  00F3               	movwf	___lwdiv@divisor
 10189  0416  3003               	movlw	3
 10190  0417  00F4               	movwf	___lwdiv@divisor+1
 10191  0418  0824               	movf	Get_Voltage@k+1,w
 10192  0419  00A6               	movwf	??_Get_Voltage+1
 10193  041A  0823               	movf	Get_Voltage@k,w
 10194  041B  00A5               	movwf	??_Get_Voltage
 10195  041C  35A5               	lslf	??_Get_Voltage,f
 10196  041D  0DA6               	rlf	??_Get_Voltage+1,f
 10197  041E  30CE               	movlw	206
 10198  041F  00A7               	movwf	??_Get_Voltage+2
 10199  0420  3021               	movlw	33
 10200  0421  00A8               	movwf	??_Get_Voltage+3
 10201  0422  0825               	movf	??_Get_Voltage,w
 10202  0423  0727               	addwf	??_Get_Voltage+2,w
 10203  0424  0086               	movwf	6
 10204  0425  0826               	movf	??_Get_Voltage+1,w
 10205  0426  3D28               	addwfc	??_Get_Voltage+3,w
 10206  0427  0087               	movwf	7
 10207  0428  3F40               	moviw [0]fsr1
 10208  0429  00F5               	movwf	___lwdiv@dividend
 10209  042A  3F41               	moviw [1]fsr1
 10210  042B  00F6               	movwf	___lwdiv@dividend+1
 10211  042C  318E  2642  3183   	fcall	___lwdiv
 10212  042F  0020               	movlb	0	; select bank0
 10213  0430  0824               	movf	Get_Voltage@k+1,w
 10214  0431  00AA               	movwf	??_Get_Voltage+5
 10215  0432  0823               	movf	Get_Voltage@k,w
 10216  0433  00A9               	movwf	??_Get_Voltage+4
 10217  0434  35A9               	lslf	??_Get_Voltage+4,f
 10218  0435  0DAA               	rlf	??_Get_Voltage+5,f
 10219  0436  30CE               	movlw	206
 10220  0437  00AB               	movwf	??_Get_Voltage+6
 10221  0438  3021               	movlw	33
 10222  0439  00AC               	movwf	??_Get_Voltage+7
 10223  043A  0829               	movf	??_Get_Voltage+4,w
 10224  043B  072B               	addwf	??_Get_Voltage+6,w
 10225  043C  0086               	movwf	6
 10226  043D  082A               	movf	??_Get_Voltage+5,w
 10227  043E  3D2C               	addwfc	??_Get_Voltage+7,w
 10228  043F  0087               	movwf	7
 10229  0440  0873               	movf	?___lwdiv,w
 10230  0441  3FC0               	movwi [0]fsr1
 10231  0442  0874               	movf	?___lwdiv+1,w
 10232  0443  3FC1               	movwi [1]fsr1
 10233  0444  2CBD               	goto	l393
 10234  0445                     l3368:
 10235  0445  30CA               	movlw	202
 10236  0446  0086               	movwf	6
 10237  0447  3021               	movlw	33
 10238  0448  0087               	movwf	7
 10239  0449  0801               	movf	1,w
 10240  044A  390F               	andlw	15
 10241  044B  3A02               	xorlw	2
 10242  044C  1D03               	skipz
 10243  044D  2C4F               	goto	u2811
 10244  044E  2C50               	goto	u2810
 10245  044F                     u2811:
 10246  044F  2C81               	goto	l3372
 10247  0450                     u2810:
 10248  0450                     l3370:
 10249  0450  3064               	movlw	100
 10250  0451  00F3               	movwf	___lwdiv@divisor
 10251  0452  3000               	movlw	0
 10252  0453  00F4               	movwf	___lwdiv@divisor+1
 10253  0454  0824               	movf	Get_Voltage@k+1,w
 10254  0455  00A6               	movwf	??_Get_Voltage+1
 10255  0456  0823               	movf	Get_Voltage@k,w
 10256  0457  00A5               	movwf	??_Get_Voltage
 10257  0458  35A5               	lslf	??_Get_Voltage,f
 10258  0459  0DA6               	rlf	??_Get_Voltage+1,f
 10259  045A  30CE               	movlw	206
 10260  045B  00A7               	movwf	??_Get_Voltage+2
 10261  045C  3021               	movlw	33
 10262  045D  00A8               	movwf	??_Get_Voltage+3
 10263  045E  0825               	movf	??_Get_Voltage,w
 10264  045F  0727               	addwf	??_Get_Voltage+2,w
 10265  0460  0086               	movwf	6
 10266  0461  0826               	movf	??_Get_Voltage+1,w
 10267  0462  3D28               	addwfc	??_Get_Voltage+3,w
 10268  0463  0087               	movwf	7
 10269  0464  3F40               	moviw [0]fsr1
 10270  0465  00F5               	movwf	___lwdiv@dividend
 10271  0466  3F41               	moviw [1]fsr1
 10272  0467  00F6               	movwf	___lwdiv@dividend+1
 10273  0468  318E  2642  3183   	fcall	___lwdiv
 10274  046B  0020               	movlb	0	; select bank0
 10275  046C  0824               	movf	Get_Voltage@k+1,w
 10276  046D  00AA               	movwf	??_Get_Voltage+5
 10277  046E  0823               	movf	Get_Voltage@k,w
 10278  046F  00A9               	movwf	??_Get_Voltage+4
 10279  0470  35A9               	lslf	??_Get_Voltage+4,f
 10280  0471  0DAA               	rlf	??_Get_Voltage+5,f
 10281  0472  30CE               	movlw	206
 10282  0473  00AB               	movwf	??_Get_Voltage+6
 10283  0474  3021               	movlw	33
 10284  0475  00AC               	movwf	??_Get_Voltage+7
 10285  0476  0829               	movf	??_Get_Voltage+4,w
 10286  0477  072B               	addwf	??_Get_Voltage+6,w
 10287  0478  0086               	movwf	6
 10288  0479  082A               	movf	??_Get_Voltage+5,w
 10289  047A  3D2C               	addwfc	??_Get_Voltage+7,w
 10290  047B  0087               	movwf	7
 10291  047C  0873               	movf	?___lwdiv,w
 10292  047D  3FC0               	movwi [0]fsr1
 10293  047E  0874               	movf	?___lwdiv+1,w
 10294  047F  3FC1               	movwi [1]fsr1
 10295  0480  2CBD               	goto	l393
 10296  0481                     l3372:
 10297  0481  30CA               	movlw	202
 10298  0482  0086               	movwf	6
 10299  0483  3021               	movlw	33
 10300  0484  0087               	movwf	7
 10301  0485  0801               	movf	1,w
 10302  0486  390F               	andlw	15
 10303  0487  3A01               	xorlw	1
 10304  0488  1D03               	skipz
 10305  0489  2C8B               	goto	u2821
 10306  048A  2C8C               	goto	u2820
 10307  048B                     u2821:
 10308  048B  2CBD               	goto	l391
 10309  048C                     u2820:
 10310  048C                     l3374:
 10311  048C  300A               	movlw	10
 10312  048D  00F3               	movwf	___lwdiv@divisor
 10313  048E  3000               	movlw	0
 10314  048F  00F4               	movwf	___lwdiv@divisor+1
 10315  0490  0824               	movf	Get_Voltage@k+1,w
 10316  0491  00A6               	movwf	??_Get_Voltage+1
 10317  0492  0823               	movf	Get_Voltage@k,w
 10318  0493  00A5               	movwf	??_Get_Voltage
 10319  0494  35A5               	lslf	??_Get_Voltage,f
 10320  0495  0DA6               	rlf	??_Get_Voltage+1,f
 10321  0496  30CE               	movlw	206
 10322  0497  00A7               	movwf	??_Get_Voltage+2
 10323  0498  3021               	movlw	33
 10324  0499  00A8               	movwf	??_Get_Voltage+3
 10325  049A  0825               	movf	??_Get_Voltage,w
 10326  049B  0727               	addwf	??_Get_Voltage+2,w
 10327  049C  0086               	movwf	6
 10328  049D  0826               	movf	??_Get_Voltage+1,w
 10329  049E  3D28               	addwfc	??_Get_Voltage+3,w
 10330  049F  0087               	movwf	7
 10331  04A0  3F40               	moviw [0]fsr1
 10332  04A1  00F5               	movwf	___lwdiv@dividend
 10333  04A2  3F41               	moviw [1]fsr1
 10334  04A3  00F6               	movwf	___lwdiv@dividend+1
 10335  04A4  318E  2642  3183   	fcall	___lwdiv
 10336  04A7  0020               	movlb	0	; select bank0
 10337  04A8  0824               	movf	Get_Voltage@k+1,w
 10338  04A9  00AA               	movwf	??_Get_Voltage+5
 10339  04AA  0823               	movf	Get_Voltage@k,w
 10340  04AB  00A9               	movwf	??_Get_Voltage+4
 10341  04AC  35A9               	lslf	??_Get_Voltage+4,f
 10342  04AD  0DAA               	rlf	??_Get_Voltage+5,f
 10343  04AE  30CE               	movlw	206
 10344  04AF  00AB               	movwf	??_Get_Voltage+6
 10345  04B0  3021               	movlw	33
 10346  04B1  00AC               	movwf	??_Get_Voltage+7
 10347  04B2  0829               	movf	??_Get_Voltage+4,w
 10348  04B3  072B               	addwf	??_Get_Voltage+6,w
 10349  04B4  0086               	movwf	6
 10350  04B5  082A               	movf	??_Get_Voltage+5,w
 10351  04B6  3D2C               	addwfc	??_Get_Voltage+7,w
 10352  04B7  0087               	movwf	7
 10353  04B8  0873               	movf	?___lwdiv,w
 10354  04B9  3FC0               	movwi [0]fsr1
 10355  04BA  0874               	movf	?___lwdiv+1,w
 10356  04BB  3FC1               	movwi [1]fsr1
 10357  04BC  2CBD               	goto	l393
 10358  04BD                     l391:
 10359  04BD                     l393:
 10360  04BD  0008               	return
 10361  04BE                     __end_of_Get_Voltage:
 10362                           
 10363                           	psect	text39
 10364  0E42                     __ptext39:	
 10365 ;; *************** function ___lwdiv *****************
 10366 ;; Defined at:
 10367 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  divisor         2    3[COMMON] unsigned int 
 10370 ;;  dividend        2    5[COMMON] unsigned int 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  quotient        2    1[BANK0 ] unsigned int 
 10373 ;;  counter         1    0[BANK0 ] unsigned char 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2    3[COMMON] unsigned int 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10383 ;;      Params:         4       0       0       0       0       0       0       0
 10384 ;;      Locals:         0       3       0       0       0       0       0       0
 10385 ;;      Temps:          1       0       0       0       0       0       0       0
 10386 ;;      Totals:         5       3       0       0       0       0       0       0
 10387 ;;Total ram usage:        8 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    4
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_Get_Voltage
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           
 10398                           ;psect for function ___lwdiv
 10399  0E42                     ___lwdiv:
 10400  0E42                     l3282:	
 10401                           ;incstack = 0
 10402                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10403                           
 10404  0E42  0020               	movlb	0	; select bank0
 10405  0E43  01A1               	clrf	___lwdiv@quotient
 10406  0E44  01A2               	clrf	___lwdiv@quotient+1
 10407  0E45                     l3284:
 10408  0E45  0873               	movf	___lwdiv@divisor,w
 10409  0E46  0474               	iorwf	___lwdiv@divisor+1,w
 10410  0E47  1903               	btfsc	3,2
 10411  0E48  2E4A               	goto	u2691
 10412  0E49  2E4B               	goto	u2690
 10413  0E4A                     u2691:
 10414  0E4A  2E7A               	goto	l3304
 10415  0E4B                     u2690:
 10416  0E4B                     l3286:
 10417  0E4B  01A0               	clrf	___lwdiv@counter
 10418  0E4C  0AA0               	incf	___lwdiv@counter,f
 10419  0E4D  2E57               	goto	l3292
 10420  0E4E                     l3288:
 10421  0E4E  3001               	movlw	1
 10422  0E4F                     u2705:
 10423  0E4F  35F3               	lslf	___lwdiv@divisor,f
 10424  0E50  0DF4               	rlf	___lwdiv@divisor+1,f
 10425  0E51  0B89               	decfsz	9,f
 10426  0E52  2E4F               	goto	u2705
 10427  0E53                     l3290:
 10428  0E53  3001               	movlw	1
 10429  0E54  00F7               	movwf	??___lwdiv
 10430  0E55  0877               	movf	??___lwdiv,w
 10431  0E56  07A0               	addwf	___lwdiv@counter,f
 10432  0E57                     l3292:
 10433  0E57  1FF4               	btfss	___lwdiv@divisor+1,7
 10434  0E58  2E5A               	goto	u2711
 10435  0E59  2E5B               	goto	u2710
 10436  0E5A                     u2711:
 10437  0E5A  2E4E               	goto	l3288
 10438  0E5B                     u2710:
 10439  0E5B                     l3294:
 10440  0E5B  3001               	movlw	1
 10441  0E5C                     u2725:
 10442  0E5C  35A1               	lslf	___lwdiv@quotient,f
 10443  0E5D  0DA2               	rlf	___lwdiv@quotient+1,f
 10444  0E5E  0B89               	decfsz	9,f
 10445  0E5F  2E5C               	goto	u2725
 10446  0E60  0874               	movf	___lwdiv@divisor+1,w
 10447  0E61  0276               	subwf	___lwdiv@dividend+1,w
 10448  0E62  1D03               	skipz
 10449  0E63  2E66               	goto	u2735
 10450  0E64  0873               	movf	___lwdiv@divisor,w
 10451  0E65  0275               	subwf	___lwdiv@dividend,w
 10452  0E66                     u2735:
 10453  0E66  1C03               	skipc
 10454  0E67  2E69               	goto	u2731
 10455  0E68  2E6A               	goto	u2730
 10456  0E69                     u2731:
 10457  0E69  2E6F               	goto	l3300
 10458  0E6A                     u2730:
 10459  0E6A                     l3296:
 10460  0E6A  0873               	movf	___lwdiv@divisor,w
 10461  0E6B  02F5               	subwf	___lwdiv@dividend,f
 10462  0E6C  0874               	movf	___lwdiv@divisor+1,w
 10463  0E6D  3BF6               	subwfb	___lwdiv@dividend+1,f
 10464  0E6E                     l3298:
 10465  0E6E  1421               	bsf	___lwdiv@quotient,0
 10466  0E6F                     l3300:
 10467  0E6F  3001               	movlw	1
 10468  0E70                     u2745:
 10469  0E70  36F4               	lsrf	___lwdiv@divisor+1,f
 10470  0E71  0CF3               	rrf	___lwdiv@divisor,f
 10471  0E72  0B89               	decfsz	9,f
 10472  0E73  2E70               	goto	u2745
 10473  0E74                     l3302:
 10474  0E74  3001               	movlw	1
 10475  0E75  02A0               	subwf	___lwdiv@counter,f
 10476  0E76  1D03               	btfss	3,2
 10477  0E77  2E79               	goto	u2751
 10478  0E78  2E7A               	goto	u2750
 10479  0E79                     u2751:
 10480  0E79  2E5B               	goto	l3294
 10481  0E7A                     u2750:
 10482  0E7A                     l3304:
 10483  0E7A  0822               	movf	___lwdiv@quotient+1,w
 10484  0E7B  00F4               	movwf	?___lwdiv+1
 10485  0E7C  0821               	movf	___lwdiv@quotient,w
 10486  0E7D  00F3               	movwf	?___lwdiv
 10487  0E7E                     l946:
 10488  0E7E  0008               	return
 10489  0E7F                     __end_of___lwdiv:
 10490                           
 10491                           	psect	text40
 10492  0D12                     __ptext40:	
 10493 ;; *************** function _EUSART_Read *****************
 10494 ;; Defined at:
 10495 ;;		line 86 in file "mcc_generated_files/eusart.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;		None
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  readValue       1    4[COMMON] unsigned char 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      unsigned char 
 10502 ;; Registers used:
 10503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10509 ;;      Params:         0       0       0       0       0       0       0       0
 10510 ;;      Locals:         1       0       0       0       0       0       0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0
 10512 ;;      Totals:         2       0       0       0       0       0       0       0
 10513 ;;Total ram usage:        2 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    4
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_main
 10520 ;;		_getch
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           
 10525                           ;psect for function _EUSART_Read
 10526  0D12                     _EUSART_Read:
 10527  0D12                     l3320:	
 10528                           ;incstack = 0
 10529                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10530                           
 10531  0D12                     l3322:	
 10532                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 10533                           
 10534                           
 10535                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 10536  0D12  0878               	movf	_eusartRxCount,w	;volatile
 10537  0D13  1903               	btfsc	3,2
 10538  0D14  2D16               	goto	u2771
 10539  0D15  2D17               	goto	u2770
 10540  0D16                     u2771:
 10541  0D16  2D12               	goto	l3322
 10542  0D17                     u2770:
 10543  0D17                     l3324:
 10544                           
 10545                           ;mcc_generated_files/eusart.c: 94:     eusartRxLastError = eusartRxStatusBuffer[eusartRx
      +                          Tail];
 10546  0D17  0879               	movf	_eusartRxTail,w	;volatile
 10547  0D18  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10548  0D19  0086               	movwf	6
 10549  0D1A  3001               	movlw	1	; select bank2/3
 10550  0D1B  0087               	movwf	7
 10551  0D1C  0801               	movf	1,w
 10552  0D1D  00F3               	movwf	??_EUSART_Read
 10553  0D1E  0873               	movf	??_EUSART_Read,w
 10554  0D1F  0021               	movlb	1	; select bank1
 10555  0D20  00C4               	movwf	_eusartRxLastError^(0+128)	;volatile
 10556                           
 10557                           ;mcc_generated_files/eusart.c: 96:     readValue = eusartRxBuffer[eusartRxTail++];
 10558  0D21  0879               	movf	_eusartRxTail,w
 10559  0D22  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 10560  0D23  0086               	movwf	6
 10561  0D24  3002               	movlw	2	; select bank4/5
 10562  0D25  0087               	movwf	7
 10563  0D26  0801               	movf	1,w
 10564  0D27  00F3               	movwf	??_EUSART_Read
 10565  0D28  0873               	movf	??_EUSART_Read,w
 10566  0D29  00F4               	movwf	EUSART_Read@readValue
 10567  0D2A                     l3326:
 10568  0D2A  3001               	movlw	1
 10569  0D2B  00F3               	movwf	??_EUSART_Read
 10570  0D2C  0873               	movf	??_EUSART_Read,w
 10571  0D2D  07F9               	addwf	_eusartRxTail,f	;volatile
 10572  0D2E                     l3328:
 10573                           
 10574                           ;mcc_generated_files/eusart.c: 97:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10575  0D2E  3027               	movlw	39
 10576  0D2F  0279               	subwf	_eusartRxTail,w	;volatile
 10577  0D30  1C03               	skipc
 10578  0D31  2D33               	goto	u2781
 10579  0D32  2D34               	goto	u2780
 10580  0D33                     u2781:
 10581  0D33  2D35               	goto	l3332
 10582  0D34                     u2780:
 10583  0D34                     l3330:
 10584                           
 10585                           ;mcc_generated_files/eusart.c: 98:     {;mcc_generated_files/eusart.c: 99:         eusar
      +                          tRxTail = 0;
 10586  0D34  01F9               	clrf	_eusartRxTail	;volatile
 10587  0D35                     l3332:
 10588                           
 10589                           ;mcc_generated_files/eusart.c: 101:     PIE3bits.RCIE = 0;
 10590  0D35  002E               	movlb	14	; select bank14
 10591  0D36  1299               	bcf	25,5	;volatile
 10592  0D37                     l3334:
 10593                           
 10594                           ;mcc_generated_files/eusart.c: 102:     eusartRxCount--;
 10595  0D37  3001               	movlw	1
 10596  0D38  02F8               	subwf	_eusartRxCount,f	;volatile
 10597  0D39                     l3336:
 10598                           
 10599                           ;mcc_generated_files/eusart.c: 103:     PIE3bits.RCIE = 1;
 10600  0D39  1699               	bsf	25,5	;volatile
 10601  0D3A                     l3338:
 10602                           
 10603                           ;mcc_generated_files/eusart.c: 105:     return readValue;
 10604  0D3A  0874               	movf	EUSART_Read@readValue,w
 10605  0D3B                     l84:
 10606  0D3B  0008               	return
 10607  0D3C                     __end_of_EUSART_Read:
 10608                           
 10609                           	psect	text41
 10610  0F2A                     __ptext41:	
 10611 ;; *************** function _BadBetteryFilter *****************
 10612 ;; Defined at:
 10613 ;;		line 123 in file "main.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;  k               2   14[BANK0 ] int 
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      void 
 10620 ;; Registers used:
 10621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10627 ;;      Params:         0       0       0       0       0       0       0       0
 10628 ;;      Locals:         0       2       0       0       0       0       0       0
 10629 ;;      Temps:          0       6       0       0       0       0       0       0
 10630 ;;      Totals:         0       8       0       0       0       0       0       0
 10631 ;;Total ram usage:        8 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; Hardware stack levels required when called:    5
 10634 ;; This function calls:
 10635 ;;		_Sort
 10636 ;; This function is called by:
 10637 ;;		_main
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           
 10642                           ;psect for function _BadBetteryFilter
 10643  0F2A                     _BadBetteryFilter:
 10644  0F2A                     l3378:	
 10645                           ;incstack = 0
 10646                           ; Regs used in _BadBetteryFilter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10647                           
 10648                           
 10649                           ;main.c: 124:     Sort();
 10650  0F2A  3187  2787  318F   	fcall	_Sort
 10651  0F2D                     l3380:
 10652                           
 10653                           ;main.c: 125:     for(int k=0;k<=16;k++){
 10654  0F2D  0020               	movlb	0	; select bank0
 10655  0F2E  01AE               	clrf	BadBetteryFilter@k
 10656  0F2F  01AF               	clrf	BadBetteryFilter@k+1
 10657  0F30                     l3386:
 10658                           
 10659                           ;main.c: 126:         if((Voltage_sort[16]-Coulomb_Data.Voltage[k])>=150) badBettery[k]=
      +                          1;
 10660  0F30  0020               	movlb	0	; select bank0
 10661  0F31  082F               	movf	BadBetteryFilter@k+1,w
 10662  0F32  00A9               	movwf	??_BadBetteryFilter+1
 10663  0F33  082E               	movf	BadBetteryFilter@k,w
 10664  0F34  00A8               	movwf	??_BadBetteryFilter
 10665  0F35  35A8               	lslf	??_BadBetteryFilter,f
 10666  0F36  0DA9               	rlf	??_BadBetteryFilter+1,f
 10667  0F37  30CE               	movlw	206
 10668  0F38  00AA               	movwf	??_BadBetteryFilter+2
 10669  0F39  3021               	movlw	33
 10670  0F3A  00AB               	movwf	??_BadBetteryFilter+3
 10671  0F3B  0828               	movf	??_BadBetteryFilter,w
 10672  0F3C  072A               	addwf	??_BadBetteryFilter+2,w
 10673  0F3D  0086               	movwf	6
 10674  0F3E  0829               	movf	??_BadBetteryFilter+1,w
 10675  0F3F  3D2B               	addwfc	??_BadBetteryFilter+3,w
 10676  0F40  0087               	movwf	7
 10677  0F41  3020               	movlw	32
 10678  0F42  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 10679  0F43  0084               	movwf	4
 10680  0F44  3001               	movlw	1	; select bank2/3
 10681  0F45  0085               	movwf	5
 10682  0F46  3F40               	moviw [0]fsr1
 10683  0F47  0200               	subwf	0,w
 10684  0F48  00AC               	movwf	??_BadBetteryFilter+4
 10685  0F49  3101               	addfsr 0,1
 10686  0F4A  3F41               	moviw [1]fsr1
 10687  0F4B  3B00               	subwfb	0,w
 10688  0F4C  00AD               	movwf	??_BadBetteryFilter+5
 10689  0F4D  3000               	movlw	0
 10690  0F4E  022D               	subwf	??_BadBetteryFilter+5,w
 10691  0F4F  3096               	movlw	150
 10692  0F50  1903               	skipnz
 10693  0F51  022C               	subwf	??_BadBetteryFilter+4,w
 10694  0F52  1C03               	skipc
 10695  0F53  2F55               	goto	u2831
 10696  0F54  2F56               	goto	u2830
 10697  0F55                     u2831:
 10698  0F55  2F5E               	goto	l3390
 10699  0F56                     u2830:
 10700  0F56                     l3388:
 10701  0F56  352E               	lslf	BadBetteryFilter@k,w
 10702  0F57  3EA0               	addlw	(low (_badBettery| 0))& (0+255)
 10703  0F58  0086               	movwf	6
 10704  0F59  0187               	clrf	7
 10705  0F5A  3001               	movlw	1
 10706  0F5B  3FC0               	movwi [0]fsr1
 10707  0F5C  3000               	movlw	0
 10708  0F5D  3FC1               	movwi [1]fsr1
 10709  0F5E                     l3390:
 10710                           
 10711                           ;main.c: 127:         diffBettery[k]=Voltage_sort[16]-Coulomb_Data.Voltage[k];
 10712  0F5E  082F               	movf	BadBetteryFilter@k+1,w
 10713  0F5F  00A9               	movwf	??_BadBetteryFilter+1
 10714  0F60  082E               	movf	BadBetteryFilter@k,w
 10715  0F61  00A8               	movwf	??_BadBetteryFilter
 10716  0F62  35A8               	lslf	??_BadBetteryFilter,f
 10717  0F63  0DA9               	rlf	??_BadBetteryFilter+1,f
 10718  0F64  30CE               	movlw	206
 10719  0F65  00AA               	movwf	??_BadBetteryFilter+2
 10720  0F66  3021               	movlw	33
 10721  0F67  00AB               	movwf	??_BadBetteryFilter+3
 10722  0F68  0828               	movf	??_BadBetteryFilter,w
 10723  0F69  072A               	addwf	??_BadBetteryFilter+2,w
 10724  0F6A  0086               	movwf	6
 10725  0F6B  0829               	movf	??_BadBetteryFilter+1,w
 10726  0F6C  3D2B               	addwfc	??_BadBetteryFilter+3,w
 10727  0F6D  0087               	movwf	7
 10728  0F6E  3020               	movlw	32
 10729  0F6F  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 10730  0F70  0084               	movwf	4
 10731  0F71  3001               	movlw	1	; select bank2/3
 10732  0F72  0085               	movwf	5
 10733  0F73  3F40               	moviw [0]fsr1
 10734  0F74  0200               	subwf	0,w
 10735  0F75  00AC               	movwf	??_BadBetteryFilter+4
 10736  0F76  3101               	addfsr 0,1
 10737  0F77  3F41               	moviw [1]fsr1
 10738  0F78  3B00               	subwfb	0,w
 10739  0F79  00AD               	movwf	??_BadBetteryFilter+5
 10740  0F7A  352E               	lslf	BadBetteryFilter@k,w
 10741  0F7B  3EA0               	addlw	(low (_diffBettery| (0+256)))& (0+255)
 10742  0F7C  0086               	movwf	6
 10743  0F7D  3001               	movlw	1	; select bank3/4
 10744  0F7E  0087               	movwf	7
 10745  0F7F  082C               	movf	??_BadBetteryFilter+4,w
 10746  0F80  3FC0               	movwi [0]fsr1
 10747  0F81  082D               	movf	??_BadBetteryFilter+5,w
 10748  0F82  3FC1               	movwi [1]fsr1
 10749  0F83                     l3392:
 10750                           
 10751                           ;main.c: 128:     }
 10752  0F83  3001               	movlw	1
 10753  0F84  07AE               	addwf	BadBetteryFilter@k,f
 10754  0F85  3000               	movlw	0
 10755  0F86  3DAF               	addwfc	BadBetteryFilter@k+1,f
 10756  0F87                     l3394:
 10757  0F87  082F               	movf	BadBetteryFilter@k+1,w
 10758  0F88  3A80               	xorlw	128
 10759  0F89  00A8               	movwf	??_BadBetteryFilter
 10760  0F8A  3080               	movlw	128
 10761  0F8B  0228               	subwf	??_BadBetteryFilter,w
 10762  0F8C  1D03               	skipz
 10763  0F8D  2F90               	goto	u2845
 10764  0F8E  3011               	movlw	17
 10765  0F8F  022E               	subwf	BadBetteryFilter@k,w
 10766  0F90                     u2845:
 10767  0F90  1C03               	skipc
 10768  0F91  2F93               	goto	u2841
 10769  0F92  2F94               	goto	u2840
 10770  0F93                     u2841:
 10771  0F93  2F30               	goto	l3386
 10772  0F94                     u2840:
 10773  0F94                     l408:
 10774  0F94  0008               	return
 10775  0F95                     __end_of_BadBetteryFilter:
 10776                           
 10777                           	psect	text42
 10778  0787                     __ptext42:	
 10779 ;; *************** function _Sort *****************
 10780 ;; Defined at:
 10781 ;;		line 110 in file "main.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  j               2    6[BANK0 ] int 
 10786 ;;  i               2    4[BANK0 ] int 
 10787 ;;  n               2    0        int 
 10788 ;;  tmp             2    0[BANK0 ] int 
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10798 ;;      Params:         0       0       0       0       0       0       0       0
 10799 ;;      Locals:         0       8       0       0       0       0       0       0
 10800 ;;      Temps:          4       0       0       0       0       0       0       0
 10801 ;;      Totals:         4       8       0       0       0       0       0       0
 10802 ;;Total ram usage:       12 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    4
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_BadBetteryFilter
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _Sort
 10814  0787                     _Sort:
 10815  0787                     l3248:	
 10816                           ;incstack = 0
 10817                           ; Regs used in _Sort: [wreg-fsr1h+status,2+status,0]
 10818                           
 10819  0787                     l3250:
 10820                           
 10821                           ;main.c: 113:     for(i = n-1; i > 0; i--){
 10822  0787  3010               	movlw	16
 10823  0788  0020               	movlb	0	; select bank0
 10824  0789  00A4               	movwf	Sort@i
 10825  078A  3000               	movlw	0
 10826  078B  00A5               	movwf	Sort@i+1
 10827  078C                     l3256:
 10828                           
 10829                           ;main.c: 114:         for(j = 0; j <= i-1; j++){
 10830  078C  0020               	movlb	0	; select bank0
 10831  078D  01A6               	clrf	Sort@j
 10832  078E  01A7               	clrf	Sort@j+1
 10833  078F  2FD1               	goto	l3268
 10834  0790                     l3258:
 10835                           
 10836                           ;main.c: 115:             if( Voltage_sort[j] > Voltage_sort[j+1]){
 10837  0790  0020               	movlb	0	; select bank0
 10838  0791  3526               	lslf	Sort@j,w
 10839  0792  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 10840  0793  0086               	movwf	6
 10841  0794  3001               	movlw	1	; select bank2/3
 10842  0795  0087               	movwf	7
 10843  0796  3F40               	moviw [0]fsr1
 10844  0797  00F3               	movwf	??_Sort
 10845  0798  3F41               	moviw [1]fsr1
 10846  0799  00F4               	movwf	??_Sort+1
 10847  079A  3526               	lslf	Sort@j,w
 10848  079B  3E49               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 10849  079C  0086               	movwf	6
 10850  079D  3001               	movlw	1	; select bank2/3
 10851  079E  0087               	movwf	7
 10852  079F  3F40               	moviw [0]fsr1
 10853  07A0  00F5               	movwf	??_Sort+2
 10854  07A1  3F41               	moviw [1]fsr1
 10855  07A2  00F6               	movwf	??_Sort+3
 10856  07A3  0874               	movf	??_Sort+1,w
 10857  07A4  0276               	subwf	??_Sort+3,w
 10858  07A5  1D03               	skipz
 10859  07A6  2FA9               	goto	u2645
 10860  07A7  0873               	movf	??_Sort,w
 10861  07A8  0275               	subwf	??_Sort+2,w
 10862  07A9                     u2645:
 10863  07A9  1803               	skipnc
 10864  07AA  2FAC               	goto	u2641
 10865  07AB  2FAD               	goto	u2640
 10866  07AC                     u2641:
 10867  07AC  2FCD               	goto	l3266
 10868  07AD                     u2640:
 10869  07AD                     l3260:
 10870                           
 10871                           ;main.c: 116:                 tmp = Voltage_sort [j];
 10872  07AD  3526               	lslf	Sort@j,w
 10873  07AE  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 10874  07AF  0086               	movwf	6
 10875  07B0  3001               	movlw	1	; select bank2/3
 10876  07B1  0087               	movwf	7
 10877  07B2  3F40               	moviw [0]fsr1
 10878  07B3  00A0               	movwf	Sort@tmp
 10879  07B4  3F41               	moviw [1]fsr1
 10880  07B5  00A1               	movwf	Sort@tmp+1
 10881  07B6                     l3262:
 10882                           
 10883                           ;main.c: 117:                 Voltage_sort[j] = Voltage_sort[j+1];
 10884  07B6  3526               	lslf	Sort@j,w
 10885  07B7  3E49               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 10886  07B8  0086               	movwf	6
 10887  07B9  3001               	movlw	1	; select bank2/3
 10888  07BA  0087               	movwf	7
 10889  07BB  3526               	lslf	Sort@j,w
 10890  07BC  3E47               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 10891  07BD  0084               	movwf	4
 10892  07BE  3001               	movlw	1	; select bank2/3
 10893  07BF  0085               	movwf	5
 10894  07C0  3F40               	moviw [0]fsr1
 10895  07C1  3F80               	movwi [0]fsr0
 10896  07C2  3F41               	moviw [1]fsr1
 10897  07C3  3F81               	movwi [1]fsr0
 10898  07C4                     l3264:
 10899                           
 10900                           ;main.c: 118:                 Voltage_sort[j+1] = tmp;
 10901  07C4  3526               	lslf	Sort@j,w
 10902  07C5  3E49               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 10903  07C6  0086               	movwf	6
 10904  07C7  3001               	movlw	1	; select bank2/3
 10905  07C8  0087               	movwf	7
 10906  07C9  0820               	movf	Sort@tmp,w
 10907  07CA  3FC0               	movwi [0]fsr1
 10908  07CB  0821               	movf	Sort@tmp+1,w
 10909  07CC  3FC1               	movwi [1]fsr1
 10910  07CD                     l3266:
 10911                           
 10912                           ;main.c: 120:         }
 10913  07CD  3001               	movlw	1
 10914  07CE  07A6               	addwf	Sort@j,f
 10915  07CF  3000               	movlw	0
 10916  07D0  3DA7               	addwfc	Sort@j+1,f
 10917  07D1                     l3268:
 10918  07D1  0824               	movf	Sort@i,w
 10919  07D2  3EFF               	addlw	255
 10920  07D3  00F3               	movwf	??_Sort
 10921  07D4  30FF               	movlw	255
 10922  07D5  3D25               	addwfc	Sort@i+1,w
 10923  07D6  00F4               	movwf	??_Sort+1
 10924  07D7  0874               	movf	??_Sort+1,w
 10925  07D8  3A80               	xorlw	128
 10926  07D9  00F5               	movwf	??_Sort+2
 10927  07DA  0827               	movf	Sort@j+1,w
 10928  07DB  3A80               	xorlw	128
 10929  07DC  0275               	subwf	??_Sort+2,w
 10930  07DD  1D03               	skipz
 10931  07DE  2FE1               	goto	u2655
 10932  07DF  0826               	movf	Sort@j,w
 10933  07E0  0273               	subwf	??_Sort,w
 10934  07E1                     u2655:
 10935  07E1  1803               	skipnc
 10936  07E2  2FE4               	goto	u2651
 10937  07E3  2FE5               	goto	u2650
 10938  07E4                     u2651:
 10939  07E4  2F90               	goto	l3258
 10940  07E5                     u2650:
 10941  07E5                     l3270:
 10942                           
 10943                           ;main.c: 121:     }
 10944  07E5  30FF               	movlw	255
 10945  07E6  0020               	movlb	0	; select bank0
 10946  07E7  07A4               	addwf	Sort@i,f
 10947  07E8  30FF               	movlw	255
 10948  07E9  3DA5               	addwfc	Sort@i+1,f
 10949  07EA  0825               	movf	Sort@i+1,w
 10950  07EB  3A80               	xorlw	128
 10951  07EC  00F3               	movwf	??_Sort
 10952  07ED  3080               	movlw	128
 10953  07EE  0273               	subwf	??_Sort,w
 10954  07EF  1D03               	skipz
 10955  07F0  2FF3               	goto	u2665
 10956  07F1  3001               	movlw	1
 10957  07F2  0224               	subwf	Sort@i,w
 10958  07F3                     u2665:
 10959  07F3  1803               	skipnc
 10960  07F4  2FF6               	goto	u2661
 10961  07F5  2FF7               	goto	u2660
 10962  07F6                     u2661:
 10963  07F6  2F8C               	goto	l3256
 10964  07F7                     u2660:
 10965  07F7                     l402:
 10966  07F7  0008               	return
 10967  07F8                     __end_of_Sort:
 10968                           
 10969                           	psect	intentry
 10970  0004                     __pintentry:	
 10971 ;; *************** function _INTERRUPT_InterruptManager *****************
 10972 ;; Defined at:
 10973 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;		None
 10976 ;; Auto vars:     Size  Location     Type
 10977 ;;		None
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  1    wreg      void 
 10980 ;; Registers used:
 10981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10982 ;; Tracked objects:
 10983 ;;		On entry : 0/0
 10984 ;;		On exit  : 0/0
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10987 ;;      Params:         0       0       0       0       0       0       0       0
 10988 ;;      Locals:         0       0       0       0       0       0       0       0
 10989 ;;      Temps:          0       0       0       0       0       0       0       0
 10990 ;;      Totals:         0       0       0       0       0       0       0       0
 10991 ;;Total ram usage:        0 bytes
 10992 ;; Hardware stack levels used:    1
 10993 ;; Hardware stack levels required when called:    3
 10994 ;; This function calls:
 10995 ;;		Absolute function
 10996 ;;		_EUSART_Receive_ISR
 10997 ;; This function is called by:
 10998 ;;		Interrupt level 1
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002  0004                     _INTERRUPT_InterruptManager:
 11003                           
 11004                           ;incstack = 0
 11005  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11006                           
 11007                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11008  0005  3180               	pagesel	$
 11009  0006                     i1l2704:
 11010                           
 11011                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.PEIE == 1)
 11012  0006  1F0B               	btfss	11,6	;volatile
 11013  0007  2809               	goto	u188_21
 11014  0008  280A               	goto	u188_20
 11015  0009                     u188_21:
 11016  0009  2825               	goto	i1l308
 11017  000A                     u188_20:
 11018  000A                     i1l2706:
 11019                           
 11020                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 11021  000A  002E               	movlb	14	; select bank14
 11022  000B  1E99               	btfss	25,5	;volatile
 11023  000C  280E               	goto	u189_21
 11024  000D  280F               	goto	u189_20
 11025  000E                     u189_21:
 11026  000E  2825               	goto	i1l308
 11027  000F                     u189_20:
 11028  000F                     i1l2708:
 11029  000F  1E8F               	btfss	15,5	;volatile
 11030  0010  2812               	goto	u190_21
 11031  0011  2813               	goto	u190_20
 11032  0012                     u190_21:
 11033  0012  2825               	goto	i1l308
 11034  0013                     u190_20:
 11035  0013                     i1l2710:
 11036                           
 11037                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 11038  0013  0023               	movlb	3	; select bank3
 11039  0014  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 11040  0015  008A               	movwf	10
 11041  0016  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 11042  0017  000A               	callw
 11043  0018  3180               	pagesel	$
 11044  0019                     i1l2712:
 11045  0019  1003               	clrc
 11046  001A  0020               	movlb	0	; select bank0
 11047  001B  1C96               	btfss	22,1	;volatile
 11048  001C  1403               	setc
 11049  001D  1803               	btfsc	3,0
 11050  001E  2820               	goto	u191_21
 11051  001F  2823               	goto	u191_20
 11052  0020                     u191_21:
 11053  0020  0020               	movlb	0	; select bank0
 11054  0021  1496               	bsf	22,1	;volatile
 11055  0022  2825               	goto	u192_24
 11056  0023                     u191_20:
 11057  0023  0020               	movlb	0	; select bank0
 11058  0024  1096               	bcf	22,1	;volatile
 11059  0025                     u192_24:
 11060  0025                     i1l308:
 11061  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11062  0026  0009               	retfie
 11063  0027                     __end_of_INTERRUPT_InterruptManager:
 11064                           
 11065                           	psect	text44
 11066  0E05                     __ptext44:	
 11067 ;; *************** function _EUSART_Receive_ISR *****************
 11068 ;; Defined at:
 11069 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;		None
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      void 
 11076 ;; Registers used:
 11077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11083 ;;      Params:         0       0       0       0       0       0       0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0
 11086 ;;      Totals:         0       0       0       0       0       0       0       0
 11087 ;;Total ram usage:        0 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    2
 11090 ;; This function calls:
 11091 ;;		Absolute function
 11092 ;;		_EUSART_DefaultErrorHandler
 11093 ;;		_EUSART_DefaultFramingErrorHandler
 11094 ;;		_EUSART_DefaultOverrunErrorHandler
 11095 ;;		_EUSART_RxDataHandler
 11096 ;; This function is called by:
 11097 ;;		_EUSART_Initialize
 11098 ;;		_INTERRUPT_InterruptManager
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           
 11103                           ;psect for function _EUSART_Receive_ISR
 11104  0E05                     _EUSART_Receive_ISR:
 11105  0E05                     i1l2552:	
 11106                           ;incstack = 0
 11107                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11108                           
 11109                           
 11110                           ;mcc_generated_files/eusart.c: 131:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11111  0E05  087A               	movf	_eusartRxHead,w	;volatile
 11112  0E06  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11113  0E07  0086               	movwf	6
 11114  0E08  3001               	movlw	1	; select bank2/3
 11115  0E09  0087               	movwf	7
 11116  0E0A  0181               	clrf	1
 11117  0E0B                     i1l2554:
 11118                           
 11119                           ;mcc_generated_files/eusart.c: 133:     if(RC1STAbits.FERR){
 11120  0E0B  0022               	movlb	2	; select bank2
 11121  0E0C  1D1D               	btfss	29,2	;volatile
 11122  0E0D  2E0F               	goto	u178_21
 11123  0E0E  2E10               	goto	u178_20
 11124  0E0F                     u178_21:
 11125  0E0F  2E1C               	goto	i1l2560
 11126  0E10                     u178_20:
 11127  0E10                     i1l2556:
 11128                           
 11129                           ;mcc_generated_files/eusart.c: 134:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11130  0E10  087A               	movf	_eusartRxHead,w	;volatile
 11131  0E11  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11132  0E12  0086               	movwf	6
 11133  0E13  3001               	movlw	1	; select bank2/3
 11134  0E14  0087               	movwf	7
 11135  0E15  1481               	bsf	1,1
 11136  0E16                     i1l2558:
 11137                           
 11138                           ;mcc_generated_files/eusart.c: 135:         EUSART_FramingErrorHandler();
 11139  0E16  0023               	movlb	3	; select bank3
 11140  0E17  086B               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 11141  0E18  008A               	movwf	10
 11142  0E19  086A               	movf	_EUSART_FramingErrorHandler^(0+384),w
 11143  0E1A  000A               	callw
 11144  0E1B  318E               	pagesel	$
 11145  0E1C                     i1l2560:
 11146                           
 11147                           ;mcc_generated_files/eusart.c: 138:     if(RC1STAbits.OERR){
 11148  0E1C  0022               	movlb	2	; select bank2
 11149  0E1D  1C9D               	btfss	29,1	;volatile
 11150  0E1E  2E20               	goto	u179_21
 11151  0E1F  2E21               	goto	u179_20
 11152  0E20                     u179_21:
 11153  0E20  2E2D               	goto	i1l2566
 11154  0E21                     u179_20:
 11155  0E21                     i1l2562:
 11156                           
 11157                           ;mcc_generated_files/eusart.c: 139:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11158  0E21  087A               	movf	_eusartRxHead,w	;volatile
 11159  0E22  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11160  0E23  0086               	movwf	6
 11161  0E24  3001               	movlw	1	; select bank2/3
 11162  0E25  0087               	movwf	7
 11163  0E26  1501               	bsf	1,2
 11164  0E27                     i1l2564:
 11165                           
 11166                           ;mcc_generated_files/eusart.c: 140:         EUSART_OverrunErrorHandler();
 11167  0E27  0023               	movlb	3	; select bank3
 11168  0E28  0869               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 11169  0E29  008A               	movwf	10
 11170  0E2A  0868               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 11171  0E2B  000A               	callw
 11172  0E2C  318E               	pagesel	$
 11173  0E2D                     i1l2566:
 11174                           
 11175                           ;mcc_generated_files/eusart.c: 143:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11176  0E2D  087A               	movf	_eusartRxHead,w	;volatile
 11177  0E2E  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11178  0E2F  0086               	movwf	6
 11179  0E30  3001               	movlw	1	; select bank2/3
 11180  0E31  0087               	movwf	7
 11181  0E32  0801               	movf	1,w
 11182  0E33  1903               	btfsc	3,2
 11183  0E34  2E36               	goto	u180_21
 11184  0E35  2E37               	goto	u180_20
 11185  0E36                     u180_21:
 11186  0E36  2E3E               	goto	i1l2570
 11187  0E37                     u180_20:
 11188  0E37                     i1l2568:
 11189                           
 11190                           ;mcc_generated_files/eusart.c: 144:         EUSART_ErrorHandler();
 11191  0E37  0024               	movlb	4	; select bank4
 11192  0E38  0858               	movf	(_EUSART_ErrorHandler+1)^(0+512),w
 11193  0E39  008A               	movwf	10
 11194  0E3A  0857               	movf	_EUSART_ErrorHandler^(0+512),w
 11195  0E3B  000A               	callw
 11196  0E3C  318E               	pagesel	$
 11197                           
 11198                           ;mcc_generated_files/eusart.c: 145:     } else {
 11199  0E3D  2E41               	goto	i1l103
 11200  0E3E                     i1l2570:
 11201                           
 11202                           ;mcc_generated_files/eusart.c: 146:         EUSART_RxDataHandler();
 11203  0E3E  318C  244E  318E   	fcall	_EUSART_RxDataHandler
 11204  0E41                     i1l103:
 11205  0E41  0008               	return
 11206  0E42                     __end_of_EUSART_Receive_ISR:
 11207                           
 11208                           	psect	text45
 11209  0B44                     __ptext45:	
 11210 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 11211 ;; Defined at:
 11212 ;;		line 166 in file "mcc_generated_files/eusart.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;		None
 11215 ;; Auto vars:     Size  Location     Type
 11216 ;;		None
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  1    wreg      void 
 11219 ;; Registers used:
 11220 ;;		None
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11226 ;;      Params:         0       0       0       0       0       0       0       0
 11227 ;;      Locals:         0       0       0       0       0       0       0       0
 11228 ;;      Temps:          0       0       0       0       0       0       0       0
 11229 ;;      Totals:         0       0       0       0       0       0       0       0
 11230 ;;Total ram usage:        0 bytes
 11231 ;; Hardware stack levels used:    1
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_EUSART_Initialize
 11236 ;;		_EUSART_Receive_ISR
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           
 11241                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 11242  0B44                     _EUSART_DefaultOverrunErrorHandler:
 11243  0B44                     i1l2384:	
 11244                           ;incstack = 0
 11245                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 11246                           
 11247                           
 11248                           ;mcc_generated_files/eusart.c: 169:     RC1STAbits.CREN = 0;
 11249  0B44  0022               	movlb	2	; select bank2
 11250  0B45  121D               	bcf	29,4	;volatile
 11251                           
 11252                           ;mcc_generated_files/eusart.c: 170:     RC1STAbits.CREN = 1;
 11253  0B46  161D               	bsf	29,4	;volatile
 11254  0B47                     i1l113:
 11255  0B47  0008               	return
 11256  0B48                     __end_of_EUSART_DefaultOverrunErrorHandler:
 11257                           
 11258                           	psect	text46
 11259  0002                     __ptext46:	
 11260 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 11261 ;; Defined at:
 11262 ;;		line 164 in file "mcc_generated_files/eusart.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;		None
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		None
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11276 ;;      Params:         0       0       0       0       0       0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0       0
 11278 ;;      Temps:          0       0       0       0       0       0       0       0
 11279 ;;      Totals:         0       0       0       0       0       0       0       0
 11280 ;;Total ram usage:        0 bytes
 11281 ;; Hardware stack levels used:    1
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_EUSART_Initialize
 11286 ;;		_EUSART_Receive_ISR
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           
 11291                           ;psect for function _EUSART_DefaultFramingErrorHandler
 11292  0002                     _EUSART_DefaultFramingErrorHandler:
 11293  0002                     i1l110:	
 11294                           ;incstack = 0
 11295                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 11296                           
 11297  0002  0008               	return
 11298  0003                     __end_of_EUSART_DefaultFramingErrorHandler:
 11299                           
 11300                           	psect	text47
 11301  0B40                     __ptext47:	
 11302 ;; *************** function _EUSART_DefaultErrorHandler *****************
 11303 ;; Defined at:
 11304 ;;		line 174 in file "mcc_generated_files/eusart.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11318 ;;      Params:         0       0       0       0       0       0       0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0
 11320 ;;      Temps:          0       0       0       0       0       0       0       0
 11321 ;;      Totals:         0       0       0       0       0       0       0       0
 11322 ;;Total ram usage:        0 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:    1
 11325 ;; This function calls:
 11326 ;;		_EUSART_RxDataHandler
 11327 ;; This function is called by:
 11328 ;;		_EUSART_Initialize
 11329 ;;		_EUSART_Receive_ISR
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           
 11334                           ;psect for function _EUSART_DefaultErrorHandler
 11335  0B40                     _EUSART_DefaultErrorHandler:
 11336  0B40                     i1l2386:	
 11337                           ;incstack = 0
 11338                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11339                           
 11340                           
 11341                           ;mcc_generated_files/eusart.c: 175:     EUSART_RxDataHandler();
 11342  0B40  318C  244E  318B   	fcall	_EUSART_RxDataHandler
 11343  0B43                     i1l116:
 11344  0B43  0008               	return
 11345  0B44                     __end_of_EUSART_DefaultErrorHandler:
 11346                           
 11347                           	psect	text48
 11348  0C4E                     __ptext48:	
 11349 ;; *************** function _EUSART_RxDataHandler *****************
 11350 ;; Defined at:
 11351 ;;		line 152 in file "mcc_generated_files/eusart.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  test            2    0        int 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11365 ;;      Params:         0       0       0       0       0       0       0       0
 11366 ;;      Locals:         2       0       0       0       0       0       0       0
 11367 ;;      Temps:          1       0       0       0       0       0       0       0
 11368 ;;      Totals:         3       0       0       0       0       0       0       0
 11369 ;;Total ram usage:        3 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_EUSART_Receive_ISR
 11375 ;;		_EUSART_DefaultErrorHandler
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           
 11380                           ;psect for function _EUSART_RxDataHandler
 11381  0C4E                     _EUSART_RxDataHandler:
 11382  0C4E                     i1l2298:	
 11383                           ;incstack = 0
 11384                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 11385                           
 11386                           
 11387                           ;mcc_generated_files/eusart.c: 154:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 11388  0C4E  0022               	movlb	2	; select bank2
 11389  0C4F  0819               	movf	25,w	;volatile
 11390  0C50  00F0               	movwf	??_EUSART_RxDataHandler
 11391  0C51  087A               	movf	_eusartRxHead,w
 11392  0C52  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11393  0C53  0086               	movwf	6
 11394  0C54  3002               	movlw	2	; select bank4/5
 11395  0C55  0087               	movwf	7
 11396  0C56  0870               	movf	??_EUSART_RxDataHandler,w
 11397  0C57  0081               	movwf	1
 11398  0C58                     i1l2300:
 11399  0C58  3001               	movlw	1
 11400  0C59  00F0               	movwf	??_EUSART_RxDataHandler
 11401  0C5A  0870               	movf	??_EUSART_RxDataHandler,w
 11402  0C5B  07FA               	addwf	_eusartRxHead,f	;volatile
 11403  0C5C                     i1l2302:
 11404  0C5C                     i1l2304:
 11405                           
 11406                           ;mcc_generated_files/eusart.c: 156:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11407  0C5C  3027               	movlw	39
 11408  0C5D  027A               	subwf	_eusartRxHead,w	;volatile
 11409  0C5E  1C03               	skipc
 11410  0C5F  2C61               	goto	u158_21
 11411  0C60  2C62               	goto	u158_20
 11412  0C61                     u158_21:
 11413  0C61  2C63               	goto	i1l2308
 11414  0C62                     u158_20:
 11415  0C62                     i1l2306:
 11416                           
 11417                           ;mcc_generated_files/eusart.c: 157:     {;mcc_generated_files/eusart.c: 158:         eus
      +                          artRxHead = 0;
 11418  0C62  01FA               	clrf	_eusartRxHead	;volatile
 11419  0C63                     i1l2308:
 11420                           
 11421                           ;mcc_generated_files/eusart.c: 160:     eusartRxCount++;
 11422  0C63  3001               	movlw	1
 11423  0C64  00F0               	movwf	??_EUSART_RxDataHandler
 11424  0C65  0870               	movf	??_EUSART_RxDataHandler,w
 11425  0C66  07F8               	addwf	_eusartRxCount,f	;volatile
 11426  0C67                     i1l107:
 11427  0C67  0008               	return
 11428  0C68                     __end_of_EUSART_RxDataHandler:
 11429  007E                     btemp	set	126	;btemp
 11430  007E                     int$flags	set	126
 11431  007E                     wtemp0	set	126
 11432  217C                     
 11433                           	psect	config
 11434                           
 11435                           ;Config register CONFIG1 @ 0x8007
 11436                           ;	External Oscillator mode selection bits
 11437                           ;	FEXTOSC = OFF, Oscillator not enabled
 11438                           ;	Power-up default value for COSC bits
 11439                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 11440                           ;	Clock Out Enable bit
 11441                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 11442                           ;	Clock Switch Enable bit
 11443                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11444                           ;	Fail-Safe Clock Monitor Enable bit
 11445                           ;	FCMEN = ON, FSCM timer enabled
 11446  8007                     	org	32775
 11447  8007  3FEC               	dw	16364
 11448                           
 11449                           ;Config register CONFIG2 @ 0x8008
 11450                           ;	Master Clear Enable bit
 11451                           ;	MCLRE = ON, MCLR pin is Master Clear function
 11452                           ;	Power-up Timer Enable bit
 11453                           ;	PWRTE = OFF, PWRT disabled
 11454                           ;	Low-Power BOR enable bit
 11455                           ;	LPBOREN = OFF, ULPBOR disabled
 11456                           ;	Brown-out reset enable bits
 11457                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 11458                           ;	Brown-out Reset Voltage Selection
 11459                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 11460                           ;	Zero-cross detect disable
 11461                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 11462                           ;	Peripheral Pin Select one-way control
 11463                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 11464                           ;	Stack Overflow/Underflow Reset Enable bit
 11465                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 11466                           ;	Background Debugger
 11467                           ;	DEBUG = OFF, Background Debugger disabled
 11468  8008                     	org	32776
 11469  8008  3FFF               	dw	16383
 11470                           
 11471                           ;Config register CONFIG3 @ 0x8009
 11472                           ;	WDT Period Select bits
 11473                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11474                           ;	WDT operating mode
 11475                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 11476                           ;	WDT Window Select bits
 11477                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11478                           ;	WDT input clock selector
 11479                           ;	WDTCCS = SC, Software Control
 11480  8009                     	org	32777
 11481  8009  3F9F               	dw	16287
 11482                           
 11483                           ;Config register CONFIG4 @ 0x800A
 11484                           ;	UserNVM self-write protection bits
 11485                           ;	WRT = OFF, Write protection off
 11486                           ;	Scanner Enable bit
 11487                           ;	SCANE = available, Scanner module is available for use
 11488                           ;	Low Voltage Programming Enable bit
 11489                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 11490  800A                     	org	32778
 11491  800A  3FFF               	dw	16383
 11492                           
 11493                           ;Config register CONFIG5 @ 0x800B
 11494                           ;	UserNVM Program memory code protection bit
 11495                           ;	CP = OFF, Program Memory code protection disabled
 11496                           ;	DataNVM code protection bit
 11497                           ;	CPD = OFF, Data EEPROM code protection disabled
 11498  800B                     	org	32779
 11499  800B  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        9
    BSS         231
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80     20      65
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            60     16      57
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 1
		 -> ShowbadBettery(BANK3[1]), no(BANK3[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 1
		 -> ShowbadBettery(BANK3[1]), no(BANK3[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1397_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 1
		 -> ShowbadBettery(BANK3[1]), no(BANK3[1]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 1
		 -> ShowbadBettery(BANK3[1]), no(BANK3[1]), 

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 1
		 -> ShowbadBettery(BANK3[1]), no(BANK3[1]), 

    main@index	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.ID(BIGRAM[2]), Coulomb_Data(BIGRAM[116]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _dtoa->_abs
    _pad->_fputc
    _pad->_strlen
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_Delay
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   19223
                                             14 BANK1      6     6      0
                                              0 BANK4     16    16      0
                   _BadBetteryFilter
                              _Delay
                        _EUSART_Read
                       _EUSART_Write
                        _Get_Voltage
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    8297
                                              0 BANK1     14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7739
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7320
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5537
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3325
                                             13 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1491
                                              5 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1099
                                              5 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMMON     2     0      2
                                             16 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       2     2      0      34
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                        _master_init
 ---------------------------------------------------------------------------------
 (2) _master_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     484
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     4     4      0    1685
                                              1 BANK0      4     4      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1    1818
                                              1 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2870
                                              1 BANK0      2     2      0
                              _Delay
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0    1421
                                              5 COMMON     2     2      0
                              _Delay
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              4 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              3 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     0      2    1294
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Get_Voltage                                         19    17      2    1392
                                              3 BANK0     19    17      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     961
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      37
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BadBetteryFilter                                     8     8      0     582
                                              8 BANK0      8     8      0
                               _Sort
 ---------------------------------------------------------------------------------
 (2) _Sort                                                12    12      0     390
                                              3 COMMON     4     4      0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       2
                   Absolute function *
                 _EUSART_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       2
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       1
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                3     3      0       1
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BadBetteryFilter
     _Sort
   _Delay
   _EUSART_Read
   _EUSART_Write
   _Get_Voltage
     ___lwdiv
   _LCD_Init
     _Delay
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _master_init
   _TMR0_ReadTimer
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     174       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     14      41       8       81.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4F      12       98.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               3C     10      39      14       95.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     174      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 22 18:22:31 2021

                ?_EUSART_SetRxInterruptHandler 0073                                              _i 00C2  
                    __size_of_BadBetteryFilter 006B                                             l63 0D9A  
                                           l90 0B93                                             l84 0D3B  
                                           l87 0B8B                                             l96 0B71  
                                           _RS 01C5                                             _ch 016F  
                                           _no 01E6                                            l122 0B65  
                                          l125 0B59                                            l119 0B5F  
                                          l128 0B6B                                            l402 07F7  
                                          l181 0B80                                            l247 0E04  
                                          l175 0C04                                            l408 0F94  
                                          l184 0B9E                                            l433 0BAB  
                                          l265 0BC2                                            l514 0BAA  
                                          l178 0B89                                            l274 0B78  
                                          l436 0BB6                                            l364 0108  
                                          l445 0B53                                            l454 0BD6  
                                          l391 04BD                                            l439 0B4D  
                                          l456 0BDB                                            l472 0C1C  
                                          l393 04BD                                            l457 0BDE  
                                          l466 0FFF                                            l475 0C34  
                                          l484 0CBF                                            l469 0BF1  
                                          l493 0D6A                                            l478 0C4D  
                                          l780 06AB                                            l766 05B0  
                                          l767 05C1                                            l946 0E7E  
                                          l779 069A                                            _abs 0C82  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0ED1  
               ?_EUSART_SetFramingErrorHandler 0073                        __size_of_PMD_Initialize 0008  
                                          wreg 0009                                __end_of_LCD_CMD 0C35  
                                 ?_EUSART_Read 0070                            LCD_Write_String@Str 0024  
                               _LCD_Set_Cursor 0D3C                                           l1201 0DCB  
                                         ?_abs 0076                                           l1220 0ED0  
                                         l1205 0C9D                                           l3000 0677  
                                         l1208 0C9D                                           l1161 0F29  
                                         l1129 0D11                                           l3002 067C  
                                         l1234 0C81                                           l3010 0EE6  
                                         l1170 02A2                                           l3100 0B60  
                                         l1228 0CE8                                           l3020 0F14  
                                         l1156 0EED                                           l3012 0EEB  
                                         l3004 0ED3                                           l1164 0264  
                                         l1173 0313                                           l1165 026D  
                                         l3030 0B9F                                           l3110 0C15  
                                         l3102 0B54                                           l3022 0F1D  
                                         l3014 0EF0                                           l3006 0ED8  
                                         l1159 0F0F                                           l3032 0BA0  
                                         l3104 0C06                                           l3200 0DEB  
                                         l3016 0EFC                                           l3008 0EE1  
                                         l3040 022D                                           l3120 06D0  
                                         l3112 06AE                                           l1169 028A  
                                         l3034 0BA4                                           l3106 0C0B  
                                         l3210 0DF6                                           l3202 0DED  
                                         l3026 0C82                                           l3018 0F01  
                                         l3050 0282                                           l3042 0240  
                                         l1194 0786                                           l3122 06E2  
                                         l3114 06BF                                           l1187 038A  
                                         l3300 0E6F                                           l3036 0BE0  
                                         l3108 0C10                                           l3220 0B81  
                                         l3212 0DF9                                           l3204 0DEF  
                                         l3028 0C90                                           l3060 02AA  
                                         l3052 0292                                           l3044 0246  
                                         l3132 072E                                           l3124 06F3  
                                         l3116 06C7                                           l3302 0E74  
                                         l3222 0B84                                           l3214 0DFC  
                                         l3206 0DF1                                           l3230 0BBC  
                                         l3070 0321                                           l3062 02AF  
                                         l3054 0298                                           l3046 0269  
                                         l3038 021D                                           l3150 077C  
                                         l3134 073F                                           l3142 0758  
                                         l3126 06FB                                           l3118 06CC  
                                         l3310 0DA1                                           l3320 0D12  
                                         l3304 0E7A                                           l3400 0FA0  
                                         l3160 0D74                                           l3224 0B85  
                                         l3216 0DFF                                           l3208 0DF3  
                                         l3232 0BBD                                           l3240 0B98  
                                         l3080 0355                                           l3072 032E  
                                         l3064 02DE                                           l3056 029D  
                                         l3048 027C                                           l3144 0760  
                                         l3136 0747                                           l3128 0714  
                                         l3312 0DA5                                           l3250 0787  
                                         l3330 0D34                                           l3322 0D12  
                                         l3410 0FBD                                           l3402 0FA7  
                                         l3170 0D7E                                           l3162 0D77  
                                         l3226 0B88                                           l3218 0E01  
                                         l3234 0BBF                                           l3242 0B99  
                                         l3090 036E                                           l3082 035A  
                                         l3074 033B                                           l3066 02E2  
                                         l3058 02A7                                           l3138 0752  
                                         l3314 0DB9                                           l3260 07AD  
                                         l3332 0D35                                           l3324 0D17  
                                         l3420 0FD7                                           l3412 0FC1  
                                         l3404 0FAB                                           l3172 0D85  
                                         l3164 0D79                                           l3156 0D6B  
                                         l3180 0DCC                                           l3228 0BB7  
                                         l3244 0B9A                                           l3236 0B94  
                                         l3084 035F                                           l3092 0377  
                                         l3076 0349                                           l3068 02E6  
                                         l3148 0763                                           l3316 0DC3  
                                         l3308 0D9D                                           l3500 00B3  
                                         l3270 07E5                                           l3262 07B6  
                                         l3334 0D37                                           l3326 0D2A  
                                         l3430 0FF4                                           l3422 0FDE  
                                         l3414 0FC8                                           l3406 0FB2  
                                         l3174 0D8C                                           l3166 0D7B  
                                         l3158 0D6D                                           l3190 0DDA  
                                         l3182 0DD1                                           l3246 0B9C  
                                         l3238 0B97                                           l3350 0BFE  
                                         l3342 0BF2                                           l3086 0365  
                                         l3078 034E                                           l3510 00E3  
                                         l3502 00C2                                           l3264 07C4  
                                         l3256 078C                                           l3248 0787  
                                         l3336 0D39                                           l3328 0D2E  
                                         l3360 03CD                                           l3272 0C1F  
                                         l3432 0FF8                                           l3424 0FE2  
                                         l3416 0FCC                                           l3408 0FB6  
                                         l3440 0D4B                                           l3280 0C3A  
                                         l3096 0B66                                           l3176 0D98  
                                         l3168 0D7D                                           l3192 0DDC  
                                         l3184 0DD3                                           l3352 0C01  
                                         l3344 0BF5                                           l3088 036A  
                                         l3512 00F2                                           l3520 0116  
                                         l3504 00C8                                           l3266 07CD  
                                         l3258 0790                                           l3338 0D3A  
                                         l3290 0E53                                           l3282 0E42  
                                         l3370 0450                                           l3362 03D8  
                                         l3274 0C21                                           l3426 0FE9  
                                         l3418 0FD3                                           l3442 0D51  
                                         l3434 0D3E                                           l3098 0B5A  
                                         l3194 0DE5                                           l3186 0DD5  
                                         l3178 0B79                                           l3346 0BF8  
                                         l3354 0B72                                           l3530 0128  
                                         l3522 011B                                           l3514 0102  
                                         l3506 00CE                                           l3268 07D1  
                                         l3380 0F2D                                           l3292 0E57  
                                         l3284 0E45                                           l3372 0481  
                                         l3364 0409                                           l2900 0BB0  
                                         l3276 0C27                                           l3428 0FED  
                                         l3436 0D3F                                           l3444 0D57  
                                         l3196 0DE7                                           l3188 0DD7  
                                         l3348 0BFB                                           l3460 0D08  
                                         l3452 0CEB                                           l3532 0146  
                                         l3516 010D                                           l3508 00DE  
                                         l3390 0F5E                                           l3294 0E5B  
                                         l3286 0E4B                                           l3374 048C  
                                         l3366 0414                                           l3358 038B  
                                         l3438 0D45                                           l3278 0C37  
                                         l3470 0CB3                                           l3198 0DE9  
                                         l2902 0CC2                                           l2910 0C69  
                                         l3454 0CF3                                           l3550 01A2  
                                         l3542 015C                                           l3534 014A  
                                         l3518 0112                                           l3392 0F83  
                                         l3296 0E6A                                           l3288 0E4E  
                                         l3368 0445                                           l2920 0B48  
                                         l3464 0CA0                                           l2904 0CC5  
                                         l2912 0C6E                                           l3456 0CF5  
                                         l3560 01BE                                           l3552 01B6  
                                         l3544 017D                                           l3536 0159  
                                         l3528 011D                                           l3480 0085  
                                         l3394 0F87                                           l3386 0F30  
                                         l3378 0F2A                                           l3298 0E6E  
                                         l2922 0B4B                                           l2930 0BD3  
                                         l3466 0CA3                                           l2906 0CD3  
                                         l2914 0C72                                           l3458 0CF7  
                                         l3570 01F9                                           l3562 01C2  
                                         l3554 01B9                                           l3546 017F  
                                         l3482 0086                                           l3388 0F56  
                                         l2924 0B4E                                           l2932 0BDC  
                                         l3396 0F97                                           l3468 0CAE  
                                         l2940 04CA                                           l2908 0CD8  
                                         l2916 0C7B                                           l3572 01FD  
                                         l3564 01C9                                           l3548 01A0  
                                         l3484 0095                                           l3476 0081  
                                         l2926 0B51                                           l3398 0F9C  
                                         l2950 0524                                           l2942 04EC  
                                         l3574 0204                                           l3566 01DE  
                                         l3494 00A3                                           l3486 0098  
                                         l3478 0084                                           ?_pad 002D  
                                         l2928 0BD0                                           l3648 0D5F  
                                         l2960 0544                                           l2952 0531  
                                         l2944 04F6                                           l2936 04BE  
                                         l2880 0B6D                                           l3576 0209  
                                         l3568 01E5                                           l3496 00AD  
                                         l3488 00A0                                           l2962 054C  
                                         l2954 0534                                           l2970 058D  
                                         l2946 0515                                           l2938 04C0  
                                         l2890 0E98                                           l2882 0E7F  
                                         l3498 00AE                                           l2972 0592  
                                         l2964 056E                                           l2956 053C  
                                         l2948 051A                                           l2980 05EE  
                                         l2876 0B8B                                           l2892 0EB6  
                                         l2884 0E84                                           l2966 057E  
                                         l2958 0540                                           l2990 062F  
                                         l2982 05F8                                           l2974 05C2  
                                         l2878 0B90                                           l2894 0EC8  
                                         l2886 0E89                                           l2968 057F  
                                         l2992 0633                                           l2984 0617  
                                         l2976 05C3                                           l2888 0E8E  
                                         l2898 0BAB                                           l2994 0637  
                                         l2986 0624                                           l2978 05CD  
                                         l2996 0659                                           l2988 0627  
                                         l2998 0669                                           STR_1 0800  
                                         STR_2 0800                                           u2100 0E98  
                                         u2101 0E97                                           u2110 0EB6  
                                         u2111 0EB5                                           u2120 0BB0  
                                         u2121 0BAF                                           u2130 0BB6  
                                         u2210 0521                                           u2131 0BB5  
                                         u2115 0EB2                                           u2220 0531  
                                         u2300 05F8                                           u2140 0CE8  
                                         u2221 0530                                           u2301 05F7  
                                         u2141 0CE7                                           _LATA 0016  
                                         u2230 0544                                           u2070 0B90  
                                         u2150 0C7B                                           _LATB 0017  
                                         u2231 0543                                           u2071 0B8F  
                                         u2151 0C7A                                           _LATC 0018  
                                         u2160 0BDB                                           u2240 056E  
                                         u2320 0624                                           u2080 0E84  
                                         u2400 0F0F                                           u2161 0BDA  
                                         u2241 056D                                           u2321 0623  
                                         u2081 0E83                                           u2401 0F0E  
                                         u2250 058D                                           u2170 04CA  
                                         u2330 0637                                           u2090 0E89  
                                         u2410 0F14                                           u2251 058C  
                                         u2171 04C9                                           u2331 0636  
                                         u2091 0E88                                           u2411 0F13  
                                         u2260 0592                                           u2340 0659  
                                         u2420 0C90                                           u2500 0298  
                                         u2261 0591                                           u2245 056A  
                                         u2341 0658                                           u2421 0C8F  
                                         u2405 0F0B                                           u2501 0297  
                                         u2430 0BAA                                           u2190 04F6  
                                         u2350 0677                                           u2510 029D  
                                         u2431 0BA9                                           u2191 04F5  
                                         u2351 0676                                           u2511 029C  
                                         u2360 067C                                           u2280 05CD  
                                         u2520 0321                                           u2440 0238  
                                         u2600 06BF                                           u2361 067B  
                                         u2345 0655                                           u2281 05CC  
                                         u2425 0C8C                                           u2521 0320  
                                         u2441 0236                                           u2601 06BE  
                                         u2530 032E                                           u2450 0239  
                                         u2610 06E2                                           u2531 032D  
                                         u2611 06E1                                           u2380 0ED8  
                                         u2540 033B                                           u2460 0246  
                                         u2620 06F3                                           u2381 0ED7  
                                         u2541 033A                                           u2525 031D  
                                         u2461 0245                                           u2621 06F2  
                                         u2710 0E5B                                           u2390 0EE6  
                                         u2550 0349                                           u2630 073F  
                                         u2711 0E5A                                           u2391 0EE5  
                                         u2551 0348                                           u2631 073E  
                                         u2640 07AD                                           u2800 0414  
                                         u2560 034E                                           u2480 0269  
                                         u2641 07AC                                           u2705 0E4F  
                                         u2801 0413                                           u2561 034D  
                                         u2545 0337                                           u2481 0268  
                                         u2650 07E5                                           u2730 0E6A  
                                         u2810 0450                                           u2570 0355  
                                         u2490 027C                                           u2651 07E4  
                                         u2731 0E69                                           u2811 044F  
                                         u2571 0354                                           u2555 0345  
                                         u2491 027B                                           u2660 07F7  
                                         u2820 048C                                           u2580 035A  
                                         u2900 00F2                                           u2661 07F6  
                                         u2645 07A9                                           u2725 0E5C  
                                         u2821 048B                                           u2581 0359  
                                         u2901 00F1                                           u2830 0F56  
                                         u2750 0E7A                                           u2590 0365  
                                         u2910 0102                                           u2655 07E1  
                                         u2831 0F55                                           u2751 0E79  
                                         u2735 0E66                                           u2591 0364  
                                         u2495 0278                                           u2911 0101  
                                         u2840 0F94                                           u2760 0DC3  
                                         u2920 010D                                           u2665 07F3  
                                         u2841 0F93                                           u2745 0E70  
                                         u2761 0DC2                                           u2921 010C  
                                         u2905 00EE                                           u2770 0D17  
                                         u2690 0E4B                                           u2850 0CBF  
                                         u2930 011B                                           u2771 0D16  
                                         u2691 0E4A                                           u2675 0C2B  
                                         u2851 0CBE                                           u2931 011A  
                                         u2915 00FE                                           u2780 0D34  
                                         u2940 0159                                           u2860 0091  
                                         _PMD0 0796                                           u2845 0F90  
                                         u2781 0D33                                           u2685 0C44  
                                         u2941 0158                                           _PMD1 0797  
                                         u2790 03D8                                           u2950 017D  
                                         u2870 00A0                                           _PMD2 0798  
                                         u2791 03D7                                           u2951 017C  
                                         u2871 009F                                           _PMD3 0799  
                                         u2960 01A0                                           u2880 00C2  
                                         _PMD4 079A                                           u2961 019F  
                                         u2945 0155                                           u2881 00C1  
                                         _PMD5 079B                                           u2970 01B6  
                                         u2890 00C8                                           u2971 01B5  
                                         u2891 00C7                                           u2980 0218  
                                         u2981 0217                                           u2885 00BE  
                                         u2975 01B2                                           u2985 0214  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUE 0F65  
                                 _Voltage_sort 0147                                           _Sort 0787  
                            ?_LCD_Write_String 0070                                           abs@a 0076  
                                         _dbuf 01C6                                           _main 0081  
                                         _dtoa 021B                            __end_of_Get_Voltage 04BE  
                                         _prec 016B                                           _nout 01C2  
                                         pad@i 0031                                           pad@p 002E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0033                                           btemp 007E  
                                         start 0027                             ??_LCD_Write_String 0021  
                         LCD_Write_4Bit@Nibble 0076                                          ??_abs 0030  
                                        ??_pad 0030                        __end_of_TMR0_Initialize 0BC3  
                             __end_of_LCD_Init 1000                               ?_I2C_Master_Wait 0070  
                                ?_EUSART_Write 0070                               ?_I2C_Master_Stop 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0B8A  
                                        ?_Sort 0070                                __end_of___aodiv 05C2  
                                        ?_main 0070                                          ?_dtoa 003A  
                              __end_of___aomod 06AC                                __end_of___lwdiv 0E7F  
                                        i1l110 0002                                          i1l103 0E41  
                                        i1l113 0B47                                          i1l107 0C67  
                                        i1l116 0B43                                          i1l308 0025  
                                        _OSCEN 0891                                   vfpfcnvrt@fmt 0058  
                                        _TMR0H 001D                                          _TMR0L 001C  
                                        _PORTA 000C                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _RXPPS 0ECB                                          _Delay 0B9F  
                       __end_of_LCD_Set_Cursor 0D6B                                   ?_master_init 0070  
                                        Sort@i 0024                                          Sort@j 0026  
                                        _flags 016D                                          _fputc 0E7F  
                                        _fputs 0CC0                                          pad@fp 0035  
                                        _width 0169                                          _putch 0B6C  
                                        main@i 0251                                          main@j 0255  
                                        dtoa@d 003A                                          dtoa@i 0056  
                                        dtoa@n 004E                                          dtoa@p 0048  
                                        dtoa@s 004C                                          dtoa@w 004A  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __end_of_sprintf 0D12  
                               _LCD_Write_4Bit 0C05                                 _LCD_Write_Char 0C35  
                              __initialization 0029                                   __end_of_Sort 07F8  
                                 __end_of_main 021B                                   __end_of_dtoa 038B  
                            _IO_Expander_Write 0BDF                                 ??_EUSART_Write 0073  
                  ?_INTERRUPT_InterruptManager 0070                             ?_IO_Expander_Write 0070  
                                       ??_Sort 0073                 ??_EUSART_SetRxInterruptHandler 0075  
                                       ??_main 00D3                                         ??_dtoa 0042  
                            BadBetteryFilter@k 002E                                      ??_LCD_CMD 0077  
                                       ?_Delay 0073                              ?_I2C_Master_Start 0070  
                            ?_I2C_Master_Write 0070                            ??_IO_Expander_Write 0074  
                              ?_LCD_Set_Cursor 0021                             ??_I2C_Master_Start 0073  
    __end_of_EUSART_DefaultFramingErrorHandler 0003     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0002                                    _Get_Voltage 038B  
                           ??_I2C_Master_Write 0073                     _EUSART_OverrunErrorHandler 01E8  
                                       ?_fputc 0075                                         ?_fputs 0025  
                                       _ANSELA 0F38                                         ?_putch 0070  
                                       _ANSELB 0F43                                         _ANSELC 0F4E  
                                       _T0CON0 001E                                         _T0CON1 001F  
                                       _RC1REG 0119                                         _RC1STA 011D  
                                       _RC3PPS 0F23                                         _RC4PPS 0F24  
                                       i1l2300 0C58                                         i1l2302 0C5C  
                                       i1l2304 0C5C                                         _ODCONA 0F3A  
                                       i1l2306 0C62                                         _ODCONB 0F45  
                                       _ODCONC 0F50                                         _RC6PPS 0F26  
                                       i1l2308 0C63                                         i1l2710 0013  
                                       i1l2384 0B44                                         i1l2560 0E1C  
                                       i1l2552 0E05                                         i1l2712 0019  
                                       i1l2704 0006                                         i1l2298 0C4E  
                                       i1l2386 0B40                                         i1l2570 0E3E  
                                       i1l2562 0E21                                         i1l2554 0E0B  
                                       i1l2706 000A                                         i1l2564 0E27  
                                       i1l2556 0E10                                         i1l2708 000F  
                                       i1l2566 0E2D                                         i1l2558 0E16  
                                       i1l2568 0E37                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLE 0F68                                         u180_20 0E37  
                                       u180_21 0E36                                         u158_20 0C62  
                                       u190_20 0013                                         u158_21 0C61  
                                       u190_21 0012                                         u191_20 0023  
                                       u191_21 0020                                         u192_24 0025  
                                       u178_20 0E10                                         u178_21 0E0F  
                                       u179_20 0E21                                         u179_21 0E20  
                                       u188_20 000A                                         u188_21 0009  
                                       u189_20 000F                                         u189_21 000E  
                                       _OSCFRQ 0893                                         u220lld 0515  
                                       u231lld 0617                                         u218lld 04E9  
                                       u227lld 05B0                                         u237lld 069A  
                                       u229lld 05EC                                         _TX1REG 011A  
                                       u247lld 0264                                         _TX1STA 011E  
                       __end_of_LCD_Write_4Bit 0C1D                         __end_of_LCD_Write_Char 0C4E  
                    __end_of_IO_Expander_Write 0BF2                                   vfprintf@cfmt 006E  
                                    ??___aodiv 0073                                      ??___aomod 0073  
                             _BadBetteryFilter 0F2A                                      ??___lwdiv 0077  
                             ?_TMR0_Initialize 0070                                         pad@buf 002D  
                                       dtoa@fp 0045                                         _strlen 0C68  
                                       fputc@c 0075                                 _PMD_Initialize 0B79  
                                       fputs@c 0029                                         fputs@i 002A  
                                       fputs@s 002C                               __end_of_vfprintf 0DCC  
                                    ??_sprintf 00C9                                     _badBettery 00A0  
                         __size_of_EUSART_Read 002A                              _SYSTEM_Initialize 0BF2  
                      __end_of__initialization 007D                                      ?_LCD_Init 0070  
                              ?_LCD_Write_4Bit 0070                             ?_SYSTEM_Initialize 0070  
                              ?_LCD_Write_Char 0070                                  __end_of_Delay 0BAB  
                               __pcstackCOMMON 0070                                   __pidataBANK1 07F8  
                                 __pidataBANK3 0003                            ??_SYSTEM_Initialize 0075  
                                __end_of_fputc 0ED1                                  __end_of_fputs 0CE9  
                                __end_of_putch 0B72                        __size_of_TMR0_ReadTimer 0007  
                       __end_of_PMD_Initialize 0B81                                        ??_Delay 0075  
                         _eusartRxStatusBuffer 0120                ??_EUSART_SetOverrunErrorHandler 0075  
                                      ??_fputc 0020                      __end_of_SYSTEM_Initialize 0C05  
                                      ??_fputs 0026                                        ??_putch 0074  
                         __size_of_master_init 000B                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                           __end_of_EUSART_Write 0B94  
                                   ??_LCD_Init 0021                    __size_of_EUSART_Receive_ISR 003D  
                   __size_of_IO_Expander_Write 0013                                     __pmaintext 0081  
                                   __pintentry 0004                      __size_of_LCD_Write_String 0022  
                 ??_EUSART_DefaultErrorHandler 0073                                ?_PMD_Initialize 0070  
                                      ?_strlen 0073                                        _LCD_CMD 0C1D  
                                _eusartRxCount 0078                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                             __size_of_vfpfcnvrt 00DB  
                __size_of_EUSART_RxDataHandler 001A                                        _OSCTUNE 0892  
                                      _SSP1ADD 018D                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                                      _SSP1BUF 018C                                        _SSP1MSK 018E  
                     ??_EUSART_SetErrorHandler 0075                                        _i2c_add 01C4  
          __size_of_EUSART_DefaultErrorHandler 0004                                        ___aodiv 04BE  
                                      ___aomod 05C2                                        Sort@tmp 0020  
                                      ___lwdiv 0E42                                      ?_vfprintf 0068  
                             ??_LCD_Set_Cursor 0022                                 _ShowbadBettery 01E7  
                                      __ptext1 0CE9                                        __ptext2 0D9B  
                                      __ptext3 06AC                                        __ptext4 021B  
                                      __ptext5 0ED1                                        __ptext6 0C68  
                                      __ptext7 0CC0                                        __ptext8 0E7F  
                                      __ptext9 0B6C                                __size_of_strlen 001A  
                        _OSCILLATOR_Initialize 0B81                                   __size_of_abs 001C  
                                 __size_of_pad 0059                       ??_PIN_MANAGER_Initialize 0073  
                     __size_of_I2C_Master_Wait 000C                       __size_of_I2C_Master_Stop 0006  
                                 ?_Get_Voltage 0023                     __size_of_SYSTEM_Initialize 0013  
                                      _sprintf 0CE9                                        clrloop0 0BC4  
                                      main@out 0247                       __end_of_BadBetteryFilter 0F95  
                         end_of_initialization 007D          __end_of_EUSART_SetOverrunErrorHandler 0B66  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0B60  
                                      fputc@fp 0077                                        fputs@fp 0025  
                            _EUSART_Initialize 0D6B                      __size_of_I2C_Master_Start 0006  
                    __size_of_I2C_Master_Write 0010                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0787                          TMR0_ReadTimer@readVal 0074  
                                   main@F12104 00D9                                   _Coulomb_Data 217C  
                                   ??_vfprintf 006B                                 _TMR0_ReadTimer 0B72  
                                      strlen@a 0076                                        strlen@s 0077  
                          ??_EUSART_Initialize 0075                                      _PORTAbits 000C  
                                   LCD_CMD@CMD 0020                          __size_of_EUSART_Write 000A  
                             ??_LCD_Write_4Bit 0075                __size_of_EUSART_SetErrorHandler 0006  
                            LCD_Write_String@i 0022                               ??_LCD_Write_Char 0077  
                    __end_of_EUSART_Initialize 0D9B                              __size_of_LCD_Init 006B  
                       __end_of_TMR0_ReadTimer 0B79                                   Delay@counter 0073  
           __end_of_EUSART_DefaultErrorHandler 0B44                     _EUSART_DefaultErrorHandler 0B40  
                                  vfpfcnvrt@ap 0059                                    vfpfcnvrt@fp 0067  
                                  vfpfcnvrt@ll 005F                               _LCD_Write_String 0C9E  
                                 _EUSART_Write 0B8A                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_strlen 0C82                            start_initialization 0029  
                     __size_of_TMR0_Initialize 000C                __size_of_PIN_MANAGER_Initialize 0039  
                                  __end_of_abs 0C9E                                    __end_of_pad 0F2A  
                                ??_EUSART_Read 0073   EUSART_SetRxInterruptHandler@interruptHandler 0073  
                                  putch@txData 0074                              ??_I2C_Master_Wait 0073  
                            ??_I2C_Master_Stop 0073                 ?_EUSART_SetOverrunErrorHandler 0073  
                                  vfprintf@fmt 0068                     _EUSART_FramingErrorHandler 01EA  
                             ??_PMD_Initialize 0073                                ?_TMR0_ReadTimer 0070  
                       _EUSART_SetErrorHandler 0B54                                    __pdataBANK1 00D9  
                                  __pdataBANK3 01EE                                       ??_strlen 0075  
                                     ?_LCD_CMD 0070                                    __pbssBIGRAM 217C  
                                  _diffBettery 01A0                                    __pbssCOMMON 0078  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C5                                  __pcstackBANK4 0247  
                                ??_master_init 0073                               ___aodiv@dividend 0028  
                         __size_of_Get_Voltage 0133                     __end_of_EUSART_Receive_ISR 0E42  
                   __size_of_EUSART_Initialize 0030               _EUSART_RxDefaultInterruptHandler 01EC  
                          __end_of_EUSART_Read 0D3C                                      __pnvBANK3 01E8  
                                    __pnvBANK4 0257                               _I2C_Master_Start 0B48  
                             _I2C_Master_Write 0BCF                   __end_of_EUSART_RxDataHandler 0C68  
                             ___lwdiv@dividend 0075                         _PIN_MANAGER_Initialize 0DCC  
                                    _dtoa$1470 0046                          IO_Expander_Write@Data 0074  
                         EUSART_Read@readValue 0074                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0032  
                                     ?___lwdiv 0073                                   _eusartRxHead 007A  
                                 _eusartRxTail 0079                           I2C_Master_Write@data 0073  
                 ??_INTERRUPT_InterruptManager 0073                              __size_of_vfprintf 0031  
                                     _BAUD1CON 011F                                 __size_of_Delay 000C  
                             ___lwdiv@quotient 0021                                       ?_sprintf 00C5  
                               __size_of_fputc 0052                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ?_BadBetteryFilter 0070  
                               _eusartRxBuffer 0220                            __end_of_master_init 0B9F  
                            ??_TMR0_Initialize 0073                                       _LCD_Init 0F95  
                           ??_BadBetteryFilter 0028                                       _LATAbits 0016  
       EUSART_SetErrorHandler@interruptHandler 0073                                      clear_ram0 0BC3  
                                     _PIE3bits 0719                              _eusartRxLastError 00C4  
          __size_of_INTERRUPT_InterruptManager 0023                                       _PIR0bits 070C  
              ??_EUSART_SetFramingErrorHandler 0075                                       _PIR3bits 070F  
                                     _SSP1CON1 0190                                       _SSP1CON2 0191  
    __end_of_EUSART_DefaultOverrunErrorHandler 0B48     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0B44                                       _SSP1STAT 018F  
                                    _vfpfcnvrt 06AC                                      main@index 024F  
                             __size_of_LCD_CMD 0018                                    _EUSART_Read 0D12  
                     __end_of_LCD_Write_String 0CC0                                     vfprintf@ap 006A  
                                   vfprintf@fp 006D                        ??_OSCILLATOR_Initialize 0073  
                          _EUSART_ErrorHandler 0257                               __size_of___aodiv 0104  
                             __size_of___aomod 00EA                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0058                               __size_of___lwdiv 003D  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0030  
                                 Get_Voltage@k 0023                                     sprintf@fmt 00C5  
                                   _T0CON0bits 001E                                _I2C_Master_Wait 0BAB  
                              _I2C_Master_Stop 0B4E                                ___lwdiv@divisor 0073  
                         _EUSART_RxDataHandler 0C4E                                    _master_init 0B94  
                              ___lwdiv@counter 0020                                       __ptext10 0B8A  
                                     __ptext11 0C82                                       __ptext20 0B81  
                                     __ptext12 05C2                                       __ptext21 0D6B  
                                     __ptext13 04BE                                       __ptext30 0C1D  
                                     __ptext22 0B66                                       __ptext14 0B72  
                                     __ptext31 0C05                                       __ptext23 0B60  
                                     __ptext15 0BF2                                       __ptext40 0D12  
                                     __ptext32 0BDF                                       __ptext24 0B5A  
                                     __ptext16 0B94                                       __ptext41 0F2A  
                                     __ptext33 0BCF                                       __ptext25 0B54  
                                     __ptext17 0BB7                                       __ptext42 0787  
                                     __ptext34 0B4E                                       __ptext26 0C9E  
                                     __ptext18 0B79                                       __ptext35 0B48  
                                     __ptext27 0C35                                       __ptext19 0DCC  
                                     __ptext44 0E05                                       __ptext36 0BAB  
                                     __ptext28 0D3C                                       __ptext45 0B44  
                                     __ptext37 0B9F                                       __ptext29 0F95  
                                     __ptext46 0002                                       __ptext38 038B  
                                     __ptext47 0B40                                       __ptext39 0E42  
                                     __ptext48 0C4E                                   _SSP1CON2bits 0191  
                      __size_of_LCD_Set_Cursor 002F                               __size_of_sprintf 0029  
                                __size_of_Sort 0071                                _BackLight_State 01EE  
                                __size_of_main 019A                                  __size_of_dtoa 0170  
                             ??_TMR0_ReadTimer 0073                        ?_EUSART_SetErrorHandler 0073  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0073  
                                     int$flags 007E                                       _vfprintf 0D9B  
           __end_of_INTERRUPT_InterruptManager 0027                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0B60         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0B5A                                   _SSP1STATbits 018F  
                             ___aomod@dividend 0028                       __end_of_I2C_Master_Start 0B4E  
                     __end_of_I2C_Master_Write 0BDF                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                             LCD_Write_Char@Data 0020  
                                     intlevel1 0000                                      sprintf@ap 00CC  
                              main@H_L_counter 0253                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0B5A           __end_of_EUSART_SetRxInterruptHandler 0B6C  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 0B66  
                      __size_of_LCD_Write_4Bit 0018                        __size_of_LCD_Write_Char 0019  
                           _EUSART_Receive_ISR 0E05  EUSART_SetFramingErrorHandler@interruptHandler 0073  
                              ___aomod@divisor 0020                        __end_of_I2C_Master_Wait 0BB7  
                      __end_of_I2C_Master_Stop 0B54                                    ??_vfpfcnvrt 005A  
                              ___aomod@counter 0074                                LCD_Init@I2C_Add 0022  
                                __pstringtext1 0800                                  __pstringtext2 0000  
                                     sprintf@f 00CE                                       sprintf@s 00CD  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0EC6  
                                   _SSP1CLKPPS 0EC5                                _TMR0_Initialize 0BB7  
                            LCD_Set_Cursor@COL 0021                              LCD_Set_Cursor@ROW 0024  
                                ??_Get_Voltage 0025                                     _TX1STAbits 011E  
                           EUSART_Write@txData 0073                                   ___aodiv@sign 0031  
               __end_of_PIN_MANAGER_Initialize 0E05                           ??_EUSART_Receive_ISR 0073  
                                 ___aomod@sign 0075  
