

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Feb 24 16:49:08 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18854
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x320,16
    81                           	dabs	1,0x2A0,80
    82                           	dabs	1,0x25C,20
    83                           	dabs	1,0x217C,0,_Coulomb_Data
    84                           	dabs	1,0x7E,2
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 09/04/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18854 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  001C                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  0110                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  018E                     	;# 
   214  018F                     	;# 
   215  0190                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0198                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019C                     	;# 
   225  020C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020F                     	;# 
   230  020F                     	;# 
   231  0210                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0218                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021B                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021C                     	;# 
   253  021D                     	;# 
   254  021D                     	;# 
   255  021E                     	;# 
   256  021F                     	;# 
   257  028C                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028D                     	;# 
   261  028E                     	;# 
   262  028F                     	;# 
   263  0290                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0296                     	;# 
   274  0297                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0317                     	;# 
   299  0318                     	;# 
   300  0318                     	;# 
   301  0319                     	;# 
   302  031A                     	;# 
   303  031B                     	;# 
   304  031C                     	;# 
   305  031C                     	;# 
   306  031D                     	;# 
   307  031E                     	;# 
   308  031F                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  040C                     	;# 
   318  040D                     	;# 
   319  040E                     	;# 
   320  040F                     	;# 
   321  0410                     	;# 
   322  0411                     	;# 
   323  0416                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  0418                     	;# 
   327  0418                     	;# 
   328  0419                     	;# 
   329  041A                     	;# 
   330  041A                     	;# 
   331  041B                     	;# 
   332  041C                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  041F                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  060C                     	;# 
   392  060D                     	;# 
   393  060E                     	;# 
   394  060F                     	;# 
   395  0610                     	;# 
   396  0611                     	;# 
   397  0612                     	;# 
   398  0613                     	;# 
   399  0614                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0618                     	;# 
   403  0619                     	;# 
   404  061A                     	;# 
   405  061B                     	;# 
   406  061C                     	;# 
   407  061D                     	;# 
   408  061E                     	;# 
   409  068C                     	;# 
   410  068D                     	;# 
   411  068E                     	;# 
   412  068F                     	;# 
   413  0690                     	;# 
   414  0691                     	;# 
   415  0692                     	;# 
   416  0693                     	;# 
   417  0694                     	;# 
   418  070C                     	;# 
   419  070D                     	;# 
   420  070E                     	;# 
   421  070F                     	;# 
   422  0710                     	;# 
   423  0711                     	;# 
   424  0712                     	;# 
   425  0713                     	;# 
   426  0714                     	;# 
   427  0716                     	;# 
   428  0717                     	;# 
   429  0718                     	;# 
   430  0719                     	;# 
   431  071A                     	;# 
   432  071B                     	;# 
   433  071C                     	;# 
   434  071D                     	;# 
   435  071E                     	;# 
   436  0796                     	;# 
   437  0797                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  079B                     	;# 
   442  080C                     	;# 
   443  080D                     	;# 
   444  080E                     	;# 
   445  080F                     	;# 
   446  0810                     	;# 
   447  0811                     	;# 
   448  0812                     	;# 
   449  0813                     	;# 
   450  0814                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  098F                     	;# 
   477  098F                     	;# 
   478  0990                     	;# 
   479  0991                     	;# 
   480  0992                     	;# 
   481  0993                     	;# 
   482  0994                     	;# 
   483  0995                     	;# 
   484  0996                     	;# 
   485  0997                     	;# 
   486  0E0F                     	;# 
   487  0E10                     	;# 
   488  0E11                     	;# 
   489  0E12                     	;# 
   490  0E13                     	;# 
   491  0E14                     	;# 
   492  0E15                     	;# 
   493  0E16                     	;# 
   494  0E17                     	;# 
   495  0E18                     	;# 
   496  0E19                     	;# 
   497  0E1A                     	;# 
   498  0E1B                     	;# 
   499  0E1C                     	;# 
   500  0E1D                     	;# 
   501  0E1E                     	;# 
   502  0E1F                     	;# 
   503  0E20                     	;# 
   504  0E21                     	;# 
   505  0E22                     	;# 
   506  0E23                     	;# 
   507  0E24                     	;# 
   508  0E25                     	;# 
   509  0E26                     	;# 
   510  0E27                     	;# 
   511  0E28                     	;# 
   512  0E29                     	;# 
   513  0E2A                     	;# 
   514  0E2B                     	;# 
   515  0E2C                     	;# 
   516  0E2D                     	;# 
   517  0E2E                     	;# 
   518  0E2F                     	;# 
   519  0E30                     	;# 
   520  0E31                     	;# 
   521  0E32                     	;# 
   522  0E33                     	;# 
   523  0E34                     	;# 
   524  0E35                     	;# 
   525  0E36                     	;# 
   526  0E37                     	;# 
   527  0E8F                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E93                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0E96                     	;# 
   535  0E97                     	;# 
   536  0E9C                     	;# 
   537  0E9D                     	;# 
   538  0E9E                     	;# 
   539  0EA1                     	;# 
   540  0EA2                     	;# 
   541  0EA3                     	;# 
   542  0EA4                     	;# 
   543  0EA5                     	;# 
   544  0EA9                     	;# 
   545  0EAA                     	;# 
   546  0EAB                     	;# 
   547  0EAC                     	;# 
   548  0EB1                     	;# 
   549  0EB2                     	;# 
   550  0EB3                     	;# 
   551  0EB8                     	;# 
   552  0EB9                     	;# 
   553  0EBA                     	;# 
   554  0EBB                     	;# 
   555  0EBC                     	;# 
   556  0EBD                     	;# 
   557  0EBE                     	;# 
   558  0EC3                     	;# 
   559  0EC5                     	;# 
   560  0EC6                     	;# 
   561  0EC7                     	;# 
   562  0EC8                     	;# 
   563  0EC9                     	;# 
   564  0ECA                     	;# 
   565  0ECB                     	;# 
   566  0ECC                     	;# 
   567  0F10                     	;# 
   568  0F11                     	;# 
   569  0F12                     	;# 
   570  0F13                     	;# 
   571  0F14                     	;# 
   572  0F15                     	;# 
   573  0F16                     	;# 
   574  0F17                     	;# 
   575  0F18                     	;# 
   576  0F19                     	;# 
   577  0F1A                     	;# 
   578  0F1B                     	;# 
   579  0F1C                     	;# 
   580  0F1D                     	;# 
   581  0F1E                     	;# 
   582  0F1F                     	;# 
   583  0F20                     	;# 
   584  0F21                     	;# 
   585  0F22                     	;# 
   586  0F23                     	;# 
   587  0F24                     	;# 
   588  0F25                     	;# 
   589  0F26                     	;# 
   590  0F27                     	;# 
   591  0F38                     	;# 
   592  0F39                     	;# 
   593  0F3A                     	;# 
   594  0F3B                     	;# 
   595  0F3C                     	;# 
   596  0F3D                     	;# 
   597  0F3E                     	;# 
   598  0F3F                     	;# 
   599  0F40                     	;# 
   600  0F41                     	;# 
   601  0F43                     	;# 
   602  0F44                     	;# 
   603  0F45                     	;# 
   604  0F46                     	;# 
   605  0F47                     	;# 
   606  0F48                     	;# 
   607  0F49                     	;# 
   608  0F4A                     	;# 
   609  0F4B                     	;# 
   610  0F4C                     	;# 
   611  0F4E                     	;# 
   612  0F4F                     	;# 
   613  0F50                     	;# 
   614  0F51                     	;# 
   615  0F52                     	;# 
   616  0F53                     	;# 
   617  0F54                     	;# 
   618  0F55                     	;# 
   619  0F56                     	;# 
   620  0F57                     	;# 
   621  0F65                     	;# 
   622  0F68                     	;# 
   623  0F69                     	;# 
   624  0F6A                     	;# 
   625  0F6B                     	;# 
   626  0FE4                     	;# 
   627  0FE5                     	;# 
   628  0FE6                     	;# 
   629  0FE7                     	;# 
   630  0FE8                     	;# 
   631  0FE9                     	;# 
   632  0FEA                     	;# 
   633  0FEB                     	;# 
   634  0FED                     	;# 
   635  0FEE                     	;# 
   636  0FEF                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000D                     	;# 
   651  000E                     	;# 
   652  0010                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  001C                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001D                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  008C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0090                     	;# 
   673  0091                     	;# 
   674  0093                     	;# 
   675  0094                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  0110                     	;# 
   692  0110                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0112                     	;# 
   696  0113                     	;# 
   697  0114                     	;# 
   698  0114                     	;# 
   699  0115                     	;# 
   700  0116                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  0196                     	;# 
   736  0197                     	;# 
   737  0198                     	;# 
   738  0199                     	;# 
   739  019A                     	;# 
   740  019B                     	;# 
   741  019C                     	;# 
   742  020C                     	;# 
   743  020C                     	;# 
   744  020D                     	;# 
   745  020E                     	;# 
   746  020F                     	;# 
   747  020F                     	;# 
   748  0210                     	;# 
   749  0210                     	;# 
   750  0211                     	;# 
   751  0211                     	;# 
   752  0212                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0214                     	;# 
   756  0215                     	;# 
   757  0215                     	;# 
   758  0216                     	;# 
   759  0216                     	;# 
   760  0217                     	;# 
   761  0217                     	;# 
   762  0218                     	;# 
   763  0218                     	;# 
   764  0219                     	;# 
   765  021A                     	;# 
   766  021B                     	;# 
   767  021B                     	;# 
   768  021C                     	;# 
   769  021C                     	;# 
   770  021D                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  028C                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028D                     	;# 
   778  028E                     	;# 
   779  028F                     	;# 
   780  0290                     	;# 
   781  0290                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0292                     	;# 
   785  0293                     	;# 
   786  0293                     	;# 
   787  0294                     	;# 
   788  0295                     	;# 
   789  0296                     	;# 
   790  0296                     	;# 
   791  0297                     	;# 
   792  0298                     	;# 
   793  0298                     	;# 
   794  0299                     	;# 
   795  0299                     	;# 
   796  029A                     	;# 
   797  029B                     	;# 
   798  029C                     	;# 
   799  029C                     	;# 
   800  029D                     	;# 
   801  030C                     	;# 
   802  030C                     	;# 
   803  030D                     	;# 
   804  030E                     	;# 
   805  030F                     	;# 
   806  0310                     	;# 
   807  0310                     	;# 
   808  0311                     	;# 
   809  0312                     	;# 
   810  0313                     	;# 
   811  0314                     	;# 
   812  0314                     	;# 
   813  0315                     	;# 
   814  0316                     	;# 
   815  0317                     	;# 
   816  0318                     	;# 
   817  0318                     	;# 
   818  0319                     	;# 
   819  031A                     	;# 
   820  031B                     	;# 
   821  031C                     	;# 
   822  031C                     	;# 
   823  031D                     	;# 
   824  031E                     	;# 
   825  031F                     	;# 
   826  038C                     	;# 
   827  038C                     	;# 
   828  038D                     	;# 
   829  038E                     	;# 
   830  0390                     	;# 
   831  0390                     	;# 
   832  0391                     	;# 
   833  0392                     	;# 
   834  040C                     	;# 
   835  040D                     	;# 
   836  040E                     	;# 
   837  040F                     	;# 
   838  0410                     	;# 
   839  0411                     	;# 
   840  0416                     	;# 
   841  0416                     	;# 
   842  0417                     	;# 
   843  0418                     	;# 
   844  0418                     	;# 
   845  0419                     	;# 
   846  041A                     	;# 
   847  041A                     	;# 
   848  041B                     	;# 
   849  041C                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  041F                     	;# 
   854  048C                     	;# 
   855  048C                     	;# 
   856  048D                     	;# 
   857  048E                     	;# 
   858  048F                     	;# 
   859  048F                     	;# 
   860  0490                     	;# 
   861  0491                     	;# 
   862  0492                     	;# 
   863  0492                     	;# 
   864  0493                     	;# 
   865  0494                     	;# 
   866  0495                     	;# 
   867  0495                     	;# 
   868  0496                     	;# 
   869  0497                     	;# 
   870  0498                     	;# 
   871  0499                     	;# 
   872  049A                     	;# 
   873  049B                     	;# 
   874  049C                     	;# 
   875  049D                     	;# 
   876  050C                     	;# 
   877  050C                     	;# 
   878  050D                     	;# 
   879  050E                     	;# 
   880  050F                     	;# 
   881  050F                     	;# 
   882  0510                     	;# 
   883  0511                     	;# 
   884  0512                     	;# 
   885  0512                     	;# 
   886  0513                     	;# 
   887  0514                     	;# 
   888  0515                     	;# 
   889  0515                     	;# 
   890  0516                     	;# 
   891  0517                     	;# 
   892  0518                     	;# 
   893  0519                     	;# 
   894  051A                     	;# 
   895  051B                     	;# 
   896  051C                     	;# 
   897  051D                     	;# 
   898  058C                     	;# 
   899  058C                     	;# 
   900  058D                     	;# 
   901  058E                     	;# 
   902  058F                     	;# 
   903  058F                     	;# 
   904  0590                     	;# 
   905  0591                     	;# 
   906  0592                     	;# 
   907  0593                     	;# 
   908  060C                     	;# 
   909  060D                     	;# 
   910  060E                     	;# 
   911  060F                     	;# 
   912  0610                     	;# 
   913  0611                     	;# 
   914  0612                     	;# 
   915  0613                     	;# 
   916  0614                     	;# 
   917  0616                     	;# 
   918  0617                     	;# 
   919  0618                     	;# 
   920  0619                     	;# 
   921  061A                     	;# 
   922  061B                     	;# 
   923  061C                     	;# 
   924  061D                     	;# 
   925  061E                     	;# 
   926  068C                     	;# 
   927  068D                     	;# 
   928  068E                     	;# 
   929  068F                     	;# 
   930  0690                     	;# 
   931  0691                     	;# 
   932  0692                     	;# 
   933  0693                     	;# 
   934  0694                     	;# 
   935  070C                     	;# 
   936  070D                     	;# 
   937  070E                     	;# 
   938  070F                     	;# 
   939  0710                     	;# 
   940  0711                     	;# 
   941  0712                     	;# 
   942  0713                     	;# 
   943  0714                     	;# 
   944  0716                     	;# 
   945  0717                     	;# 
   946  0718                     	;# 
   947  0719                     	;# 
   948  071A                     	;# 
   949  071B                     	;# 
   950  071C                     	;# 
   951  071D                     	;# 
   952  071E                     	;# 
   953  0796                     	;# 
   954  0797                     	;# 
   955  0798                     	;# 
   956  0799                     	;# 
   957  079A                     	;# 
   958  079B                     	;# 
   959  080C                     	;# 
   960  080D                     	;# 
   961  080E                     	;# 
   962  080F                     	;# 
   963  0810                     	;# 
   964  0811                     	;# 
   965  0812                     	;# 
   966  0813                     	;# 
   967  0814                     	;# 
   968  081A                     	;# 
   969  081B                     	;# 
   970  081C                     	;# 
   971  081D                     	;# 
   972  081E                     	;# 
   973  081F                     	;# 
   974  088C                     	;# 
   975  088D                     	;# 
   976  088E                     	;# 
   977  088F                     	;# 
   978  0890                     	;# 
   979  0891                     	;# 
   980  0892                     	;# 
   981  0893                     	;# 
   982  0895                     	;# 
   983  0896                     	;# 
   984  0897                     	;# 
   985  0898                     	;# 
   986  0899                     	;# 
   987  089A                     	;# 
   988  089B                     	;# 
   989  090C                     	;# 
   990  090E                     	;# 
   991  090F                     	;# 
   992  091F                     	;# 
   993  098F                     	;# 
   994  098F                     	;# 
   995  0990                     	;# 
   996  0991                     	;# 
   997  0992                     	;# 
   998  0993                     	;# 
   999  0994                     	;# 
  1000  0995                     	;# 
  1001  0996                     	;# 
  1002  0997                     	;# 
  1003  0E0F                     	;# 
  1004  0E10                     	;# 
  1005  0E11                     	;# 
  1006  0E12                     	;# 
  1007  0E13                     	;# 
  1008  0E14                     	;# 
  1009  0E15                     	;# 
  1010  0E16                     	;# 
  1011  0E17                     	;# 
  1012  0E18                     	;# 
  1013  0E19                     	;# 
  1014  0E1A                     	;# 
  1015  0E1B                     	;# 
  1016  0E1C                     	;# 
  1017  0E1D                     	;# 
  1018  0E1E                     	;# 
  1019  0E1F                     	;# 
  1020  0E20                     	;# 
  1021  0E21                     	;# 
  1022  0E22                     	;# 
  1023  0E23                     	;# 
  1024  0E24                     	;# 
  1025  0E25                     	;# 
  1026  0E26                     	;# 
  1027  0E27                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E2C                     	;# 
  1033  0E2D                     	;# 
  1034  0E2E                     	;# 
  1035  0E2F                     	;# 
  1036  0E30                     	;# 
  1037  0E31                     	;# 
  1038  0E32                     	;# 
  1039  0E33                     	;# 
  1040  0E34                     	;# 
  1041  0E35                     	;# 
  1042  0E36                     	;# 
  1043  0E37                     	;# 
  1044  0E8F                     	;# 
  1045  0E90                     	;# 
  1046  0E91                     	;# 
  1047  0E92                     	;# 
  1048  0E93                     	;# 
  1049  0E94                     	;# 
  1050  0E95                     	;# 
  1051  0E96                     	;# 
  1052  0E97                     	;# 
  1053  0E9C                     	;# 
  1054  0E9D                     	;# 
  1055  0E9E                     	;# 
  1056  0EA1                     	;# 
  1057  0EA2                     	;# 
  1058  0EA3                     	;# 
  1059  0EA4                     	;# 
  1060  0EA5                     	;# 
  1061  0EA9                     	;# 
  1062  0EAA                     	;# 
  1063  0EAB                     	;# 
  1064  0EAC                     	;# 
  1065  0EB1                     	;# 
  1066  0EB2                     	;# 
  1067  0EB3                     	;# 
  1068  0EB8                     	;# 
  1069  0EB9                     	;# 
  1070  0EBA                     	;# 
  1071  0EBB                     	;# 
  1072  0EBC                     	;# 
  1073  0EBD                     	;# 
  1074  0EBE                     	;# 
  1075  0EC3                     	;# 
  1076  0EC5                     	;# 
  1077  0EC6                     	;# 
  1078  0EC7                     	;# 
  1079  0EC8                     	;# 
  1080  0EC9                     	;# 
  1081  0ECA                     	;# 
  1082  0ECB                     	;# 
  1083  0ECC                     	;# 
  1084  0F10                     	;# 
  1085  0F11                     	;# 
  1086  0F12                     	;# 
  1087  0F13                     	;# 
  1088  0F14                     	;# 
  1089  0F15                     	;# 
  1090  0F16                     	;# 
  1091  0F17                     	;# 
  1092  0F18                     	;# 
  1093  0F19                     	;# 
  1094  0F1A                     	;# 
  1095  0F1B                     	;# 
  1096  0F1C                     	;# 
  1097  0F1D                     	;# 
  1098  0F1E                     	;# 
  1099  0F1F                     	;# 
  1100  0F20                     	;# 
  1101  0F21                     	;# 
  1102  0F22                     	;# 
  1103  0F23                     	;# 
  1104  0F24                     	;# 
  1105  0F25                     	;# 
  1106  0F26                     	;# 
  1107  0F27                     	;# 
  1108  0F38                     	;# 
  1109  0F39                     	;# 
  1110  0F3A                     	;# 
  1111  0F3B                     	;# 
  1112  0F3C                     	;# 
  1113  0F3D                     	;# 
  1114  0F3E                     	;# 
  1115  0F3F                     	;# 
  1116  0F40                     	;# 
  1117  0F41                     	;# 
  1118  0F43                     	;# 
  1119  0F44                     	;# 
  1120  0F45                     	;# 
  1121  0F46                     	;# 
  1122  0F47                     	;# 
  1123  0F48                     	;# 
  1124  0F49                     	;# 
  1125  0F4A                     	;# 
  1126  0F4B                     	;# 
  1127  0F4C                     	;# 
  1128  0F4E                     	;# 
  1129  0F4F                     	;# 
  1130  0F50                     	;# 
  1131  0F51                     	;# 
  1132  0F52                     	;# 
  1133  0F53                     	;# 
  1134  0F54                     	;# 
  1135  0F55                     	;# 
  1136  0F56                     	;# 
  1137  0F57                     	;# 
  1138  0F65                     	;# 
  1139  0F68                     	;# 
  1140  0F69                     	;# 
  1141  0F6A                     	;# 
  1142  0F6B                     	;# 
  1143  0FE4                     	;# 
  1144  0FE5                     	;# 
  1145  0FE6                     	;# 
  1146  0FE7                     	;# 
  1147  0FE8                     	;# 
  1148  0FE9                     	;# 
  1149  0FEA                     	;# 
  1150  0FEB                     	;# 
  1151  0FED                     	;# 
  1152  0FEE                     	;# 
  1153  0FEF                     	;# 
  1154  0000                     	;# 
  1155  0001                     	;# 
  1156  0002                     	;# 
  1157  0003                     	;# 
  1158  0004                     	;# 
  1159  0005                     	;# 
  1160  0006                     	;# 
  1161  0007                     	;# 
  1162  0008                     	;# 
  1163  0009                     	;# 
  1164  000A                     	;# 
  1165  000B                     	;# 
  1166  000C                     	;# 
  1167  000D                     	;# 
  1168  000E                     	;# 
  1169  0010                     	;# 
  1170  0011                     	;# 
  1171  0012                     	;# 
  1172  0013                     	;# 
  1173  0016                     	;# 
  1174  0017                     	;# 
  1175  0018                     	;# 
  1176  001C                     	;# 
  1177  001C                     	;# 
  1178  001D                     	;# 
  1179  001D                     	;# 
  1180  001E                     	;# 
  1181  001F                     	;# 
  1182  008C                     	;# 
  1183  008C                     	;# 
  1184  008D                     	;# 
  1185  008E                     	;# 
  1186  008E                     	;# 
  1187  008F                     	;# 
  1188  0090                     	;# 
  1189  0090                     	;# 
  1190  0091                     	;# 
  1191  0093                     	;# 
  1192  0094                     	;# 
  1193  0095                     	;# 
  1194  0096                     	;# 
  1195  0097                     	;# 
  1196  0098                     	;# 
  1197  0099                     	;# 
  1198  009A                     	;# 
  1199  009B                     	;# 
  1200  009C                     	;# 
  1201  009D                     	;# 
  1202  009E                     	;# 
  1203  010C                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  010E                     	;# 
  1207  010F                     	;# 
  1208  0110                     	;# 
  1209  0110                     	;# 
  1210  0111                     	;# 
  1211  0112                     	;# 
  1212  0112                     	;# 
  1213  0113                     	;# 
  1214  0114                     	;# 
  1215  0114                     	;# 
  1216  0115                     	;# 
  1217  0116                     	;# 
  1218  0116                     	;# 
  1219  0117                     	;# 
  1220  0119                     	;# 
  1221  0119                     	;# 
  1222  0119                     	;# 
  1223  011A                     	;# 
  1224  011A                     	;# 
  1225  011A                     	;# 
  1226  011B                     	;# 
  1227  011B                     	;# 
  1228  011B                     	;# 
  1229  011B                     	;# 
  1230  011B                     	;# 
  1231  011C                     	;# 
  1232  011C                     	;# 
  1233  011C                     	;# 
  1234  011D                     	;# 
  1235  011D                     	;# 
  1236  011D                     	;# 
  1237  011E                     	;# 
  1238  011E                     	;# 
  1239  011E                     	;# 
  1240  011F                     	;# 
  1241  011F                     	;# 
  1242  011F                     	;# 
  1243  011F                     	;# 
  1244  011F                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  018E                     	;# 
  1248  018F                     	;# 
  1249  0190                     	;# 
  1250  0191                     	;# 
  1251  0192                     	;# 
  1252  0196                     	;# 
  1253  0197                     	;# 
  1254  0198                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  020C                     	;# 
  1260  020C                     	;# 
  1261  020D                     	;# 
  1262  020E                     	;# 
  1263  020F                     	;# 
  1264  020F                     	;# 
  1265  0210                     	;# 
  1266  0210                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0218                     	;# 
  1280  0218                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021B                     	;# 
  1285  021C                     	;# 
  1286  021C                     	;# 
  1287  021D                     	;# 
  1288  021D                     	;# 
  1289  021E                     	;# 
  1290  021F                     	;# 
  1291  028C                     	;# 
  1292  028C                     	;# 
  1293  028D                     	;# 
  1294  028D                     	;# 
  1295  028E                     	;# 
  1296  028F                     	;# 
  1297  0290                     	;# 
  1298  0290                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0296                     	;# 
  1308  0297                     	;# 
  1309  0298                     	;# 
  1310  0298                     	;# 
  1311  0299                     	;# 
  1312  0299                     	;# 
  1313  029A                     	;# 
  1314  029B                     	;# 
  1315  029C                     	;# 
  1316  029C                     	;# 
  1317  029D                     	;# 
  1318  030C                     	;# 
  1319  030C                     	;# 
  1320  030D                     	;# 
  1321  030E                     	;# 
  1322  030F                     	;# 
  1323  0310                     	;# 
  1324  0310                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0314                     	;# 
  1329  0314                     	;# 
  1330  0315                     	;# 
  1331  0316                     	;# 
  1332  0317                     	;# 
  1333  0318                     	;# 
  1334  0318                     	;# 
  1335  0319                     	;# 
  1336  031A                     	;# 
  1337  031B                     	;# 
  1338  031C                     	;# 
  1339  031C                     	;# 
  1340  031D                     	;# 
  1341  031E                     	;# 
  1342  031F                     	;# 
  1343  038C                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  038E                     	;# 
  1347  0390                     	;# 
  1348  0390                     	;# 
  1349  0391                     	;# 
  1350  0392                     	;# 
  1351  040C                     	;# 
  1352  040D                     	;# 
  1353  040E                     	;# 
  1354  040F                     	;# 
  1355  0410                     	;# 
  1356  0411                     	;# 
  1357  0416                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041A                     	;# 
  1365  041B                     	;# 
  1366  041C                     	;# 
  1367  041C                     	;# 
  1368  041D                     	;# 
  1369  041E                     	;# 
  1370  041F                     	;# 
  1371  048C                     	;# 
  1372  048C                     	;# 
  1373  048D                     	;# 
  1374  048E                     	;# 
  1375  048F                     	;# 
  1376  048F                     	;# 
  1377  0490                     	;# 
  1378  0491                     	;# 
  1379  0492                     	;# 
  1380  0492                     	;# 
  1381  0493                     	;# 
  1382  0494                     	;# 
  1383  0495                     	;# 
  1384  0495                     	;# 
  1385  0496                     	;# 
  1386  0497                     	;# 
  1387  0498                     	;# 
  1388  0499                     	;# 
  1389  049A                     	;# 
  1390  049B                     	;# 
  1391  049C                     	;# 
  1392  049D                     	;# 
  1393  050C                     	;# 
  1394  050C                     	;# 
  1395  050D                     	;# 
  1396  050E                     	;# 
  1397  050F                     	;# 
  1398  050F                     	;# 
  1399  0510                     	;# 
  1400  0511                     	;# 
  1401  0512                     	;# 
  1402  0512                     	;# 
  1403  0513                     	;# 
  1404  0514                     	;# 
  1405  0515                     	;# 
  1406  0515                     	;# 
  1407  0516                     	;# 
  1408  0517                     	;# 
  1409  0518                     	;# 
  1410  0519                     	;# 
  1411  051A                     	;# 
  1412  051B                     	;# 
  1413  051C                     	;# 
  1414  051D                     	;# 
  1415  058C                     	;# 
  1416  058C                     	;# 
  1417  058D                     	;# 
  1418  058E                     	;# 
  1419  058F                     	;# 
  1420  058F                     	;# 
  1421  0590                     	;# 
  1422  0591                     	;# 
  1423  0592                     	;# 
  1424  0593                     	;# 
  1425  060C                     	;# 
  1426  060D                     	;# 
  1427  060E                     	;# 
  1428  060F                     	;# 
  1429  0610                     	;# 
  1430  0611                     	;# 
  1431  0612                     	;# 
  1432  0613                     	;# 
  1433  0614                     	;# 
  1434  0616                     	;# 
  1435  0617                     	;# 
  1436  0618                     	;# 
  1437  0619                     	;# 
  1438  061A                     	;# 
  1439  061B                     	;# 
  1440  061C                     	;# 
  1441  061D                     	;# 
  1442  061E                     	;# 
  1443  068C                     	;# 
  1444  068D                     	;# 
  1445  068E                     	;# 
  1446  068F                     	;# 
  1447  0690                     	;# 
  1448  0691                     	;# 
  1449  0692                     	;# 
  1450  0693                     	;# 
  1451  0694                     	;# 
  1452  070C                     	;# 
  1453  070D                     	;# 
  1454  070E                     	;# 
  1455  070F                     	;# 
  1456  0710                     	;# 
  1457  0711                     	;# 
  1458  0712                     	;# 
  1459  0713                     	;# 
  1460  0714                     	;# 
  1461  0716                     	;# 
  1462  0717                     	;# 
  1463  0718                     	;# 
  1464  0719                     	;# 
  1465  071A                     	;# 
  1466  071B                     	;# 
  1467  071C                     	;# 
  1468  071D                     	;# 
  1469  071E                     	;# 
  1470  0796                     	;# 
  1471  0797                     	;# 
  1472  0798                     	;# 
  1473  0799                     	;# 
  1474  079A                     	;# 
  1475  079B                     	;# 
  1476  080C                     	;# 
  1477  080D                     	;# 
  1478  080E                     	;# 
  1479  080F                     	;# 
  1480  0810                     	;# 
  1481  0811                     	;# 
  1482  0812                     	;# 
  1483  0813                     	;# 
  1484  0814                     	;# 
  1485  081A                     	;# 
  1486  081B                     	;# 
  1487  081C                     	;# 
  1488  081D                     	;# 
  1489  081E                     	;# 
  1490  081F                     	;# 
  1491  088C                     	;# 
  1492  088D                     	;# 
  1493  088E                     	;# 
  1494  088F                     	;# 
  1495  0890                     	;# 
  1496  0891                     	;# 
  1497  0892                     	;# 
  1498  0893                     	;# 
  1499  0895                     	;# 
  1500  0896                     	;# 
  1501  0897                     	;# 
  1502  0898                     	;# 
  1503  0899                     	;# 
  1504  089A                     	;# 
  1505  089B                     	;# 
  1506  090C                     	;# 
  1507  090E                     	;# 
  1508  090F                     	;# 
  1509  091F                     	;# 
  1510  098F                     	;# 
  1511  098F                     	;# 
  1512  0990                     	;# 
  1513  0991                     	;# 
  1514  0992                     	;# 
  1515  0993                     	;# 
  1516  0994                     	;# 
  1517  0995                     	;# 
  1518  0996                     	;# 
  1519  0997                     	;# 
  1520  0E0F                     	;# 
  1521  0E10                     	;# 
  1522  0E11                     	;# 
  1523  0E12                     	;# 
  1524  0E13                     	;# 
  1525  0E14                     	;# 
  1526  0E15                     	;# 
  1527  0E16                     	;# 
  1528  0E17                     	;# 
  1529  0E18                     	;# 
  1530  0E19                     	;# 
  1531  0E1A                     	;# 
  1532  0E1B                     	;# 
  1533  0E1C                     	;# 
  1534  0E1D                     	;# 
  1535  0E1E                     	;# 
  1536  0E1F                     	;# 
  1537  0E20                     	;# 
  1538  0E21                     	;# 
  1539  0E22                     	;# 
  1540  0E23                     	;# 
  1541  0E24                     	;# 
  1542  0E25                     	;# 
  1543  0E26                     	;# 
  1544  0E27                     	;# 
  1545  0E28                     	;# 
  1546  0E29                     	;# 
  1547  0E2A                     	;# 
  1548  0E2B                     	;# 
  1549  0E2C                     	;# 
  1550  0E2D                     	;# 
  1551  0E2E                     	;# 
  1552  0E2F                     	;# 
  1553  0E30                     	;# 
  1554  0E31                     	;# 
  1555  0E32                     	;# 
  1556  0E33                     	;# 
  1557  0E34                     	;# 
  1558  0E35                     	;# 
  1559  0E36                     	;# 
  1560  0E37                     	;# 
  1561  0E8F                     	;# 
  1562  0E90                     	;# 
  1563  0E91                     	;# 
  1564  0E92                     	;# 
  1565  0E93                     	;# 
  1566  0E94                     	;# 
  1567  0E95                     	;# 
  1568  0E96                     	;# 
  1569  0E97                     	;# 
  1570  0E9C                     	;# 
  1571  0E9D                     	;# 
  1572  0E9E                     	;# 
  1573  0EA1                     	;# 
  1574  0EA2                     	;# 
  1575  0EA3                     	;# 
  1576  0EA4                     	;# 
  1577  0EA5                     	;# 
  1578  0EA9                     	;# 
  1579  0EAA                     	;# 
  1580  0EAB                     	;# 
  1581  0EAC                     	;# 
  1582  0EB1                     	;# 
  1583  0EB2                     	;# 
  1584  0EB3                     	;# 
  1585  0EB8                     	;# 
  1586  0EB9                     	;# 
  1587  0EBA                     	;# 
  1588  0EBB                     	;# 
  1589  0EBC                     	;# 
  1590  0EBD                     	;# 
  1591  0EBE                     	;# 
  1592  0EC3                     	;# 
  1593  0EC5                     	;# 
  1594  0EC6                     	;# 
  1595  0EC7                     	;# 
  1596  0EC8                     	;# 
  1597  0EC9                     	;# 
  1598  0ECA                     	;# 
  1599  0ECB                     	;# 
  1600  0ECC                     	;# 
  1601  0F10                     	;# 
  1602  0F11                     	;# 
  1603  0F12                     	;# 
  1604  0F13                     	;# 
  1605  0F14                     	;# 
  1606  0F15                     	;# 
  1607  0F16                     	;# 
  1608  0F17                     	;# 
  1609  0F18                     	;# 
  1610  0F19                     	;# 
  1611  0F1A                     	;# 
  1612  0F1B                     	;# 
  1613  0F1C                     	;# 
  1614  0F1D                     	;# 
  1615  0F1E                     	;# 
  1616  0F1F                     	;# 
  1617  0F20                     	;# 
  1618  0F21                     	;# 
  1619  0F22                     	;# 
  1620  0F23                     	;# 
  1621  0F24                     	;# 
  1622  0F25                     	;# 
  1623  0F26                     	;# 
  1624  0F27                     	;# 
  1625  0F38                     	;# 
  1626  0F39                     	;# 
  1627  0F3A                     	;# 
  1628  0F3B                     	;# 
  1629  0F3C                     	;# 
  1630  0F3D                     	;# 
  1631  0F3E                     	;# 
  1632  0F3F                     	;# 
  1633  0F40                     	;# 
  1634  0F41                     	;# 
  1635  0F43                     	;# 
  1636  0F44                     	;# 
  1637  0F45                     	;# 
  1638  0F46                     	;# 
  1639  0F47                     	;# 
  1640  0F48                     	;# 
  1641  0F49                     	;# 
  1642  0F4A                     	;# 
  1643  0F4B                     	;# 
  1644  0F4C                     	;# 
  1645  0F4E                     	;# 
  1646  0F4F                     	;# 
  1647  0F50                     	;# 
  1648  0F51                     	;# 
  1649  0F52                     	;# 
  1650  0F53                     	;# 
  1651  0F54                     	;# 
  1652  0F55                     	;# 
  1653  0F56                     	;# 
  1654  0F57                     	;# 
  1655  0F65                     	;# 
  1656  0F68                     	;# 
  1657  0F69                     	;# 
  1658  0F6A                     	;# 
  1659  0F6B                     	;# 
  1660  0FE4                     	;# 
  1661  0FE5                     	;# 
  1662  0FE6                     	;# 
  1663  0FE7                     	;# 
  1664  0FE8                     	;# 
  1665  0FE9                     	;# 
  1666  0FEA                     	;# 
  1667  0FEB                     	;# 
  1668  0FED                     	;# 
  1669  0FEE                     	;# 
  1670  0FEF                     	;# 
  1671  0000                     	;# 
  1672  0001                     	;# 
  1673  0002                     	;# 
  1674  0003                     	;# 
  1675  0004                     	;# 
  1676  0005                     	;# 
  1677  0006                     	;# 
  1678  0007                     	;# 
  1679  0008                     	;# 
  1680  0009                     	;# 
  1681  000A                     	;# 
  1682  000B                     	;# 
  1683  000C                     	;# 
  1684  000D                     	;# 
  1685  000E                     	;# 
  1686  0010                     	;# 
  1687  0011                     	;# 
  1688  0012                     	;# 
  1689  0013                     	;# 
  1690  0016                     	;# 
  1691  0017                     	;# 
  1692  0018                     	;# 
  1693  001C                     	;# 
  1694  001C                     	;# 
  1695  001D                     	;# 
  1696  001D                     	;# 
  1697  001E                     	;# 
  1698  001F                     	;# 
  1699  008C                     	;# 
  1700  008C                     	;# 
  1701  008D                     	;# 
  1702  008E                     	;# 
  1703  008E                     	;# 
  1704  008F                     	;# 
  1705  0090                     	;# 
  1706  0090                     	;# 
  1707  0091                     	;# 
  1708  0093                     	;# 
  1709  0094                     	;# 
  1710  0095                     	;# 
  1711  0096                     	;# 
  1712  0097                     	;# 
  1713  0098                     	;# 
  1714  0099                     	;# 
  1715  009A                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  010E                     	;# 
  1723  010E                     	;# 
  1724  010F                     	;# 
  1725  0110                     	;# 
  1726  0110                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0114                     	;# 
  1733  0115                     	;# 
  1734  0116                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  0119                     	;# 
  1738  0119                     	;# 
  1739  0119                     	;# 
  1740  011A                     	;# 
  1741  011A                     	;# 
  1742  011A                     	;# 
  1743  011B                     	;# 
  1744  011B                     	;# 
  1745  011B                     	;# 
  1746  011B                     	;# 
  1747  011B                     	;# 
  1748  011C                     	;# 
  1749  011C                     	;# 
  1750  011C                     	;# 
  1751  011D                     	;# 
  1752  011D                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  011E                     	;# 
  1756  011E                     	;# 
  1757  011F                     	;# 
  1758  011F                     	;# 
  1759  011F                     	;# 
  1760  011F                     	;# 
  1761  011F                     	;# 
  1762  018C                     	;# 
  1763  018D                     	;# 
  1764  018E                     	;# 
  1765  018F                     	;# 
  1766  0190                     	;# 
  1767  0191                     	;# 
  1768  0192                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0198                     	;# 
  1772  0199                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019C                     	;# 
  1776  020C                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  020E                     	;# 
  1780  020F                     	;# 
  1781  020F                     	;# 
  1782  0210                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0214                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0218                     	;# 
  1797  0218                     	;# 
  1798  0219                     	;# 
  1799  021A                     	;# 
  1800  021B                     	;# 
  1801  021B                     	;# 
  1802  021C                     	;# 
  1803  021C                     	;# 
  1804  021D                     	;# 
  1805  021D                     	;# 
  1806  021E                     	;# 
  1807  021F                     	;# 
  1808  028C                     	;# 
  1809  028C                     	;# 
  1810  028D                     	;# 
  1811  028D                     	;# 
  1812  028E                     	;# 
  1813  028F                     	;# 
  1814  0290                     	;# 
  1815  0290                     	;# 
  1816  0291                     	;# 
  1817  0292                     	;# 
  1818  0292                     	;# 
  1819  0293                     	;# 
  1820  0293                     	;# 
  1821  0294                     	;# 
  1822  0295                     	;# 
  1823  0296                     	;# 
  1824  0296                     	;# 
  1825  0297                     	;# 
  1826  0298                     	;# 
  1827  0298                     	;# 
  1828  0299                     	;# 
  1829  0299                     	;# 
  1830  029A                     	;# 
  1831  029B                     	;# 
  1832  029C                     	;# 
  1833  029C                     	;# 
  1834  029D                     	;# 
  1835  030C                     	;# 
  1836  030C                     	;# 
  1837  030D                     	;# 
  1838  030E                     	;# 
  1839  030F                     	;# 
  1840  0310                     	;# 
  1841  0310                     	;# 
  1842  0311                     	;# 
  1843  0312                     	;# 
  1844  0313                     	;# 
  1845  0314                     	;# 
  1846  0314                     	;# 
  1847  0315                     	;# 
  1848  0316                     	;# 
  1849  0317                     	;# 
  1850  0318                     	;# 
  1851  0318                     	;# 
  1852  0319                     	;# 
  1853  031A                     	;# 
  1854  031B                     	;# 
  1855  031C                     	;# 
  1856  031C                     	;# 
  1857  031D                     	;# 
  1858  031E                     	;# 
  1859  031F                     	;# 
  1860  038C                     	;# 
  1861  038C                     	;# 
  1862  038D                     	;# 
  1863  038E                     	;# 
  1864  0390                     	;# 
  1865  0390                     	;# 
  1866  0391                     	;# 
  1867  0392                     	;# 
  1868  040C                     	;# 
  1869  040D                     	;# 
  1870  040E                     	;# 
  1871  040F                     	;# 
  1872  0410                     	;# 
  1873  0411                     	;# 
  1874  0416                     	;# 
  1875  0416                     	;# 
  1876  0417                     	;# 
  1877  0418                     	;# 
  1878  0418                     	;# 
  1879  0419                     	;# 
  1880  041A                     	;# 
  1881  041A                     	;# 
  1882  041B                     	;# 
  1883  041C                     	;# 
  1884  041C                     	;# 
  1885  041D                     	;# 
  1886  041E                     	;# 
  1887  041F                     	;# 
  1888  048C                     	;# 
  1889  048C                     	;# 
  1890  048D                     	;# 
  1891  048E                     	;# 
  1892  048F                     	;# 
  1893  048F                     	;# 
  1894  0490                     	;# 
  1895  0491                     	;# 
  1896  0492                     	;# 
  1897  0492                     	;# 
  1898  0493                     	;# 
  1899  0494                     	;# 
  1900  0495                     	;# 
  1901  0495                     	;# 
  1902  0496                     	;# 
  1903  0497                     	;# 
  1904  0498                     	;# 
  1905  0499                     	;# 
  1906  049A                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  050C                     	;# 
  1911  050C                     	;# 
  1912  050D                     	;# 
  1913  050E                     	;# 
  1914  050F                     	;# 
  1915  050F                     	;# 
  1916  0510                     	;# 
  1917  0511                     	;# 
  1918  0512                     	;# 
  1919  0512                     	;# 
  1920  0513                     	;# 
  1921  0514                     	;# 
  1922  0515                     	;# 
  1923  0515                     	;# 
  1924  0516                     	;# 
  1925  0517                     	;# 
  1926  0518                     	;# 
  1927  0519                     	;# 
  1928  051A                     	;# 
  1929  051B                     	;# 
  1930  051C                     	;# 
  1931  051D                     	;# 
  1932  058C                     	;# 
  1933  058C                     	;# 
  1934  058D                     	;# 
  1935  058E                     	;# 
  1936  058F                     	;# 
  1937  058F                     	;# 
  1938  0590                     	;# 
  1939  0591                     	;# 
  1940  0592                     	;# 
  1941  0593                     	;# 
  1942  060C                     	;# 
  1943  060D                     	;# 
  1944  060E                     	;# 
  1945  060F                     	;# 
  1946  0610                     	;# 
  1947  0611                     	;# 
  1948  0612                     	;# 
  1949  0613                     	;# 
  1950  0614                     	;# 
  1951  0616                     	;# 
  1952  0617                     	;# 
  1953  0618                     	;# 
  1954  0619                     	;# 
  1955  061A                     	;# 
  1956  061B                     	;# 
  1957  061C                     	;# 
  1958  061D                     	;# 
  1959  061E                     	;# 
  1960  068C                     	;# 
  1961  068D                     	;# 
  1962  068E                     	;# 
  1963  068F                     	;# 
  1964  0690                     	;# 
  1965  0691                     	;# 
  1966  0692                     	;# 
  1967  0693                     	;# 
  1968  0694                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0714                     	;# 
  1978  0716                     	;# 
  1979  0717                     	;# 
  1980  0718                     	;# 
  1981  0719                     	;# 
  1982  071A                     	;# 
  1983  071B                     	;# 
  1984  071C                     	;# 
  1985  071D                     	;# 
  1986  071E                     	;# 
  1987  0796                     	;# 
  1988  0797                     	;# 
  1989  0798                     	;# 
  1990  0799                     	;# 
  1991  079A                     	;# 
  1992  079B                     	;# 
  1993  080C                     	;# 
  1994  080D                     	;# 
  1995  080E                     	;# 
  1996  080F                     	;# 
  1997  0810                     	;# 
  1998  0811                     	;# 
  1999  0812                     	;# 
  2000  0813                     	;# 
  2001  0814                     	;# 
  2002  081A                     	;# 
  2003  081B                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  0897                     	;# 
  2019  0898                     	;# 
  2020  0899                     	;# 
  2021  089A                     	;# 
  2022  089B                     	;# 
  2023  090C                     	;# 
  2024  090E                     	;# 
  2025  090F                     	;# 
  2026  091F                     	;# 
  2027  098F                     	;# 
  2028  098F                     	;# 
  2029  0990                     	;# 
  2030  0991                     	;# 
  2031  0992                     	;# 
  2032  0993                     	;# 
  2033  0994                     	;# 
  2034  0995                     	;# 
  2035  0996                     	;# 
  2036  0997                     	;# 
  2037  0E0F                     	;# 
  2038  0E10                     	;# 
  2039  0E11                     	;# 
  2040  0E12                     	;# 
  2041  0E13                     	;# 
  2042  0E14                     	;# 
  2043  0E15                     	;# 
  2044  0E16                     	;# 
  2045  0E17                     	;# 
  2046  0E18                     	;# 
  2047  0E19                     	;# 
  2048  0E1A                     	;# 
  2049  0E1B                     	;# 
  2050  0E1C                     	;# 
  2051  0E1D                     	;# 
  2052  0E1E                     	;# 
  2053  0E1F                     	;# 
  2054  0E20                     	;# 
  2055  0E21                     	;# 
  2056  0E22                     	;# 
  2057  0E23                     	;# 
  2058  0E24                     	;# 
  2059  0E25                     	;# 
  2060  0E26                     	;# 
  2061  0E27                     	;# 
  2062  0E28                     	;# 
  2063  0E29                     	;# 
  2064  0E2A                     	;# 
  2065  0E2B                     	;# 
  2066  0E2C                     	;# 
  2067  0E2D                     	;# 
  2068  0E2E                     	;# 
  2069  0E2F                     	;# 
  2070  0E30                     	;# 
  2071  0E31                     	;# 
  2072  0E32                     	;# 
  2073  0E33                     	;# 
  2074  0E34                     	;# 
  2075  0E35                     	;# 
  2076  0E36                     	;# 
  2077  0E37                     	;# 
  2078  0E8F                     	;# 
  2079  0E90                     	;# 
  2080  0E91                     	;# 
  2081  0E92                     	;# 
  2082  0E93                     	;# 
  2083  0E94                     	;# 
  2084  0E95                     	;# 
  2085  0E96                     	;# 
  2086  0E97                     	;# 
  2087  0E9C                     	;# 
  2088  0E9D                     	;# 
  2089  0E9E                     	;# 
  2090  0EA1                     	;# 
  2091  0EA2                     	;# 
  2092  0EA3                     	;# 
  2093  0EA4                     	;# 
  2094  0EA5                     	;# 
  2095  0EA9                     	;# 
  2096  0EAA                     	;# 
  2097  0EAB                     	;# 
  2098  0EAC                     	;# 
  2099  0EB1                     	;# 
  2100  0EB2                     	;# 
  2101  0EB3                     	;# 
  2102  0EB8                     	;# 
  2103  0EB9                     	;# 
  2104  0EBA                     	;# 
  2105  0EBB                     	;# 
  2106  0EBC                     	;# 
  2107  0EBD                     	;# 
  2108  0EBE                     	;# 
  2109  0EC3                     	;# 
  2110  0EC5                     	;# 
  2111  0EC6                     	;# 
  2112  0EC7                     	;# 
  2113  0EC8                     	;# 
  2114  0EC9                     	;# 
  2115  0ECA                     	;# 
  2116  0ECB                     	;# 
  2117  0ECC                     	;# 
  2118  0F10                     	;# 
  2119  0F11                     	;# 
  2120  0F12                     	;# 
  2121  0F13                     	;# 
  2122  0F14                     	;# 
  2123  0F15                     	;# 
  2124  0F16                     	;# 
  2125  0F17                     	;# 
  2126  0F18                     	;# 
  2127  0F19                     	;# 
  2128  0F1A                     	;# 
  2129  0F1B                     	;# 
  2130  0F1C                     	;# 
  2131  0F1D                     	;# 
  2132  0F1E                     	;# 
  2133  0F1F                     	;# 
  2134  0F20                     	;# 
  2135  0F21                     	;# 
  2136  0F22                     	;# 
  2137  0F23                     	;# 
  2138  0F24                     	;# 
  2139  0F25                     	;# 
  2140  0F26                     	;# 
  2141  0F27                     	;# 
  2142  0F38                     	;# 
  2143  0F39                     	;# 
  2144  0F3A                     	;# 
  2145  0F3B                     	;# 
  2146  0F3C                     	;# 
  2147  0F3D                     	;# 
  2148  0F3E                     	;# 
  2149  0F3F                     	;# 
  2150  0F40                     	;# 
  2151  0F41                     	;# 
  2152  0F43                     	;# 
  2153  0F44                     	;# 
  2154  0F45                     	;# 
  2155  0F46                     	;# 
  2156  0F47                     	;# 
  2157  0F48                     	;# 
  2158  0F49                     	;# 
  2159  0F4A                     	;# 
  2160  0F4B                     	;# 
  2161  0F4C                     	;# 
  2162  0F4E                     	;# 
  2163  0F4F                     	;# 
  2164  0F50                     	;# 
  2165  0F51                     	;# 
  2166  0F52                     	;# 
  2167  0F53                     	;# 
  2168  0F54                     	;# 
  2169  0F55                     	;# 
  2170  0F56                     	;# 
  2171  0F57                     	;# 
  2172  0F65                     	;# 
  2173  0F68                     	;# 
  2174  0F69                     	;# 
  2175  0F6A                     	;# 
  2176  0F6B                     	;# 
  2177  0FE4                     	;# 
  2178  0FE5                     	;# 
  2179  0FE6                     	;# 
  2180  0FE7                     	;# 
  2181  0FE8                     	;# 
  2182  0FE9                     	;# 
  2183  0FEA                     	;# 
  2184  0FEB                     	;# 
  2185  0FED                     	;# 
  2186  0FEE                     	;# 
  2187  0FEF                     	;# 
  2188  0000                     	;# 
  2189  0001                     	;# 
  2190  0002                     	;# 
  2191  0003                     	;# 
  2192  0004                     	;# 
  2193  0005                     	;# 
  2194  0006                     	;# 
  2195  0007                     	;# 
  2196  0008                     	;# 
  2197  0009                     	;# 
  2198  000A                     	;# 
  2199  000B                     	;# 
  2200  000C                     	;# 
  2201  000D                     	;# 
  2202  000E                     	;# 
  2203  0010                     	;# 
  2204  0011                     	;# 
  2205  0012                     	;# 
  2206  0013                     	;# 
  2207  0016                     	;# 
  2208  0017                     	;# 
  2209  0018                     	;# 
  2210  001C                     	;# 
  2211  001C                     	;# 
  2212  001D                     	;# 
  2213  001D                     	;# 
  2214  001E                     	;# 
  2215  001F                     	;# 
  2216  008C                     	;# 
  2217  008C                     	;# 
  2218  008D                     	;# 
  2219  008E                     	;# 
  2220  008E                     	;# 
  2221  008F                     	;# 
  2222  0090                     	;# 
  2223  0090                     	;# 
  2224  0091                     	;# 
  2225  0093                     	;# 
  2226  0094                     	;# 
  2227  0095                     	;# 
  2228  0096                     	;# 
  2229  0097                     	;# 
  2230  0098                     	;# 
  2231  0099                     	;# 
  2232  009A                     	;# 
  2233  009B                     	;# 
  2234  009C                     	;# 
  2235  009D                     	;# 
  2236  009E                     	;# 
  2237  010C                     	;# 
  2238  010D                     	;# 
  2239  010E                     	;# 
  2240  010E                     	;# 
  2241  010F                     	;# 
  2242  0110                     	;# 
  2243  0110                     	;# 
  2244  0111                     	;# 
  2245  0112                     	;# 
  2246  0112                     	;# 
  2247  0113                     	;# 
  2248  0114                     	;# 
  2249  0114                     	;# 
  2250  0115                     	;# 
  2251  0116                     	;# 
  2252  0116                     	;# 
  2253  0117                     	;# 
  2254  0119                     	;# 
  2255  0119                     	;# 
  2256  0119                     	;# 
  2257  011A                     	;# 
  2258  011A                     	;# 
  2259  011A                     	;# 
  2260  011B                     	;# 
  2261  011B                     	;# 
  2262  011B                     	;# 
  2263  011B                     	;# 
  2264  011B                     	;# 
  2265  011C                     	;# 
  2266  011C                     	;# 
  2267  011C                     	;# 
  2268  011D                     	;# 
  2269  011D                     	;# 
  2270  011D                     	;# 
  2271  011E                     	;# 
  2272  011E                     	;# 
  2273  011E                     	;# 
  2274  011F                     	;# 
  2275  011F                     	;# 
  2276  011F                     	;# 
  2277  011F                     	;# 
  2278  011F                     	;# 
  2279  018C                     	;# 
  2280  018D                     	;# 
  2281  018E                     	;# 
  2282  018F                     	;# 
  2283  0190                     	;# 
  2284  0191                     	;# 
  2285  0192                     	;# 
  2286  0196                     	;# 
  2287  0197                     	;# 
  2288  0198                     	;# 
  2289  0199                     	;# 
  2290  019A                     	;# 
  2291  019B                     	;# 
  2292  019C                     	;# 
  2293  020C                     	;# 
  2294  020C                     	;# 
  2295  020D                     	;# 
  2296  020E                     	;# 
  2297  020F                     	;# 
  2298  020F                     	;# 
  2299  0210                     	;# 
  2300  0210                     	;# 
  2301  0211                     	;# 
  2302  0211                     	;# 
  2303  0212                     	;# 
  2304  0212                     	;# 
  2305  0213                     	;# 
  2306  0214                     	;# 
  2307  0215                     	;# 
  2308  0215                     	;# 
  2309  0216                     	;# 
  2310  0216                     	;# 
  2311  0217                     	;# 
  2312  0217                     	;# 
  2313  0218                     	;# 
  2314  0218                     	;# 
  2315  0219                     	;# 
  2316  021A                     	;# 
  2317  021B                     	;# 
  2318  021B                     	;# 
  2319  021C                     	;# 
  2320  021C                     	;# 
  2321  021D                     	;# 
  2322  021D                     	;# 
  2323  021E                     	;# 
  2324  021F                     	;# 
  2325  028C                     	;# 
  2326  028C                     	;# 
  2327  028D                     	;# 
  2328  028D                     	;# 
  2329  028E                     	;# 
  2330  028F                     	;# 
  2331  0290                     	;# 
  2332  0290                     	;# 
  2333  0291                     	;# 
  2334  0292                     	;# 
  2335  0292                     	;# 
  2336  0293                     	;# 
  2337  0293                     	;# 
  2338  0294                     	;# 
  2339  0295                     	;# 
  2340  0296                     	;# 
  2341  0296                     	;# 
  2342  0297                     	;# 
  2343  0298                     	;# 
  2344  0298                     	;# 
  2345  0299                     	;# 
  2346  0299                     	;# 
  2347  029A                     	;# 
  2348  029B                     	;# 
  2349  029C                     	;# 
  2350  029C                     	;# 
  2351  029D                     	;# 
  2352  030C                     	;# 
  2353  030C                     	;# 
  2354  030D                     	;# 
  2355  030E                     	;# 
  2356  030F                     	;# 
  2357  0310                     	;# 
  2358  0310                     	;# 
  2359  0311                     	;# 
  2360  0312                     	;# 
  2361  0313                     	;# 
  2362  0314                     	;# 
  2363  0314                     	;# 
  2364  0315                     	;# 
  2365  0316                     	;# 
  2366  0317                     	;# 
  2367  0318                     	;# 
  2368  0318                     	;# 
  2369  0319                     	;# 
  2370  031A                     	;# 
  2371  031B                     	;# 
  2372  031C                     	;# 
  2373  031C                     	;# 
  2374  031D                     	;# 
  2375  031E                     	;# 
  2376  031F                     	;# 
  2377  038C                     	;# 
  2378  038C                     	;# 
  2379  038D                     	;# 
  2380  038E                     	;# 
  2381  0390                     	;# 
  2382  0390                     	;# 
  2383  0391                     	;# 
  2384  0392                     	;# 
  2385  040C                     	;# 
  2386  040D                     	;# 
  2387  040E                     	;# 
  2388  040F                     	;# 
  2389  0410                     	;# 
  2390  0411                     	;# 
  2391  0416                     	;# 
  2392  0416                     	;# 
  2393  0417                     	;# 
  2394  0418                     	;# 
  2395  0418                     	;# 
  2396  0419                     	;# 
  2397  041A                     	;# 
  2398  041A                     	;# 
  2399  041B                     	;# 
  2400  041C                     	;# 
  2401  041C                     	;# 
  2402  041D                     	;# 
  2403  041E                     	;# 
  2404  041F                     	;# 
  2405  048C                     	;# 
  2406  048C                     	;# 
  2407  048D                     	;# 
  2408  048E                     	;# 
  2409  048F                     	;# 
  2410  048F                     	;# 
  2411  0490                     	;# 
  2412  0491                     	;# 
  2413  0492                     	;# 
  2414  0492                     	;# 
  2415  0493                     	;# 
  2416  0494                     	;# 
  2417  0495                     	;# 
  2418  0495                     	;# 
  2419  0496                     	;# 
  2420  0497                     	;# 
  2421  0498                     	;# 
  2422  0499                     	;# 
  2423  049A                     	;# 
  2424  049B                     	;# 
  2425  049C                     	;# 
  2426  049D                     	;# 
  2427  050C                     	;# 
  2428  050C                     	;# 
  2429  050D                     	;# 
  2430  050E                     	;# 
  2431  050F                     	;# 
  2432  050F                     	;# 
  2433  0510                     	;# 
  2434  0511                     	;# 
  2435  0512                     	;# 
  2436  0512                     	;# 
  2437  0513                     	;# 
  2438  0514                     	;# 
  2439  0515                     	;# 
  2440  0515                     	;# 
  2441  0516                     	;# 
  2442  0517                     	;# 
  2443  0518                     	;# 
  2444  0519                     	;# 
  2445  051A                     	;# 
  2446  051B                     	;# 
  2447  051C                     	;# 
  2448  051D                     	;# 
  2449  058C                     	;# 
  2450  058C                     	;# 
  2451  058D                     	;# 
  2452  058E                     	;# 
  2453  058F                     	;# 
  2454  058F                     	;# 
  2455  0590                     	;# 
  2456  0591                     	;# 
  2457  0592                     	;# 
  2458  0593                     	;# 
  2459  060C                     	;# 
  2460  060D                     	;# 
  2461  060E                     	;# 
  2462  060F                     	;# 
  2463  0610                     	;# 
  2464  0611                     	;# 
  2465  0612                     	;# 
  2466  0613                     	;# 
  2467  0614                     	;# 
  2468  0616                     	;# 
  2469  0617                     	;# 
  2470  0618                     	;# 
  2471  0619                     	;# 
  2472  061A                     	;# 
  2473  061B                     	;# 
  2474  061C                     	;# 
  2475  061D                     	;# 
  2476  061E                     	;# 
  2477  068C                     	;# 
  2478  068D                     	;# 
  2479  068E                     	;# 
  2480  068F                     	;# 
  2481  0690                     	;# 
  2482  0691                     	;# 
  2483  0692                     	;# 
  2484  0693                     	;# 
  2485  0694                     	;# 
  2486  070C                     	;# 
  2487  070D                     	;# 
  2488  070E                     	;# 
  2489  070F                     	;# 
  2490  0710                     	;# 
  2491  0711                     	;# 
  2492  0712                     	;# 
  2493  0713                     	;# 
  2494  0714                     	;# 
  2495  0716                     	;# 
  2496  0717                     	;# 
  2497  0718                     	;# 
  2498  0719                     	;# 
  2499  071A                     	;# 
  2500  071B                     	;# 
  2501  071C                     	;# 
  2502  071D                     	;# 
  2503  071E                     	;# 
  2504  0796                     	;# 
  2505  0797                     	;# 
  2506  0798                     	;# 
  2507  0799                     	;# 
  2508  079A                     	;# 
  2509  079B                     	;# 
  2510  080C                     	;# 
  2511  080D                     	;# 
  2512  080E                     	;# 
  2513  080F                     	;# 
  2514  0810                     	;# 
  2515  0811                     	;# 
  2516  0812                     	;# 
  2517  0813                     	;# 
  2518  0814                     	;# 
  2519  081A                     	;# 
  2520  081B                     	;# 
  2521  081C                     	;# 
  2522  081D                     	;# 
  2523  081E                     	;# 
  2524  081F                     	;# 
  2525  088C                     	;# 
  2526  088D                     	;# 
  2527  088E                     	;# 
  2528  088F                     	;# 
  2529  0890                     	;# 
  2530  0891                     	;# 
  2531  0892                     	;# 
  2532  0893                     	;# 
  2533  0895                     	;# 
  2534  0896                     	;# 
  2535  0897                     	;# 
  2536  0898                     	;# 
  2537  0899                     	;# 
  2538  089A                     	;# 
  2539  089B                     	;# 
  2540  090C                     	;# 
  2541  090E                     	;# 
  2542  090F                     	;# 
  2543  091F                     	;# 
  2544  098F                     	;# 
  2545  098F                     	;# 
  2546  0990                     	;# 
  2547  0991                     	;# 
  2548  0992                     	;# 
  2549  0993                     	;# 
  2550  0994                     	;# 
  2551  0995                     	;# 
  2552  0996                     	;# 
  2553  0997                     	;# 
  2554  0E0F                     	;# 
  2555  0E10                     	;# 
  2556  0E11                     	;# 
  2557  0E12                     	;# 
  2558  0E13                     	;# 
  2559  0E14                     	;# 
  2560  0E15                     	;# 
  2561  0E16                     	;# 
  2562  0E17                     	;# 
  2563  0E18                     	;# 
  2564  0E19                     	;# 
  2565  0E1A                     	;# 
  2566  0E1B                     	;# 
  2567  0E1C                     	;# 
  2568  0E1D                     	;# 
  2569  0E1E                     	;# 
  2570  0E1F                     	;# 
  2571  0E20                     	;# 
  2572  0E21                     	;# 
  2573  0E22                     	;# 
  2574  0E23                     	;# 
  2575  0E24                     	;# 
  2576  0E25                     	;# 
  2577  0E26                     	;# 
  2578  0E27                     	;# 
  2579  0E28                     	;# 
  2580  0E29                     	;# 
  2581  0E2A                     	;# 
  2582  0E2B                     	;# 
  2583  0E2C                     	;# 
  2584  0E2D                     	;# 
  2585  0E2E                     	;# 
  2586  0E2F                     	;# 
  2587  0E30                     	;# 
  2588  0E31                     	;# 
  2589  0E32                     	;# 
  2590  0E33                     	;# 
  2591  0E34                     	;# 
  2592  0E35                     	;# 
  2593  0E36                     	;# 
  2594  0E37                     	;# 
  2595  0E8F                     	;# 
  2596  0E90                     	;# 
  2597  0E91                     	;# 
  2598  0E92                     	;# 
  2599  0E93                     	;# 
  2600  0E94                     	;# 
  2601  0E95                     	;# 
  2602  0E96                     	;# 
  2603  0E97                     	;# 
  2604  0E9C                     	;# 
  2605  0E9D                     	;# 
  2606  0E9E                     	;# 
  2607  0EA1                     	;# 
  2608  0EA2                     	;# 
  2609  0EA3                     	;# 
  2610  0EA4                     	;# 
  2611  0EA5                     	;# 
  2612  0EA9                     	;# 
  2613  0EAA                     	;# 
  2614  0EAB                     	;# 
  2615  0EAC                     	;# 
  2616  0EB1                     	;# 
  2617  0EB2                     	;# 
  2618  0EB3                     	;# 
  2619  0EB8                     	;# 
  2620  0EB9                     	;# 
  2621  0EBA                     	;# 
  2622  0EBB                     	;# 
  2623  0EBC                     	;# 
  2624  0EBD                     	;# 
  2625  0EBE                     	;# 
  2626  0EC3                     	;# 
  2627  0EC5                     	;# 
  2628  0EC6                     	;# 
  2629  0EC7                     	;# 
  2630  0EC8                     	;# 
  2631  0EC9                     	;# 
  2632  0ECA                     	;# 
  2633  0ECB                     	;# 
  2634  0ECC                     	;# 
  2635  0F10                     	;# 
  2636  0F11                     	;# 
  2637  0F12                     	;# 
  2638  0F13                     	;# 
  2639  0F14                     	;# 
  2640  0F15                     	;# 
  2641  0F16                     	;# 
  2642  0F17                     	;# 
  2643  0F18                     	;# 
  2644  0F19                     	;# 
  2645  0F1A                     	;# 
  2646  0F1B                     	;# 
  2647  0F1C                     	;# 
  2648  0F1D                     	;# 
  2649  0F1E                     	;# 
  2650  0F1F                     	;# 
  2651  0F20                     	;# 
  2652  0F21                     	;# 
  2653  0F22                     	;# 
  2654  0F23                     	;# 
  2655  0F24                     	;# 
  2656  0F25                     	;# 
  2657  0F26                     	;# 
  2658  0F27                     	;# 
  2659  0F38                     	;# 
  2660  0F39                     	;# 
  2661  0F3A                     	;# 
  2662  0F3B                     	;# 
  2663  0F3C                     	;# 
  2664  0F3D                     	;# 
  2665  0F3E                     	;# 
  2666  0F3F                     	;# 
  2667  0F40                     	;# 
  2668  0F41                     	;# 
  2669  0F43                     	;# 
  2670  0F44                     	;# 
  2671  0F45                     	;# 
  2672  0F46                     	;# 
  2673  0F47                     	;# 
  2674  0F48                     	;# 
  2675  0F49                     	;# 
  2676  0F4A                     	;# 
  2677  0F4B                     	;# 
  2678  0F4C                     	;# 
  2679  0F4E                     	;# 
  2680  0F4F                     	;# 
  2681  0F50                     	;# 
  2682  0F51                     	;# 
  2683  0F52                     	;# 
  2684  0F53                     	;# 
  2685  0F54                     	;# 
  2686  0F55                     	;# 
  2687  0F56                     	;# 
  2688  0F57                     	;# 
  2689  0F65                     	;# 
  2690  0F68                     	;# 
  2691  0F69                     	;# 
  2692  0F6A                     	;# 
  2693  0F6B                     	;# 
  2694  0FE4                     	;# 
  2695  0FE5                     	;# 
  2696  0FE6                     	;# 
  2697  0FE7                     	;# 
  2698  0FE8                     	;# 
  2699  0FE9                     	;# 
  2700  0FEA                     	;# 
  2701  0FEB                     	;# 
  2702  0FED                     	;# 
  2703  0FEE                     	;# 
  2704  0FEF                     	;# 
  2705  0000                     	;# 
  2706  0001                     	;# 
  2707  0002                     	;# 
  2708  0003                     	;# 
  2709  0004                     	;# 
  2710  0005                     	;# 
  2711  0006                     	;# 
  2712  0007                     	;# 
  2713  0008                     	;# 
  2714  0009                     	;# 
  2715  000A                     	;# 
  2716  000B                     	;# 
  2717  000C                     	;# 
  2718  000D                     	;# 
  2719  000E                     	;# 
  2720  0010                     	;# 
  2721  0011                     	;# 
  2722  0012                     	;# 
  2723  0013                     	;# 
  2724  0016                     	;# 
  2725  0017                     	;# 
  2726  0018                     	;# 
  2727  001C                     	;# 
  2728  001C                     	;# 
  2729  001D                     	;# 
  2730  001D                     	;# 
  2731  001E                     	;# 
  2732  001F                     	;# 
  2733  008C                     	;# 
  2734  008C                     	;# 
  2735  008D                     	;# 
  2736  008E                     	;# 
  2737  008E                     	;# 
  2738  008F                     	;# 
  2739  0090                     	;# 
  2740  0090                     	;# 
  2741  0091                     	;# 
  2742  0093                     	;# 
  2743  0094                     	;# 
  2744  0095                     	;# 
  2745  0096                     	;# 
  2746  0097                     	;# 
  2747  0098                     	;# 
  2748  0099                     	;# 
  2749  009A                     	;# 
  2750  009B                     	;# 
  2751  009C                     	;# 
  2752  009D                     	;# 
  2753  009E                     	;# 
  2754  010C                     	;# 
  2755  010D                     	;# 
  2756  010E                     	;# 
  2757  010E                     	;# 
  2758  010F                     	;# 
  2759  0110                     	;# 
  2760  0110                     	;# 
  2761  0111                     	;# 
  2762  0112                     	;# 
  2763  0112                     	;# 
  2764  0113                     	;# 
  2765  0114                     	;# 
  2766  0114                     	;# 
  2767  0115                     	;# 
  2768  0116                     	;# 
  2769  0116                     	;# 
  2770  0117                     	;# 
  2771  0119                     	;# 
  2772  0119                     	;# 
  2773  0119                     	;# 
  2774  011A                     	;# 
  2775  011A                     	;# 
  2776  011A                     	;# 
  2777  011B                     	;# 
  2778  011B                     	;# 
  2779  011B                     	;# 
  2780  011B                     	;# 
  2781  011B                     	;# 
  2782  011C                     	;# 
  2783  011C                     	;# 
  2784  011C                     	;# 
  2785  011D                     	;# 
  2786  011D                     	;# 
  2787  011D                     	;# 
  2788  011E                     	;# 
  2789  011E                     	;# 
  2790  011E                     	;# 
  2791  011F                     	;# 
  2792  011F                     	;# 
  2793  011F                     	;# 
  2794  011F                     	;# 
  2795  011F                     	;# 
  2796  018C                     	;# 
  2797  018D                     	;# 
  2798  018E                     	;# 
  2799  018F                     	;# 
  2800  0190                     	;# 
  2801  0191                     	;# 
  2802  0192                     	;# 
  2803  0196                     	;# 
  2804  0197                     	;# 
  2805  0198                     	;# 
  2806  0199                     	;# 
  2807  019A                     	;# 
  2808  019B                     	;# 
  2809  019C                     	;# 
  2810  020C                     	;# 
  2811  020C                     	;# 
  2812  020D                     	;# 
  2813  020E                     	;# 
  2814  020F                     	;# 
  2815  020F                     	;# 
  2816  0210                     	;# 
  2817  0210                     	;# 
  2818  0211                     	;# 
  2819  0211                     	;# 
  2820  0212                     	;# 
  2821  0212                     	;# 
  2822  0213                     	;# 
  2823  0214                     	;# 
  2824  0215                     	;# 
  2825  0215                     	;# 
  2826  0216                     	;# 
  2827  0216                     	;# 
  2828  0217                     	;# 
  2829  0217                     	;# 
  2830  0218                     	;# 
  2831  0218                     	;# 
  2832  0219                     	;# 
  2833  021A                     	;# 
  2834  021B                     	;# 
  2835  021B                     	;# 
  2836  021C                     	;# 
  2837  021C                     	;# 
  2838  021D                     	;# 
  2839  021D                     	;# 
  2840  021E                     	;# 
  2841  021F                     	;# 
  2842  028C                     	;# 
  2843  028C                     	;# 
  2844  028D                     	;# 
  2845  028D                     	;# 
  2846  028E                     	;# 
  2847  028F                     	;# 
  2848  0290                     	;# 
  2849  0290                     	;# 
  2850  0291                     	;# 
  2851  0292                     	;# 
  2852  0292                     	;# 
  2853  0293                     	;# 
  2854  0293                     	;# 
  2855  0294                     	;# 
  2856  0295                     	;# 
  2857  0296                     	;# 
  2858  0296                     	;# 
  2859  0297                     	;# 
  2860  0298                     	;# 
  2861  0298                     	;# 
  2862  0299                     	;# 
  2863  0299                     	;# 
  2864  029A                     	;# 
  2865  029B                     	;# 
  2866  029C                     	;# 
  2867  029C                     	;# 
  2868  029D                     	;# 
  2869  030C                     	;# 
  2870  030C                     	;# 
  2871  030D                     	;# 
  2872  030E                     	;# 
  2873  030F                     	;# 
  2874  0310                     	;# 
  2875  0310                     	;# 
  2876  0311                     	;# 
  2877  0312                     	;# 
  2878  0313                     	;# 
  2879  0314                     	;# 
  2880  0314                     	;# 
  2881  0315                     	;# 
  2882  0316                     	;# 
  2883  0317                     	;# 
  2884  0318                     	;# 
  2885  0318                     	;# 
  2886  0319                     	;# 
  2887  031A                     	;# 
  2888  031B                     	;# 
  2889  031C                     	;# 
  2890  031C                     	;# 
  2891  031D                     	;# 
  2892  031E                     	;# 
  2893  031F                     	;# 
  2894  038C                     	;# 
  2895  038C                     	;# 
  2896  038D                     	;# 
  2897  038E                     	;# 
  2898  0390                     	;# 
  2899  0390                     	;# 
  2900  0391                     	;# 
  2901  0392                     	;# 
  2902  040C                     	;# 
  2903  040D                     	;# 
  2904  040E                     	;# 
  2905  040F                     	;# 
  2906  0410                     	;# 
  2907  0411                     	;# 
  2908  0416                     	;# 
  2909  0416                     	;# 
  2910  0417                     	;# 
  2911  0418                     	;# 
  2912  0418                     	;# 
  2913  0419                     	;# 
  2914  041A                     	;# 
  2915  041A                     	;# 
  2916  041B                     	;# 
  2917  041C                     	;# 
  2918  041C                     	;# 
  2919  041D                     	;# 
  2920  041E                     	;# 
  2921  041F                     	;# 
  2922  048C                     	;# 
  2923  048C                     	;# 
  2924  048D                     	;# 
  2925  048E                     	;# 
  2926  048F                     	;# 
  2927  048F                     	;# 
  2928  0490                     	;# 
  2929  0491                     	;# 
  2930  0492                     	;# 
  2931  0492                     	;# 
  2932  0493                     	;# 
  2933  0494                     	;# 
  2934  0495                     	;# 
  2935  0495                     	;# 
  2936  0496                     	;# 
  2937  0497                     	;# 
  2938  0498                     	;# 
  2939  0499                     	;# 
  2940  049A                     	;# 
  2941  049B                     	;# 
  2942  049C                     	;# 
  2943  049D                     	;# 
  2944  050C                     	;# 
  2945  050C                     	;# 
  2946  050D                     	;# 
  2947  050E                     	;# 
  2948  050F                     	;# 
  2949  050F                     	;# 
  2950  0510                     	;# 
  2951  0511                     	;# 
  2952  0512                     	;# 
  2953  0512                     	;# 
  2954  0513                     	;# 
  2955  0514                     	;# 
  2956  0515                     	;# 
  2957  0515                     	;# 
  2958  0516                     	;# 
  2959  0517                     	;# 
  2960  0518                     	;# 
  2961  0519                     	;# 
  2962  051A                     	;# 
  2963  051B                     	;# 
  2964  051C                     	;# 
  2965  051D                     	;# 
  2966  058C                     	;# 
  2967  058C                     	;# 
  2968  058D                     	;# 
  2969  058E                     	;# 
  2970  058F                     	;# 
  2971  058F                     	;# 
  2972  0590                     	;# 
  2973  0591                     	;# 
  2974  0592                     	;# 
  2975  0593                     	;# 
  2976  060C                     	;# 
  2977  060D                     	;# 
  2978  060E                     	;# 
  2979  060F                     	;# 
  2980  0610                     	;# 
  2981  0611                     	;# 
  2982  0612                     	;# 
  2983  0613                     	;# 
  2984  0614                     	;# 
  2985  0616                     	;# 
  2986  0617                     	;# 
  2987  0618                     	;# 
  2988  0619                     	;# 
  2989  061A                     	;# 
  2990  061B                     	;# 
  2991  061C                     	;# 
  2992  061D                     	;# 
  2993  061E                     	;# 
  2994  068C                     	;# 
  2995  068D                     	;# 
  2996  068E                     	;# 
  2997  068F                     	;# 
  2998  0690                     	;# 
  2999  0691                     	;# 
  3000  0692                     	;# 
  3001  0693                     	;# 
  3002  0694                     	;# 
  3003  070C                     	;# 
  3004  070D                     	;# 
  3005  070E                     	;# 
  3006  070F                     	;# 
  3007  0710                     	;# 
  3008  0711                     	;# 
  3009  0712                     	;# 
  3010  0713                     	;# 
  3011  0714                     	;# 
  3012  0716                     	;# 
  3013  0717                     	;# 
  3014  0718                     	;# 
  3015  0719                     	;# 
  3016  071A                     	;# 
  3017  071B                     	;# 
  3018  071C                     	;# 
  3019  071D                     	;# 
  3020  071E                     	;# 
  3021  0796                     	;# 
  3022  0797                     	;# 
  3023  0798                     	;# 
  3024  0799                     	;# 
  3025  079A                     	;# 
  3026  079B                     	;# 
  3027  080C                     	;# 
  3028  080D                     	;# 
  3029  080E                     	;# 
  3030  080F                     	;# 
  3031  0810                     	;# 
  3032  0811                     	;# 
  3033  0812                     	;# 
  3034  0813                     	;# 
  3035  0814                     	;# 
  3036  081A                     	;# 
  3037  081B                     	;# 
  3038  081C                     	;# 
  3039  081D                     	;# 
  3040  081E                     	;# 
  3041  081F                     	;# 
  3042  088C                     	;# 
  3043  088D                     	;# 
  3044  088E                     	;# 
  3045  088F                     	;# 
  3046  0890                     	;# 
  3047  0891                     	;# 
  3048  0892                     	;# 
  3049  0893                     	;# 
  3050  0895                     	;# 
  3051  0896                     	;# 
  3052  0897                     	;# 
  3053  0898                     	;# 
  3054  0899                     	;# 
  3055  089A                     	;# 
  3056  089B                     	;# 
  3057  090C                     	;# 
  3058  090E                     	;# 
  3059  090F                     	;# 
  3060  091F                     	;# 
  3061  098F                     	;# 
  3062  098F                     	;# 
  3063  0990                     	;# 
  3064  0991                     	;# 
  3065  0992                     	;# 
  3066  0993                     	;# 
  3067  0994                     	;# 
  3068  0995                     	;# 
  3069  0996                     	;# 
  3070  0997                     	;# 
  3071  0E0F                     	;# 
  3072  0E10                     	;# 
  3073  0E11                     	;# 
  3074  0E12                     	;# 
  3075  0E13                     	;# 
  3076  0E14                     	;# 
  3077  0E15                     	;# 
  3078  0E16                     	;# 
  3079  0E17                     	;# 
  3080  0E18                     	;# 
  3081  0E19                     	;# 
  3082  0E1A                     	;# 
  3083  0E1B                     	;# 
  3084  0E1C                     	;# 
  3085  0E1D                     	;# 
  3086  0E1E                     	;# 
  3087  0E1F                     	;# 
  3088  0E20                     	;# 
  3089  0E21                     	;# 
  3090  0E22                     	;# 
  3091  0E23                     	;# 
  3092  0E24                     	;# 
  3093  0E25                     	;# 
  3094  0E26                     	;# 
  3095  0E27                     	;# 
  3096  0E28                     	;# 
  3097  0E29                     	;# 
  3098  0E2A                     	;# 
  3099  0E2B                     	;# 
  3100  0E2C                     	;# 
  3101  0E2D                     	;# 
  3102  0E2E                     	;# 
  3103  0E2F                     	;# 
  3104  0E30                     	;# 
  3105  0E31                     	;# 
  3106  0E32                     	;# 
  3107  0E33                     	;# 
  3108  0E34                     	;# 
  3109  0E35                     	;# 
  3110  0E36                     	;# 
  3111  0E37                     	;# 
  3112  0E8F                     	;# 
  3113  0E90                     	;# 
  3114  0E91                     	;# 
  3115  0E92                     	;# 
  3116  0E93                     	;# 
  3117  0E94                     	;# 
  3118  0E95                     	;# 
  3119  0E96                     	;# 
  3120  0E97                     	;# 
  3121  0E9C                     	;# 
  3122  0E9D                     	;# 
  3123  0E9E                     	;# 
  3124  0EA1                     	;# 
  3125  0EA2                     	;# 
  3126  0EA3                     	;# 
  3127  0EA4                     	;# 
  3128  0EA5                     	;# 
  3129  0EA9                     	;# 
  3130  0EAA                     	;# 
  3131  0EAB                     	;# 
  3132  0EAC                     	;# 
  3133  0EB1                     	;# 
  3134  0EB2                     	;# 
  3135  0EB3                     	;# 
  3136  0EB8                     	;# 
  3137  0EB9                     	;# 
  3138  0EBA                     	;# 
  3139  0EBB                     	;# 
  3140  0EBC                     	;# 
  3141  0EBD                     	;# 
  3142  0EBE                     	;# 
  3143  0EC3                     	;# 
  3144  0EC5                     	;# 
  3145  0EC6                     	;# 
  3146  0EC7                     	;# 
  3147  0EC8                     	;# 
  3148  0EC9                     	;# 
  3149  0ECA                     	;# 
  3150  0ECB                     	;# 
  3151  0ECC                     	;# 
  3152  0F10                     	;# 
  3153  0F11                     	;# 
  3154  0F12                     	;# 
  3155  0F13                     	;# 
  3156  0F14                     	;# 
  3157  0F15                     	;# 
  3158  0F16                     	;# 
  3159  0F17                     	;# 
  3160  0F18                     	;# 
  3161  0F19                     	;# 
  3162  0F1A                     	;# 
  3163  0F1B                     	;# 
  3164  0F1C                     	;# 
  3165  0F1D                     	;# 
  3166  0F1E                     	;# 
  3167  0F1F                     	;# 
  3168  0F20                     	;# 
  3169  0F21                     	;# 
  3170  0F22                     	;# 
  3171  0F23                     	;# 
  3172  0F24                     	;# 
  3173  0F25                     	;# 
  3174  0F26                     	;# 
  3175  0F27                     	;# 
  3176  0F38                     	;# 
  3177  0F39                     	;# 
  3178  0F3A                     	;# 
  3179  0F3B                     	;# 
  3180  0F3C                     	;# 
  3181  0F3D                     	;# 
  3182  0F3E                     	;# 
  3183  0F3F                     	;# 
  3184  0F40                     	;# 
  3185  0F41                     	;# 
  3186  0F43                     	;# 
  3187  0F44                     	;# 
  3188  0F45                     	;# 
  3189  0F46                     	;# 
  3190  0F47                     	;# 
  3191  0F48                     	;# 
  3192  0F49                     	;# 
  3193  0F4A                     	;# 
  3194  0F4B                     	;# 
  3195  0F4C                     	;# 
  3196  0F4E                     	;# 
  3197  0F4F                     	;# 
  3198  0F50                     	;# 
  3199  0F51                     	;# 
  3200  0F52                     	;# 
  3201  0F53                     	;# 
  3202  0F54                     	;# 
  3203  0F55                     	;# 
  3204  0F56                     	;# 
  3205  0F57                     	;# 
  3206  0F65                     	;# 
  3207  0F68                     	;# 
  3208  0F69                     	;# 
  3209  0F6A                     	;# 
  3210  0F6B                     	;# 
  3211  0FE4                     	;# 
  3212  0FE5                     	;# 
  3213  0FE6                     	;# 
  3214  0FE7                     	;# 
  3215  0FE8                     	;# 
  3216  0FE9                     	;# 
  3217  0FEA                     	;# 
  3218  0FEB                     	;# 
  3219  0FED                     	;# 
  3220  0FEE                     	;# 
  3221  0FEF                     	;# 
  3222  0000                     	;# 
  3223  0001                     	;# 
  3224  0002                     	;# 
  3225  0003                     	;# 
  3226  0004                     	;# 
  3227  0005                     	;# 
  3228  0006                     	;# 
  3229  0007                     	;# 
  3230  0008                     	;# 
  3231  0009                     	;# 
  3232  000A                     	;# 
  3233  000B                     	;# 
  3234  000C                     	;# 
  3235  000D                     	;# 
  3236  000E                     	;# 
  3237  0010                     	;# 
  3238  0011                     	;# 
  3239  0012                     	;# 
  3240  0013                     	;# 
  3241  0016                     	;# 
  3242  0017                     	;# 
  3243  0018                     	;# 
  3244  001C                     	;# 
  3245  001C                     	;# 
  3246  001D                     	;# 
  3247  001D                     	;# 
  3248  001E                     	;# 
  3249  001F                     	;# 
  3250  008C                     	;# 
  3251  008C                     	;# 
  3252  008D                     	;# 
  3253  008E                     	;# 
  3254  008E                     	;# 
  3255  008F                     	;# 
  3256  0090                     	;# 
  3257  0090                     	;# 
  3258  0091                     	;# 
  3259  0093                     	;# 
  3260  0094                     	;# 
  3261  0095                     	;# 
  3262  0096                     	;# 
  3263  0097                     	;# 
  3264  0098                     	;# 
  3265  0099                     	;# 
  3266  009A                     	;# 
  3267  009B                     	;# 
  3268  009C                     	;# 
  3269  009D                     	;# 
  3270  009E                     	;# 
  3271  010C                     	;# 
  3272  010D                     	;# 
  3273  010E                     	;# 
  3274  010E                     	;# 
  3275  010F                     	;# 
  3276  0110                     	;# 
  3277  0110                     	;# 
  3278  0111                     	;# 
  3279  0112                     	;# 
  3280  0112                     	;# 
  3281  0113                     	;# 
  3282  0114                     	;# 
  3283  0114                     	;# 
  3284  0115                     	;# 
  3285  0116                     	;# 
  3286  0116                     	;# 
  3287  0117                     	;# 
  3288  0119                     	;# 
  3289  0119                     	;# 
  3290  0119                     	;# 
  3291  011A                     	;# 
  3292  011A                     	;# 
  3293  011A                     	;# 
  3294  011B                     	;# 
  3295  011B                     	;# 
  3296  011B                     	;# 
  3297  011B                     	;# 
  3298  011B                     	;# 
  3299  011C                     	;# 
  3300  011C                     	;# 
  3301  011C                     	;# 
  3302  011D                     	;# 
  3303  011D                     	;# 
  3304  011D                     	;# 
  3305  011E                     	;# 
  3306  011E                     	;# 
  3307  011E                     	;# 
  3308  011F                     	;# 
  3309  011F                     	;# 
  3310  011F                     	;# 
  3311  011F                     	;# 
  3312  011F                     	;# 
  3313  018C                     	;# 
  3314  018D                     	;# 
  3315  018E                     	;# 
  3316  018F                     	;# 
  3317  0190                     	;# 
  3318  0191                     	;# 
  3319  0192                     	;# 
  3320  0196                     	;# 
  3321  0197                     	;# 
  3322  0198                     	;# 
  3323  0199                     	;# 
  3324  019A                     	;# 
  3325  019B                     	;# 
  3326  019C                     	;# 
  3327  020C                     	;# 
  3328  020C                     	;# 
  3329  020D                     	;# 
  3330  020E                     	;# 
  3331  020F                     	;# 
  3332  020F                     	;# 
  3333  0210                     	;# 
  3334  0210                     	;# 
  3335  0211                     	;# 
  3336  0211                     	;# 
  3337  0212                     	;# 
  3338  0212                     	;# 
  3339  0213                     	;# 
  3340  0214                     	;# 
  3341  0215                     	;# 
  3342  0215                     	;# 
  3343  0216                     	;# 
  3344  0216                     	;# 
  3345  0217                     	;# 
  3346  0217                     	;# 
  3347  0218                     	;# 
  3348  0218                     	;# 
  3349  0219                     	;# 
  3350  021A                     	;# 
  3351  021B                     	;# 
  3352  021B                     	;# 
  3353  021C                     	;# 
  3354  021C                     	;# 
  3355  021D                     	;# 
  3356  021D                     	;# 
  3357  021E                     	;# 
  3358  021F                     	;# 
  3359  028C                     	;# 
  3360  028C                     	;# 
  3361  028D                     	;# 
  3362  028D                     	;# 
  3363  028E                     	;# 
  3364  028F                     	;# 
  3365  0290                     	;# 
  3366  0290                     	;# 
  3367  0291                     	;# 
  3368  0292                     	;# 
  3369  0292                     	;# 
  3370  0293                     	;# 
  3371  0293                     	;# 
  3372  0294                     	;# 
  3373  0295                     	;# 
  3374  0296                     	;# 
  3375  0296                     	;# 
  3376  0297                     	;# 
  3377  0298                     	;# 
  3378  0298                     	;# 
  3379  0299                     	;# 
  3380  0299                     	;# 
  3381  029A                     	;# 
  3382  029B                     	;# 
  3383  029C                     	;# 
  3384  029C                     	;# 
  3385  029D                     	;# 
  3386  030C                     	;# 
  3387  030C                     	;# 
  3388  030D                     	;# 
  3389  030E                     	;# 
  3390  030F                     	;# 
  3391  0310                     	;# 
  3392  0310                     	;# 
  3393  0311                     	;# 
  3394  0312                     	;# 
  3395  0313                     	;# 
  3396  0314                     	;# 
  3397  0314                     	;# 
  3398  0315                     	;# 
  3399  0316                     	;# 
  3400  0317                     	;# 
  3401  0318                     	;# 
  3402  0318                     	;# 
  3403  0319                     	;# 
  3404  031A                     	;# 
  3405  031B                     	;# 
  3406  031C                     	;# 
  3407  031C                     	;# 
  3408  031D                     	;# 
  3409  031E                     	;# 
  3410  031F                     	;# 
  3411  038C                     	;# 
  3412  038C                     	;# 
  3413  038D                     	;# 
  3414  038E                     	;# 
  3415  0390                     	;# 
  3416  0390                     	;# 
  3417  0391                     	;# 
  3418  0392                     	;# 
  3419  040C                     	;# 
  3420  040D                     	;# 
  3421  040E                     	;# 
  3422  040F                     	;# 
  3423  0410                     	;# 
  3424  0411                     	;# 
  3425  0416                     	;# 
  3426  0416                     	;# 
  3427  0417                     	;# 
  3428  0418                     	;# 
  3429  0418                     	;# 
  3430  0419                     	;# 
  3431  041A                     	;# 
  3432  041A                     	;# 
  3433  041B                     	;# 
  3434  041C                     	;# 
  3435  041C                     	;# 
  3436  041D                     	;# 
  3437  041E                     	;# 
  3438  041F                     	;# 
  3439  048C                     	;# 
  3440  048C                     	;# 
  3441  048D                     	;# 
  3442  048E                     	;# 
  3443  048F                     	;# 
  3444  048F                     	;# 
  3445  0490                     	;# 
  3446  0491                     	;# 
  3447  0492                     	;# 
  3448  0492                     	;# 
  3449  0493                     	;# 
  3450  0494                     	;# 
  3451  0495                     	;# 
  3452  0495                     	;# 
  3453  0496                     	;# 
  3454  0497                     	;# 
  3455  0498                     	;# 
  3456  0499                     	;# 
  3457  049A                     	;# 
  3458  049B                     	;# 
  3459  049C                     	;# 
  3460  049D                     	;# 
  3461  050C                     	;# 
  3462  050C                     	;# 
  3463  050D                     	;# 
  3464  050E                     	;# 
  3465  050F                     	;# 
  3466  050F                     	;# 
  3467  0510                     	;# 
  3468  0511                     	;# 
  3469  0512                     	;# 
  3470  0512                     	;# 
  3471  0513                     	;# 
  3472  0514                     	;# 
  3473  0515                     	;# 
  3474  0515                     	;# 
  3475  0516                     	;# 
  3476  0517                     	;# 
  3477  0518                     	;# 
  3478  0519                     	;# 
  3479  051A                     	;# 
  3480  051B                     	;# 
  3481  051C                     	;# 
  3482  051D                     	;# 
  3483  058C                     	;# 
  3484  058C                     	;# 
  3485  058D                     	;# 
  3486  058E                     	;# 
  3487  058F                     	;# 
  3488  058F                     	;# 
  3489  0590                     	;# 
  3490  0591                     	;# 
  3491  0592                     	;# 
  3492  0593                     	;# 
  3493  060C                     	;# 
  3494  060D                     	;# 
  3495  060E                     	;# 
  3496  060F                     	;# 
  3497  0610                     	;# 
  3498  0611                     	;# 
  3499  0612                     	;# 
  3500  0613                     	;# 
  3501  0614                     	;# 
  3502  0616                     	;# 
  3503  0617                     	;# 
  3504  0618                     	;# 
  3505  0619                     	;# 
  3506  061A                     	;# 
  3507  061B                     	;# 
  3508  061C                     	;# 
  3509  061D                     	;# 
  3510  061E                     	;# 
  3511  068C                     	;# 
  3512  068D                     	;# 
  3513  068E                     	;# 
  3514  068F                     	;# 
  3515  0690                     	;# 
  3516  0691                     	;# 
  3517  0692                     	;# 
  3518  0693                     	;# 
  3519  0694                     	;# 
  3520  070C                     	;# 
  3521  070D                     	;# 
  3522  070E                     	;# 
  3523  070F                     	;# 
  3524  0710                     	;# 
  3525  0711                     	;# 
  3526  0712                     	;# 
  3527  0713                     	;# 
  3528  0714                     	;# 
  3529  0716                     	;# 
  3530  0717                     	;# 
  3531  0718                     	;# 
  3532  0719                     	;# 
  3533  071A                     	;# 
  3534  071B                     	;# 
  3535  071C                     	;# 
  3536  071D                     	;# 
  3537  071E                     	;# 
  3538  0796                     	;# 
  3539  0797                     	;# 
  3540  0798                     	;# 
  3541  0799                     	;# 
  3542  079A                     	;# 
  3543  079B                     	;# 
  3544  080C                     	;# 
  3545  080D                     	;# 
  3546  080E                     	;# 
  3547  080F                     	;# 
  3548  0810                     	;# 
  3549  0811                     	;# 
  3550  0812                     	;# 
  3551  0813                     	;# 
  3552  0814                     	;# 
  3553  081A                     	;# 
  3554  081B                     	;# 
  3555  081C                     	;# 
  3556  081D                     	;# 
  3557  081E                     	;# 
  3558  081F                     	;# 
  3559  088C                     	;# 
  3560  088D                     	;# 
  3561  088E                     	;# 
  3562  088F                     	;# 
  3563  0890                     	;# 
  3564  0891                     	;# 
  3565  0892                     	;# 
  3566  0893                     	;# 
  3567  0895                     	;# 
  3568  0896                     	;# 
  3569  0897                     	;# 
  3570  0898                     	;# 
  3571  0899                     	;# 
  3572  089A                     	;# 
  3573  089B                     	;# 
  3574  090C                     	;# 
  3575  090E                     	;# 
  3576  090F                     	;# 
  3577  091F                     	;# 
  3578  098F                     	;# 
  3579  098F                     	;# 
  3580  0990                     	;# 
  3581  0991                     	;# 
  3582  0992                     	;# 
  3583  0993                     	;# 
  3584  0994                     	;# 
  3585  0995                     	;# 
  3586  0996                     	;# 
  3587  0997                     	;# 
  3588  0E0F                     	;# 
  3589  0E10                     	;# 
  3590  0E11                     	;# 
  3591  0E12                     	;# 
  3592  0E13                     	;# 
  3593  0E14                     	;# 
  3594  0E15                     	;# 
  3595  0E16                     	;# 
  3596  0E17                     	;# 
  3597  0E18                     	;# 
  3598  0E19                     	;# 
  3599  0E1A                     	;# 
  3600  0E1B                     	;# 
  3601  0E1C                     	;# 
  3602  0E1D                     	;# 
  3603  0E1E                     	;# 
  3604  0E1F                     	;# 
  3605  0E20                     	;# 
  3606  0E21                     	;# 
  3607  0E22                     	;# 
  3608  0E23                     	;# 
  3609  0E24                     	;# 
  3610  0E25                     	;# 
  3611  0E26                     	;# 
  3612  0E27                     	;# 
  3613  0E28                     	;# 
  3614  0E29                     	;# 
  3615  0E2A                     	;# 
  3616  0E2B                     	;# 
  3617  0E2C                     	;# 
  3618  0E2D                     	;# 
  3619  0E2E                     	;# 
  3620  0E2F                     	;# 
  3621  0E30                     	;# 
  3622  0E31                     	;# 
  3623  0E32                     	;# 
  3624  0E33                     	;# 
  3625  0E34                     	;# 
  3626  0E35                     	;# 
  3627  0E36                     	;# 
  3628  0E37                     	;# 
  3629  0E8F                     	;# 
  3630  0E90                     	;# 
  3631  0E91                     	;# 
  3632  0E92                     	;# 
  3633  0E93                     	;# 
  3634  0E94                     	;# 
  3635  0E95                     	;# 
  3636  0E96                     	;# 
  3637  0E97                     	;# 
  3638  0E9C                     	;# 
  3639  0E9D                     	;# 
  3640  0E9E                     	;# 
  3641  0EA1                     	;# 
  3642  0EA2                     	;# 
  3643  0EA3                     	;# 
  3644  0EA4                     	;# 
  3645  0EA5                     	;# 
  3646  0EA9                     	;# 
  3647  0EAA                     	;# 
  3648  0EAB                     	;# 
  3649  0EAC                     	;# 
  3650  0EB1                     	;# 
  3651  0EB2                     	;# 
  3652  0EB3                     	;# 
  3653  0EB8                     	;# 
  3654  0EB9                     	;# 
  3655  0EBA                     	;# 
  3656  0EBB                     	;# 
  3657  0EBC                     	;# 
  3658  0EBD                     	;# 
  3659  0EBE                     	;# 
  3660  0EC3                     	;# 
  3661  0EC5                     	;# 
  3662  0EC6                     	;# 
  3663  0EC7                     	;# 
  3664  0EC8                     	;# 
  3665  0EC9                     	;# 
  3666  0ECA                     	;# 
  3667  0ECB                     	;# 
  3668  0ECC                     	;# 
  3669  0F10                     	;# 
  3670  0F11                     	;# 
  3671  0F12                     	;# 
  3672  0F13                     	;# 
  3673  0F14                     	;# 
  3674  0F15                     	;# 
  3675  0F16                     	;# 
  3676  0F17                     	;# 
  3677  0F18                     	;# 
  3678  0F19                     	;# 
  3679  0F1A                     	;# 
  3680  0F1B                     	;# 
  3681  0F1C                     	;# 
  3682  0F1D                     	;# 
  3683  0F1E                     	;# 
  3684  0F1F                     	;# 
  3685  0F20                     	;# 
  3686  0F21                     	;# 
  3687  0F22                     	;# 
  3688  0F23                     	;# 
  3689  0F24                     	;# 
  3690  0F25                     	;# 
  3691  0F26                     	;# 
  3692  0F27                     	;# 
  3693  0F38                     	;# 
  3694  0F39                     	;# 
  3695  0F3A                     	;# 
  3696  0F3B                     	;# 
  3697  0F3C                     	;# 
  3698  0F3D                     	;# 
  3699  0F3E                     	;# 
  3700  0F3F                     	;# 
  3701  0F40                     	;# 
  3702  0F41                     	;# 
  3703  0F43                     	;# 
  3704  0F44                     	;# 
  3705  0F45                     	;# 
  3706  0F46                     	;# 
  3707  0F47                     	;# 
  3708  0F48                     	;# 
  3709  0F49                     	;# 
  3710  0F4A                     	;# 
  3711  0F4B                     	;# 
  3712  0F4C                     	;# 
  3713  0F4E                     	;# 
  3714  0F4F                     	;# 
  3715  0F50                     	;# 
  3716  0F51                     	;# 
  3717  0F52                     	;# 
  3718  0F53                     	;# 
  3719  0F54                     	;# 
  3720  0F55                     	;# 
  3721  0F56                     	;# 
  3722  0F57                     	;# 
  3723  0F65                     	;# 
  3724  0F68                     	;# 
  3725  0F69                     	;# 
  3726  0F6A                     	;# 
  3727  0F6B                     	;# 
  3728  0FE4                     	;# 
  3729  0FE5                     	;# 
  3730  0FE6                     	;# 
  3731  0FE7                     	;# 
  3732  0FE8                     	;# 
  3733  0FE9                     	;# 
  3734  0FEA                     	;# 
  3735  0FEB                     	;# 
  3736  0FED                     	;# 
  3737  0FEE                     	;# 
  3738  0FEF                     	;# 
  3739  0000                     	;# 
  3740  0001                     	;# 
  3741  0002                     	;# 
  3742  0003                     	;# 
  3743  0004                     	;# 
  3744  0005                     	;# 
  3745  0006                     	;# 
  3746  0007                     	;# 
  3747  0008                     	;# 
  3748  0009                     	;# 
  3749  000A                     	;# 
  3750  000B                     	;# 
  3751  000C                     	;# 
  3752  000D                     	;# 
  3753  000E                     	;# 
  3754  0010                     	;# 
  3755  0011                     	;# 
  3756  0012                     	;# 
  3757  0013                     	;# 
  3758  0016                     	;# 
  3759  0017                     	;# 
  3760  0018                     	;# 
  3761  001C                     	;# 
  3762  001C                     	;# 
  3763  001D                     	;# 
  3764  001D                     	;# 
  3765  001E                     	;# 
  3766  001F                     	;# 
  3767  008C                     	;# 
  3768  008C                     	;# 
  3769  008D                     	;# 
  3770  008E                     	;# 
  3771  008E                     	;# 
  3772  008F                     	;# 
  3773  0090                     	;# 
  3774  0090                     	;# 
  3775  0091                     	;# 
  3776  0093                     	;# 
  3777  0094                     	;# 
  3778  0095                     	;# 
  3779  0096                     	;# 
  3780  0097                     	;# 
  3781  0098                     	;# 
  3782  0099                     	;# 
  3783  009A                     	;# 
  3784  009B                     	;# 
  3785  009C                     	;# 
  3786  009D                     	;# 
  3787  009E                     	;# 
  3788  010C                     	;# 
  3789  010D                     	;# 
  3790  010E                     	;# 
  3791  010E                     	;# 
  3792  010F                     	;# 
  3793  0110                     	;# 
  3794  0110                     	;# 
  3795  0111                     	;# 
  3796  0112                     	;# 
  3797  0112                     	;# 
  3798  0113                     	;# 
  3799  0114                     	;# 
  3800  0114                     	;# 
  3801  0115                     	;# 
  3802  0116                     	;# 
  3803  0116                     	;# 
  3804  0117                     	;# 
  3805  0119                     	;# 
  3806  0119                     	;# 
  3807  0119                     	;# 
  3808  011A                     	;# 
  3809  011A                     	;# 
  3810  011A                     	;# 
  3811  011B                     	;# 
  3812  011B                     	;# 
  3813  011B                     	;# 
  3814  011B                     	;# 
  3815  011B                     	;# 
  3816  011C                     	;# 
  3817  011C                     	;# 
  3818  011C                     	;# 
  3819  011D                     	;# 
  3820  011D                     	;# 
  3821  011D                     	;# 
  3822  011E                     	;# 
  3823  011E                     	;# 
  3824  011E                     	;# 
  3825  011F                     	;# 
  3826  011F                     	;# 
  3827  011F                     	;# 
  3828  011F                     	;# 
  3829  011F                     	;# 
  3830  018C                     	;# 
  3831  018D                     	;# 
  3832  018E                     	;# 
  3833  018F                     	;# 
  3834  0190                     	;# 
  3835  0191                     	;# 
  3836  0192                     	;# 
  3837  0196                     	;# 
  3838  0197                     	;# 
  3839  0198                     	;# 
  3840  0199                     	;# 
  3841  019A                     	;# 
  3842  019B                     	;# 
  3843  019C                     	;# 
  3844  020C                     	;# 
  3845  020C                     	;# 
  3846  020D                     	;# 
  3847  020E                     	;# 
  3848  020F                     	;# 
  3849  020F                     	;# 
  3850  0210                     	;# 
  3851  0210                     	;# 
  3852  0211                     	;# 
  3853  0211                     	;# 
  3854  0212                     	;# 
  3855  0212                     	;# 
  3856  0213                     	;# 
  3857  0214                     	;# 
  3858  0215                     	;# 
  3859  0215                     	;# 
  3860  0216                     	;# 
  3861  0216                     	;# 
  3862  0217                     	;# 
  3863  0217                     	;# 
  3864  0218                     	;# 
  3865  0218                     	;# 
  3866  0219                     	;# 
  3867  021A                     	;# 
  3868  021B                     	;# 
  3869  021B                     	;# 
  3870  021C                     	;# 
  3871  021C                     	;# 
  3872  021D                     	;# 
  3873  021D                     	;# 
  3874  021E                     	;# 
  3875  021F                     	;# 
  3876  028C                     	;# 
  3877  028C                     	;# 
  3878  028D                     	;# 
  3879  028D                     	;# 
  3880  028E                     	;# 
  3881  028F                     	;# 
  3882  0290                     	;# 
  3883  0290                     	;# 
  3884  0291                     	;# 
  3885  0292                     	;# 
  3886  0292                     	;# 
  3887  0293                     	;# 
  3888  0293                     	;# 
  3889  0294                     	;# 
  3890  0295                     	;# 
  3891  0296                     	;# 
  3892  0296                     	;# 
  3893  0297                     	;# 
  3894  0298                     	;# 
  3895  0298                     	;# 
  3896  0299                     	;# 
  3897  0299                     	;# 
  3898  029A                     	;# 
  3899  029B                     	;# 
  3900  029C                     	;# 
  3901  029C                     	;# 
  3902  029D                     	;# 
  3903  030C                     	;# 
  3904  030C                     	;# 
  3905  030D                     	;# 
  3906  030E                     	;# 
  3907  030F                     	;# 
  3908  0310                     	;# 
  3909  0310                     	;# 
  3910  0311                     	;# 
  3911  0312                     	;# 
  3912  0313                     	;# 
  3913  0314                     	;# 
  3914  0314                     	;# 
  3915  0315                     	;# 
  3916  0316                     	;# 
  3917  0317                     	;# 
  3918  0318                     	;# 
  3919  0318                     	;# 
  3920  0319                     	;# 
  3921  031A                     	;# 
  3922  031B                     	;# 
  3923  031C                     	;# 
  3924  031C                     	;# 
  3925  031D                     	;# 
  3926  031E                     	;# 
  3927  031F                     	;# 
  3928  038C                     	;# 
  3929  038C                     	;# 
  3930  038D                     	;# 
  3931  038E                     	;# 
  3932  0390                     	;# 
  3933  0390                     	;# 
  3934  0391                     	;# 
  3935  0392                     	;# 
  3936  040C                     	;# 
  3937  040D                     	;# 
  3938  040E                     	;# 
  3939  040F                     	;# 
  3940  0410                     	;# 
  3941  0411                     	;# 
  3942  0416                     	;# 
  3943  0416                     	;# 
  3944  0417                     	;# 
  3945  0418                     	;# 
  3946  0418                     	;# 
  3947  0419                     	;# 
  3948  041A                     	;# 
  3949  041A                     	;# 
  3950  041B                     	;# 
  3951  041C                     	;# 
  3952  041C                     	;# 
  3953  041D                     	;# 
  3954  041E                     	;# 
  3955  041F                     	;# 
  3956  048C                     	;# 
  3957  048C                     	;# 
  3958  048D                     	;# 
  3959  048E                     	;# 
  3960  048F                     	;# 
  3961  048F                     	;# 
  3962  0490                     	;# 
  3963  0491                     	;# 
  3964  0492                     	;# 
  3965  0492                     	;# 
  3966  0493                     	;# 
  3967  0494                     	;# 
  3968  0495                     	;# 
  3969  0495                     	;# 
  3970  0496                     	;# 
  3971  0497                     	;# 
  3972  0498                     	;# 
  3973  0499                     	;# 
  3974  049A                     	;# 
  3975  049B                     	;# 
  3976  049C                     	;# 
  3977  049D                     	;# 
  3978  050C                     	;# 
  3979  050C                     	;# 
  3980  050D                     	;# 
  3981  050E                     	;# 
  3982  050F                     	;# 
  3983  050F                     	;# 
  3984  0510                     	;# 
  3985  0511                     	;# 
  3986  0512                     	;# 
  3987  0512                     	;# 
  3988  0513                     	;# 
  3989  0514                     	;# 
  3990  0515                     	;# 
  3991  0515                     	;# 
  3992  0516                     	;# 
  3993  0517                     	;# 
  3994  0518                     	;# 
  3995  0519                     	;# 
  3996  051A                     	;# 
  3997  051B                     	;# 
  3998  051C                     	;# 
  3999  051D                     	;# 
  4000  058C                     	;# 
  4001  058C                     	;# 
  4002  058D                     	;# 
  4003  058E                     	;# 
  4004  058F                     	;# 
  4005  058F                     	;# 
  4006  0590                     	;# 
  4007  0591                     	;# 
  4008  0592                     	;# 
  4009  0593                     	;# 
  4010  060C                     	;# 
  4011  060D                     	;# 
  4012  060E                     	;# 
  4013  060F                     	;# 
  4014  0610                     	;# 
  4015  0611                     	;# 
  4016  0612                     	;# 
  4017  0613                     	;# 
  4018  0614                     	;# 
  4019  0616                     	;# 
  4020  0617                     	;# 
  4021  0618                     	;# 
  4022  0619                     	;# 
  4023  061A                     	;# 
  4024  061B                     	;# 
  4025  061C                     	;# 
  4026  061D                     	;# 
  4027  061E                     	;# 
  4028  068C                     	;# 
  4029  068D                     	;# 
  4030  068E                     	;# 
  4031  068F                     	;# 
  4032  0690                     	;# 
  4033  0691                     	;# 
  4034  0692                     	;# 
  4035  0693                     	;# 
  4036  0694                     	;# 
  4037  070C                     	;# 
  4038  070D                     	;# 
  4039  070E                     	;# 
  4040  070F                     	;# 
  4041  0710                     	;# 
  4042  0711                     	;# 
  4043  0712                     	;# 
  4044  0713                     	;# 
  4045  0714                     	;# 
  4046  0716                     	;# 
  4047  0717                     	;# 
  4048  0718                     	;# 
  4049  0719                     	;# 
  4050  071A                     	;# 
  4051  071B                     	;# 
  4052  071C                     	;# 
  4053  071D                     	;# 
  4054  071E                     	;# 
  4055  0796                     	;# 
  4056  0797                     	;# 
  4057  0798                     	;# 
  4058  0799                     	;# 
  4059  079A                     	;# 
  4060  079B                     	;# 
  4061  080C                     	;# 
  4062  080D                     	;# 
  4063  080E                     	;# 
  4064  080F                     	;# 
  4065  0810                     	;# 
  4066  0811                     	;# 
  4067  0812                     	;# 
  4068  0813                     	;# 
  4069  0814                     	;# 
  4070  081A                     	;# 
  4071  081B                     	;# 
  4072  081C                     	;# 
  4073  081D                     	;# 
  4074  081E                     	;# 
  4075  081F                     	;# 
  4076  088C                     	;# 
  4077  088D                     	;# 
  4078  088E                     	;# 
  4079  088F                     	;# 
  4080  0890                     	;# 
  4081  0891                     	;# 
  4082  0892                     	;# 
  4083  0893                     	;# 
  4084  0895                     	;# 
  4085  0896                     	;# 
  4086  0897                     	;# 
  4087  0898                     	;# 
  4088  0899                     	;# 
  4089  089A                     	;# 
  4090  089B                     	;# 
  4091  090C                     	;# 
  4092  090E                     	;# 
  4093  090F                     	;# 
  4094  091F                     	;# 
  4095  098F                     	;# 
  4096  098F                     	;# 
  4097  0990                     	;# 
  4098  0991                     	;# 
  4099  0992                     	;# 
  4100  0993                     	;# 
  4101  0994                     	;# 
  4102  0995                     	;# 
  4103  0996                     	;# 
  4104  0997                     	;# 
  4105  0E0F                     	;# 
  4106  0E10                     	;# 
  4107  0E11                     	;# 
  4108  0E12                     	;# 
  4109  0E13                     	;# 
  4110  0E14                     	;# 
  4111  0E15                     	;# 
  4112  0E16                     	;# 
  4113  0E17                     	;# 
  4114  0E18                     	;# 
  4115  0E19                     	;# 
  4116  0E1A                     	;# 
  4117  0E1B                     	;# 
  4118  0E1C                     	;# 
  4119  0E1D                     	;# 
  4120  0E1E                     	;# 
  4121  0E1F                     	;# 
  4122  0E20                     	;# 
  4123  0E21                     	;# 
  4124  0E22                     	;# 
  4125  0E23                     	;# 
  4126  0E24                     	;# 
  4127  0E25                     	;# 
  4128  0E26                     	;# 
  4129  0E27                     	;# 
  4130  0E28                     	;# 
  4131  0E29                     	;# 
  4132  0E2A                     	;# 
  4133  0E2B                     	;# 
  4134  0E2C                     	;# 
  4135  0E2D                     	;# 
  4136  0E2E                     	;# 
  4137  0E2F                     	;# 
  4138  0E30                     	;# 
  4139  0E31                     	;# 
  4140  0E32                     	;# 
  4141  0E33                     	;# 
  4142  0E34                     	;# 
  4143  0E35                     	;# 
  4144  0E36                     	;# 
  4145  0E37                     	;# 
  4146  0E8F                     	;# 
  4147  0E90                     	;# 
  4148  0E91                     	;# 
  4149  0E92                     	;# 
  4150  0E93                     	;# 
  4151  0E94                     	;# 
  4152  0E95                     	;# 
  4153  0E96                     	;# 
  4154  0E97                     	;# 
  4155  0E9C                     	;# 
  4156  0E9D                     	;# 
  4157  0E9E                     	;# 
  4158  0EA1                     	;# 
  4159  0EA2                     	;# 
  4160  0EA3                     	;# 
  4161  0EA4                     	;# 
  4162  0EA5                     	;# 
  4163  0EA9                     	;# 
  4164  0EAA                     	;# 
  4165  0EAB                     	;# 
  4166  0EAC                     	;# 
  4167  0EB1                     	;# 
  4168  0EB2                     	;# 
  4169  0EB3                     	;# 
  4170  0EB8                     	;# 
  4171  0EB9                     	;# 
  4172  0EBA                     	;# 
  4173  0EBB                     	;# 
  4174  0EBC                     	;# 
  4175  0EBD                     	;# 
  4176  0EBE                     	;# 
  4177  0EC3                     	;# 
  4178  0EC5                     	;# 
  4179  0EC6                     	;# 
  4180  0EC7                     	;# 
  4181  0EC8                     	;# 
  4182  0EC9                     	;# 
  4183  0ECA                     	;# 
  4184  0ECB                     	;# 
  4185  0ECC                     	;# 
  4186  0F10                     	;# 
  4187  0F11                     	;# 
  4188  0F12                     	;# 
  4189  0F13                     	;# 
  4190  0F14                     	;# 
  4191  0F15                     	;# 
  4192  0F16                     	;# 
  4193  0F17                     	;# 
  4194  0F18                     	;# 
  4195  0F19                     	;# 
  4196  0F1A                     	;# 
  4197  0F1B                     	;# 
  4198  0F1C                     	;# 
  4199  0F1D                     	;# 
  4200  0F1E                     	;# 
  4201  0F1F                     	;# 
  4202  0F20                     	;# 
  4203  0F21                     	;# 
  4204  0F22                     	;# 
  4205  0F23                     	;# 
  4206  0F24                     	;# 
  4207  0F25                     	;# 
  4208  0F26                     	;# 
  4209  0F27                     	;# 
  4210  0F38                     	;# 
  4211  0F39                     	;# 
  4212  0F3A                     	;# 
  4213  0F3B                     	;# 
  4214  0F3C                     	;# 
  4215  0F3D                     	;# 
  4216  0F3E                     	;# 
  4217  0F3F                     	;# 
  4218  0F40                     	;# 
  4219  0F41                     	;# 
  4220  0F43                     	;# 
  4221  0F44                     	;# 
  4222  0F45                     	;# 
  4223  0F46                     	;# 
  4224  0F47                     	;# 
  4225  0F48                     	;# 
  4226  0F49                     	;# 
  4227  0F4A                     	;# 
  4228  0F4B                     	;# 
  4229  0F4C                     	;# 
  4230  0F4E                     	;# 
  4231  0F4F                     	;# 
  4232  0F50                     	;# 
  4233  0F51                     	;# 
  4234  0F52                     	;# 
  4235  0F53                     	;# 
  4236  0F54                     	;# 
  4237  0F55                     	;# 
  4238  0F56                     	;# 
  4239  0F57                     	;# 
  4240  0F65                     	;# 
  4241  0F68                     	;# 
  4242  0F69                     	;# 
  4243  0F6A                     	;# 
  4244  0F6B                     	;# 
  4245  0FE4                     	;# 
  4246  0FE5                     	;# 
  4247  0FE6                     	;# 
  4248  0FE7                     	;# 
  4249  0FE8                     	;# 
  4250  0FE9                     	;# 
  4251  0FEA                     	;# 
  4252  0FEB                     	;# 
  4253  0FED                     	;# 
  4254  0FEE                     	;# 
  4255  0FEF                     	;_Coulomb_Data
  4256                           
  4257                           	psect	idataBANK2
  4258  0908                     __pidataBANK2:
  4259                           
  4260                           ;initializer for main@F12104
  4261  0908  3401               	retlw	1
  4262  0909  3403               	retlw	3
  4263  090A  3400               	retlw	0
  4264  090B  3403               	retlw	3
  4265  090C  3400               	retlw	0
  4266  090D  3411               	retlw	17
  4267  090E  3475               	retlw	117
  4268  090F  34C6               	retlw	198
  4269                           
  4270                           	psect	idataBANK4
  4271  0003                     __pidataBANK4:
  4272                           
  4273                           ;initializer for _BackLight_State
  4274  0003  3408               	retlw	8
  4275                           
  4276                           	psect	nvBANK4
  4277  0247                     __pnvBANK4:
  4278  0247                     _EUSART_ErrorHandler:
  4279  0247                     	ds	2
  4280  0249                     _EUSART_OverrunErrorHandler:
  4281  0249                     	ds	2
  4282  024B                     _EUSART_FramingErrorHandler:
  4283  024B                     	ds	2
  4284  024D                     _EUSART_RxDefaultInterruptHandler:
  4285  024D                     	ds	2
  4286  000C                     _PORTAbits	set	12
  4287  0016                     _LATAbits	set	22
  4288  000B                     _INTCONbits	set	11
  4289  001E                     _T0CON0bits	set	30
  4290  001E                     _T0CON0	set	30
  4291  001C                     _TMR0L	set	28
  4292  001D                     _TMR0H	set	29
  4293  001F                     _T0CON1	set	31
  4294  0013                     _TRISC	set	19
  4295  0012                     _TRISB	set	18
  4296  0011                     _TRISA	set	17
  4297  0018                     _LATC	set	24
  4298  0017                     _LATB	set	23
  4299  0016                     _LATA	set	22
  4300  000C                     _PORTA	set	12
  4301  0119                     _RC1REG	set	281
  4302  011D                     _RC1STAbits	set	285
  4303  011A                     _TX1REG	set	282
  4304  011E                     _TX1STAbits	set	286
  4305  011C                     _SP1BRGH	set	284
  4306  011B                     _SP1BRGL	set	283
  4307  011E                     _TX1STA	set	286
  4308  011D                     _RC1STA	set	285
  4309  011F                     _BAUD1CON	set	287
  4310  018C                     _SSP1BUF	set	396
  4311  0191                     _SSP1CON2bits	set	401
  4312  018F                     _SSP1STAT	set	399
  4313  018E                     _SSP1MSK	set	398
  4314  018D                     _SSP1ADD	set	397
  4315  018F                     _SSP1STATbits	set	399
  4316  0191                     _SSP1CON2	set	401
  4317  0190                     _SSP1CON1	set	400
  4318  070C                     _PIR0bits	set	1804
  4319  070F                     _PIR3bits	set	1807
  4320  0719                     _PIE3bits	set	1817
  4321  079B                     _PMD5	set	1947
  4322  079A                     _PMD4	set	1946
  4323  0799                     _PMD3	set	1945
  4324  0798                     _PMD2	set	1944
  4325  0797                     _PMD1	set	1943
  4326  0796                     _PMD0	set	1942
  4327  0892                     _OSCTUNE	set	2194
  4328  0893                     _OSCFRQ	set	2195
  4329  0891                     _OSCEN	set	2193
  4330  088F                     _OSCCON3	set	2191
  4331  088D                     _OSCCON1	set	2189
  4332  0EC6                     _SSP1DATPPS	set	3782
  4333  0EC5                     _SSP1CLKPPS	set	3781
  4334  0ECB                     _RXPPS	set	3787
  4335  0F24                     _RC4PPS	set	3876
  4336  0F23                     _RC3PPS	set	3875
  4337  0F26                     _RC6PPS	set	3878
  4338  0F68                     _INLVLE	set	3944
  4339  0F52                     _INLVLC	set	3922
  4340  0F47                     _INLVLB	set	3911
  4341  0F3C                     _INLVLA	set	3900
  4342  0F51                     _SLRCONC	set	3921
  4343  0F46                     _SLRCONB	set	3910
  4344  0F3B                     _SLRCONA	set	3899
  4345  0F50                     _ODCONC	set	3920
  4346  0F45                     _ODCONB	set	3909
  4347  0F3A                     _ODCONA	set	3898
  4348  0F4F                     _WPUC	set	3919
  4349  0F39                     _WPUA	set	3897
  4350  0F44                     _WPUB	set	3908
  4351  0F65                     _WPUE	set	3941
  4352  0F38                     _ANSELA	set	3896
  4353  0F43                     _ANSELB	set	3907
  4354  0F4E                     _ANSELC	set	3918
  4355                           
  4356                           	psect	stringtext1
  4357  0800                     __pstringtext1:
  4358  0800                     STR_13:
  4359  0800  3430               	retlw	48	;'0'
  4360  0801  3430               	retlw	48	;'0'
  4361  0802  3400               	retlw	0
  4362                           
  4363                           	psect	stringtext2
  4364  0803                     __pstringtext2:
  4365  0803                     STR_2:
  4366  0803  3425               	retlw	37	;'%'
  4367  0804  3464               	retlw	100	;'d'
  4368  0805  3400               	retlw	0
  4369                           
  4370                           	psect	stringtext3
  4371  0806                     __pstringtext3:
  4372  0806                     STR_1:
  4373  0806  344E               	retlw	78	;'N'
  4374  0807  346F               	retlw	111	;'o'
  4375  0808  3400               	retlw	0
  4376                           
  4377                           	psect	stringtext4
  4378  0809                     __pstringtext4:
  4379  0809                     STR_5:
  4380  0809  342E               	retlw	46	;'.'
  4381  080A  3400               	retlw	0
  4382                           
  4383                           	psect	stringtext5
  4384  080B                     __pstringtext5:
  4385  080B                     STR_3:
  4386  080B  343A               	retlw	58	;':'
  4387  080C  3400               	retlw	0
  4388                           
  4389                           	psect	stringtext6
  4390  080D                     __pstringtext6:
  4391  080D                     STR_8:
  4392  080D  345E               	retlw	94	;'^'
  4393  080E  3400               	retlw	0
  4394                           
  4395                           	psect	stringtext7
  4396  080F                     __pstringtext7:
  4397  080F                     STR_7:
  4398  080F  3476               	retlw	118	;'v'
  4399  0810  3400               	retlw	0
  4400                           
  4401                           	psect	stringtext8
  4402  0000                     __pstringtext8:
  4403  0809                     
  4404                           	psect	cinit
  4405  0029                     start_initialization:	
  4406                           ; #config settings
  4407                           
  4408  0029                     __initialization:	;BIGRAM
  4409                           
  4410                           ; Initialize objects allocated to BANK2
  4411  0029  3008               	movlw	low __pidataBANK2
  4412  002A  0084               	movwf	4
  4413  002B  3089               	movlw	(high __pidataBANK2)| (0+128)
  4414  002C  0085               	movwf	5
  4415  002D  0022               	movlb	2	; select bank2
  4416  002E  0012               	moviw fsr0++
  4417  002F  00E8               	movwf	__pdataBANK2& (0+127)
  4418  0030  0012               	moviw fsr0++
  4419  0031  00E9               	movwf	(__pdataBANK2+1)& (0+127)
  4420  0032  0012               	moviw fsr0++
  4421  0033  00EA               	movwf	(__pdataBANK2+2)& (0+127)
  4422  0034  0012               	moviw fsr0++
  4423  0035  00EB               	movwf	(__pdataBANK2+3)& (0+127)
  4424  0036  0012               	moviw fsr0++
  4425  0037  00EC               	movwf	(__pdataBANK2+4)& (0+127)
  4426  0038  0012               	moviw fsr0++
  4427  0039  00ED               	movwf	(__pdataBANK2+5)& (0+127)
  4428  003A  0012               	moviw fsr0++
  4429  003B  00EE               	movwf	(__pdataBANK2+6)& (0+127)
  4430  003C  0012               	moviw fsr0++
  4431  003D  00EF               	movwf	(__pdataBANK2+7)& (0+127)
  4432                           
  4433                           ; Initialize objects allocated to BANK4
  4434  003E  0024               	movlb	4	; select bank4
  4435  003F  3180  2003  3180   	fcall	__pidataBANK4	;fetch initializer
  4436  0042  00D1               	movwf	__pdataBANK4& (0+127)
  4437                           
  4438                           ; Clear objects allocated to BIGRAM
  4439  0043  307C               	movlw	low (0+8572)
  4440  0044  0084               	movwf	4
  4441  0045  3021               	movlw	high (0+8572)
  4442  0046  0085               	movwf	5
  4443  0047  3074               	movlw	116
  4444  0048  00FE               	movwf	btemp
  4445  0049  3000               	movlw	0
  4446  004A  00FF               	movwf	btemp+1
  4447  004B  3187  27F4  3180   	fcall	clear_ram0
  4448                           
  4449                           ; Clear objects allocated to COMMON
  4450  004E  01F8               	clrf	__pbssCOMMON& (0+127)
  4451  004F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4452  0050  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4453                           
  4454                           ; Clear objects allocated to BANK1
  4455  0051  30A0               	movlw	low __pbssBANK1
  4456  0052  0084               	movwf	4
  4457  0053  3000               	movlw	high __pbssBANK1
  4458  0054  0085               	movwf	5
  4459  0055  3028               	movlw	40
  4460  0056  00FE               	movwf	btemp
  4461  0057  3000               	movlw	0
  4462  0058  00FF               	movwf	btemp+1
  4463  0059  3187  27F4  3180   	fcall	clear_ram0
  4464                           
  4465                           ; Clear objects allocated to BANK2
  4466  005C  3020               	movlw	low __pbssBANK2
  4467  005D  0084               	movwf	4
  4468  005E  3001               	movlw	high __pbssBANK2
  4469  005F  0085               	movwf	5
  4470  0060  3048               	movlw	72
  4471  0061  00FE               	movwf	btemp
  4472  0062  3000               	movlw	0
  4473  0063  00FF               	movwf	btemp+1
  4474  0064  3187  27F4  3180   	fcall	clear_ram0
  4475                           
  4476                           ; Clear objects allocated to BANK3
  4477  0067  30A0               	movlw	low __pbssBANK3
  4478  0068  0084               	movwf	4
  4479  0069  3001               	movlw	high __pbssBANK3
  4480  006A  0085               	movwf	5
  4481  006B  3050               	movlw	80
  4482  006C  00FE               	movwf	btemp
  4483  006D  3000               	movlw	0
  4484  006E  00FF               	movwf	btemp+1
  4485  006F  3187  27F4  3180   	fcall	clear_ram0
  4486                           
  4487                           ; Clear objects allocated to BANK4
  4488  0072  3020               	movlw	low __pbssBANK4
  4489  0073  0084               	movwf	4
  4490  0074  3002               	movlw	high __pbssBANK4
  4491  0075  0085               	movwf	5
  4492  0076  3027               	movlw	39
  4493  0077  00FE               	movwf	btemp
  4494  0078  3000               	movlw	0
  4495  0079  00FF               	movwf	btemp+1
  4496  007A  3187  27F4  3180   	fcall	clear_ram0
  4497  007D                     end_of_initialization:	
  4498                           ;End of C runtime variable initialization code
  4499                           
  4500  007D                     __end_of__initialization:
  4501  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4502  007E  0020               	movlb	0
  4503  007F  3180  2881         	ljmp	_main	;jump to C main() function
  4504                           
  4505                           	psect	bssCOMMON
  4506  0078                     __pbssCOMMON:
  4507  0078                     _eusartRxCount:
  4508  0078                     	ds	1
  4509  0079                     _eusartRxTail:
  4510  0079                     	ds	1
  4511  007A                     _eusartRxHead:
  4512  007A                     	ds	1
  4513                           
  4514                           	psect	bssBANK1
  4515  00A0                     __pbssBANK1:
  4516  00A0                     _badBettery:
  4517  00A0                     	ds	34
  4518  00C2                     _i:
  4519  00C2                     	ds	2
  4520  00C4                     _ShowbadBettery:
  4521  00C4                     	ds	4
  4522                           
  4523                           	psect	bssBANK2
  4524  0120                     __pbssBANK2:
  4525  0120                     _diffBettery:
  4526  0120                     	ds	34
  4527  0142                     _Voltage_sort:
  4528  0142                     	ds	34
  4529  0164                     _flags:
  4530  0164                     	ds	2
  4531  0166                     _ch:
  4532  0166                     	ds	1
  4533  0167                     _eusartRxLastError:
  4534  0167                     	ds	1
  4535                           
  4536                           	psect	dataBANK2
  4537  0168                     __pdataBANK2:
  4538  0168                     main@F12104:
  4539  0168                     	ds	8
  4540                           
  4541                           	psect	bssBANK3
  4542  01A0                     __pbssBANK3:
  4543  01A0                     _eusartRxStatusBuffer:
  4544  01A0                     	ds	39
  4545  01C7                     _nout:
  4546  01C7                     	ds	2
  4547  01C9                     _width:
  4548  01C9                     	ds	2
  4549  01CB                     _prec:
  4550  01CB                     	ds	2
  4551  01CD                     _i2c_add:
  4552  01CD                     	ds	1
  4553  01CE                     _RS:
  4554  01CE                     	ds	1
  4555  01CF                     _dbuf:
  4556  01CF                     	ds	32
  4557  01EF                     _no:
  4558  01EF                     	ds	1
  4559                           
  4560                           	psect	bssBANK4
  4561  0220                     __pbssBANK4:
  4562  0220                     _eusartRxBuffer:
  4563  0220                     	ds	39
  4564                           
  4565                           	psect	dataBANK4
  4566  0251                     __pdataBANK4:
  4567  0251                     _BackLight_State:
  4568  0251                     	ds	1
  4569                           
  4570                           	psect	clrtext
  4571  07F4                     clear_ram0:	
  4572                           ;	Called with FSR0 containing the base address, and
  4573                           ;	btemp/btemp+1 has the size to clear
  4574                           
  4575  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4576  07F5                     clrloop0:
  4577  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4578  07F6  3101               	addfsr 0,1
  4579  07F7  3001               	movlw	1
  4580  07F8  02FE               	subwf	btemp,f
  4581  07F9  3000               	movlw	0
  4582  07FA  3BFF               	subwfb	btemp+1,f
  4583  07FB  087F               	movf	btemp+1,w
  4584  07FC  047E               	iorwf	btemp,w
  4585  07FD  1D03               	skipz
  4586  07FE  2FF5               	goto	clrloop0	;have we reached the end yet?
  4587  07FF  3400               	retlw	0	;all done for this memory range, return
  4588                           
  4589                           	psect	cstackBANK4
  4590  024F                     __pcstackBANK4:
  4591  024F                     main@j:
  4592                           
  4593                           ; 2 bytes @ 0x0
  4594  024F                     	ds	2
  4595                           
  4596                           	psect	cstackBANK1
  4597  00C8                     __pcstackBANK1:
  4598  00C8                     ?_sprintf:
  4599  00C8                     sprintf@s:	
  4600                           ; 2 bytes @ 0x0
  4601                           
  4602                           
  4603                           ; 2 bytes @ 0x0
  4604  00C8                     	ds	2
  4605  00CA                     sprintf@fmt:
  4606                           
  4607                           ; 2 bytes @ 0x2
  4608  00CA                     	ds	4
  4609  00CE                     ??_sprintf:
  4610                           
  4611                           ; 1 bytes @ 0x6
  4612  00CE                     	ds	3
  4613  00D1                     sprintf@ap:
  4614                           
  4615                           ; 1 bytes @ 0x9
  4616  00D1                     	ds	1
  4617  00D2                     sprintf@f:
  4618                           
  4619                           ; 6 bytes @ 0xA
  4620  00D2                     	ds	6
  4621  00D8                     ??_main:
  4622                           
  4623                           ; 1 bytes @ 0x10
  4624  00D8                     	ds	6
  4625  00DE                     main@out:
  4626                           
  4627                           ; 8 bytes @ 0x16
  4628  00DE                     	ds	8
  4629  00E6                     main@index_V_H:
  4630                           
  4631                           ; 2 bytes @ 0x1E
  4632  00E6                     	ds	2
  4633  00E8                     main@index_V_L:
  4634                           
  4635                           ; 2 bytes @ 0x20
  4636  00E8                     	ds	2
  4637  00EA                     main@index:
  4638                           
  4639                           ; 2 bytes @ 0x22
  4640  00EA                     	ds	2
  4641  00EC                     main@i:
  4642                           
  4643                           ; 2 bytes @ 0x24
  4644  00EC                     	ds	2
  4645  00EE                     main@H_L_counter:
  4646                           
  4647                           ; 2 bytes @ 0x26
  4648  00EE                     	ds	2
  4649                           
  4650                           	psect	cstackCOMMON
  4651  0070                     __pcstackCOMMON:
  4652  0070                     ?_EUSART_Receive_ISR:
  4653  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  4654                           ; 1 bytes @ 0x0
  4655                           
  4656  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  4657                           ; 1 bytes @ 0x0
  4658                           
  4659  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  4660                           ; 1 bytes @ 0x0
  4661                           
  4662  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  4663                           ; 1 bytes @ 0x0
  4664                           
  4665  0070                     ?_EUSART_DefaultErrorHandler:	
  4666                           ; 1 bytes @ 0x0
  4667                           
  4668  0070                     ?_EUSART_RxDataHandler:	
  4669                           ; 1 bytes @ 0x0
  4670                           
  4671  0070                     ??_EUSART_RxDataHandler:	
  4672                           ; 1 bytes @ 0x0
  4673                           
  4674  0070                     ?_PMD_Initialize:	
  4675                           ; 1 bytes @ 0x0
  4676                           
  4677  0070                     ?_PIN_MANAGER_Initialize:	
  4678                           ; 1 bytes @ 0x0
  4679                           
  4680  0070                     ?_OSCILLATOR_Initialize:	
  4681                           ; 1 bytes @ 0x0
  4682                           
  4683  0070                     ?_TMR0_Initialize:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0070                     ?_master_init:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0070                     ?_BadBetteryFilter:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0070                     ?_LCD_Init:	
  4693                           ; 1 bytes @ 0x0
  4694                           
  4695  0070                     ?_LCD_Clear:	
  4696                           ; 1 bytes @ 0x0
  4697                           
  4698  0070                     ?_IO_Expander_Write:	
  4699                           ; 1 bytes @ 0x0
  4700                           
  4701  0070                     ?_LCD_CMD:	
  4702                           ; 1 bytes @ 0x0
  4703                           
  4704  0070                     ?_EUSART_Initialize:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707  0070                     ?_EUSART_Read:	
  4708                           ; 1 bytes @ 0x0
  4709                           
  4710  0070                     ?_EUSART_Write:	
  4711                           ; 1 bytes @ 0x0
  4712                           
  4713  0070                     ?_putch:	
  4714                           ; 1 bytes @ 0x0
  4715                           
  4716  0070                     ?_SYSTEM_Initialize:	
  4717                           ; 1 bytes @ 0x0
  4718                           
  4719  0070                     ?_TMR0_ReadTimer:	
  4720                           ; 1 bytes @ 0x0
  4721                           
  4722  0070                     ?_INTERRUPT_InterruptManager:	
  4723                           ; 1 bytes @ 0x0
  4724                           
  4725  0070                     ?_main:	
  4726                           ; 1 bytes @ 0x0
  4727                           
  4728  0070                     ?_Sort:	
  4729                           ; 1 bytes @ 0x0
  4730                           
  4731  0070                     ?_I2C_Master_Wait:	
  4732                           ; 1 bytes @ 0x0
  4733                           
  4734  0070                     ?_I2C_Master_Start:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0070                     ?_I2C_Master_Stop:	
  4738                           ; 1 bytes @ 0x0
  4739                           
  4740  0070                     ?_I2C_Master_Write:	
  4741                           ; 1 bytes @ 0x0
  4742                           
  4743  0070                     ?_LCD_Write_4Bit:	
  4744                           ; 1 bytes @ 0x0
  4745                           
  4746  0070                     ?_LCD_Write_Char:	
  4747                           ; 1 bytes @ 0x0
  4748                           
  4749                           
  4750                           ; 1 bytes @ 0x0
  4751  0070                     	ds	3
  4752  0073                     ?_EUSART_SetRxInterruptHandler:
  4753  0073                     ??_EUSART_Receive_ISR:	
  4754                           ; 1 bytes @ 0x3
  4755                           
  4756  0073                     ?_EUSART_SetFramingErrorHandler:	
  4757                           ; 1 bytes @ 0x3
  4758                           
  4759  0073                     ?_EUSART_SetOverrunErrorHandler:	
  4760                           ; 1 bytes @ 0x3
  4761                           
  4762  0073                     ?_EUSART_SetErrorHandler:	
  4763                           ; 1 bytes @ 0x3
  4764                           
  4765  0073                     ??_EUSART_DefaultErrorHandler:	
  4766                           ; 1 bytes @ 0x3
  4767                           
  4768  0073                     ??_PMD_Initialize:	
  4769                           ; 1 bytes @ 0x3
  4770                           
  4771  0073                     ??_PIN_MANAGER_Initialize:	
  4772                           ; 1 bytes @ 0x3
  4773                           
  4774  0073                     ??_OSCILLATOR_Initialize:	
  4775                           ; 1 bytes @ 0x3
  4776                           
  4777  0073                     ??_TMR0_Initialize:	
  4778                           ; 1 bytes @ 0x3
  4779                           
  4780  0073                     ??_master_init:	
  4781                           ; 1 bytes @ 0x3
  4782                           
  4783  0073                     ?_Delay:	
  4784                           ; 1 bytes @ 0x3
  4785                           
  4786  0073                     ??_EUSART_Read:	
  4787                           ; 1 bytes @ 0x3
  4788                           
  4789  0073                     ??_EUSART_Write:	
  4790                           ; 1 bytes @ 0x3
  4791                           
  4792  0073                     ??_TMR0_ReadTimer:	
  4793                           ; 1 bytes @ 0x3
  4794                           
  4795  0073                     ??_INTERRUPT_InterruptManager:	
  4796                           ; 1 bytes @ 0x3
  4797                           
  4798  0073                     ??_Sort:	
  4799                           ; 1 bytes @ 0x3
  4800                           
  4801  0073                     ??_I2C_Master_Wait:	
  4802                           ; 1 bytes @ 0x3
  4803                           
  4804  0073                     ??_I2C_Master_Start:	
  4805                           ; 1 bytes @ 0x3
  4806                           
  4807  0073                     ??_I2C_Master_Stop:	
  4808                           ; 1 bytes @ 0x3
  4809                           
  4810  0073                     ??_I2C_Master_Write:	
  4811                           ; 1 bytes @ 0x3
  4812                           
  4813  0073                     ??___aodiv:	
  4814                           ; 1 bytes @ 0x3
  4815                           
  4816  0073                     ??___aomod:	
  4817                           ; 1 bytes @ 0x3
  4818                           
  4819  0073                     ?_strlen:	
  4820                           ; 1 bytes @ 0x3
  4821                           
  4822  0073                     ?___lwdiv:	
  4823                           ; 2 bytes @ 0x3
  4824                           
  4825  0073                     ?___lwmod:	
  4826                           ; 2 bytes @ 0x3
  4827                           
  4828  0073                     EUSART_Write@txData:	
  4829                           ; 2 bytes @ 0x3
  4830                           
  4831  0073                     I2C_Master_Write@data:	
  4832                           ; 1 bytes @ 0x3
  4833                           
  4834  0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4835                           ; 1 bytes @ 0x3
  4836                           
  4837  0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4838                           ; 2 bytes @ 0x3
  4839                           
  4840  0073                     EUSART_SetErrorHandler@interruptHandler:	
  4841                           ; 2 bytes @ 0x3
  4842                           
  4843  0073                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4844                           ; 2 bytes @ 0x3
  4845                           
  4846  0073                     Delay@counter:	
  4847                           ; 2 bytes @ 0x3
  4848                           
  4849  0073                     ___lwdiv@divisor:	
  4850                           ; 2 bytes @ 0x3
  4851                           
  4852  0073                     ___lwmod@divisor:	
  4853                           ; 2 bytes @ 0x3
  4854                           
  4855                           
  4856                           ; 2 bytes @ 0x3
  4857  0073                     	ds	1
  4858  0074                     ??_IO_Expander_Write:
  4859  0074                     ??_putch:	
  4860                           ; 1 bytes @ 0x4
  4861                           
  4862  0074                     EUSART_Read@readValue:	
  4863                           ; 1 bytes @ 0x4
  4864                           
  4865  0074                     putch@txData:	
  4866                           ; 1 bytes @ 0x4
  4867                           
  4868  0074                     TMR0_ReadTimer@readVal:	
  4869                           ; 1 bytes @ 0x4
  4870                           
  4871  0074                     IO_Expander_Write@Data:	
  4872                           ; 1 bytes @ 0x4
  4873                           
  4874  0074                     ___aomod@counter:	
  4875                           ; 1 bytes @ 0x4
  4876                           
  4877                           
  4878                           ; 1 bytes @ 0x4
  4879  0074                     	ds	1
  4880  0075                     ??_EUSART_SetRxInterruptHandler:
  4881  0075                     ??_EUSART_SetFramingErrorHandler:	
  4882                           ; 1 bytes @ 0x5
  4883                           
  4884  0075                     ??_EUSART_SetOverrunErrorHandler:	
  4885                           ; 1 bytes @ 0x5
  4886                           
  4887  0075                     ??_EUSART_SetErrorHandler:	
  4888                           ; 1 bytes @ 0x5
  4889                           
  4890  0075                     ??_Delay:	
  4891                           ; 1 bytes @ 0x5
  4892                           
  4893  0075                     ??_strlen:	
  4894                           ; 1 bytes @ 0x5
  4895                           
  4896  0075                     ??_EUSART_Initialize:	
  4897                           ; 1 bytes @ 0x5
  4898                           
  4899  0075                     ??_SYSTEM_Initialize:	
  4900                           ; 1 bytes @ 0x5
  4901                           
  4902  0075                     ??_LCD_Write_4Bit:	
  4903                           ; 1 bytes @ 0x5
  4904                           
  4905  0075                     ?_fputc:	
  4906                           ; 1 bytes @ 0x5
  4907                           
  4908  0075                     ___aomod@sign:	
  4909                           ; 2 bytes @ 0x5
  4910                           
  4911  0075                     ___lwdiv@dividend:	
  4912                           ; 1 bytes @ 0x5
  4913                           
  4914  0075                     ___lwmod@dividend:	
  4915                           ; 2 bytes @ 0x5
  4916                           
  4917  0075                     fputc@c:	
  4918                           ; 2 bytes @ 0x5
  4919                           
  4920                           
  4921                           ; 2 bytes @ 0x5
  4922  0075                     	ds	1
  4923  0076                     ?_abs:
  4924  0076                     LCD_Write_4Bit@Nibble:	
  4925                           ; 2 bytes @ 0x6
  4926                           
  4927  0076                     strlen@a:	
  4928                           ; 1 bytes @ 0x6
  4929                           
  4930  0076                     abs@a:	
  4931                           ; 1 bytes @ 0x6
  4932                           
  4933                           
  4934                           ; 2 bytes @ 0x6
  4935  0076                     	ds	1
  4936  0077                     ??_LCD_CMD:
  4937  0077                     ??_LCD_Write_Char:	
  4938                           ; 1 bytes @ 0x7
  4939                           
  4940  0077                     ??___lwdiv:	
  4941                           ; 1 bytes @ 0x7
  4942                           
  4943  0077                     ??___lwmod:	
  4944                           ; 1 bytes @ 0x7
  4945                           
  4946  0077                     fputc@fp:	
  4947                           ; 1 bytes @ 0x7
  4948                           
  4949  0077                     strlen@s:	
  4950                           ; 1 bytes @ 0x7
  4951                           
  4952                           
  4953                           ; 1 bytes @ 0x7
  4954  0077                     	ds	1
  4955  0078                     ??_LCD_Clear:
  4956                           
  4957                           	psect	cstackBANK0
  4958  0020                     __pcstackBANK0:	
  4959                           ; 1 bytes @ 0x8
  4960                           
  4961  0020                     ??_fputc:
  4962  0020                     ?___aodiv:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0020                     ?___aomod:	
  4966                           ; 8 bytes @ 0x0
  4967                           
  4968  0020                     LCD_CMD@CMD:	
  4969                           ; 8 bytes @ 0x0
  4970                           
  4971  0020                     LCD_Write_Char@Data:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0020                     ___lwdiv@counter:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0020                     ___lwmod@counter:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0020                     Sort@tmp:	
  4981                           ; 1 bytes @ 0x0
  4982                           
  4983  0020                     ___aodiv@divisor:	
  4984                           ; 2 bytes @ 0x0
  4985                           
  4986  0020                     ___aomod@divisor:	
  4987                           ; 8 bytes @ 0x0
  4988                           
  4989                           
  4990                           ; 8 bytes @ 0x0
  4991  0020                     	ds	1
  4992  0021                     ??_LCD_Init:
  4993  0021                     ?_LCD_Set_Cursor:	
  4994                           ; 1 bytes @ 0x1
  4995                           
  4996  0021                     ?_LCD_Write_String:	
  4997                           ; 1 bytes @ 0x1
  4998                           
  4999  0021                     LCD_Set_Cursor@COL:	
  5000                           ; 1 bytes @ 0x1
  5001                           
  5002  0021                     LCD_Write_String@Str:	
  5003                           ; 1 bytes @ 0x1
  5004                           
  5005  0021                     ___lwdiv@quotient:	
  5006                           ; 2 bytes @ 0x1
  5007                           
  5008                           
  5009                           ; 2 bytes @ 0x1
  5010  0021                     	ds	1
  5011  0022                     ??_LCD_Set_Cursor:
  5012  0022                     LCD_Init@I2C_Add:	
  5013                           ; 1 bytes @ 0x2
  5014                           
  5015                           
  5016                           ; 1 bytes @ 0x2
  5017  0022                     	ds	1
  5018  0023                     ?_Get_Voltage:
  5019  0023                     ??_LCD_Write_String:	
  5020                           ; 1 bytes @ 0x3
  5021                           
  5022  0023                     Get_Voltage@k:	
  5023                           ; 1 bytes @ 0x3
  5024                           
  5025                           
  5026                           ; 2 bytes @ 0x3
  5027  0023                     	ds	1
  5028  0024                     LCD_Set_Cursor@ROW:
  5029  0024                     Sort@i:	
  5030                           ; 1 bytes @ 0x4
  5031                           
  5032  0024                     LCD_Write_String@i:	
  5033                           ; 2 bytes @ 0x4
  5034                           
  5035                           
  5036                           ; 2 bytes @ 0x4
  5037  0024                     	ds	1
  5038  0025                     ??_Get_Voltage:
  5039  0025                     ?_fputs:	
  5040                           ; 1 bytes @ 0x5
  5041                           
  5042  0025                     fputs@fp:	
  5043                           ; 2 bytes @ 0x5
  5044                           
  5045                           
  5046                           ; 1 bytes @ 0x5
  5047  0025                     	ds	1
  5048  0026                     ??_fputs:
  5049  0026                     Sort@j:	
  5050                           ; 1 bytes @ 0x6
  5051                           
  5052                           
  5053                           ; 2 bytes @ 0x6
  5054  0026                     	ds	2
  5055  0028                     ??_BadBetteryFilter:
  5056  0028                     ___aodiv@dividend:	
  5057                           ; 1 bytes @ 0x8
  5058                           
  5059  0028                     ___aomod@dividend:	
  5060                           ; 8 bytes @ 0x8
  5061                           
  5062                           
  5063                           ; 8 bytes @ 0x8
  5064  0028                     	ds	1
  5065  0029                     fputs@c:
  5066                           
  5067                           ; 1 bytes @ 0x9
  5068  0029                     	ds	1
  5069  002A                     fputs@i:
  5070                           
  5071                           ; 2 bytes @ 0xA
  5072  002A                     	ds	2
  5073  002C                     fputs@s:
  5074                           
  5075                           ; 1 bytes @ 0xC
  5076  002C                     	ds	1
  5077  002D                     ?_pad:
  5078  002D                     pad@buf:	
  5079                           ; 2 bytes @ 0xD
  5080                           
  5081                           
  5082                           ; 1 bytes @ 0xD
  5083  002D                     	ds	1
  5084  002E                     BadBetteryFilter@k:
  5085  002E                     pad@p:	
  5086                           ; 2 bytes @ 0xE
  5087                           
  5088                           
  5089                           ; 2 bytes @ 0xE
  5090  002E                     	ds	2
  5091  0030                     ??_abs:
  5092  0030                     ??_pad:	
  5093                           ; 1 bytes @ 0x10
  5094                           
  5095  0030                     ___aodiv@counter:	
  5096                           ; 1 bytes @ 0x10
  5097                           
  5098                           
  5099                           ; 1 bytes @ 0x10
  5100  0030                     	ds	1
  5101  0031                     ___aodiv@sign:
  5102  0031                     pad@i:	
  5103                           ; 1 bytes @ 0x11
  5104                           
  5105                           
  5106                           ; 2 bytes @ 0x11
  5107  0031                     	ds	1
  5108  0032                     ___aodiv@quotient:
  5109                           
  5110                           ; 8 bytes @ 0x12
  5111  0032                     	ds	1
  5112  0033                     pad@w:
  5113                           
  5114                           ; 2 bytes @ 0x13
  5115  0033                     	ds	2
  5116  0035                     pad@fp:
  5117                           
  5118                           ; 1 bytes @ 0x15
  5119  0035                     	ds	5
  5120  003A                     ?_dtoa:
  5121  003A                     dtoa@d:	
  5122                           ; 2 bytes @ 0x1A
  5123                           
  5124                           
  5125                           ; 8 bytes @ 0x1A
  5126  003A                     	ds	8
  5127  0042                     ??_dtoa:
  5128                           
  5129                           ; 1 bytes @ 0x22
  5130  0042                     	ds	3
  5131  0045                     dtoa@fp:
  5132                           
  5133                           ; 1 bytes @ 0x25
  5134  0045                     	ds	1
  5135  0046                     _dtoa$1489:
  5136                           
  5137                           ; 2 bytes @ 0x26
  5138  0046                     	ds	2
  5139  0048                     dtoa@p:
  5140                           
  5141                           ; 2 bytes @ 0x28
  5142  0048                     	ds	2
  5143  004A                     dtoa@w:
  5144                           
  5145                           ; 2 bytes @ 0x2A
  5146  004A                     	ds	2
  5147  004C                     dtoa@s:
  5148                           
  5149                           ; 2 bytes @ 0x2C
  5150  004C                     	ds	2
  5151  004E                     dtoa@n:
  5152                           
  5153                           ; 8 bytes @ 0x2E
  5154  004E                     	ds	8
  5155  0056                     dtoa@i:
  5156                           
  5157                           ; 2 bytes @ 0x36
  5158  0056                     	ds	2
  5159  0058                     ?_vfpfcnvrt:
  5160  0058                     vfpfcnvrt@fmt:	
  5161                           ; 2 bytes @ 0x38
  5162                           
  5163                           
  5164                           ; 1 bytes @ 0x38
  5165  0058                     	ds	1
  5166  0059                     vfpfcnvrt@ap:
  5167                           
  5168                           ; 1 bytes @ 0x39
  5169  0059                     	ds	1
  5170  005A                     ??_vfpfcnvrt:
  5171                           
  5172                           ; 1 bytes @ 0x3A
  5173  005A                     	ds	5
  5174  005F                     vfpfcnvrt@ll:
  5175                           
  5176                           ; 8 bytes @ 0x3F
  5177  005F                     	ds	8
  5178  0067                     vfpfcnvrt@fp:
  5179                           
  5180                           ; 1 bytes @ 0x47
  5181  0067                     	ds	1
  5182  0068                     ?_vfprintf:
  5183  0068                     vfprintf@fmt:	
  5184                           ; 2 bytes @ 0x48
  5185                           
  5186                           
  5187                           ; 2 bytes @ 0x48
  5188  0068                     	ds	2
  5189  006A                     vfprintf@ap:
  5190                           
  5191                           ; 1 bytes @ 0x4A
  5192  006A                     	ds	1
  5193  006B                     ??_vfprintf:
  5194                           
  5195                           ; 1 bytes @ 0x4B
  5196  006B                     	ds	2
  5197  006D                     vfprintf@fp:
  5198                           
  5199                           ; 1 bytes @ 0x4D
  5200  006D                     	ds	1
  5201  006E                     vfprintf@cfmt:
  5202                           
  5203                           ; 2 bytes @ 0x4E
  5204  006E                     	ds	2
  5205                           
  5206                           	psect	maintext
  5207  0081                     __pmaintext:	
  5208 ;;
  5209 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  5210 ;;
  5211 ;; *************** function _main *****************
  5212 ;; Defined at:
  5213 ;;		line 52 in file "main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  index           2   34[BANK1 ] PTR unsigned int 
  5218 ;;		 -> Coulomb_Data.Voltage_L(34), Coulomb_Data.Voltage_H(34), Coulomb_Data.ID(2), Coulomb_Data(116), 
  5219 ;;  index_V_L       2   32[BANK1 ] PTR unsigned int 
  5220 ;;		 -> Coulomb_Data.Voltage_L(34), Coulomb_Data(116), 
  5221 ;;  index_V_H       2   30[BANK1 ] PTR unsigned int 
  5222 ;;		 -> Coulomb_Data.Voltage_H(34), Coulomb_Data(116), 
  5223 ;;  out             8   22[BANK1 ] unsigned char [8]
  5224 ;;  j               2    0[BANK4 ] int 
  5225 ;;  H_L_counter     2   38[BANK1 ] int 
  5226 ;;  i               2   36[BANK1 ] int 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : B1F/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5236 ;;      Params:         0       0       0       0       0       0       0       0
  5237 ;;      Locals:         0       0      18       0       0       2       0       0
  5238 ;;      Temps:          0       0       6       0       0       0       0       0
  5239 ;;      Totals:         0       0      24       0       0       2       0       0
  5240 ;;Total ram usage:       26 bytes
  5241 ;; Hardware stack levels required when called:   13
  5242 ;; This function calls:
  5243 ;;		_BadBetteryFilter
  5244 ;;		_Delay
  5245 ;;		_EUSART_Read
  5246 ;;		_EUSART_Write
  5247 ;;		_Get_Voltage
  5248 ;;		_LCD_Clear
  5249 ;;		_LCD_Init
  5250 ;;		_LCD_Set_Cursor
  5251 ;;		_LCD_Write_String
  5252 ;;		_SYSTEM_Initialize
  5253 ;;		_TMR0_ReadTimer
  5254 ;;		___lwdiv
  5255 ;;		___lwmod
  5256 ;;		_sprintf
  5257 ;; This function is called by:
  5258 ;;		Startup code after reset
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _main
  5264  0081                     _main:
  5265  0081                     l3729:	
  5266                           ;incstack = 0
  5267                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5268                           
  5269                           
  5270                           ;main.c: 54:     SYSTEM_Initialize();
  5271  0081  3189  2181  3180   	fcall	_SYSTEM_Initialize
  5272  0084                     l3731:
  5273                           
  5274                           ;main.c: 55:     (INTCONbits.GIE = 1);
  5275  0084  178B               	bsf	11,7	;volatile
  5276  0085                     l3733:
  5277                           
  5278                           ;main.c: 56:     (INTCONbits.PEIE = 1);
  5279  0085  170B               	bsf	11,6	;volatile
  5280  0086                     l3735:
  5281                           
  5282                           ;main.c: 58:     unsigned char out[8]={0x01,0x03,0x00,0x03,0x00,0x11,0x75,0xC6};
  5283  0086  3068               	movlw	low main@F12104
  5284  0087  0086               	movwf	6
  5285  0088  3001               	movlw	high main@F12104
  5286  0089  0087               	movwf	7
  5287  008A  30DE               	movlw	low main@out
  5288  008B  0084               	movwf	4
  5289  008C  3000               	movlw	high main@out
  5290  008D  0085               	movwf	5
  5291  008E  3008               	movlw	8
  5292  008F  0021               	movlb	1	; select bank1
  5293  0090  00D8               	movwf	??_main^(0+128)
  5294  0091                     u3200:
  5295  0091  0016               	moviw fsr1++
  5296  0092  001A               	movwi fsr0++
  5297  0093  0BD8               	decfsz	??_main^(0+128),f
  5298  0094  2891               	goto	u3200
  5299  0095                     l3737:
  5300  0095                     l3739:
  5301                           
  5302                           ;main.c: 62:         H_L_counter=0;
  5303  0095  0021               	movlb	1	; select bank1
  5304  0096  01EE               	clrf	main@H_L_counter^(0+128)
  5305  0097  01EF               	clrf	(main@H_L_counter+1)^(0+128)
  5306  0098                     l3741:
  5307                           
  5308                           ;main.c: 63:         if(TMR0_ReadTimer()==0){
  5309  0098  3188  20F9  3180   	fcall	_TMR0_ReadTimer
  5310  009B  3A00               	xorlw	0
  5311  009C  1D03               	skipz
  5312  009D  289F               	goto	u3211
  5313  009E  28A0               	goto	u3210
  5314  009F                     u3211:
  5315  009F  28BF               	goto	l3757
  5316  00A0                     u3210:
  5317  00A0                     l3743:
  5318                           
  5319                           ;main.c: 64:             for(i=0;i<8;i++){
  5320  00A0  0021               	movlb	1	; select bank1
  5321  00A1  01EC               	clrf	main@i^(0+128)
  5322  00A2  01ED               	clrf	(main@i+1)^(0+128)
  5323  00A3                     l3749:
  5324                           
  5325                           ;main.c: 65:                 EUSART_Write(out[i]);
  5326  00A3  0021               	movlb	1	; select bank1
  5327  00A4  086C               	movf	main@i^(0+128),w
  5328  00A5  3EDE               	addlw	(low (main@out| 0))& (0+255)
  5329  00A6  0086               	movwf	6
  5330  00A7  0187               	clrf	7
  5331  00A8  0801               	movf	1,w
  5332  00A9  3189  2119  3180   	fcall	_EUSART_Write
  5333  00AC                     l3751:
  5334                           
  5335                           ;main.c: 66:                 __nop();
  5336  00AC  0000               	nop
  5337  00AD                     l3753:
  5338                           
  5339                           ;main.c: 67:             }
  5340  00AD  3001               	movlw	1
  5341  00AE  0021               	movlb	1	; select bank1
  5342  00AF  07EC               	addwf	main@i^(0+128),f
  5343  00B0  3000               	movlw	0
  5344  00B1  3DED               	addwfc	(main@i+1)^(0+128),f
  5345  00B2                     l3755:
  5346  00B2  086D               	movf	(main@i+1)^(0+128),w
  5347  00B3  3A80               	xorlw	128
  5348  00B4  00D8               	movwf	??_main^(0+128)
  5349  00B5  3080               	movlw	128
  5350  00B6  0258               	subwf	??_main^(0+128),w
  5351  00B7  1D03               	skipz
  5352  00B8  28BB               	goto	u3225
  5353  00B9  3008               	movlw	8
  5354  00BA  026C               	subwf	main@i^(0+128),w
  5355  00BB                     u3225:
  5356  00BB  1C03               	skipc
  5357  00BC  28BE               	goto	u3221
  5358  00BD  28BF               	goto	u3220
  5359  00BE                     u3221:
  5360  00BE  28A3               	goto	l3749
  5361  00BF                     u3220:
  5362  00BF                     l3757:
  5363                           
  5364                           ;main.c: 69:         if(eusartRxCount == 39){
  5365  00BF  3027               	movlw	39
  5366  00C0  0678               	xorwf	_eusartRxCount,w	;volatile
  5367  00C1  1D03               	btfss	3,2
  5368  00C2  28C4               	goto	u3231
  5369  00C3  28C5               	goto	u3230
  5370  00C4                     u3231:
  5371  00C4  2895               	goto	l3739
  5372  00C5                     u3230:
  5373  00C5                     l3759:
  5374                           
  5375                           ;main.c: 70:             unsigned int *index;;main.c: 71:             unsigned int *inde
      +                          x_V_H;;main.c: 72:             unsigned int *index_V_L;;main.c: 73:             index=&C
      +                          oulomb_Data.ID;
  5376  00C5  307C               	movlw	124
  5377  00C6  0021               	movlb	1	; select bank1
  5378  00C7  00EA               	movwf	main@index^(0+128)
  5379  00C8  3021               	movlw	33
  5380  00C9  00EB               	movwf	(main@index^(0+128)+1)
  5381  00CA                     l3761:
  5382                           
  5383                           ;main.c: 74:             index_V_H=&Coulomb_Data.Voltage_H[0];
  5384  00CA  3082               	movlw	130
  5385  00CB  00E6               	movwf	main@index_V_H^(0+128)
  5386  00CC  3021               	movlw	33
  5387  00CD  00E7               	movwf	(main@index_V_H^(0+128)+1)
  5388  00CE                     l3763:
  5389                           
  5390                           ;main.c: 75:             index_V_L=&Coulomb_Data.Voltage_L[0];
  5391  00CE  30A4               	movlw	164
  5392  00CF  00E8               	movwf	main@index_V_L^(0+128)
  5393  00D0  3021               	movlw	33
  5394  00D1  00E9               	movwf	(main@index_V_L^(0+128)+1)
  5395                           
  5396                           ;main.c: 76:             while(eusartRxCount != 0){
  5397  00D2  2934               	goto	l3787
  5398  00D3                     l3765:
  5399                           
  5400                           ;main.c: 77:                 *index = EUSART_Read();
  5401  00D3  318A  2275  3180   	fcall	_EUSART_Read
  5402  00D6  0021               	movlb	1	; select bank1
  5403  00D7  00D8               	movwf	??_main^(0+128)
  5404  00D8  01D9               	clrf	(??_main^(0+128)+1)
  5405  00D9  086A               	movf	main@index^(0+128),w
  5406  00DA  0086               	movwf	6
  5407  00DB  086B               	movf	(main@index+1)^(0+128),w
  5408  00DC  0087               	movwf	7
  5409  00DD  0858               	movf	??_main^(0+128),w
  5410  00DE  3FC0               	movwi [0]fsr1
  5411  00DF  0859               	movf	(??_main+1)^(0+128),w
  5412  00E0  3FC1               	movwi [1]fsr1
  5413  00E1                     l3767:
  5414                           
  5415                           ;main.c: 78:                 H_L_counter++;
  5416  00E1  3001               	movlw	1
  5417  00E2  07EE               	addwf	main@H_L_counter^(0+128),f
  5418  00E3  3000               	movlw	0
  5419  00E4  3DEF               	addwfc	(main@H_L_counter+1)^(0+128),f
  5420  00E5                     l3769:
  5421                           
  5422                           ;main.c: 79:                 if((H_L_counter<=3)||(H_L_counter>=0x27)) index++;
  5423  00E5  086F               	movf	(main@H_L_counter+1)^(0+128),w
  5424  00E6  3A80               	xorlw	128
  5425  00E7  00D8               	movwf	??_main^(0+128)
  5426  00E8  3080               	movlw	128
  5427  00E9  0258               	subwf	??_main^(0+128),w
  5428  00EA  1D03               	skipz
  5429  00EB  28EE               	goto	u3245
  5430  00EC  3004               	movlw	4
  5431  00ED  026E               	subwf	main@H_L_counter^(0+128),w
  5432  00EE                     u3245:
  5433  00EE  1C03               	skipc
  5434  00EF  28F1               	goto	u3241
  5435  00F0  28F2               	goto	u3240
  5436  00F1                     u3241:
  5437  00F1  2900               	goto	l3773
  5438  00F2                     u3240:
  5439  00F2                     l3771:
  5440  00F2  0021               	movlb	1	; select bank1
  5441  00F3  086F               	movf	(main@H_L_counter+1)^(0+128),w
  5442  00F4  3A80               	xorlw	128
  5443  00F5  00D8               	movwf	??_main^(0+128)
  5444  00F6  3080               	movlw	128
  5445  00F7  0258               	subwf	??_main^(0+128),w
  5446  00F8  1D03               	skipz
  5447  00F9  28FC               	goto	u3255
  5448  00FA  3027               	movlw	39
  5449  00FB  026E               	subwf	main@H_L_counter^(0+128),w
  5450  00FC                     u3255:
  5451  00FC  1C03               	skipc
  5452  00FD  28FF               	goto	u3251
  5453  00FE  2900               	goto	u3250
  5454  00FF                     u3251:
  5455  00FF  2906               	goto	l3775
  5456  0100                     u3250:
  5457  0100                     l3773:
  5458  0100  3002               	movlw	2
  5459  0101  0021               	movlb	1	; select bank1
  5460  0102  07EA               	addwf	main@index^(0+128),f
  5461  0103  3000               	movlw	0
  5462  0104  3DEB               	addwfc	(main@index+1)^(0+128),f
  5463  0105  2934               	goto	l3787
  5464  0106                     l3775:
  5465                           
  5466                           ;main.c: 81:                     if(H_L_counter==4) index=index_V_H;
  5467  0106  3004               	movlw	4
  5468  0107  0021               	movlb	1	; select bank1
  5469  0108  066E               	xorwf	main@H_L_counter^(0+128),w
  5470  0109  046F               	iorwf	(main@H_L_counter+1)^(0+128),w
  5471  010A  1D03               	btfss	3,2
  5472  010B  290D               	goto	u3261
  5473  010C  290E               	goto	u3260
  5474  010D                     u3261:
  5475  010D  2913               	goto	l3779
  5476  010E                     u3260:
  5477  010E                     l3777:
  5478  010E  0867               	movf	(main@index_V_H+1)^(0+128),w
  5479  010F  00EB               	movwf	(main@index+1)^(0+128)
  5480  0110  0866               	movf	main@index_V_H^(0+128),w
  5481  0111  00EA               	movwf	main@index^(0+128)
  5482  0112  2934               	goto	l3787
  5483  0113                     l3779:
  5484  0113  3005               	movlw	5
  5485  0114  066E               	xorwf	main@H_L_counter^(0+128),w
  5486  0115  046F               	iorwf	(main@H_L_counter+1)^(0+128),w
  5487  0116  1D03               	btfss	3,2
  5488  0117  2919               	goto	u3271
  5489  0118  291A               	goto	u3270
  5490  0119                     u3271:
  5491  0119  291F               	goto	l372
  5492  011A                     u3270:
  5493  011A                     l3781:
  5494  011A  0869               	movf	(main@index_V_L+1)^(0+128),w
  5495  011B  00EB               	movwf	(main@index+1)^(0+128)
  5496  011C  0868               	movf	main@index_V_L^(0+128),w
  5497  011D  00EA               	movwf	main@index^(0+128)
  5498  011E  2934               	goto	l3787
  5499  011F                     l372:	
  5500                           ;main.c: 83:                     else if((H_L_counter%2)==0){
  5501                           
  5502  011F  186E               	btfsc	main@H_L_counter^(0+128),0
  5503  0120  2922               	goto	u3281
  5504  0121  2923               	goto	u3280
  5505  0122                     u3281:
  5506  0122  292C               	goto	l3785
  5507  0123                     u3280:
  5508  0123                     l3783:
  5509                           
  5510                           ;main.c: 84:                         index_V_H++;
  5511  0123  3002               	movlw	2
  5512  0124  07E6               	addwf	main@index_V_H^(0+128),f
  5513  0125  3000               	movlw	0
  5514  0126  3DE7               	addwfc	(main@index_V_H+1)^(0+128),f
  5515                           
  5516                           ;main.c: 85:                         index=index_V_H;
  5517  0127  0867               	movf	(main@index_V_H+1)^(0+128),w
  5518  0128  00EB               	movwf	(main@index+1)^(0+128)
  5519  0129  0866               	movf	main@index_V_H^(0+128),w
  5520  012A  00EA               	movwf	main@index^(0+128)
  5521                           
  5522                           ;main.c: 86:                     }
  5523  012B  2934               	goto	l3787
  5524  012C                     l3785:
  5525                           
  5526                           ;main.c: 88:                         index_V_L++;
  5527  012C  3002               	movlw	2
  5528  012D  07E8               	addwf	main@index_V_L^(0+128),f
  5529  012E  3000               	movlw	0
  5530  012F  3DE9               	addwfc	(main@index_V_L+1)^(0+128),f
  5531                           
  5532                           ;main.c: 89:                         index=index_V_L;
  5533  0130  0869               	movf	(main@index_V_L+1)^(0+128),w
  5534  0131  00EB               	movwf	(main@index+1)^(0+128)
  5535  0132  0868               	movf	main@index_V_L^(0+128),w
  5536  0133  00EA               	movwf	main@index^(0+128)
  5537  0134                     l3787:
  5538                           
  5539                           ;main.c: 76:             while(eusartRxCount != 0){
  5540  0134  0878               	movf	_eusartRxCount,w	;volatile
  5541  0135  1D03               	btfss	3,2
  5542  0136  2938               	goto	u3291
  5543  0137  2939               	goto	u3290
  5544  0138                     u3291:
  5545  0138  28D3               	goto	l3765
  5546  0139                     u3290:
  5547  0139                     l3789:
  5548                           
  5549                           ;main.c: 93:             for(j=0;j<=16;j++) {
  5550  0139  0024               	movlb	4	; select bank4
  5551  013A  01CF               	clrf	main@j^(0+512)
  5552  013B  01D0               	clrf	(main@j+1)^(0+512)
  5553  013C                     l3795:
  5554                           
  5555                           ;main.c: 94:                 Get_Voltage(j);
  5556  013C  0024               	movlb	4	; select bank4
  5557  013D  0850               	movf	(main@j+1)^(0+512),w
  5558  013E  0020               	movlb	0	; select bank0
  5559  013F  00A4               	movwf	Get_Voltage@k+1
  5560  0140  0024               	movlb	4	; select bank4
  5561  0141  084F               	movf	main@j^(0+512),w
  5562  0142  0020               	movlb	0	; select bank0
  5563  0143  00A3               	movwf	Get_Voltage@k
  5564  0144  3185  25BD  3180   	fcall	_Get_Voltage
  5565  0147                     l3797:
  5566                           
  5567                           ;main.c: 95:                 Voltage_sort[j] = Coulomb_Data.Voltage[j];
  5568  0147  0024               	movlb	4	; select bank4
  5569  0148  0850               	movf	(main@j+1)^(0+512),w
  5570  0149  0021               	movlb	1	; select bank1
  5571  014A  00D9               	movwf	(??_main^(0+128)+1)
  5572  014B  0024               	movlb	4	; select bank4
  5573  014C  084F               	movf	main@j^(0+512),w
  5574  014D  0021               	movlb	1	; select bank1
  5575  014E  00D8               	movwf	??_main^(0+128)
  5576  014F  35D8               	lslf	??_main^(0+128),f
  5577  0150  0DD9               	rlf	(??_main^(0+128)+1),f
  5578  0151  30CE               	movlw	206
  5579  0152  00DA               	movwf	(??_main+2)^(0+128)
  5580  0153  3021               	movlw	33
  5581  0154  00DB               	movwf	((??_main+2)^(0+128)+1)
  5582  0155  0858               	movf	??_main^(0+128),w
  5583  0156  075A               	addwf	(??_main+2)^(0+128),w
  5584  0157  0086               	movwf	6
  5585  0158  0859               	movf	(??_main+1)^(0+128),w
  5586  0159  3D5B               	addwfc	(??_main+3)^(0+128),w
  5587  015A  0087               	movwf	7
  5588  015B  0024               	movlb	4	; select bank4
  5589  015C  354F               	lslf	main@j^(0+512),w
  5590  015D  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
  5591  015E  0084               	movwf	4
  5592  015F  3001               	movlw	1	; select bank2/3
  5593  0160  0085               	movwf	5
  5594  0161  3F40               	moviw [0]fsr1
  5595  0162  3F80               	movwi [0]fsr0
  5596  0163  3F41               	moviw [1]fsr1
  5597  0164  3F81               	movwi [1]fsr0
  5598  0165                     l3799:
  5599                           
  5600                           ;main.c: 96:             }
  5601  0165  3001               	movlw	1
  5602  0166  07CF               	addwf	main@j^(0+512),f
  5603  0167  3000               	movlw	0
  5604  0168  3DD0               	addwfc	(main@j+1)^(0+512),f
  5605  0169                     l3801:
  5606  0169  0850               	movf	(main@j+1)^(0+512),w
  5607  016A  3A80               	xorlw	128
  5608  016B  0021               	movlb	1	; select bank1
  5609  016C  00D8               	movwf	??_main^(0+128)
  5610  016D  3080               	movlw	128
  5611  016E  0258               	subwf	??_main^(0+128),w
  5612  016F  1D03               	skipz
  5613  0170  2974               	goto	u3305
  5614  0171  3011               	movlw	17
  5615  0172  0024               	movlb	4	; select bank4
  5616  0173  024F               	subwf	main@j^(0+512),w
  5617  0174                     u3305:
  5618  0174  1C03               	skipc
  5619  0175  2977               	goto	u3301
  5620  0176  2978               	goto	u3300
  5621  0177                     u3301:
  5622  0177  293C               	goto	l3795
  5623  0178                     u3300:
  5624  0178                     l3803:
  5625                           
  5626                           ;main.c: 97:             for(j=0;j<=16;j++){
  5627  0178  0024               	movlb	4	; select bank4
  5628  0179  01CF               	clrf	main@j^(0+512)
  5629  017A  01D0               	clrf	(main@j+1)^(0+512)
  5630  017B                     l3809:
  5631                           
  5632                           ;main.c: 98:                 if(Coulomb_Data.Voltage[j]>=3500) PORTAbits.RA2=1;
  5633  017B  0024               	movlb	4	; select bank4
  5634  017C  0850               	movf	(main@j+1)^(0+512),w
  5635  017D  0021               	movlb	1	; select bank1
  5636  017E  00D9               	movwf	(??_main^(0+128)+1)
  5637  017F  0024               	movlb	4	; select bank4
  5638  0180  084F               	movf	main@j^(0+512),w
  5639  0181  0021               	movlb	1	; select bank1
  5640  0182  00D8               	movwf	??_main^(0+128)
  5641  0183  35D8               	lslf	??_main^(0+128),f
  5642  0184  0DD9               	rlf	(??_main^(0+128)+1),f
  5643  0185  30CE               	movlw	206
  5644  0186  00DA               	movwf	(??_main+2)^(0+128)
  5645  0187  3021               	movlw	33
  5646  0188  00DB               	movwf	((??_main+2)^(0+128)+1)
  5647  0189  0858               	movf	??_main^(0+128),w
  5648  018A  075A               	addwf	(??_main+2)^(0+128),w
  5649  018B  0086               	movwf	6
  5650  018C  0859               	movf	(??_main+1)^(0+128),w
  5651  018D  3D5B               	addwfc	(??_main+3)^(0+128),w
  5652  018E  0087               	movwf	7
  5653  018F  3F40               	moviw [0]fsr1
  5654  0190  00DC               	movwf	(??_main+4)^(0+128)
  5655  0191  3F41               	moviw [1]fsr1
  5656  0192  00DD               	movwf	((??_main+4)^(0+128)+1)
  5657  0193  300D               	movlw	13
  5658  0194  025D               	subwf	(??_main+5)^(0+128),w
  5659  0195  30AC               	movlw	172
  5660  0196  1903               	skipnz
  5661  0197  025C               	subwf	(??_main+4)^(0+128),w
  5662  0198  1C03               	skipc
  5663  0199  299B               	goto	u3311
  5664  019A  299C               	goto	u3310
  5665  019B                     u3311:
  5666  019B  299E               	goto	l3813
  5667  019C                     u3310:
  5668  019C                     l3811:
  5669  019C  0020               	movlb	0	; select bank0
  5670  019D  150C               	bsf	12,2	;volatile
  5671  019E                     l3813:
  5672                           
  5673                           ;main.c: 99:                 if(Coulomb_Data.Voltage[j]<=2500) PORTAbits.RA3=1;
  5674  019E  0024               	movlb	4	; select bank4
  5675  019F  0850               	movf	(main@j+1)^(0+512),w
  5676  01A0  0021               	movlb	1	; select bank1
  5677  01A1  00D9               	movwf	(??_main^(0+128)+1)
  5678  01A2  0024               	movlb	4	; select bank4
  5679  01A3  084F               	movf	main@j^(0+512),w
  5680  01A4  0021               	movlb	1	; select bank1
  5681  01A5  00D8               	movwf	??_main^(0+128)
  5682  01A6  35D8               	lslf	??_main^(0+128),f
  5683  01A7  0DD9               	rlf	(??_main^(0+128)+1),f
  5684  01A8  30CE               	movlw	206
  5685  01A9  00DA               	movwf	(??_main+2)^(0+128)
  5686  01AA  3021               	movlw	33
  5687  01AB  00DB               	movwf	((??_main+2)^(0+128)+1)
  5688  01AC  0858               	movf	??_main^(0+128),w
  5689  01AD  075A               	addwf	(??_main+2)^(0+128),w
  5690  01AE  0086               	movwf	6
  5691  01AF  0859               	movf	(??_main+1)^(0+128),w
  5692  01B0  3D5B               	addwfc	(??_main+3)^(0+128),w
  5693  01B1  0087               	movwf	7
  5694  01B2  3F40               	moviw [0]fsr1
  5695  01B3  00DC               	movwf	(??_main+4)^(0+128)
  5696  01B4  3F41               	moviw [1]fsr1
  5697  01B5  00DD               	movwf	((??_main+4)^(0+128)+1)
  5698  01B6  3009               	movlw	9
  5699  01B7  025D               	subwf	(??_main+5)^(0+128),w
  5700  01B8  30C5               	movlw	197
  5701  01B9  1903               	skipnz
  5702  01BA  025C               	subwf	(??_main+4)^(0+128),w
  5703  01BB  1803               	skipnc
  5704  01BC  29BE               	goto	u3321
  5705  01BD  29BF               	goto	u3320
  5706  01BE                     u3321:
  5707  01BE  29C1               	goto	l3817
  5708  01BF                     u3320:
  5709  01BF                     l3815:
  5710  01BF  0020               	movlb	0	; select bank0
  5711  01C0  158C               	bsf	12,3	;volatile
  5712  01C1                     l3817:
  5713                           
  5714                           ;main.c: 100:             }
  5715  01C1  3001               	movlw	1
  5716  01C2  0024               	movlb	4	; select bank4
  5717  01C3  07CF               	addwf	main@j^(0+512),f
  5718  01C4  3000               	movlw	0
  5719  01C5  3DD0               	addwfc	(main@j+1)^(0+512),f
  5720  01C6  0850               	movf	(main@j+1)^(0+512),w
  5721  01C7  3A80               	xorlw	128
  5722  01C8  0021               	movlb	1	; select bank1
  5723  01C9  00D8               	movwf	??_main^(0+128)
  5724  01CA  3080               	movlw	128
  5725  01CB  0258               	subwf	??_main^(0+128),w
  5726  01CC  1D03               	skipz
  5727  01CD  29D1               	goto	u3335
  5728  01CE  3011               	movlw	17
  5729  01CF  0024               	movlb	4	; select bank4
  5730  01D0  024F               	subwf	main@j^(0+512),w
  5731  01D1                     u3335:
  5732  01D1  1C03               	skipc
  5733  01D2  29D4               	goto	u3331
  5734  01D3  29D5               	goto	u3330
  5735  01D4                     u3331:
  5736  01D4  297B               	goto	l3809
  5737  01D5                     u3330:
  5738  01D5                     l3819:
  5739                           
  5740                           ;main.c: 101:             BadBetteryFilter();
  5741  01D5  318C  24F2  3180   	fcall	_BadBetteryFilter
  5742  01D8                     l3821:
  5743                           
  5744                           ;main.c: 102:             LCD_Init(0x4E);
  5745  01D8  304E               	movlw	78
  5746  01D9  318D  255D  3180   	fcall	_LCD_Init
  5747  01DC                     l3823:
  5748                           
  5749                           ;main.c: 105:             for(j=1; j<=17 ;j++){
  5750  01DC  3001               	movlw	1
  5751  01DD  0024               	movlb	4	; select bank4
  5752  01DE  00CF               	movwf	main@j^(0+512)
  5753  01DF  3000               	movlw	0
  5754  01E0  00D0               	movwf	(main@j^(0+512)+1)
  5755  01E1                     l3829:
  5756                           
  5757                           ;main.c: 106:                 LCD_Clear();
  5758  01E1  3189  2146  3180   	fcall	_LCD_Clear
  5759  01E4                     l3831:
  5760                           
  5761                           ;main.c: 107:                 LCD_Set_Cursor(1, 1);
  5762  01E4  0020               	movlb	0	; select bank0
  5763  01E5  01A1               	clrf	LCD_Set_Cursor@COL
  5764  01E6  0AA1               	incf	LCD_Set_Cursor@COL,f
  5765  01E7  3001               	movlw	1
  5766  01E8  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5767  01EB                     l3833:
  5768                           
  5769                           ;main.c: 108:                 LCD_Write_String("No");
  5770  01EB  3006               	movlw	low (STR_1| (0+32768))
  5771  01EC  0020               	movlb	0	; select bank0
  5772  01ED  00A1               	movwf	LCD_Write_String@Str
  5773  01EE  3088               	movlw	high (STR_1| (0+32768))
  5774  01EF  00A2               	movwf	LCD_Write_String@Str+1
  5775  01F0  318A  222D  3180   	fcall	_LCD_Write_String
  5776  01F3                     l3835:
  5777                           
  5778                           ;main.c: 109:                 LCD_Set_Cursor(1, 3);
  5779  01F3  3003               	movlw	3
  5780  01F4  0021               	movlb	1	; select bank1
  5781  01F5  00D8               	movwf	??_main^(0+128)
  5782  01F6  0858               	movf	??_main^(0+128),w
  5783  01F7  0020               	movlb	0	; select bank0
  5784  01F8  00A1               	movwf	LCD_Set_Cursor@COL
  5785  01F9  3001               	movlw	1
  5786  01FA  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5787  01FD                     l3837:
  5788                           
  5789                           ;main.c: 110:                 sprintf(&no, "%d", j);
  5790  01FD  30EF               	movlw	low _no
  5791  01FE  0021               	movlb	1	; select bank1
  5792  01FF  00C8               	movwf	sprintf@s^(0+128)
  5793  0200  3001               	movlw	high _no
  5794  0201  00C9               	movwf	(sprintf@s+1)^(0+128)
  5795  0202  3003               	movlw	low (STR_2| (0+32768))
  5796  0203  00CA               	movwf	sprintf@fmt^(0+128)
  5797  0204  3088               	movlw	high (STR_2| (0+32768))
  5798  0205  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5799  0206  0024               	movlb	4	; select bank4
  5800  0207  0850               	movf	(main@j+1)^(0+512),w
  5801  0208  0021               	movlb	1	; select bank1
  5802  0209  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5803  020A  0024               	movlb	4	; select bank4
  5804  020B  084F               	movf	main@j^(0+512),w
  5805  020C  0021               	movlb	1	; select bank1
  5806  020D  00CC               	movwf	(?_sprintf^(0+128)+4)
  5807  020E  318A  229F  3180   	fcall	_sprintf
  5808  0211                     l3839:
  5809                           
  5810                           ;main.c: 111:                 LCD_Write_String(&no);
  5811  0211  30EF               	movlw	low _no
  5812  0212  0020               	movlb	0	; select bank0
  5813  0213  00A1               	movwf	LCD_Write_String@Str
  5814  0214  3001               	movlw	high _no
  5815  0215  00A2               	movwf	LCD_Write_String@Str+1
  5816  0216  318A  222D  3180   	fcall	_LCD_Write_String
  5817  0219                     l3841:
  5818                           
  5819                           ;main.c: 112:                 LCD_Set_Cursor(1, 5);
  5820  0219  3005               	movlw	5
  5821  021A  0021               	movlb	1	; select bank1
  5822  021B  00D8               	movwf	??_main^(0+128)
  5823  021C  0858               	movf	??_main^(0+128),w
  5824  021D  0020               	movlb	0	; select bank0
  5825  021E  00A1               	movwf	LCD_Set_Cursor@COL
  5826  021F  3001               	movlw	1
  5827  0220  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5828  0223                     l3843:
  5829                           
  5830                           ;main.c: 113:                 LCD_Write_String(":");
  5831  0223  300B               	movlw	low (STR_3| (0+32768))
  5832  0224  0020               	movlb	0	; select bank0
  5833  0225  00A1               	movwf	LCD_Write_String@Str
  5834  0226  3088               	movlw	high (STR_3| (0+32768))
  5835  0227  00A2               	movwf	LCD_Write_String@Str+1
  5836  0228  318A  222D  3180   	fcall	_LCD_Write_String
  5837  022B                     l3845:
  5838                           
  5839                           ;main.c: 114:                 LCD_Set_Cursor(1, 6);
  5840  022B  3006               	movlw	6
  5841  022C  0021               	movlb	1	; select bank1
  5842  022D  00D8               	movwf	??_main^(0+128)
  5843  022E  0858               	movf	??_main^(0+128),w
  5844  022F  0020               	movlb	0	; select bank0
  5845  0230  00A1               	movwf	LCD_Set_Cursor@COL
  5846  0231  3001               	movlw	1
  5847  0232  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5848  0235                     l3847:
  5849                           
  5850                           ;main.c: 115:                 sprintf(ShowbadBettery, "%d", (Coulomb_Data.Voltage[j-1]/1
      +                          000));
  5851  0235  30C4               	movlw	low _ShowbadBettery
  5852  0236  0021               	movlb	1	; select bank1
  5853  0237  00C8               	movwf	sprintf@s^(0+128)
  5854  0238  3000               	movlw	high _ShowbadBettery
  5855  0239  00C9               	movwf	(sprintf@s+1)^(0+128)
  5856  023A  3003               	movlw	low (STR_2| (0+32768))
  5857  023B  00CA               	movwf	sprintf@fmt^(0+128)
  5858  023C  3088               	movlw	high (STR_2| (0+32768))
  5859  023D  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5860  023E  30E8               	movlw	232
  5861  023F  00F3               	movwf	___lwdiv@divisor
  5862  0240  3003               	movlw	3
  5863  0241  00F4               	movwf	___lwdiv@divisor+1
  5864  0242  0024               	movlb	4	; select bank4
  5865  0243  0850               	movf	(main@j+1)^(0+512),w
  5866  0244  0021               	movlb	1	; select bank1
  5867  0245  00D9               	movwf	(??_main^(0+128)+1)
  5868  0246  0024               	movlb	4	; select bank4
  5869  0247  084F               	movf	main@j^(0+512),w
  5870  0248  0021               	movlb	1	; select bank1
  5871  0249  00D8               	movwf	??_main^(0+128)
  5872  024A  35D8               	lslf	??_main^(0+128),f
  5873  024B  0DD9               	rlf	(??_main^(0+128)+1),f
  5874  024C  30CC               	movlw	204
  5875  024D  00DA               	movwf	(??_main+2)^(0+128)
  5876  024E  3021               	movlw	33
  5877  024F  00DB               	movwf	((??_main+2)^(0+128)+1)
  5878  0250  0858               	movf	??_main^(0+128),w
  5879  0251  075A               	addwf	(??_main+2)^(0+128),w
  5880  0252  0086               	movwf	6
  5881  0253  0859               	movf	(??_main+1)^(0+128),w
  5882  0254  3D5B               	addwfc	(??_main+3)^(0+128),w
  5883  0255  0087               	movwf	7
  5884  0256  3F40               	moviw [0]fsr1
  5885  0257  00F5               	movwf	___lwdiv@dividend
  5886  0258  3F41               	moviw [1]fsr1
  5887  0259  00F6               	movwf	___lwdiv@dividend+1
  5888  025A  318C  2405  3180   	fcall	___lwdiv
  5889  025D  0874               	movf	?___lwdiv+1,w
  5890  025E  0021               	movlb	1	; select bank1
  5891  025F  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5892  0260  0873               	movf	?___lwdiv,w
  5893  0261  00CC               	movwf	(?_sprintf^(0+128)+4)
  5894  0262  318A  229F  3180   	fcall	_sprintf
  5895  0265                     l3849:
  5896                           
  5897                           ;main.c: 116:                 LCD_Write_String(ShowbadBettery);
  5898  0265  30C4               	movlw	low _ShowbadBettery
  5899  0266  0020               	movlb	0	; select bank0
  5900  0267  00A1               	movwf	LCD_Write_String@Str
  5901  0268  3000               	movlw	high _ShowbadBettery
  5902  0269  00A2               	movwf	LCD_Write_String@Str+1
  5903  026A  318A  222D  3180   	fcall	_LCD_Write_String
  5904  026D                     l3851:
  5905                           
  5906                           ;main.c: 117:                 LCD_Set_Cursor(1, 7);
  5907  026D  3007               	movlw	7
  5908  026E  0021               	movlb	1	; select bank1
  5909  026F  00D8               	movwf	??_main^(0+128)
  5910  0270  0858               	movf	??_main^(0+128),w
  5911  0271  0020               	movlb	0	; select bank0
  5912  0272  00A1               	movwf	LCD_Set_Cursor@COL
  5913  0273  3001               	movlw	1
  5914  0274  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5915  0277                     l3853:
  5916                           
  5917                           ;main.c: 118:                 LCD_Write_String(".");
  5918  0277  3009               	movlw	low (STR_5| (0+32768))
  5919  0278  0020               	movlb	0	; select bank0
  5920  0279  00A1               	movwf	LCD_Write_String@Str
  5921  027A  3088               	movlw	high (STR_5| (0+32768))
  5922  027B  00A2               	movwf	LCD_Write_String@Str+1
  5923  027C  318A  222D  3180   	fcall	_LCD_Write_String
  5924  027F                     l3855:
  5925                           
  5926                           ;main.c: 119:                 LCD_Set_Cursor(1, 8);
  5927  027F  3008               	movlw	8
  5928  0280  0021               	movlb	1	; select bank1
  5929  0281  00D8               	movwf	??_main^(0+128)
  5930  0282  0858               	movf	??_main^(0+128),w
  5931  0283  0020               	movlb	0	; select bank0
  5932  0284  00A1               	movwf	LCD_Set_Cursor@COL
  5933  0285  3001               	movlw	1
  5934  0286  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  5935  0289                     l3857:
  5936                           
  5937                           ;main.c: 120:                 sprintf(ShowbadBettery, "%d", (Coulomb_Data.Voltage[j-1]%1
      +                          000));
  5938  0289  30C4               	movlw	low _ShowbadBettery
  5939  028A  0021               	movlb	1	; select bank1
  5940  028B  00C8               	movwf	sprintf@s^(0+128)
  5941  028C  3000               	movlw	high _ShowbadBettery
  5942  028D  00C9               	movwf	(sprintf@s+1)^(0+128)
  5943  028E  3003               	movlw	low (STR_2| (0+32768))
  5944  028F  00CA               	movwf	sprintf@fmt^(0+128)
  5945  0290  3088               	movlw	high (STR_2| (0+32768))
  5946  0291  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  5947  0292  30E8               	movlw	232
  5948  0293  00F3               	movwf	___lwmod@divisor
  5949  0294  3003               	movlw	3
  5950  0295  00F4               	movwf	___lwmod@divisor+1
  5951  0296  0024               	movlb	4	; select bank4
  5952  0297  0850               	movf	(main@j+1)^(0+512),w
  5953  0298  0021               	movlb	1	; select bank1
  5954  0299  00D9               	movwf	(??_main^(0+128)+1)
  5955  029A  0024               	movlb	4	; select bank4
  5956  029B  084F               	movf	main@j^(0+512),w
  5957  029C  0021               	movlb	1	; select bank1
  5958  029D  00D8               	movwf	??_main^(0+128)
  5959  029E  35D8               	lslf	??_main^(0+128),f
  5960  029F  0DD9               	rlf	(??_main^(0+128)+1),f
  5961  02A0  30CC               	movlw	204
  5962  02A1  00DA               	movwf	(??_main+2)^(0+128)
  5963  02A2  3021               	movlw	33
  5964  02A3  00DB               	movwf	((??_main+2)^(0+128)+1)
  5965  02A4  0858               	movf	??_main^(0+128),w
  5966  02A5  075A               	addwf	(??_main+2)^(0+128),w
  5967  02A6  0086               	movwf	6
  5968  02A7  0859               	movf	(??_main+1)^(0+128),w
  5969  02A8  3D5B               	addwfc	(??_main+3)^(0+128),w
  5970  02A9  0087               	movwf	7
  5971  02AA  3F40               	moviw [0]fsr1
  5972  02AB  00F5               	movwf	___lwmod@dividend
  5973  02AC  3F41               	moviw [1]fsr1
  5974  02AD  00F6               	movwf	___lwmod@dividend+1
  5975  02AE  318B  235A  3180   	fcall	___lwmod
  5976  02B1  0874               	movf	?___lwmod+1,w
  5977  02B2  0021               	movlb	1	; select bank1
  5978  02B3  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  5979  02B4  0873               	movf	?___lwmod,w
  5980  02B5  00CC               	movwf	(?_sprintf^(0+128)+4)
  5981  02B6  318A  229F  3180   	fcall	_sprintf
  5982  02B9                     l3859:
  5983                           
  5984                           ;main.c: 121:                 LCD_Write_String(ShowbadBettery);
  5985  02B9  30C4               	movlw	low _ShowbadBettery
  5986  02BA  0020               	movlb	0	; select bank0
  5987  02BB  00A1               	movwf	LCD_Write_String@Str
  5988  02BC  3000               	movlw	high _ShowbadBettery
  5989  02BD  00A2               	movwf	LCD_Write_String@Str+1
  5990  02BE  318A  222D  3180   	fcall	_LCD_Write_String
  5991  02C1                     l3861:
  5992                           
  5993                           ;main.c: 122:                 LCD_Set_Cursor(1, 11);
  5994  02C1  300B               	movlw	11
  5995  02C2  0021               	movlb	1	; select bank1
  5996  02C3  00D8               	movwf	??_main^(0+128)
  5997  02C4  0858               	movf	??_main^(0+128),w
  5998  02C5  0020               	movlb	0	; select bank0
  5999  02C6  00A1               	movwf	LCD_Set_Cursor@COL
  6000  02C7  3001               	movlw	1
  6001  02C8  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6002  02CB                     l3863:
  6003                           
  6004                           ;main.c: 123:                 LCD_Write_String("v");
  6005  02CB  300F               	movlw	low (STR_7| (0+32768))
  6006  02CC  0020               	movlb	0	; select bank0
  6007  02CD  00A1               	movwf	LCD_Write_String@Str
  6008  02CE  3088               	movlw	high (STR_7| (0+32768))
  6009  02CF  00A2               	movwf	LCD_Write_String@Str+1
  6010  02D0  318A  222D  3180   	fcall	_LCD_Write_String
  6011  02D3                     l3865:
  6012                           
  6013                           ;main.c: 125:                 LCD_Set_Cursor(2, 1);
  6014  02D3  0020               	movlb	0	; select bank0
  6015  02D4  01A1               	clrf	LCD_Set_Cursor@COL
  6016  02D5  0AA1               	incf	LCD_Set_Cursor@COL,f
  6017  02D6  3002               	movlw	2
  6018  02D7  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6019  02DA                     l3867:
  6020                           
  6021                           ;main.c: 126:                 LCD_Write_String("^");
  6022  02DA  300D               	movlw	low (STR_8| (0+32768))
  6023  02DB  0020               	movlb	0	; select bank0
  6024  02DC  00A1               	movwf	LCD_Write_String@Str
  6025  02DD  3088               	movlw	high (STR_8| (0+32768))
  6026  02DE  00A2               	movwf	LCD_Write_String@Str+1
  6027  02DF  318A  222D  3180   	fcall	_LCD_Write_String
  6028  02E2                     l3869:
  6029                           
  6030                           ;main.c: 127:                 LCD_Set_Cursor(2, 2);
  6031  02E2  3002               	movlw	2
  6032  02E3  0021               	movlb	1	; select bank1
  6033  02E4  00D8               	movwf	??_main^(0+128)
  6034  02E5  0858               	movf	??_main^(0+128),w
  6035  02E6  0020               	movlb	0	; select bank0
  6036  02E7  00A1               	movwf	LCD_Set_Cursor@COL
  6037  02E8  3002               	movlw	2
  6038  02E9  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6039  02EC                     l3871:
  6040                           
  6041                           ;main.c: 128:                 LCD_Write_String(&no);
  6042  02EC  30EF               	movlw	low _no
  6043  02ED  0020               	movlb	0	; select bank0
  6044  02EE  00A1               	movwf	LCD_Write_String@Str
  6045  02EF  3001               	movlw	high _no
  6046  02F0  00A2               	movwf	LCD_Write_String@Str+1
  6047  02F1  318A  222D  3180   	fcall	_LCD_Write_String
  6048  02F4                     l3873:
  6049                           
  6050                           ;main.c: 129:                 LCD_Set_Cursor(2, 4);
  6051  02F4  3004               	movlw	4
  6052  02F5  0021               	movlb	1	; select bank1
  6053  02F6  00D8               	movwf	??_main^(0+128)
  6054  02F7  0858               	movf	??_main^(0+128),w
  6055  02F8  0020               	movlb	0	; select bank0
  6056  02F9  00A1               	movwf	LCD_Set_Cursor@COL
  6057  02FA  3002               	movlw	2
  6058  02FB  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6059  02FE                     l3875:
  6060                           
  6061                           ;main.c: 130:                 LCD_Write_String(":");
  6062  02FE  300B               	movlw	low (STR_3| (0+32768))
  6063  02FF  0020               	movlb	0	; select bank0
  6064  0300  00A1               	movwf	LCD_Write_String@Str
  6065  0301  3088               	movlw	high (STR_3| (0+32768))
  6066  0302  00A2               	movwf	LCD_Write_String@Str+1
  6067  0303  318A  222D  3180   	fcall	_LCD_Write_String
  6068  0306                     l3877:
  6069                           
  6070                           ;main.c: 131:                 LCD_Set_Cursor(2, 5);
  6071  0306  3005               	movlw	5
  6072  0307  0021               	movlb	1	; select bank1
  6073  0308  00D8               	movwf	??_main^(0+128)
  6074  0309  0858               	movf	??_main^(0+128),w
  6075  030A  0020               	movlb	0	; select bank0
  6076  030B  00A1               	movwf	LCD_Set_Cursor@COL
  6077  030C  3002               	movlw	2
  6078  030D  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6079  0310                     l3879:
  6080                           
  6081                           ;main.c: 132:                 sprintf(ShowbadBettery, "%d", (diffBettery[j-1]/1000));
  6082  0310  30C4               	movlw	low _ShowbadBettery
  6083  0311  0021               	movlb	1	; select bank1
  6084  0312  00C8               	movwf	sprintf@s^(0+128)
  6085  0313  3000               	movlw	high _ShowbadBettery
  6086  0314  00C9               	movwf	(sprintf@s+1)^(0+128)
  6087  0315  3003               	movlw	low (STR_2| (0+32768))
  6088  0316  00CA               	movwf	sprintf@fmt^(0+128)
  6089  0317  3088               	movlw	high (STR_2| (0+32768))
  6090  0318  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  6091  0319  30E8               	movlw	232
  6092  031A  00F3               	movwf	___lwdiv@divisor
  6093  031B  3003               	movlw	3
  6094  031C  00F4               	movwf	___lwdiv@divisor+1
  6095  031D  0024               	movlb	4	; select bank4
  6096  031E  354F               	lslf	main@j^(0+512),w
  6097  031F  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6098  0320  0086               	movwf	6
  6099  0321  3001               	movlw	1	; select bank2/3
  6100  0322  0087               	movwf	7
  6101  0323  3F40               	moviw [0]fsr1
  6102  0324  00F5               	movwf	___lwdiv@dividend
  6103  0325  3F41               	moviw [1]fsr1
  6104  0326  00F6               	movwf	___lwdiv@dividend+1
  6105  0327  318C  2405  3180   	fcall	___lwdiv
  6106  032A  0874               	movf	?___lwdiv+1,w
  6107  032B  0021               	movlb	1	; select bank1
  6108  032C  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  6109  032D  0873               	movf	?___lwdiv,w
  6110  032E  00CC               	movwf	(?_sprintf^(0+128)+4)
  6111  032F  318A  229F  3180   	fcall	_sprintf
  6112  0332                     l3881:
  6113                           
  6114                           ;main.c: 133:                 LCD_Write_String(ShowbadBettery);
  6115  0332  30C4               	movlw	low _ShowbadBettery
  6116  0333  0020               	movlb	0	; select bank0
  6117  0334  00A1               	movwf	LCD_Write_String@Str
  6118  0335  3000               	movlw	high _ShowbadBettery
  6119  0336  00A2               	movwf	LCD_Write_String@Str+1
  6120  0337  318A  222D  3180   	fcall	_LCD_Write_String
  6121  033A                     l3883:
  6122                           
  6123                           ;main.c: 134:                 LCD_Set_Cursor(2, 6);
  6124  033A  3006               	movlw	6
  6125  033B  0021               	movlb	1	; select bank1
  6126  033C  00D8               	movwf	??_main^(0+128)
  6127  033D  0858               	movf	??_main^(0+128),w
  6128  033E  0020               	movlb	0	; select bank0
  6129  033F  00A1               	movwf	LCD_Set_Cursor@COL
  6130  0340  3002               	movlw	2
  6131  0341  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6132  0344                     l3885:
  6133                           
  6134                           ;main.c: 135:                 LCD_Write_String(".");
  6135  0344  3009               	movlw	low (STR_5| (0+32768))
  6136  0345  0020               	movlb	0	; select bank0
  6137  0346  00A1               	movwf	LCD_Write_String@Str
  6138  0347  3088               	movlw	high (STR_5| (0+32768))
  6139  0348  00A2               	movwf	LCD_Write_String@Str+1
  6140  0349  318A  222D  3180   	fcall	_LCD_Write_String
  6141  034C                     l3887:
  6142                           
  6143                           ;main.c: 136:                 LCD_Set_Cursor(2, 7);
  6144  034C  3007               	movlw	7
  6145  034D  0021               	movlb	1	; select bank1
  6146  034E  00D8               	movwf	??_main^(0+128)
  6147  034F  0858               	movf	??_main^(0+128),w
  6148  0350  0020               	movlb	0	; select bank0
  6149  0351  00A1               	movwf	LCD_Set_Cursor@COL
  6150  0352  3002               	movlw	2
  6151  0353  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6152  0356                     l3889:
  6153                           
  6154                           ;main.c: 140:                 if((diffBettery[j-1]/10!=0)&&(diffBettery[j-1]/100==0)&&(d
      +                          iffBettery[j-1]/1000==0))
  6155  0356  300A               	movlw	10
  6156  0357  00F3               	movwf	___lwdiv@divisor
  6157  0358  3000               	movlw	0
  6158  0359  00F4               	movwf	___lwdiv@divisor+1
  6159  035A  0024               	movlb	4	; select bank4
  6160  035B  354F               	lslf	main@j^(0+512),w
  6161  035C  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6162  035D  0086               	movwf	6
  6163  035E  3001               	movlw	1	; select bank2/3
  6164  035F  0087               	movwf	7
  6165  0360  3F40               	moviw [0]fsr1
  6166  0361  00F5               	movwf	___lwdiv@dividend
  6167  0362  3F41               	moviw [1]fsr1
  6168  0363  00F6               	movwf	___lwdiv@dividend+1
  6169  0364  318C  2405  3180   	fcall	___lwdiv
  6170  0367  0873               	movf	?___lwdiv,w
  6171  0368  0474               	iorwf	?___lwdiv+1,w
  6172  0369  1903               	btfsc	3,2
  6173  036A  2B6C               	goto	u3341
  6174  036B  2B6D               	goto	u3340
  6175  036C                     u3341:
  6176  036C  2BA4               	goto	l3897
  6177  036D                     u3340:
  6178  036D                     l3891:
  6179  036D  3064               	movlw	100
  6180  036E  00F3               	movwf	___lwdiv@divisor
  6181  036F  3000               	movlw	0
  6182  0370  00F4               	movwf	___lwdiv@divisor+1
  6183  0371  0024               	movlb	4	; select bank4
  6184  0372  354F               	lslf	main@j^(0+512),w
  6185  0373  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6186  0374  0086               	movwf	6
  6187  0375  3001               	movlw	1	; select bank2/3
  6188  0376  0087               	movwf	7
  6189  0377  3F40               	moviw [0]fsr1
  6190  0378  00F5               	movwf	___lwdiv@dividend
  6191  0379  3F41               	moviw [1]fsr1
  6192  037A  00F6               	movwf	___lwdiv@dividend+1
  6193  037B  318C  2405  3180   	fcall	___lwdiv
  6194  037E  0873               	movf	?___lwdiv,w
  6195  037F  0474               	iorwf	?___lwdiv+1,w
  6196  0380  1D03               	btfss	3,2
  6197  0381  2B83               	goto	u3351
  6198  0382  2B84               	goto	u3350
  6199  0383                     u3351:
  6200  0383  2BA4               	goto	l3897
  6201  0384                     u3350:
  6202  0384                     l3893:
  6203  0384  30E8               	movlw	232
  6204  0385  00F3               	movwf	___lwdiv@divisor
  6205  0386  3003               	movlw	3
  6206  0387  00F4               	movwf	___lwdiv@divisor+1
  6207  0388  0024               	movlb	4	; select bank4
  6208  0389  354F               	lslf	main@j^(0+512),w
  6209  038A  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6210  038B  0086               	movwf	6
  6211  038C  3001               	movlw	1	; select bank2/3
  6212  038D  0087               	movwf	7
  6213  038E  3F40               	moviw [0]fsr1
  6214  038F  00F5               	movwf	___lwdiv@dividend
  6215  0390  3F41               	moviw [1]fsr1
  6216  0391  00F6               	movwf	___lwdiv@dividend+1
  6217  0392  318C  2405  3180   	fcall	___lwdiv
  6218  0395  0873               	movf	?___lwdiv,w
  6219  0396  0474               	iorwf	?___lwdiv+1,w
  6220  0397  1D03               	btfss	3,2
  6221  0398  2B9A               	goto	u3361
  6222  0399  2B9B               	goto	u3360
  6223  039A                     u3361:
  6224  039A  2BA4               	goto	l3897
  6225  039B                     u3360:
  6226  039B                     l3895:
  6227                           
  6228                           ;main.c: 141:                     LCD_Write_String("0");
  6229  039B  3001               	movlw	low ((STR_13+1)| (0+32768))
  6230  039C  0020               	movlb	0	; select bank0
  6231  039D  00A1               	movwf	LCD_Write_String@Str
  6232  039E  3088               	movlw	high ((STR_13+1)| (0+32768))
  6233  039F  00A2               	movwf	LCD_Write_String@Str+1
  6234  03A0  318A  222D  3180   	fcall	_LCD_Write_String
  6235  03A3  2BF1               	goto	l3905
  6236  03A4                     l3897:
  6237  03A4  300A               	movlw	10
  6238  03A5  00F3               	movwf	___lwdiv@divisor
  6239  03A6  3000               	movlw	0
  6240  03A7  00F4               	movwf	___lwdiv@divisor+1
  6241  03A8  0024               	movlb	4	; select bank4
  6242  03A9  354F               	lslf	main@j^(0+512),w
  6243  03AA  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6244  03AB  0086               	movwf	6
  6245  03AC  3001               	movlw	1	; select bank2/3
  6246  03AD  0087               	movwf	7
  6247  03AE  3F40               	moviw [0]fsr1
  6248  03AF  00F5               	movwf	___lwdiv@dividend
  6249  03B0  3F41               	moviw [1]fsr1
  6250  03B1  00F6               	movwf	___lwdiv@dividend+1
  6251  03B2  318C  2405  3180   	fcall	___lwdiv
  6252  03B5  0873               	movf	?___lwdiv,w
  6253  03B6  0474               	iorwf	?___lwdiv+1,w
  6254  03B7  1D03               	btfss	3,2
  6255  03B8  2BBA               	goto	u3371
  6256  03B9  2BBB               	goto	u3370
  6257  03BA                     u3371:
  6258  03BA  2BF1               	goto	l3905
  6259  03BB                     u3370:
  6260  03BB                     l3899:
  6261  03BB  3064               	movlw	100
  6262  03BC  00F3               	movwf	___lwdiv@divisor
  6263  03BD  3000               	movlw	0
  6264  03BE  00F4               	movwf	___lwdiv@divisor+1
  6265  03BF  0024               	movlb	4	; select bank4
  6266  03C0  354F               	lslf	main@j^(0+512),w
  6267  03C1  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6268  03C2  0086               	movwf	6
  6269  03C3  3001               	movlw	1	; select bank2/3
  6270  03C4  0087               	movwf	7
  6271  03C5  3F40               	moviw [0]fsr1
  6272  03C6  00F5               	movwf	___lwdiv@dividend
  6273  03C7  3F41               	moviw [1]fsr1
  6274  03C8  00F6               	movwf	___lwdiv@dividend+1
  6275  03C9  318C  2405  3180   	fcall	___lwdiv
  6276  03CC  0873               	movf	?___lwdiv,w
  6277  03CD  0474               	iorwf	?___lwdiv+1,w
  6278  03CE  1D03               	btfss	3,2
  6279  03CF  2BD1               	goto	u3381
  6280  03D0  2BD2               	goto	u3380
  6281  03D1                     u3381:
  6282  03D1  2BF1               	goto	l3905
  6283  03D2                     u3380:
  6284  03D2                     l3901:
  6285  03D2  30E8               	movlw	232
  6286  03D3  00F3               	movwf	___lwdiv@divisor
  6287  03D4  3003               	movlw	3
  6288  03D5  00F4               	movwf	___lwdiv@divisor+1
  6289  03D6  0024               	movlb	4	; select bank4
  6290  03D7  354F               	lslf	main@j^(0+512),w
  6291  03D8  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6292  03D9  0086               	movwf	6
  6293  03DA  3001               	movlw	1	; select bank2/3
  6294  03DB  0087               	movwf	7
  6295  03DC  3F40               	moviw [0]fsr1
  6296  03DD  00F5               	movwf	___lwdiv@dividend
  6297  03DE  3F41               	moviw [1]fsr1
  6298  03DF  00F6               	movwf	___lwdiv@dividend+1
  6299  03E0  318C  2405  3180   	fcall	___lwdiv
  6300  03E3  0873               	movf	?___lwdiv,w
  6301  03E4  0474               	iorwf	?___lwdiv+1,w
  6302  03E5  1D03               	btfss	3,2
  6303  03E6  2BE8               	goto	u3391
  6304  03E7  2BE9               	goto	u3390
  6305  03E8                     u3391:
  6306  03E8  2BF1               	goto	l3905
  6307  03E9                     u3390:
  6308  03E9                     l3903:
  6309                           
  6310                           ;main.c: 144:                     LCD_Write_String("00");
  6311  03E9  3000               	movlw	low (STR_13| (0+32768))
  6312  03EA  0020               	movlb	0	; select bank0
  6313  03EB  00A1               	movwf	LCD_Write_String@Str
  6314  03EC  3088               	movlw	high (STR_13| (0+32768))
  6315  03ED  00A2               	movwf	LCD_Write_String@Str+1
  6316  03EE  318A  222D  3180   	fcall	_LCD_Write_String
  6317  03F1                     l3905:
  6318                           
  6319                           ;main.c: 146:                 sprintf(ShowbadBettery, "%d", (diffBettery[j-1]%1000));
  6320  03F1  30C4               	movlw	low _ShowbadBettery
  6321  03F2  0021               	movlb	1	; select bank1
  6322  03F3  00C8               	movwf	sprintf@s^(0+128)
  6323  03F4  3000               	movlw	high _ShowbadBettery
  6324  03F5  00C9               	movwf	(sprintf@s+1)^(0+128)
  6325  03F6  3003               	movlw	low (STR_2| (0+32768))
  6326  03F7  00CA               	movwf	sprintf@fmt^(0+128)
  6327  03F8  3088               	movlw	high (STR_2| (0+32768))
  6328  03F9  00CB               	movwf	(sprintf@fmt^(0+128)+1)
  6329  03FA  30E8               	movlw	232
  6330  03FB  00F3               	movwf	___lwmod@divisor
  6331  03FC  3003               	movlw	3
  6332  03FD  00F4               	movwf	___lwmod@divisor+1
  6333  03FE  0024               	movlb	4	; select bank4
  6334  03FF  354F               	lslf	main@j^(0+512),w
  6335  0400  3E1E               	addlw	(low ((_diffBettery| (0+256)+254)))& (0+255)
  6336  0401  0086               	movwf	6
  6337  0402  3001               	movlw	1	; select bank2/3
  6338  0403  0087               	movwf	7
  6339  0404  3F40               	moviw [0]fsr1
  6340  0405  00F5               	movwf	___lwmod@dividend
  6341  0406  3F41               	moviw [1]fsr1
  6342  0407  00F6               	movwf	___lwmod@dividend+1
  6343  0408  318B  235A  3180   	fcall	___lwmod
  6344  040B  0874               	movf	?___lwmod+1,w
  6345  040C  0021               	movlb	1	; select bank1
  6346  040D  00CD               	movwf	((?_sprintf+1)^(0+128)+4)
  6347  040E  0873               	movf	?___lwmod,w
  6348  040F  00CC               	movwf	(?_sprintf^(0+128)+4)
  6349  0410  318A  229F  3180   	fcall	_sprintf
  6350  0413                     l3907:
  6351                           
  6352                           ;main.c: 147:                 LCD_Write_String(ShowbadBettery);
  6353  0413  30C4               	movlw	low _ShowbadBettery
  6354  0414  0020               	movlb	0	; select bank0
  6355  0415  00A1               	movwf	LCD_Write_String@Str
  6356  0416  3000               	movlw	high _ShowbadBettery
  6357  0417  00A2               	movwf	LCD_Write_String@Str+1
  6358  0418  318A  222D  3180   	fcall	_LCD_Write_String
  6359  041B                     l3909:
  6360                           
  6361                           ;main.c: 149:                 LCD_Set_Cursor(2, 10);
  6362  041B  300A               	movlw	10
  6363  041C  0021               	movlb	1	; select bank1
  6364  041D  00D8               	movwf	??_main^(0+128)
  6365  041E  0858               	movf	??_main^(0+128),w
  6366  041F  0020               	movlb	0	; select bank0
  6367  0420  00A1               	movwf	LCD_Set_Cursor@COL
  6368  0421  3002               	movlw	2
  6369  0422  318A  22CA  3180   	fcall	_LCD_Set_Cursor
  6370  0425                     l3911:
  6371                           
  6372                           ;main.c: 150:                 LCD_Write_String("v");
  6373  0425  300F               	movlw	low (STR_7| (0+32768))
  6374  0426  0020               	movlb	0	; select bank0
  6375  0427  00A1               	movwf	LCD_Write_String@Str
  6376  0428  3088               	movlw	high (STR_7| (0+32768))
  6377  0429  00A2               	movwf	LCD_Write_String@Str+1
  6378  042A  318A  222D  3180   	fcall	_LCD_Write_String
  6379  042D                     l3913:
  6380                           
  6381                           ;main.c: 151:                 Delay(25000);
  6382  042D  30A8               	movlw	168
  6383  042E  00F3               	movwf	Delay@counter
  6384  042F  3061               	movlw	97
  6385  0430  00F4               	movwf	Delay@counter+1
  6386  0431  3189  212E  3180   	fcall	_Delay
  6387  0434                     l3915:
  6388                           
  6389                           ;main.c: 152:             }
  6390  0434  3001               	movlw	1
  6391  0435  0024               	movlb	4	; select bank4
  6392  0436  07CF               	addwf	main@j^(0+512),f
  6393  0437  3000               	movlw	0
  6394  0438  3DD0               	addwfc	(main@j+1)^(0+512),f
  6395  0439                     l3917:
  6396  0439  0850               	movf	(main@j+1)^(0+512),w
  6397  043A  3A80               	xorlw	128
  6398  043B  0021               	movlb	1	; select bank1
  6399  043C  00D8               	movwf	??_main^(0+128)
  6400  043D  3080               	movlw	128
  6401  043E  0258               	subwf	??_main^(0+128),w
  6402  043F  1D03               	skipz
  6403  0440  2C44               	goto	u3405
  6404  0441  3012               	movlw	18
  6405  0442  0024               	movlb	4	; select bank4
  6406  0443  024F               	subwf	main@j^(0+512),w
  6407  0444                     u3405:
  6408  0444  1C03               	skipc
  6409  0445  2C47               	goto	u3401
  6410  0446  2C48               	goto	u3400
  6411  0447                     u3401:
  6412  0447  29E1               	goto	l3829
  6413  0448                     u3400:
  6414  0448  2895               	goto	l3739
  6415  0449  3180  2827         	ljmp	start
  6416  044B                     __end_of_main:
  6417                           
  6418                           	psect	text1
  6419  0A9F                     __ptext1:	
  6420 ;; *************** function _sprintf *****************
  6421 ;; Defined at:
  6422 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  s               2    0[BANK1 ] PTR unsigned char 
  6425 ;;		 -> ShowbadBettery(4), no(1), 
  6426 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  6427 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6428 ;;		 -> STR_2(3), 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  f               6   10[BANK1 ] struct _IO_FILE
  6431 ;;  ret             2    0        int 
  6432 ;;  ap              1    9[BANK1 ] PTR void [1]
  6433 ;;		 -> ?_sprintf(2), 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  2    0[BANK1 ] int 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6443 ;;      Params:         0       0       6       0       0       0       0       0
  6444 ;;      Locals:         0       0       9       0       0       0       0       0
  6445 ;;      Temps:          0       0       1       0       0       0       0       0
  6446 ;;      Totals:         0       0      16       0       0       0       0       0
  6447 ;;Total ram usage:       16 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:   12
  6450 ;; This function calls:
  6451 ;;		_vfprintf
  6452 ;; This function is called by:
  6453 ;;		_main
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           
  6458                           ;psect for function _sprintf
  6459  0A9F                     _sprintf:
  6460  0A9F                     l3691:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6463                           
  6464  0A9F  30CC               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6465  0AA0  0021               	movlb	1	; select bank1
  6466  0AA1  00CE               	movwf	??_sprintf^(0+128)
  6467  0AA2  084E               	movf	??_sprintf^(0+128),w
  6468  0AA3  00D1               	movwf	sprintf@ap^(0+128)
  6469  0AA4  0849               	movf	(sprintf@s+1)^(0+128),w
  6470  0AA5  00D3               	movwf	(sprintf@f+1)^(0+128)
  6471  0AA6  0848               	movf	sprintf@s^(0+128),w
  6472  0AA7  00D2               	movwf	sprintf@f^(0+128)
  6473  0AA8                     l3693:
  6474  0AA8  01D4               	clrf	(sprintf@f^(0+128)+2)
  6475  0AA9  01D5               	clrf	((sprintf@f+1)^(0+128)+2)
  6476  0AAA                     l3695:
  6477  0AAA  01D6               	clrf	(sprintf@f^(0+128)+4)
  6478  0AAB  01D7               	clrf	((sprintf@f+1)^(0+128)+4)
  6479  0AAC                     l3697:
  6480  0AAC  084B               	movf	(sprintf@fmt+1)^(0+128),w
  6481  0AAD  0020               	movlb	0	; select bank0
  6482  0AAE  00E9               	movwf	vfprintf@fmt+1
  6483  0AAF  0021               	movlb	1	; select bank1
  6484  0AB0  084A               	movf	sprintf@fmt^(0+128),w
  6485  0AB1  0020               	movlb	0	; select bank0
  6486  0AB2  00E8               	movwf	vfprintf@fmt
  6487  0AB3  30D1               	movlw	(low (sprintf@ap| 0))& (0+255)
  6488  0AB4  0021               	movlb	1	; select bank1
  6489  0AB5  00CE               	movwf	??_sprintf^(0+128)
  6490  0AB6  084E               	movf	??_sprintf^(0+128),w
  6491  0AB7  0020               	movlb	0	; select bank0
  6492  0AB8  00EA               	movwf	vfprintf@ap
  6493  0AB9  30D2               	movlw	(low (sprintf@f| 0))& (0+255)
  6494  0ABA  318B  2329  318A   	fcall	_vfprintf
  6495  0ABD                     l3699:
  6496  0ABD  3002               	movlw	2
  6497  0ABE  3ED2               	addlw	(low (sprintf@f| 0))& (0+255)
  6498  0ABF  0086               	movwf	6
  6499  0AC0  0187               	clrf	7
  6500  0AC1  3F40               	moviw [0]fsr1
  6501  0AC2  0021               	movlb	1	; select bank1
  6502  0AC3  0748               	addwf	sprintf@s^(0+128),w
  6503  0AC4  0084               	movwf	4
  6504  0AC5  3F41               	moviw [1]fsr1
  6505  0AC6  3D49               	addwfc	(sprintf@s+1)^(0+128),w
  6506  0AC7  0085               	movwf	5
  6507  0AC8  0180               	clrf	0
  6508  0AC9                     l1138:
  6509  0AC9  0008               	return
  6510  0ACA                     __end_of_sprintf:
  6511                           
  6512                           	psect	text2
  6513  0B29                     __ptext2:	
  6514 ;; *************** function _vfprintf *****************
  6515 ;; Defined at:
  6516 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  fp              1    wreg     PTR struct _IO_FILE
  6519 ;;		 -> sprintf@f(6), 
  6520 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  6521 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6522 ;;		 -> STR_2(3), 
  6523 ;;  ap              1   74[BANK0 ] PTR PTR void 
  6524 ;;		 -> sprintf@ap(1), 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  6527 ;;		 -> sprintf@f(6), 
  6528 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  6529 ;;		 -> STR_14(3), STR_10(3), STR_6(3), STR_4(3), 
  6530 ;;		 -> STR_2(3), 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2   72[BANK0 ] int 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6540 ;;      Params:         0       3       0       0       0       0       0       0
  6541 ;;      Locals:         0       3       0       0       0       0       0       0
  6542 ;;      Temps:          0       2       0       0       0       0       0       0
  6543 ;;      Totals:         0       8       0       0       0       0       0       0
  6544 ;;Total ram usage:        8 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:   11
  6547 ;; This function calls:
  6548 ;;		_vfpfcnvrt
  6549 ;; This function is called by:
  6550 ;;		_sprintf
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function _vfprintf
  6556  0B29                     _vfprintf:
  6557                           
  6558                           ;incstack = 0
  6559                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6560                           ;vfprintf@fp stored from wreg
  6561  0B29  0020               	movlb	0	; select bank0
  6562  0B2A  00ED               	movwf	vfprintf@fp
  6563  0B2B                     l3537:
  6564                           
  6565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6566  0B2B  0869               	movf	vfprintf@fmt+1,w
  6567  0B2C  00EF               	movwf	vfprintf@cfmt+1
  6568  0B2D  0868               	movf	vfprintf@fmt,w
  6569  0B2E  00EE               	movwf	vfprintf@cfmt
  6570  0B2F                     l3539:
  6571                           
  6572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6573  0B2F  0023               	movlb	3	; select bank3
  6574  0B30  01C7               	clrf	_nout^(0+384)
  6575  0B31  01C8               	clrf	(_nout+1)^(0+384)
  6576                           
  6577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6578  0B32  2B47               	goto	l3543
  6579  0B33                     l3541:
  6580                           
  6581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6582  0B33  306E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6583  0B34  00EB               	movwf	??_vfprintf
  6584  0B35  086B               	movf	??_vfprintf,w
  6585  0B36  00D8               	movwf	vfpfcnvrt@fmt
  6586  0B37  086A               	movf	vfprintf@ap,w
  6587  0B38  00EC               	movwf	??_vfprintf+1
  6588  0B39  086C               	movf	??_vfprintf+1,w
  6589  0B3A  00D9               	movwf	vfpfcnvrt@ap
  6590  0B3B  086D               	movf	vfprintf@fp,w
  6591  0B3C  318E  2639  318B   	fcall	_vfpfcnvrt
  6592  0B3F  0020               	movlb	0	; select bank0
  6593  0B40  0858               	movf	?_vfpfcnvrt,w
  6594  0B41  0023               	movlb	3	; select bank3
  6595  0B42  07C7               	addwf	_nout^(0+384),f
  6596  0B43  0020               	movlb	0	; select bank0
  6597  0B44  0859               	movf	?_vfpfcnvrt+1,w
  6598  0B45  0023               	movlb	3	; select bank3
  6599  0B46  3DC8               	addwfc	(_nout+1)^(0+384),f
  6600  0B47                     l3543:
  6601                           
  6602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6603  0B47  0020               	movlb	0	; select bank0
  6604  0B48  086E               	movf	vfprintf@cfmt,w
  6605  0B49  0084               	movwf	4
  6606  0B4A  086F               	movf	vfprintf@cfmt+1,w
  6607  0B4B  0085               	movwf	5
  6608  0B4C  0012               	moviw fsr0++
  6609  0B4D  1D03               	btfss	3,2
  6610  0B4E  2B50               	goto	u3041
  6611  0B4F  2B51               	goto	u3040
  6612  0B50                     u3041:
  6613  0B50  2B33               	goto	l3541
  6614  0B51                     u3040:
  6615  0B51                     l3545:
  6616                           
  6617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6618  0B51  0023               	movlb	3	; select bank3
  6619  0B52  0848               	movf	(_nout+1)^(0+384),w
  6620  0B53  0020               	movlb	0	; select bank0
  6621  0B54  00E9               	movwf	?_vfprintf+1
  6622  0B55  0023               	movlb	3	; select bank3
  6623  0B56  0847               	movf	_nout^(0+384),w
  6624  0B57  0020               	movlb	0	; select bank0
  6625  0B58  00E8               	movwf	?_vfprintf
  6626  0B59                     l1210:
  6627  0B59  0008               	return
  6628  0B5A                     __end_of_vfprintf:
  6629                           
  6630                           	psect	text3
  6631  0E39                     __ptext3:	
  6632 ;; *************** function _vfpfcnvrt *****************
  6633 ;; Defined at:
  6634 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  fp              1    wreg     PTR struct _IO_FILE
  6637 ;;		 -> sprintf@f(6), 
  6638 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  6639 ;;		 -> vfprintf@cfmt(2), 
  6640 ;;  ap              1   57[BANK0 ] PTR PTR void 
  6641 ;;		 -> sprintf@ap(1), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  6644 ;;		 -> sprintf@f(6), 
  6645 ;;  ll              8   63[BANK0 ] long long 
  6646 ;;  llu             8    0        unsigned long long 
  6647 ;;  f               4    0        unsigned long long 
  6648 ;;  ct              3    0        unsigned char [3]
  6649 ;;  vp              2    0        PTR void 
  6650 ;;  i               2    0        int 
  6651 ;;  done            2    0        int 
  6652 ;;  cp              2    0        PTR unsigned char 
  6653 ;;  c               1    0        unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  2   56[BANK0 ] int 
  6656 ;; Registers used:
  6657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6663 ;;      Params:         0       2       0       0       0       0       0       0
  6664 ;;      Locals:         0       9       0       0       0       0       0       0
  6665 ;;      Temps:          0       5       0       0       0       0       0       0
  6666 ;;      Totals:         0      16       0       0       0       0       0       0
  6667 ;;Total ram usage:       16 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:   10
  6670 ;; This function calls:
  6671 ;;		_dtoa
  6672 ;;		_fputc
  6673 ;; This function is called by:
  6674 ;;		_vfprintf
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function _vfpfcnvrt
  6680  0E39                     _vfpfcnvrt:
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6684                           ;vfpfcnvrt@fp stored from wreg
  6685  0E39  0020               	movlb	0	; select bank0
  6686  0E3A  00E7               	movwf	vfpfcnvrt@fp
  6687  0E3B                     l3341:
  6688                           
  6689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6690  0E3B  0858               	movf	vfpfcnvrt@fmt,w
  6691  0E3C  0086               	movwf	6
  6692  0E3D  0187               	clrf	7
  6693  0E3E  3F40               	moviw [0]fsr1
  6694  0E3F  00DA               	movwf	??_vfpfcnvrt
  6695  0E40  3F41               	moviw [1]fsr1
  6696  0E41  00DB               	movwf	??_vfpfcnvrt+1
  6697  0E42  085A               	movf	??_vfpfcnvrt,w
  6698  0E43  0084               	movwf	4
  6699  0E44  085B               	movf	??_vfpfcnvrt+1,w
  6700  0E45  0085               	movwf	5
  6701  0E46  0012               	moviw fsr0++
  6702  0E47  3A25               	xorlw	37
  6703  0E48  1D03               	btfss	3,2
  6704  0E49  2E4B               	goto	u2881
  6705  0E4A  2E4C               	goto	u2880
  6706  0E4B                     u2881:
  6707  0E4B  2EF2               	goto	l3377
  6708  0E4C                     u2880:
  6709  0E4C                     l3343:
  6710                           
  6711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6712  0E4C  0858               	movf	vfpfcnvrt@fmt,w
  6713  0E4D  0086               	movwf	6
  6714  0E4E  0187               	clrf	7
  6715  0E4F  3001               	movlw	1
  6716  0E50  0781               	addwf	1,f
  6717  0E51  3141               	addfsr 1,1
  6718  0E52  1803               	skipnc
  6719  0E53  0A81               	incf	1,f
  6720  0E54                     l3345:
  6721                           
  6722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6723  0E54  0023               	movlb	3	; select bank3
  6724  0E55  01C9               	clrf	_width^(0+384)
  6725  0E56  01CA               	clrf	(_width+1)^(0+384)
  6726  0E57  0022               	movlb	2	; select bank2
  6727  0E58  01E4               	clrf	_flags^(0+256)
  6728  0E59  01E5               	clrf	(_flags+1)^(0+256)
  6729  0E5A                     l3347:
  6730                           
  6731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6732  0E5A  30FF               	movlw	255
  6733  0E5B  0023               	movlb	3	; select bank3
  6734  0E5C  00CB               	movwf	_prec^(0+384)
  6735  0E5D  30FF               	movlw	255
  6736  0E5E  00CC               	movwf	(_prec^(0+384)+1)
  6737  0E5F                     l3349:
  6738                           
  6739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6740  0E5F  0020               	movlb	0	; select bank0
  6741  0E60  0858               	movf	vfpfcnvrt@fmt,w
  6742  0E61  0086               	movwf	6
  6743  0E62  0187               	clrf	7
  6744  0E63  3F40               	moviw [0]fsr1
  6745  0E64  00DA               	movwf	??_vfpfcnvrt
  6746  0E65  3F41               	moviw [1]fsr1
  6747  0E66  00DB               	movwf	??_vfpfcnvrt+1
  6748  0E67  085A               	movf	??_vfpfcnvrt,w
  6749  0E68  0084               	movwf	4
  6750  0E69  085B               	movf	??_vfpfcnvrt+1,w
  6751  0E6A  0085               	movwf	5
  6752  0E6B  0012               	moviw fsr0++
  6753  0E6C  3A64               	xorlw	100
  6754  0E6D  1903               	btfsc	3,2
  6755  0E6E  2E70               	goto	u2891
  6756  0E6F  2E71               	goto	u2890
  6757  0E70                     u2891:
  6758  0E70  2E82               	goto	l3353
  6759  0E71                     u2890:
  6760  0E71                     l3351:
  6761  0E71  0858               	movf	vfpfcnvrt@fmt,w
  6762  0E72  0086               	movwf	6
  6763  0E73  0187               	clrf	7
  6764  0E74  3F40               	moviw [0]fsr1
  6765  0E75  00DA               	movwf	??_vfpfcnvrt
  6766  0E76  3F41               	moviw [1]fsr1
  6767  0E77  00DB               	movwf	??_vfpfcnvrt+1
  6768  0E78  085A               	movf	??_vfpfcnvrt,w
  6769  0E79  0084               	movwf	4
  6770  0E7A  085B               	movf	??_vfpfcnvrt+1,w
  6771  0E7B  0085               	movwf	5
  6772  0E7C  0012               	moviw fsr0++
  6773  0E7D  3A69               	xorlw	105
  6774  0E7E  1D03               	btfss	3,2
  6775  0E7F  2E81               	goto	u2901
  6776  0E80  2E82               	goto	u2900
  6777  0E81                     u2901:
  6778  0E81  2EBD               	goto	l3361
  6779  0E82                     u2900:
  6780  0E82                     l3353:
  6781                           
  6782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6783  0E82  0858               	movf	vfpfcnvrt@fmt,w
  6784  0E83  0086               	movwf	6
  6785  0E84  0187               	clrf	7
  6786  0E85  3001               	movlw	1
  6787  0E86  0781               	addwf	1,f
  6788  0E87  3141               	addfsr 1,1
  6789  0E88  1803               	skipnc
  6790  0E89  0A81               	incf	1,f
  6791  0E8A                     l3355:
  6792                           
  6793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6794  0E8A  0859               	movf	vfpfcnvrt@ap,w
  6795  0E8B  0086               	movwf	6
  6796  0E8C  0187               	clrf	7
  6797  0E8D  0801               	movf	1,w
  6798  0E8E  0084               	movwf	4
  6799  0E8F  0185               	clrf	5
  6800  0E90  3002               	movlw	2
  6801  0E91  0781               	addwf	1,f
  6802  0E92  3F00               	moviw [0]fsr0
  6803  0E93  00DA               	movwf	??_vfpfcnvrt
  6804  0E94  3F01               	moviw [1]fsr0
  6805  0E95  00DB               	movwf	??_vfpfcnvrt+1
  6806  0E96  085A               	movf	??_vfpfcnvrt,w
  6807  0E97  00DF               	movwf	vfpfcnvrt@ll
  6808  0E98  085B               	movf	??_vfpfcnvrt+1,w
  6809  0E99  00E0               	movwf	vfpfcnvrt@ll+1
  6810  0E9A  0D89               	rlf	9,f
  6811  0E9B  3B89               	subwfb	9,f
  6812  0E9C  0989               	comf	9,f
  6813  0E9D  00E1               	movwf	vfpfcnvrt@ll+2
  6814  0E9E  00E2               	movwf	vfpfcnvrt@ll+3
  6815  0E9F  00E3               	movwf	vfpfcnvrt@ll+4
  6816  0EA0  00E4               	movwf	vfpfcnvrt@ll+5
  6817  0EA1  00E5               	movwf	vfpfcnvrt@ll+6
  6818  0EA2  00E6               	movwf	vfpfcnvrt@ll+7
  6819  0EA3                     l3357:
  6820                           
  6821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6822  0EA3  085F               	movf	vfpfcnvrt@ll,w
  6823  0EA4  00BA               	movwf	dtoa@d
  6824  0EA5  0860               	movf	vfpfcnvrt@ll+1,w
  6825  0EA6  00BB               	movwf	dtoa@d+1
  6826  0EA7  0861               	movf	vfpfcnvrt@ll+2,w
  6827  0EA8  00BC               	movwf	dtoa@d+2
  6828  0EA9  0862               	movf	vfpfcnvrt@ll+3,w
  6829  0EAA  00BD               	movwf	dtoa@d+3
  6830  0EAB  0863               	movf	vfpfcnvrt@ll+4,w
  6831  0EAC  00BE               	movwf	dtoa@d+4
  6832  0EAD  0864               	movf	vfpfcnvrt@ll+5,w
  6833  0EAE  00BF               	movwf	dtoa@d+5
  6834  0EAF  0865               	movf	vfpfcnvrt@ll+6,w
  6835  0EB0  00C0               	movwf	dtoa@d+6
  6836  0EB1  0866               	movf	vfpfcnvrt@ll+7,w
  6837  0EB2  00C1               	movwf	dtoa@d+7
  6838  0EB3  0867               	movf	vfpfcnvrt@fp,w
  6839  0EB4  3184  244B  318E   	fcall	_dtoa
  6840  0EB7  0020               	movlb	0	; select bank0
  6841  0EB8  083B               	movf	?_dtoa+1,w
  6842  0EB9  00D9               	movwf	?_vfpfcnvrt+1
  6843  0EBA  083A               	movf	?_dtoa,w
  6844  0EBB  00D8               	movwf	?_vfpfcnvrt
  6845  0EBC  2F15               	goto	l1203
  6846  0EBD                     l3361:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6849  0EBD  0858               	movf	vfpfcnvrt@fmt,w
  6850  0EBE  0086               	movwf	6
  6851  0EBF  0187               	clrf	7
  6852  0EC0  3F40               	moviw [0]fsr1
  6853  0EC1  00DA               	movwf	??_vfpfcnvrt
  6854  0EC2  3F41               	moviw [1]fsr1
  6855  0EC3  00DB               	movwf	??_vfpfcnvrt+1
  6856  0EC4  085A               	movf	??_vfpfcnvrt,w
  6857  0EC5  0084               	movwf	4
  6858  0EC6  085B               	movf	??_vfpfcnvrt+1,w
  6859  0EC7  0085               	movwf	5
  6860  0EC8  0012               	moviw fsr0++
  6861  0EC9  3A25               	xorlw	37
  6862  0ECA  1D03               	btfss	3,2
  6863  0ECB  2ECD               	goto	u2911
  6864  0ECC  2ECE               	goto	u2910
  6865  0ECD                     u2911:
  6866  0ECD  2EE7               	goto	l3371
  6867  0ECE                     u2910:
  6868  0ECE                     l3363:
  6869                           
  6870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6871  0ECE  0858               	movf	vfpfcnvrt@fmt,w
  6872  0ECF  0086               	movwf	6
  6873  0ED0  0187               	clrf	7
  6874  0ED1  3001               	movlw	1
  6875  0ED2  0781               	addwf	1,f
  6876  0ED3  3141               	addfsr 1,1
  6877  0ED4  1803               	skipnc
  6878  0ED5  0A81               	incf	1,f
  6879  0ED6                     l3365:
  6880                           
  6881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6882  0ED6  3025               	movlw	37
  6883  0ED7  00F5               	movwf	fputc@c
  6884  0ED8  3000               	movlw	0
  6885  0ED9  00F6               	movwf	fputc@c+1
  6886  0EDA  0867               	movf	vfpfcnvrt@fp,w
  6887  0EDB  00DA               	movwf	??_vfpfcnvrt
  6888  0EDC  085A               	movf	??_vfpfcnvrt,w
  6889  0EDD  00F7               	movwf	fputc@fp
  6890  0EDE  318C  2442  318E   	fcall	_fputc
  6891  0EE1                     l3367:
  6892                           
  6893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6894  0EE1  3001               	movlw	1
  6895  0EE2  0020               	movlb	0	; select bank0
  6896  0EE3  00D8               	movwf	?_vfpfcnvrt
  6897  0EE4  3000               	movlw	0
  6898  0EE5  00D9               	movwf	?_vfpfcnvrt+1
  6899  0EE6  2F15               	goto	l1203
  6900  0EE7                     l3371:
  6901                           
  6902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6903  0EE7  0858               	movf	vfpfcnvrt@fmt,w
  6904  0EE8  0086               	movwf	6
  6905  0EE9  0187               	clrf	7
  6906  0EEA  3001               	movlw	1
  6907  0EEB  0781               	addwf	1,f
  6908  0EEC  3141               	addfsr 1,1
  6909  0EED  1803               	skipnc
  6910  0EEE  0A81               	incf	1,f
  6911  0EEF                     l3373:
  6912                           
  6913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6914  0EEF  01D8               	clrf	?_vfpfcnvrt
  6915  0EF0  01D9               	clrf	?_vfpfcnvrt+1
  6916  0EF1  2F15               	goto	l1203
  6917  0EF2                     l3377:
  6918                           
  6919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6920  0EF2  0858               	movf	vfpfcnvrt@fmt,w
  6921  0EF3  0086               	movwf	6
  6922  0EF4  0187               	clrf	7
  6923  0EF5  3F40               	moviw [0]fsr1
  6924  0EF6  00DA               	movwf	??_vfpfcnvrt
  6925  0EF7  3F41               	moviw [1]fsr1
  6926  0EF8  00DB               	movwf	??_vfpfcnvrt+1
  6927  0EF9  085A               	movf	??_vfpfcnvrt,w
  6928  0EFA  0084               	movwf	4
  6929  0EFB  085B               	movf	??_vfpfcnvrt+1,w
  6930  0EFC  0085               	movwf	5
  6931  0EFD  0800               	movf	0,w	;code access
  6932  0EFE  00DC               	movwf	??_vfpfcnvrt+2
  6933  0EFF  01DD               	clrf	??_vfpfcnvrt+3
  6934  0F00  085C               	movf	??_vfpfcnvrt+2,w
  6935  0F01  00F5               	movwf	fputc@c
  6936  0F02  085D               	movf	??_vfpfcnvrt+3,w
  6937  0F03  00F6               	movwf	fputc@c+1
  6938  0F04  0867               	movf	vfpfcnvrt@fp,w
  6939  0F05  00DE               	movwf	??_vfpfcnvrt+4
  6940  0F06  085E               	movf	??_vfpfcnvrt+4,w
  6941  0F07  00F7               	movwf	fputc@fp
  6942  0F08  318C  2442  318E   	fcall	_fputc
  6943  0F0B                     l3379:
  6944                           
  6945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6946  0F0B  0020               	movlb	0	; select bank0
  6947  0F0C  0858               	movf	vfpfcnvrt@fmt,w
  6948  0F0D  0086               	movwf	6
  6949  0F0E  0187               	clrf	7
  6950  0F0F  3001               	movlw	1
  6951  0F10  0781               	addwf	1,f
  6952  0F11  3141               	addfsr 1,1
  6953  0F12  1803               	skipnc
  6954  0F13  0A81               	incf	1,f
  6955  0F14  2EE1               	goto	l3367
  6956  0F15                     l1203:
  6957  0F15  0008               	return
  6958  0F16                     __end_of_vfpfcnvrt:
  6959                           
  6960                           	psect	text4
  6961  044B                     __ptext4:	
  6962 ;; *************** function _dtoa *****************
  6963 ;; Defined at:
  6964 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  fp              1    wreg     PTR struct _IO_FILE
  6967 ;;		 -> sprintf@f(6), 
  6968 ;;  d               8   26[BANK0 ] long long 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  6971 ;;		 -> sprintf@f(6), 
  6972 ;;  n               8   46[BANK0 ] long long 
  6973 ;;  i               2   54[BANK0 ] int 
  6974 ;;  s               2   44[BANK0 ] int 
  6975 ;;  w               2   42[BANK0 ] int 
  6976 ;;  p               2   40[BANK0 ] int 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  2   26[BANK0 ] int 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6986 ;;      Params:         0       8       0       0       0       0       0       0
  6987 ;;      Locals:         0      19       0       0       0       0       0       0
  6988 ;;      Temps:          0       3       0       0       0       0       0       0
  6989 ;;      Totals:         0      30       0       0       0       0       0       0
  6990 ;;Total ram usage:       30 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    9
  6993 ;; This function calls:
  6994 ;;		___aodiv
  6995 ;;		___aomod
  6996 ;;		_abs
  6997 ;;		_pad
  6998 ;; This function is called by:
  6999 ;;		_vfpfcnvrt
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           
  7004                           ;psect for function _dtoa
  7005  044B                     _dtoa:
  7006                           
  7007                           ;incstack = 0
  7008                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7009                           ;dtoa@fp stored from wreg
  7010  044B  0020               	movlb	0	; select bank0
  7011  044C  00C5               	movwf	dtoa@fp
  7012  044D                     l3267:
  7013                           
  7014                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7015  044D  083A               	movf	dtoa@d,w
  7016  044E  00CE               	movwf	dtoa@n
  7017  044F  083B               	movf	dtoa@d+1,w
  7018  0450  00CF               	movwf	dtoa@n+1
  7019  0451  083C               	movf	dtoa@d+2,w
  7020  0452  00D0               	movwf	dtoa@n+2
  7021  0453  083D               	movf	dtoa@d+3,w
  7022  0454  00D1               	movwf	dtoa@n+3
  7023  0455  083E               	movf	dtoa@d+4,w
  7024  0456  00D2               	movwf	dtoa@n+4
  7025  0457  083F               	movf	dtoa@d+5,w
  7026  0458  00D3               	movwf	dtoa@n+5
  7027  0459  0840               	movf	dtoa@d+6,w
  7028  045A  00D4               	movwf	dtoa@n+6
  7029  045B  0841               	movf	dtoa@d+7,w
  7030  045C  00D5               	movwf	dtoa@n+7
  7031  045D                     l3269:
  7032                           
  7033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7034  045D  304E               	movlw	low dtoa@n
  7035  045E  0086               	movwf	6
  7036  045F  3000               	movlw	high dtoa@n
  7037  0460  0087               	movwf	7
  7038  0461  3F47               	moviw [7]fsr1
  7039  0462  00C2               	movwf	??_dtoa
  7040  0463  1BC2               	btfsc	??_dtoa,7
  7041  0464  2C66               	goto	u2721
  7042  0465  2C68               	goto	u2720
  7043  0466                     u2721:
  7044  0466  3001               	movlw	1
  7045  0467  2C69               	goto	u2730
  7046  0468                     u2720:
  7047  0468  3000               	movlw	0
  7048  0469                     u2730:
  7049  0469  0020               	movlb	0	; select bank0
  7050  046A  00C3               	movwf	??_dtoa+1
  7051  046B  01C4               	clrf	??_dtoa+2
  7052  046C  0843               	movf	??_dtoa+1,w
  7053  046D  00CC               	movwf	dtoa@s
  7054  046E  0844               	movf	??_dtoa+2,w
  7055  046F  00CD               	movwf	dtoa@s+1
  7056  0470                     l3271:
  7057                           
  7058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7059  0470  084C               	movf	dtoa@s,w
  7060  0471  044D               	iorwf	dtoa@s+1,w
  7061  0472  1903               	btfsc	3,2
  7062  0473  2C75               	goto	u2741
  7063  0474  2C76               	goto	u2740
  7064  0475                     u2741:
  7065  0475  2C94               	goto	l1173
  7066  0476                     u2740:
  7067  0476                     l3273:
  7068                           
  7069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7070  0476  09CE               	comf	dtoa@n,f
  7071  0477  09CF               	comf	dtoa@n+1,f
  7072  0478  09D0               	comf	dtoa@n+2,f
  7073  0479  09D1               	comf	dtoa@n+3,f
  7074  047A  09D2               	comf	dtoa@n+4,f
  7075  047B  09D3               	comf	dtoa@n+5,f
  7076  047C  09D4               	comf	dtoa@n+6,f
  7077  047D  09D5               	comf	dtoa@n+7,f
  7078  047E  0ACE               	incf	dtoa@n,f
  7079  047F  1D03               	skipz
  7080  0480  2C94               	goto	u275lld
  7081  0481  0ACF               	incf	dtoa@n+1,f
  7082  0482  1D03               	skipz
  7083  0483  2C94               	goto	u275lld
  7084  0484  0AD0               	incf	dtoa@n+2,f
  7085  0485  1D03               	skipz
  7086  0486  2C94               	goto	u275lld
  7087  0487  0AD1               	incf	dtoa@n+3,f
  7088  0488  1D03               	skipz
  7089  0489  2C94               	goto	u275lld
  7090  048A  0AD2               	incf	dtoa@n+4,f
  7091  048B  1D03               	skipz
  7092  048C  2C94               	goto	u275lld
  7093  048D  0AD3               	incf	dtoa@n+5,f
  7094  048E  1D03               	skipz
  7095  048F  2C94               	goto	u275lld
  7096  0490  0AD4               	incf	dtoa@n+6,f
  7097  0491  1D03               	skipz
  7098  0492  2C94               	goto	u275lld
  7099  0493  0AD5               	incf	dtoa@n+7,f
  7100  0494                     u275lld:
  7101  0494                     l1173:	
  7102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 284:     }
  7103                           
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7106  0494  0023               	movlb	3	; select bank3
  7107  0495  1BCC               	btfsc	(_prec+1)^(0+384),7
  7108  0496  2C98               	goto	u2761
  7109  0497  2C99               	goto	u2760
  7110  0498                     u2761:
  7111  0498  2C9E               	goto	l1174
  7112  0499                     u2760:
  7113  0499                     l3275:
  7114                           
  7115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7116  0499  30FD               	movlw	253
  7117  049A  0022               	movlb	2	; select bank2
  7118  049B  05E4               	andwf	_flags^(0+256),f
  7119  049C  30FF               	movlw	255
  7120  049D  05E5               	andwf	(_flags+1)^(0+256),f
  7121  049E                     l1174:	
  7122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 289:     }
  7123                           
  7124                           
  7125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7126  049E  0023               	movlb	3	; select bank3
  7127  049F  084C               	movf	(_prec+1)^(0+384),w
  7128  04A0  3A80               	xorlw	128
  7129  04A1  0020               	movlb	0	; select bank0
  7130  04A2  00C2               	movwf	??_dtoa
  7131  04A3  3080               	movlw	128
  7132  04A4  0242               	subwf	??_dtoa,w
  7133  04A5  1D03               	skipz
  7134  04A6  2CAA               	goto	u2775
  7135  04A7  3001               	movlw	1
  7136  04A8  0023               	movlb	3	; select bank3
  7137  04A9  024B               	subwf	_prec^(0+384),w
  7138  04AA                     u2775:
  7139  04AA  1803               	skipnc
  7140  04AB  2CAD               	goto	u2771
  7141  04AC  2CAE               	goto	u2770
  7142  04AD                     u2771:
  7143  04AD  2CB4               	goto	l3279
  7144  04AE                     u2770:
  7145  04AE                     l3277:
  7146  04AE  3001               	movlw	1
  7147  04AF  0020               	movlb	0	; select bank0
  7148  04B0  00C8               	movwf	dtoa@p
  7149  04B1  3000               	movlw	0
  7150  04B2  00C9               	movwf	dtoa@p+1
  7151  04B3  2CBC               	goto	l1178
  7152  04B4                     l3279:
  7153  04B4  0023               	movlb	3	; select bank3
  7154  04B5  084C               	movf	(_prec+1)^(0+384),w
  7155  04B6  0020               	movlb	0	; select bank0
  7156  04B7  00C9               	movwf	dtoa@p+1
  7157  04B8  0023               	movlb	3	; select bank3
  7158  04B9  084B               	movf	_prec^(0+384),w
  7159  04BA  0020               	movlb	0	; select bank0
  7160  04BB  00C8               	movwf	dtoa@p
  7161  04BC                     l1178:
  7162                           
  7163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7164  04BC  0023               	movlb	3	; select bank3
  7165  04BD  084A               	movf	(_width+1)^(0+384),w
  7166  04BE  0020               	movlb	0	; select bank0
  7167  04BF  00CB               	movwf	dtoa@w+1
  7168  04C0  0023               	movlb	3	; select bank3
  7169  04C1  0849               	movf	_width^(0+384),w
  7170  04C2  0020               	movlb	0	; select bank0
  7171  04C3  00CA               	movwf	dtoa@w
  7172  04C4                     l3281:
  7173                           
  7174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7175  04C4  084C               	movf	dtoa@s,w
  7176  04C5  044D               	iorwf	dtoa@s+1,w
  7177  04C6  1D03               	btfss	3,2
  7178  04C7  2CC9               	goto	u2781
  7179  04C8  2CCA               	goto	u2780
  7180  04C9                     u2781:
  7181  04C9  2CCF               	goto	l3285
  7182  04CA                     u2780:
  7183  04CA                     l3283:
  7184  04CA  0022               	movlb	2	; select bank2
  7185  04CB  1D64               	btfss	_flags^(0+256),2
  7186  04CC  2CCE               	goto	u2791
  7187  04CD  2CCF               	goto	u2790
  7188  04CE                     u2791:
  7189  04CE  2CD4               	goto	l1179
  7190  04CF                     u2790:
  7191  04CF                     l3285:
  7192                           
  7193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7194  04CF  30FF               	movlw	255
  7195  04D0  0020               	movlb	0	; select bank0
  7196  04D1  07CA               	addwf	dtoa@w,f
  7197  04D2  30FF               	movlw	255
  7198  04D3  3DCB               	addwfc	dtoa@w+1,f
  7199  04D4                     l1179:	
  7200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 294:     }
  7201                           
  7202                           
  7203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7204  04D4  301F               	movlw	31
  7205  04D5  0020               	movlb	0	; select bank0
  7206  04D6  00D6               	movwf	dtoa@i
  7207  04D7  3000               	movlw	0
  7208  04D8  00D7               	movwf	dtoa@i+1
  7209  04D9                     l3287:
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7212  04D9  0023               	movlb	3	; select bank3
  7213  04DA  01EE               	clrf	(_dbuf^(0+384)+31)
  7214                           
  7215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7216  04DB  2D45               	goto	l1182
  7217  04DC                     l3289:
  7218                           
  7219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7220  04DC  30FF               	movlw	255
  7221  04DD  0020               	movlb	0	; select bank0
  7222  04DE  07D6               	addwf	dtoa@i,f
  7223  04DF  30FF               	movlw	255
  7224  04E0  3DD7               	addwfc	dtoa@i+1,f
  7225  04E1                     l3291:
  7226                           
  7227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7228  04E1  300A               	movlw	10
  7229  04E2  00A0               	movwf	___aomod@divisor
  7230  04E3  01A1               	clrf	___aomod@divisor+1
  7231  04E4  01A2               	clrf	___aomod@divisor+2
  7232  04E5  01A3               	clrf	___aomod@divisor+3
  7233  04E6  01A4               	clrf	___aomod@divisor+4
  7234  04E7  01A5               	clrf	___aomod@divisor+5
  7235  04E8  01A6               	clrf	___aomod@divisor+6
  7236  04E9  01A7               	clrf	___aomod@divisor+7
  7237  04EA  084E               	movf	dtoa@n,w
  7238  04EB  00A8               	movwf	___aomod@dividend
  7239  04EC  084F               	movf	dtoa@n+1,w
  7240  04ED  00A9               	movwf	___aomod@dividend+1
  7241  04EE  0850               	movf	dtoa@n+2,w
  7242  04EF  00AA               	movwf	___aomod@dividend+2
  7243  04F0  0851               	movf	dtoa@n+3,w
  7244  04F1  00AB               	movwf	___aomod@dividend+3
  7245  04F2  0852               	movf	dtoa@n+4,w
  7246  04F3  00AC               	movwf	___aomod@dividend+4
  7247  04F4  0853               	movf	dtoa@n+5,w
  7248  04F5  00AD               	movwf	___aomod@dividend+5
  7249  04F6  0854               	movf	dtoa@n+6,w
  7250  04F7  00AE               	movwf	___aomod@dividend+6
  7251  04F8  0855               	movf	dtoa@n+7,w
  7252  04F9  00AF               	movwf	___aomod@dividend+7
  7253  04FA  318F  2716  3184   	fcall	___aomod
  7254  04FD  0020               	movlb	0	; select bank0
  7255  04FE  0821               	movf	?___aomod+1,w
  7256  04FF  00F7               	movwf	abs@a+1
  7257  0500  0820               	movf	?___aomod,w
  7258  0501  00F6               	movwf	abs@a
  7259  0502  318A  2211  3184   	fcall	_abs
  7260  0505  0876               	movf	?_abs,w
  7261  0506  3E30               	addlw	48
  7262  0507  0020               	movlb	0	; select bank0
  7263  0508  00C2               	movwf	??_dtoa
  7264  0509  0856               	movf	dtoa@i,w
  7265  050A  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7266  050B  0086               	movwf	6
  7267  050C  3001               	movlw	1	; select bank3/4
  7268  050D  0087               	movwf	7
  7269  050E  0842               	movf	??_dtoa,w
  7270  050F  0081               	movwf	1
  7271  0510                     l3293:
  7272                           
  7273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7274  0510  30FF               	movlw	255
  7275  0511  07C8               	addwf	dtoa@p,f
  7276  0512  30FF               	movlw	255
  7277  0513  3DC9               	addwfc	dtoa@p+1,f
  7278  0514                     l3295:
  7279                           
  7280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7281  0514  30FF               	movlw	255
  7282  0515  07CA               	addwf	dtoa@w,f
  7283  0516  30FF               	movlw	255
  7284  0517  3DCB               	addwfc	dtoa@w+1,f
  7285  0518                     l3297:
  7286                           
  7287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7288  0518  300A               	movlw	10
  7289  0519  00A0               	movwf	___aodiv@divisor
  7290  051A  01A1               	clrf	___aodiv@divisor+1
  7291  051B  01A2               	clrf	___aodiv@divisor+2
  7292  051C  01A3               	clrf	___aodiv@divisor+3
  7293  051D  01A4               	clrf	___aodiv@divisor+4
  7294  051E  01A5               	clrf	___aodiv@divisor+5
  7295  051F  01A6               	clrf	___aodiv@divisor+6
  7296  0520  01A7               	clrf	___aodiv@divisor+7
  7297  0521  084E               	movf	dtoa@n,w
  7298  0522  00A8               	movwf	___aodiv@dividend
  7299  0523  084F               	movf	dtoa@n+1,w
  7300  0524  00A9               	movwf	___aodiv@dividend+1
  7301  0525  0850               	movf	dtoa@n+2,w
  7302  0526  00AA               	movwf	___aodiv@dividend+2
  7303  0527  0851               	movf	dtoa@n+3,w
  7304  0528  00AB               	movwf	___aodiv@dividend+3
  7305  0529  0852               	movf	dtoa@n+4,w
  7306  052A  00AC               	movwf	___aodiv@dividend+4
  7307  052B  0853               	movf	dtoa@n+5,w
  7308  052C  00AD               	movwf	___aodiv@dividend+5
  7309  052D  0854               	movf	dtoa@n+6,w
  7310  052E  00AE               	movwf	___aodiv@dividend+6
  7311  052F  0855               	movf	dtoa@n+7,w
  7312  0530  00AF               	movwf	___aodiv@dividend+7
  7313  0531  3186  26F0  3184   	fcall	___aodiv
  7314  0534  0020               	movlb	0	; select bank0
  7315  0535  0820               	movf	?___aodiv,w
  7316  0536  00CE               	movwf	dtoa@n
  7317  0537  0821               	movf	?___aodiv+1,w
  7318  0538  00CF               	movwf	dtoa@n+1
  7319  0539  0822               	movf	?___aodiv+2,w
  7320  053A  00D0               	movwf	dtoa@n+2
  7321  053B  0823               	movf	?___aodiv+3,w
  7322  053C  00D1               	movwf	dtoa@n+3
  7323  053D  0824               	movf	?___aodiv+4,w
  7324  053E  00D2               	movwf	dtoa@n+4
  7325  053F  0825               	movf	?___aodiv+5,w
  7326  0540  00D3               	movwf	dtoa@n+5
  7327  0541  0826               	movf	?___aodiv+6,w
  7328  0542  00D4               	movwf	dtoa@n+6
  7329  0543  0827               	movf	?___aodiv+7,w
  7330  0544  00D5               	movwf	dtoa@n+7
  7331  0545                     l1182:	
  7332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 305:     }
  7333                           
  7334                           
  7335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7336  0545  0020               	movlb	0	; select bank0
  7337  0546  0857               	movf	dtoa@i+1,w
  7338  0547  3A80               	xorlw	128
  7339  0548  00C2               	movwf	??_dtoa
  7340  0549  3080               	movlw	128
  7341  054A  0242               	subwf	??_dtoa,w
  7342  054B  1D03               	skipz
  7343  054C  2D4F               	goto	u2805
  7344  054D  3001               	movlw	1
  7345  054E  0256               	subwf	dtoa@i,w
  7346  054F                     u2805:
  7347  054F  1C03               	skipc
  7348  0550  2D52               	goto	u2801
  7349  0551  2D53               	goto	u2800
  7350  0552                     u2801:
  7351  0552  2D80               	goto	l3307
  7352  0553                     u2800:
  7353  0553                     l3299:
  7354  0553  0020               	movlb	0	; select bank0
  7355  0554  084E               	movf	dtoa@n,w
  7356  0555  044F               	iorwf	dtoa@n+1,w
  7357  0556  0450               	iorwf	dtoa@n+2,w
  7358  0557  0451               	iorwf	dtoa@n+3,w
  7359  0558  0452               	iorwf	dtoa@n+4,w
  7360  0559  0453               	iorwf	dtoa@n+5,w
  7361  055A  0454               	iorwf	dtoa@n+6,w
  7362  055B  0455               	iorwf	dtoa@n+7,w
  7363  055C  1D03               	skipz
  7364  055D  2D5F               	goto	u2811
  7365  055E  2D60               	goto	u2810
  7366  055F                     u2811:
  7367  055F  2CDC               	goto	l3289
  7368  0560                     u2810:
  7369  0560                     l3301:
  7370  0560  0849               	movf	dtoa@p+1,w
  7371  0561  3A80               	xorlw	128
  7372  0562  00C2               	movwf	??_dtoa
  7373  0563  3080               	movlw	128
  7374  0564  0242               	subwf	??_dtoa,w
  7375  0565  1D03               	skipz
  7376  0566  2D69               	goto	u2825
  7377  0567  3001               	movlw	1
  7378  0568  0248               	subwf	dtoa@p,w
  7379  0569                     u2825:
  7380  0569  1803               	skipnc
  7381  056A  2D6C               	goto	u2821
  7382  056B  2D6D               	goto	u2820
  7383  056C                     u2821:
  7384  056C  2CDC               	goto	l3289
  7385  056D                     u2820:
  7386  056D                     l3303:
  7387  056D  0020               	movlb	0	; select bank0
  7388  056E  084B               	movf	dtoa@w+1,w
  7389  056F  3A80               	xorlw	128
  7390  0570  00C2               	movwf	??_dtoa
  7391  0571  3080               	movlw	128
  7392  0572  0242               	subwf	??_dtoa,w
  7393  0573  1D03               	skipz
  7394  0574  2D77               	goto	u2835
  7395  0575  3001               	movlw	1
  7396  0576  024A               	subwf	dtoa@w,w
  7397  0577                     u2835:
  7398  0577  1C03               	skipc
  7399  0578  2D7A               	goto	u2831
  7400  0579  2D7B               	goto	u2830
  7401  057A                     u2831:
  7402  057A  2D80               	goto	l3307
  7403  057B                     u2830:
  7404  057B                     l3305:
  7405  057B  0022               	movlb	2	; select bank2
  7406  057C  18E4               	btfsc	_flags^(0+256),1
  7407  057D  2D7F               	goto	u2841
  7408  057E  2D80               	goto	u2840
  7409  057F                     u2841:
  7410  057F  2CDC               	goto	l3289
  7411  0580                     u2840:
  7412  0580                     l3307:
  7413                           
  7414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7415  0580  0020               	movlb	0	; select bank0
  7416  0581  084C               	movf	dtoa@s,w
  7417  0582  044D               	iorwf	dtoa@s+1,w
  7418  0583  1D03               	btfss	3,2
  7419  0584  2D86               	goto	u2851
  7420  0585  2D87               	goto	u2850
  7421  0586                     u2851:
  7422  0586  2D8C               	goto	l3311
  7423  0587                     u2850:
  7424  0587                     l3309:
  7425  0587  0022               	movlb	2	; select bank2
  7426  0588  1D64               	btfss	_flags^(0+256),2
  7427  0589  2D8B               	goto	u2861
  7428  058A  2D8C               	goto	u2860
  7429  058B                     u2861:
  7430  058B  2DA9               	goto	l3321
  7431  058C                     u2860:
  7432  058C                     l3311:
  7433                           
  7434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7435  058C  30FF               	movlw	255
  7436  058D  0020               	movlb	0	; select bank0
  7437  058E  07D6               	addwf	dtoa@i,f
  7438  058F  30FF               	movlw	255
  7439  0590  3DD7               	addwfc	dtoa@i+1,f
  7440  0591                     l3313:
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7443  0591  084C               	movf	dtoa@s,w
  7444  0592  044D               	iorwf	dtoa@s+1,w
  7445  0593  1D03               	btfss	3,2
  7446  0594  2D96               	goto	u2871
  7447  0595  2D97               	goto	u2870
  7448  0596                     u2871:
  7449  0596  2D9C               	goto	l3317
  7450  0597                     u2870:
  7451  0597                     l3315:
  7452  0597  302B               	movlw	43
  7453  0598  00C6               	movwf	_dtoa$1489
  7454  0599  3000               	movlw	0
  7455  059A  00C7               	movwf	_dtoa$1489+1
  7456  059B  2DA0               	goto	l3319
  7457  059C                     l3317:
  7458  059C  302D               	movlw	45
  7459  059D  00C6               	movwf	_dtoa$1489
  7460  059E  3000               	movlw	0
  7461  059F  00C7               	movwf	_dtoa$1489+1
  7462  05A0                     l3319:
  7463  05A0  0846               	movf	_dtoa$1489,w
  7464  05A1  00C2               	movwf	??_dtoa
  7465  05A2  0856               	movf	dtoa@i,w
  7466  05A3  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7467  05A4  0086               	movwf	6
  7468  05A5  3001               	movlw	1	; select bank3/4
  7469  05A6  0087               	movwf	7
  7470  05A7  0842               	movf	??_dtoa,w
  7471  05A8  0081               	movwf	1
  7472  05A9                     l3321:
  7473                           
  7474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7475  05A9  0020               	movlb	0	; select bank0
  7476  05AA  0856               	movf	dtoa@i,w
  7477  05AB  3ECF               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7478  05AC  00C2               	movwf	??_dtoa
  7479  05AD  0842               	movf	??_dtoa,w
  7480  05AE  00AD               	movwf	pad@buf
  7481  05AF  084B               	movf	dtoa@w+1,w
  7482  05B0  00AF               	movwf	pad@p+1
  7483  05B1  084A               	movf	dtoa@w,w
  7484  05B2  00AE               	movwf	pad@p
  7485  05B3  0845               	movf	dtoa@fp,w
  7486  05B4  318C  2499  3184   	fcall	_pad
  7487  05B7  0020               	movlb	0	; select bank0
  7488  05B8  082E               	movf	?_pad+1,w
  7489  05B9  00BB               	movwf	?_dtoa+1
  7490  05BA  082D               	movf	?_pad,w
  7491  05BB  00BA               	movwf	?_dtoa
  7492  05BC                     l1196:
  7493  05BC  0008               	return
  7494  05BD                     __end_of_dtoa:
  7495                           
  7496                           	psect	text5
  7497  0C99                     __ptext5:	
  7498 ;; *************** function _pad *****************
  7499 ;; Defined at:
  7500 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  fp              1    wreg     PTR struct _IO_FILE
  7503 ;;		 -> sprintf@f(6), 
  7504 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  7505 ;;		 -> dbuf(32), 
  7506 ;;  p               2   14[BANK0 ] int 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  7509 ;;		 -> sprintf@f(6), 
  7510 ;;  w               2   19[BANK0 ] int 
  7511 ;;  i               2   17[BANK0 ] int 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  2   13[BANK0 ] int 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7521 ;;      Params:         0       3       0       0       0       0       0       0
  7522 ;;      Locals:         0       5       0       0       0       0       0       0
  7523 ;;      Temps:          0       1       0       0       0       0       0       0
  7524 ;;      Totals:         0       9       0       0       0       0       0       0
  7525 ;;Total ram usage:        9 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    8
  7528 ;; This function calls:
  7529 ;;		_fputc
  7530 ;;		_fputs
  7531 ;;		_strlen
  7532 ;; This function is called by:
  7533 ;;		_dtoa
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           
  7538                           ;psect for function _pad
  7539  0C99                     _pad:
  7540                           
  7541                           ;incstack = 0
  7542                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7543                           ;pad@fp stored from wreg
  7544  0C99  0020               	movlb	0	; select bank0
  7545  0C9A  00B5               	movwf	pad@fp
  7546  0C9B                     l3233:
  7547                           
  7548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7549  0C9B  0022               	movlb	2	; select bank2
  7550  0C9C  1C64               	btfss	_flags^(0+256),0
  7551  0C9D  2C9F               	goto	u2661
  7552  0C9E  2CA0               	goto	u2660
  7553  0C9F                     u2661:
  7554  0C9F  2CA9               	goto	l3237
  7555  0CA0                     u2660:
  7556  0CA0                     l3235:
  7557                           
  7558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7559  0CA0  0020               	movlb	0	; select bank0
  7560  0CA1  0835               	movf	pad@fp,w
  7561  0CA2  00B0               	movwf	??_pad
  7562  0CA3  0830               	movf	??_pad,w
  7563  0CA4  00A5               	movwf	fputs@fp
  7564  0CA5  082D               	movf	pad@buf,w
  7565  0CA6  318A  224C  318C   	fcall	_fputs
  7566  0CA9                     l3237:
  7567                           
  7568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7569  0CA9  0020               	movlb	0	; select bank0
  7570  0CAA  1BAF               	btfsc	pad@p+1,7
  7571  0CAB  2CAD               	goto	u2671
  7572  0CAC  2CAE               	goto	u2670
  7573  0CAD                     u2671:
  7574  0CAD  2CB3               	goto	l3241
  7575  0CAE                     u2670:
  7576  0CAE                     l3239:
  7577  0CAE  082F               	movf	pad@p+1,w
  7578  0CAF  00B4               	movwf	pad@w+1
  7579  0CB0  082E               	movf	pad@p,w
  7580  0CB1  00B3               	movwf	pad@w
  7581  0CB2  2CB5               	goto	l1165
  7582  0CB3                     l3241:
  7583  0CB3  01B3               	clrf	pad@w
  7584  0CB4  01B4               	clrf	pad@w+1
  7585  0CB5                     l1165:
  7586                           
  7587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7588  0CB5  01B1               	clrf	pad@i
  7589  0CB6  01B2               	clrf	pad@i+1
  7590                           
  7591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7592  0CB7  2CC9               	goto	l3247
  7593  0CB8                     l3243:
  7594                           
  7595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7596  0CB8  3020               	movlw	32
  7597  0CB9  00F5               	movwf	fputc@c
  7598  0CBA  3000               	movlw	0
  7599  0CBB  00F6               	movwf	fputc@c+1
  7600  0CBC  0020               	movlb	0	; select bank0
  7601  0CBD  0835               	movf	pad@fp,w
  7602  0CBE  00B0               	movwf	??_pad
  7603  0CBF  0830               	movf	??_pad,w
  7604  0CC0  00F7               	movwf	fputc@fp
  7605  0CC1  318C  2442  318C   	fcall	_fputc
  7606  0CC4                     l3245:
  7607                           
  7608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7609  0CC4  3001               	movlw	1
  7610  0CC5  0020               	movlb	0	; select bank0
  7611  0CC6  07B1               	addwf	pad@i,f
  7612  0CC7  3000               	movlw	0
  7613  0CC8  3DB2               	addwfc	pad@i+1,f
  7614  0CC9                     l3247:
  7615                           
  7616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7617  0CC9  0832               	movf	pad@i+1,w
  7618  0CCA  3A80               	xorlw	128
  7619  0CCB  00B0               	movwf	??_pad
  7620  0CCC  0834               	movf	pad@w+1,w
  7621  0CCD  3A80               	xorlw	128
  7622  0CCE  0230               	subwf	??_pad,w
  7623  0CCF  1D03               	skipz
  7624  0CD0  2CD3               	goto	u2685
  7625  0CD1  0833               	movf	pad@w,w
  7626  0CD2  0231               	subwf	pad@i,w
  7627  0CD3                     u2685:
  7628  0CD3  1C03               	skipc
  7629  0CD4  2CD6               	goto	u2681
  7630  0CD5  2CD7               	goto	u2680
  7631  0CD6                     u2681:
  7632  0CD6  2CB8               	goto	l3243
  7633  0CD7                     u2680:
  7634  0CD7                     l1168:
  7635                           
  7636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7637  0CD7  0022               	movlb	2	; select bank2
  7638  0CD8  1864               	btfsc	_flags^(0+256),0
  7639  0CD9  2CDB               	goto	u2691
  7640  0CDA  2CDC               	goto	u2690
  7641  0CDB                     u2691:
  7642  0CDB  2CE5               	goto	l3251
  7643  0CDC                     u2690:
  7644  0CDC                     l3249:
  7645                           
  7646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7647  0CDC  0020               	movlb	0	; select bank0
  7648  0CDD  0835               	movf	pad@fp,w
  7649  0CDE  00B0               	movwf	??_pad
  7650  0CDF  0830               	movf	??_pad,w
  7651  0CE0  00A5               	movwf	fputs@fp
  7652  0CE1  082D               	movf	pad@buf,w
  7653  0CE2  318A  224C  318C   	fcall	_fputs
  7654  0CE5                     l3251:
  7655                           
  7656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7657  0CE5  0020               	movlb	0	; select bank0
  7658  0CE6  082D               	movf	pad@buf,w
  7659  0CE7  3189  21F7  318C   	fcall	_strlen
  7660  0CEA  0020               	movlb	0	; select bank0
  7661  0CEB  0833               	movf	pad@w,w
  7662  0CEC  0773               	addwf	?_strlen,w
  7663  0CED  00AD               	movwf	?_pad
  7664  0CEE  0834               	movf	pad@w+1,w
  7665  0CEF  3D74               	addwfc	?_strlen+1,w
  7666  0CF0  00AE               	movwf	?_pad+1
  7667  0CF1                     l1170:
  7668  0CF1  0008               	return
  7669  0CF2                     __end_of_pad:
  7670                           
  7671                           	psect	text6
  7672  09F7                     __ptext6:	
  7673 ;; *************** function _strlen *****************
  7674 ;; Defined at:
  7675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  s               1    wreg     PTR const unsigned char 
  7678 ;;		 -> dbuf(32), 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  s               1    7[COMMON] PTR const unsigned char 
  7681 ;;		 -> dbuf(32), 
  7682 ;;  a               1    6[COMMON] PTR const unsigned char 
  7683 ;;		 -> dbuf(32), 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  2    3[COMMON] unsigned int 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7693 ;;      Params:         2       0       0       0       0       0       0       0
  7694 ;;      Locals:         2       0       0       0       0       0       0       0
  7695 ;;      Temps:          1       0       0       0       0       0       0       0
  7696 ;;      Totals:         5       0       0       0       0       0       0       0
  7697 ;;Total ram usage:        5 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    4
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_pad
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           
  7708                           ;psect for function _strlen
  7709  09F7                     _strlen:
  7710                           
  7711                           ;incstack = 0
  7712                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7713                           ;strlen@s stored from wreg
  7714  09F7  00F7               	movwf	strlen@s
  7715  09F8                     l3139:
  7716  09F8  0877               	movf	strlen@s,w
  7717  09F9  00F5               	movwf	??_strlen
  7718  09FA  0875               	movf	??_strlen,w
  7719  09FB  00F6               	movwf	strlen@a
  7720  09FC  2A01               	goto	l3143
  7721  09FD                     l3141:
  7722  09FD  3001               	movlw	1
  7723  09FE  00F5               	movwf	??_strlen
  7724  09FF  0875               	movf	??_strlen,w
  7725  0A00  07F7               	addwf	strlen@s,f
  7726  0A01                     l3143:
  7727  0A01  0877               	movf	strlen@s,w
  7728  0A02  0086               	movwf	6
  7729  0A03  3001               	movlw	1	; select bank2/3
  7730  0A04  0087               	movwf	7
  7731  0A05  0801               	movf	1,w
  7732  0A06  1D03               	btfss	3,2
  7733  0A07  2A09               	goto	u2431
  7734  0A08  2A0A               	goto	u2430
  7735  0A09                     u2431:
  7736  0A09  29FD               	goto	l3141
  7737  0A0A                     u2430:
  7738  0A0A                     l3145:
  7739  0A0A  0876               	movf	strlen@a,w
  7740  0A0B  0277               	subwf	strlen@s,w
  7741  0A0C  00F3               	movwf	?_strlen
  7742  0A0D  01F4               	clrf	?_strlen+1
  7743  0A0E  1BF3               	btfsc	?_strlen,7
  7744  0A0F  03F4               	decf	?_strlen+1,f
  7745  0A10                     l1243:
  7746  0A10  0008               	return
  7747  0A11                     __end_of_strlen:
  7748                           
  7749                           	psect	text7
  7750  0A4C                     __ptext7:	
  7751 ;; *************** function _fputs *****************
  7752 ;; Defined at:
  7753 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  s               1    wreg     PTR const unsigned char 
  7756 ;;		 -> dbuf(32), 
  7757 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7758 ;;		 -> sprintf@f(6), 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  7761 ;;		 -> dbuf(32), 
  7762 ;;  i               2   10[BANK0 ] int 
  7763 ;;  c               1    9[BANK0 ] unsigned char 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  2    5[BANK0 ] int 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7773 ;;      Params:         0       1       0       0       0       0       0       0
  7774 ;;      Locals:         0       4       0       0       0       0       0       0
  7775 ;;      Temps:          0       3       0       0       0       0       0       0
  7776 ;;      Totals:         0       8       0       0       0       0       0       0
  7777 ;;Total ram usage:        8 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    7
  7780 ;; This function calls:
  7781 ;;		_fputc
  7782 ;; This function is called by:
  7783 ;;		_pad
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           
  7788                           ;psect for function _fputs
  7789  0A4C                     _fputs:
  7790                           
  7791                           ;incstack = 0
  7792                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7793                           ;fputs@s stored from wreg
  7794  0A4C  0020               	movlb	0	; select bank0
  7795  0A4D  00AC               	movwf	fputs@s
  7796  0A4E                     l3131:
  7797  0A4E  01AA               	clrf	fputs@i
  7798  0A4F  01AB               	clrf	fputs@i+1
  7799  0A50  2A64               	goto	l3137
  7800  0A51                     l3133:
  7801  0A51  0829               	movf	fputs@c,w
  7802  0A52  00A6               	movwf	??_fputs
  7803  0A53  01A7               	clrf	??_fputs+1
  7804  0A54  0826               	movf	??_fputs,w
  7805  0A55  00F5               	movwf	fputc@c
  7806  0A56  0827               	movf	??_fputs+1,w
  7807  0A57  00F6               	movwf	fputc@c+1
  7808  0A58  0825               	movf	fputs@fp,w
  7809  0A59  00A8               	movwf	??_fputs+2
  7810  0A5A  0828               	movf	??_fputs+2,w
  7811  0A5B  00F7               	movwf	fputc@fp
  7812  0A5C  318C  2442  318A   	fcall	_fputc
  7813  0A5F                     l3135:
  7814  0A5F  3001               	movlw	1
  7815  0A60  0020               	movlb	0	; select bank0
  7816  0A61  07AA               	addwf	fputs@i,f
  7817  0A62  3000               	movlw	0
  7818  0A63  3DAB               	addwfc	fputs@i+1,f
  7819  0A64                     l3137:
  7820  0A64  082A               	movf	fputs@i,w
  7821  0A65  072C               	addwf	fputs@s,w
  7822  0A66  00A6               	movwf	??_fputs
  7823  0A67  0826               	movf	??_fputs,w
  7824  0A68  0086               	movwf	6
  7825  0A69  3001               	movlw	1	; select bank2/3
  7826  0A6A  0087               	movwf	7
  7827  0A6B  0801               	movf	1,w
  7828  0A6C  00A7               	movwf	??_fputs+1
  7829  0A6D  0827               	movf	??_fputs+1,w
  7830  0A6E  00A9               	movwf	fputs@c
  7831  0A6F  0829               	movf	fputs@c,w
  7832  0A70  1D03               	btfss	3,2
  7833  0A71  2A73               	goto	u2421
  7834  0A72  2A74               	goto	u2420
  7835  0A73                     u2421:
  7836  0A73  2A51               	goto	l3133
  7837  0A74                     u2420:
  7838  0A74                     l1237:
  7839  0A74  0008               	return
  7840  0A75                     __end_of_fputs:
  7841                           
  7842                           	psect	text8
  7843  0C42                     __ptext8:	
  7844 ;; *************** function _fputc *****************
  7845 ;; Defined at:
  7846 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;  c               2    5[COMMON] int 
  7849 ;;  fp              1    7[COMMON] PTR struct _IO_FILE
  7850 ;;		 -> sprintf@f(6), 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  2    5[COMMON] int 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7862 ;;      Params:         3       0       0       0       0       0       0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0
  7864 ;;      Temps:          0       5       0       0       0       0       0       0
  7865 ;;      Totals:         3       5       0       0       0       0       0       0
  7866 ;;Total ram usage:        8 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    6
  7869 ;; This function calls:
  7870 ;;		_putch
  7871 ;; This function is called by:
  7872 ;;		_pad
  7873 ;;		_vfpfcnvrt
  7874 ;;		_fputs
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _fputc
  7880  0C42                     _fputc:
  7881  0C42                     l3111:	
  7882                           ;incstack = 0
  7883                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7884                           
  7885  0C42  0877               	movf	fputc@fp,w
  7886  0C43  1903               	btfsc	3,2
  7887  0C44  2C46               	goto	u2361
  7888  0C45  2C47               	goto	u2360
  7889  0C46                     u2361:
  7890  0C46  2C4C               	goto	l3115
  7891  0C47                     u2360:
  7892  0C47                     l3113:
  7893  0C47  0877               	movf	fputc@fp,w
  7894  0C48  1D03               	btfss	3,2
  7895  0C49  2C4B               	goto	u2371
  7896  0C4A  2C4C               	goto	u2370
  7897  0C4B                     u2371:
  7898  0C4B  2C51               	goto	l3117
  7899  0C4C                     u2370:
  7900  0C4C                     l3115:
  7901  0C4C  0875               	movf	fputc@c,w
  7902  0C4D  3188  20F3  318C   	fcall	_putch
  7903  0C50  2C98               	goto	l1229
  7904  0C51                     l3117:
  7905  0C51  0877               	movf	fputc@fp,w
  7906  0C52  3E04               	addlw	4
  7907  0C53  0086               	movwf	6
  7908  0C54  0187               	clrf	7
  7909  0C55  0016               	moviw fsr1++
  7910  0C56  0401               	iorwf	1,w
  7911  0C57  1903               	btfsc	3,2
  7912  0C58  2C5A               	goto	u2381
  7913  0C59  2C5B               	goto	u2380
  7914  0C5A                     u2381:
  7915  0C5A  2C7A               	goto	l3121
  7916  0C5B                     u2380:
  7917  0C5B                     l3119:
  7918  0C5B  0877               	movf	fputc@fp,w
  7919  0C5C  3E04               	addlw	4
  7920  0C5D  0086               	movwf	6
  7921  0C5E  0187               	clrf	7
  7922  0C5F  3F40               	moviw [0]fsr1
  7923  0C60  0020               	movlb	0	; select bank0
  7924  0C61  00A0               	movwf	??_fputc
  7925  0C62  3F41               	moviw [1]fsr1
  7926  0C63  00A1               	movwf	??_fputc+1
  7927  0C64  0877               	movf	fputc@fp,w
  7928  0C65  3E02               	addlw	2
  7929  0C66  0086               	movwf	6
  7930  0C67  0187               	clrf	7
  7931  0C68  3F40               	moviw [0]fsr1
  7932  0C69  00A2               	movwf	??_fputc+2
  7933  0C6A  3F41               	moviw [1]fsr1
  7934  0C6B  00A3               	movwf	??_fputc+3
  7935  0C6C  0823               	movf	??_fputc+3,w
  7936  0C6D  3A80               	xorlw	128
  7937  0C6E  00A4               	movwf	??_fputc+4
  7938  0C6F  0821               	movf	??_fputc+1,w
  7939  0C70  3A80               	xorlw	128
  7940  0C71  0224               	subwf	??_fputc+4,w
  7941  0C72  1D03               	skipz
  7942  0C73  2C76               	goto	u2395
  7943  0C74  0820               	movf	??_fputc,w
  7944  0C75  0222               	subwf	??_fputc+2,w
  7945  0C76                     u2395:
  7946  0C76  1803               	skipnc
  7947  0C77  2C79               	goto	u2391
  7948  0C78  2C7A               	goto	u2390
  7949  0C79                     u2391:
  7950  0C79  2C98               	goto	l1229
  7951  0C7A                     u2390:
  7952  0C7A                     l3121:
  7953  0C7A  0877               	movf	fputc@fp,w
  7954  0C7B  3E02               	addlw	2
  7955  0C7C  0086               	movwf	6
  7956  0C7D  0187               	clrf	7
  7957  0C7E  0877               	movf	fputc@fp,w
  7958  0C7F  0084               	movwf	4
  7959  0C80  0185               	clrf	5
  7960  0C81  3F40               	moviw [0]fsr1
  7961  0C82  0700               	addwf	0,w
  7962  0C83  0020               	movlb	0	; select bank0
  7963  0C84  00A0               	movwf	??_fputc
  7964  0C85  3101               	addfsr 0,1
  7965  0C86  3F41               	moviw [1]fsr1
  7966  0C87  3D00               	addwfc	0,w
  7967  0C88  00A1               	movwf	??_fputc+1
  7968  0C89  0820               	movf	??_fputc,w
  7969  0C8A  0086               	movwf	6
  7970  0C8B  0821               	movf	??_fputc+1,w
  7971  0C8C  0087               	movwf	7
  7972  0C8D  0875               	movf	fputc@c,w
  7973  0C8E  0081               	movwf	1
  7974  0C8F                     l3123:
  7975  0C8F  0877               	movf	fputc@fp,w
  7976  0C90  3E02               	addlw	2
  7977  0C91  0086               	movwf	6
  7978  0C92  0187               	clrf	7
  7979  0C93  3001               	movlw	1
  7980  0C94  0781               	addwf	1,f
  7981  0C95  3141               	addfsr 1,1
  7982  0C96  1803               	skipnc
  7983  0C97  0A81               	incf	1,f
  7984  0C98                     l1229:
  7985  0C98  0008               	return
  7986  0C99                     __end_of_fputc:
  7987                           
  7988                           	psect	text9
  7989  08F3                     __ptext9:	
  7990 ;; *************** function _putch *****************
  7991 ;; Defined at:
  7992 ;;		line 122 in file "mcc_generated_files/eusart.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  txData          1    wreg     unsigned char 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  txData          1    4[COMMON] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0, pclath, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8006 ;;      Params:         0       0       0       0       0       0       0       0
  8007 ;;      Locals:         1       0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0
  8009 ;;      Totals:         1       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        1 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    5
  8013 ;; This function calls:
  8014 ;;		_EUSART_Write
  8015 ;; This function is called by:
  8016 ;;		_fputc
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function _putch
  8022  08F3                     _putch:
  8023                           
  8024                           ;incstack = 0
  8025                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  8026                           ;putch@txData stored from wreg
  8027  08F3  00F4               	movwf	putch@txData
  8028  08F4                     l3109:
  8029                           
  8030                           ;mcc_generated_files/eusart.c: 122: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 123: {;mcc_generated_files/eusart.c: 124:     EUSART_Write(txData);
  8031  08F4  0874               	movf	putch@txData,w
  8032  08F5  3189  2119  3188   	fcall	_EUSART_Write
  8033  08F8                     l96:
  8034  08F8  0008               	return
  8035  08F9                     __end_of_putch:
  8036                           
  8037                           	psect	text10
  8038  0919                     __ptext10:	
  8039 ;; *************** function _EUSART_Write *****************
  8040 ;; Defined at:
  8041 ;;		line 108 in file "mcc_generated_files/eusart.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  txData          1    wreg     unsigned char 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  txData          1    3[COMMON] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8055 ;;      Params:         0       0       0       0       0       0       0       0
  8056 ;;      Locals:         1       0       0       0       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0
  8058 ;;      Totals:         1       0       0       0       0       0       0       0
  8059 ;;Total ram usage:        1 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    4
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_putch
  8066 ;;		_main
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _EUSART_Write
  8072  0919                     _EUSART_Write:
  8073                           
  8074                           ;incstack = 0
  8075                           ; Regs used in _EUSART_Write: [wreg]
  8076                           ;EUSART_Write@txData stored from wreg
  8077  0919  00F3               	movwf	EUSART_Write@txData
  8078  091A                     l3105:
  8079  091A                     l87:	
  8080                           ;mcc_generated_files/eusart.c: 111:     {;mcc_generated_files/eusart.c: 112:     }
  8081                           
  8082                           
  8083                           ;mcc_generated_files/eusart.c: 110:     while(0 == PIR3bits.TXIF)
  8084  091A  002E               	movlb	14	; select bank14
  8085  091B  1E0F               	btfss	15,4	;volatile
  8086  091C  291E               	goto	u2351
  8087  091D  291F               	goto	u2350
  8088  091E                     u2351:
  8089  091E  291A               	goto	l87
  8090  091F                     u2350:
  8091  091F                     l3107:
  8092                           
  8093                           ;mcc_generated_files/eusart.c: 114:     TX1REG = txData;
  8094  091F  0873               	movf	EUSART_Write@txData,w
  8095  0920  0022               	movlb	2	; select bank2
  8096  0921  009A               	movwf	26	;volatile
  8097  0922                     l90:
  8098  0922  0008               	return
  8099  0923                     __end_of_EUSART_Write:
  8100                           
  8101                           	psect	text11
  8102  0A11                     __ptext11:	
  8103 ;; *************** function _abs *****************
  8104 ;; Defined at:
  8105 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  a               2    6[COMMON] int 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  2    6[COMMON] int 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8119 ;;      Params:         2       0       0       0       0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0
  8121 ;;      Temps:          0       2       0       0       0       0       0       0
  8122 ;;      Totals:         2       2       0       0       0       0       0       0
  8123 ;;Total ram usage:        4 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    4
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_dtoa
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function _abs
  8135  0A11                     _abs:
  8136  0A11                     l3255:	
  8137                           ;incstack = 0
  8138                           ; Regs used in _abs: [wreg+status,2+status,0]
  8139                           
  8140  0A11  0877               	movf	abs@a+1,w
  8141  0A12  3A80               	xorlw	128
  8142  0A13  0020               	movlb	0	; select bank0
  8143  0A14  00B0               	movwf	??_abs
  8144  0A15  3080               	movlw	128
  8145  0A16  0230               	subwf	??_abs,w
  8146  0A17  1D03               	skipz
  8147  0A18  2A1B               	goto	u2705
  8148  0A19  3001               	movlw	1
  8149  0A1A  0276               	subwf	abs@a,w
  8150  0A1B                     u2705:
  8151  0A1B  1803               	skipnc
  8152  0A1C  2A1E               	goto	u2701
  8153  0A1D  2A1F               	goto	u2700
  8154  0A1E                     u2701:
  8155  0A1E  2A2C               	goto	l1214
  8156  0A1F                     u2700:
  8157  0A1F                     l3257:
  8158  0A1F  0976               	comf	abs@a,w
  8159  0A20  0020               	movlb	0	; select bank0
  8160  0A21  00B0               	movwf	??_abs
  8161  0A22  0977               	comf	abs@a+1,w
  8162  0A23  00B1               	movwf	??_abs+1
  8163  0A24  0AB0               	incf	??_abs,f
  8164  0A25  1903               	skipnz
  8165  0A26  0AB1               	incf	??_abs+1,f
  8166  0A27  0830               	movf	??_abs,w
  8167  0A28  00F6               	movwf	?_abs
  8168  0A29  0831               	movf	??_abs+1,w
  8169  0A2A  00F7               	movwf	?_abs+1
  8170  0A2B  2A2C               	goto	l1217
  8171  0A2C                     l1214:
  8172  0A2C                     l1217:
  8173  0A2C  0008               	return
  8174  0A2D                     __end_of_abs:
  8175                           
  8176                           	psect	text12
  8177  0F16                     __ptext12:	
  8178 ;; *************** function ___aomod *****************
  8179 ;; Defined at:
  8180 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  divisor         8    0[BANK0 ] long long 
  8183 ;;  dividend        8    8[BANK0 ] long long 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  sign            1    5[COMMON] unsigned char 
  8186 ;;  counter         1    4[COMMON] unsigned char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  8    0[BANK0 ] long long 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8196 ;;      Params:         0      16       0       0       0       0       0       0
  8197 ;;      Locals:         2       0       0       0       0       0       0       0
  8198 ;;      Temps:          1       0       0       0       0       0       0       0
  8199 ;;      Totals:         3      16       0       0       0       0       0       0
  8200 ;;Total ram usage:       19 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    4
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_dtoa
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           
  8211                           ;psect for function ___aomod
  8212  0F16                     ___aomod:
  8213  0F16                     l3203:	
  8214                           ;incstack = 0
  8215                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8216                           
  8217  0F16  01F5               	clrf	___aomod@sign
  8218  0F17                     l3205:
  8219  0F17  3028               	movlw	low ___aomod@dividend
  8220  0F18  0086               	movwf	6
  8221  0F19  3000               	movlw	high ___aomod@dividend
  8222  0F1A  0087               	movwf	7
  8223  0F1B  3F47               	moviw [7]fsr1
  8224  0F1C  00F3               	movwf	??___aomod
  8225  0F1D  1FF3               	btfss	??___aomod,7
  8226  0F1E  2F20               	goto	u2561
  8227  0F1F  2F21               	goto	u2560
  8228  0F20                     u2561:
  8229  0F20  2F42               	goto	l3209
  8230  0F21                     u2560:
  8231  0F21                     l3207:
  8232  0F21  0020               	movlb	0	; select bank0
  8233  0F22  09A8               	comf	___aomod@dividend,f
  8234  0F23  09A9               	comf	___aomod@dividend+1,f
  8235  0F24  09AA               	comf	___aomod@dividend+2,f
  8236  0F25  09AB               	comf	___aomod@dividend+3,f
  8237  0F26  09AC               	comf	___aomod@dividend+4,f
  8238  0F27  09AD               	comf	___aomod@dividend+5,f
  8239  0F28  09AE               	comf	___aomod@dividend+6,f
  8240  0F29  09AF               	comf	___aomod@dividend+7,f
  8241  0F2A  0AA8               	incf	___aomod@dividend,f
  8242  0F2B  1D03               	skipz
  8243  0F2C  2F40               	goto	u257lld
  8244  0F2D  0AA9               	incf	___aomod@dividend+1,f
  8245  0F2E  1D03               	skipz
  8246  0F2F  2F40               	goto	u257lld
  8247  0F30  0AAA               	incf	___aomod@dividend+2,f
  8248  0F31  1D03               	skipz
  8249  0F32  2F40               	goto	u257lld
  8250  0F33  0AAB               	incf	___aomod@dividend+3,f
  8251  0F34  1D03               	skipz
  8252  0F35  2F40               	goto	u257lld
  8253  0F36  0AAC               	incf	___aomod@dividend+4,f
  8254  0F37  1D03               	skipz
  8255  0F38  2F40               	goto	u257lld
  8256  0F39  0AAD               	incf	___aomod@dividend+5,f
  8257  0F3A  1D03               	skipz
  8258  0F3B  2F40               	goto	u257lld
  8259  0F3C  0AAE               	incf	___aomod@dividend+6,f
  8260  0F3D  1D03               	skipz
  8261  0F3E  2F40               	goto	u257lld
  8262  0F3F  0AAF               	incf	___aomod@dividend+7,f
  8263  0F40                     u257lld:
  8264  0F40  01F5               	clrf	___aomod@sign
  8265  0F41  0AF5               	incf	___aomod@sign,f
  8266  0F42                     l3209:
  8267  0F42  3020               	movlw	low ___aomod@divisor
  8268  0F43  0086               	movwf	6
  8269  0F44  3000               	movlw	high ___aomod@divisor
  8270  0F45  0087               	movwf	7
  8271  0F46  3F47               	moviw [7]fsr1
  8272  0F47  00F3               	movwf	??___aomod
  8273  0F48  1FF3               	btfss	??___aomod,7
  8274  0F49  2F4B               	goto	u2581
  8275  0F4A  2F4C               	goto	u2580
  8276  0F4B                     u2581:
  8277  0F4B  2F6B               	goto	l3213
  8278  0F4C                     u2580:
  8279  0F4C                     l3211:
  8280  0F4C  0020               	movlb	0	; select bank0
  8281  0F4D  09A0               	comf	___aomod@divisor,f
  8282  0F4E  09A1               	comf	___aomod@divisor+1,f
  8283  0F4F  09A2               	comf	___aomod@divisor+2,f
  8284  0F50  09A3               	comf	___aomod@divisor+3,f
  8285  0F51  09A4               	comf	___aomod@divisor+4,f
  8286  0F52  09A5               	comf	___aomod@divisor+5,f
  8287  0F53  09A6               	comf	___aomod@divisor+6,f
  8288  0F54  09A7               	comf	___aomod@divisor+7,f
  8289  0F55  0AA0               	incf	___aomod@divisor,f
  8290  0F56  1D03               	skipz
  8291  0F57  2F6B               	goto	u259lld
  8292  0F58  0AA1               	incf	___aomod@divisor+1,f
  8293  0F59  1D03               	skipz
  8294  0F5A  2F6B               	goto	u259lld
  8295  0F5B  0AA2               	incf	___aomod@divisor+2,f
  8296  0F5C  1D03               	skipz
  8297  0F5D  2F6B               	goto	u259lld
  8298  0F5E  0AA3               	incf	___aomod@divisor+3,f
  8299  0F5F  1D03               	skipz
  8300  0F60  2F6B               	goto	u259lld
  8301  0F61  0AA4               	incf	___aomod@divisor+4,f
  8302  0F62  1D03               	skipz
  8303  0F63  2F6B               	goto	u259lld
  8304  0F64  0AA5               	incf	___aomod@divisor+5,f
  8305  0F65  1D03               	skipz
  8306  0F66  2F6B               	goto	u259lld
  8307  0F67  0AA6               	incf	___aomod@divisor+6,f
  8308  0F68  1D03               	skipz
  8309  0F69  2F6B               	goto	u259lld
  8310  0F6A  0AA7               	incf	___aomod@divisor+7,f
  8311  0F6B                     u259lld:
  8312  0F6B                     l3213:
  8313  0F6B  0020               	movlb	0	; select bank0
  8314  0F6C  0820               	movf	___aomod@divisor,w
  8315  0F6D  0421               	iorwf	___aomod@divisor+1,w
  8316  0F6E  0422               	iorwf	___aomod@divisor+2,w
  8317  0F6F  0423               	iorwf	___aomod@divisor+3,w
  8318  0F70  0424               	iorwf	___aomod@divisor+4,w
  8319  0F71  0425               	iorwf	___aomod@divisor+5,w
  8320  0F72  0426               	iorwf	___aomod@divisor+6,w
  8321  0F73  0427               	iorwf	___aomod@divisor+7,w
  8322  0F74  1903               	skipnz
  8323  0F75  2F77               	goto	u2601
  8324  0F76  2F78               	goto	u2600
  8325  0F77                     u2601:
  8326  0F77  2FCB               	goto	l3229
  8327  0F78                     u2600:
  8328  0F78                     l3215:
  8329  0F78  01F4               	clrf	___aomod@counter
  8330  0F79  0AF4               	incf	___aomod@counter,f
  8331  0F7A  2F87               	goto	l3221
  8332  0F7B                     l3217:
  8333  0F7B  35A0               	lslf	___aomod@divisor,f
  8334  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  8335  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  8336  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  8337  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  8338  0F80  0DA5               	rlf	___aomod@divisor+5,f
  8339  0F81  0DA6               	rlf	___aomod@divisor+6,f
  8340  0F82  0DA7               	rlf	___aomod@divisor+7,f
  8341  0F83                     l3219:
  8342  0F83  3001               	movlw	1
  8343  0F84  00F3               	movwf	??___aomod
  8344  0F85  0873               	movf	??___aomod,w
  8345  0F86  07F4               	addwf	___aomod@counter,f
  8346  0F87                     l3221:
  8347  0F87  1FA7               	btfss	___aomod@divisor+7,7
  8348  0F88  2F8A               	goto	u2611
  8349  0F89  2F8B               	goto	u2610
  8350  0F8A                     u2611:
  8351  0F8A  2F7B               	goto	l3217
  8352  0F8B                     u2610:
  8353  0F8B                     l3223:
  8354  0F8B  0827               	movf	___aomod@divisor+7,w
  8355  0F8C  022F               	subwf	___aomod@dividend+7,w
  8356  0F8D  1D03               	skipz
  8357  0F8E  2FA9               	goto	u2625
  8358  0F8F  0826               	movf	___aomod@divisor+6,w
  8359  0F90  022E               	subwf	___aomod@dividend+6,w
  8360  0F91  1D03               	skipz
  8361  0F92  2FA9               	goto	u2625
  8362  0F93  0825               	movf	___aomod@divisor+5,w
  8363  0F94  022D               	subwf	___aomod@dividend+5,w
  8364  0F95  1D03               	skipz
  8365  0F96  2FA9               	goto	u2625
  8366  0F97  0824               	movf	___aomod@divisor+4,w
  8367  0F98  022C               	subwf	___aomod@dividend+4,w
  8368  0F99  1D03               	skipz
  8369  0F9A  2FA9               	goto	u2625
  8370  0F9B  0823               	movf	___aomod@divisor+3,w
  8371  0F9C  022B               	subwf	___aomod@dividend+3,w
  8372  0F9D  1D03               	skipz
  8373  0F9E  2FA9               	goto	u2625
  8374  0F9F  0822               	movf	___aomod@divisor+2,w
  8375  0FA0  022A               	subwf	___aomod@dividend+2,w
  8376  0FA1  1D03               	skipz
  8377  0FA2  2FA9               	goto	u2625
  8378  0FA3  0821               	movf	___aomod@divisor+1,w
  8379  0FA4  0229               	subwf	___aomod@dividend+1,w
  8380  0FA5  1D03               	skipz
  8381  0FA6  2FA9               	goto	u2625
  8382  0FA7  0820               	movf	___aomod@divisor,w
  8383  0FA8  0228               	subwf	___aomod@dividend,w
  8384  0FA9                     u2625:
  8385  0FA9  1C03               	skipc
  8386  0FAA  2FAC               	goto	u2621
  8387  0FAB  2FAD               	goto	u2620
  8388  0FAC                     u2621:
  8389  0FAC  2FBD               	goto	l3227
  8390  0FAD                     u2620:
  8391  0FAD                     l3225:
  8392  0FAD  0820               	movf	___aomod@divisor,w
  8393  0FAE  02A8               	subwf	___aomod@dividend,f
  8394  0FAF  0821               	movf	___aomod@divisor+1,w
  8395  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  8396  0FB1  0822               	movf	___aomod@divisor+2,w
  8397  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  8398  0FB3  0823               	movf	___aomod@divisor+3,w
  8399  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  8400  0FB5  0824               	movf	___aomod@divisor+4,w
  8401  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  8402  0FB7  0825               	movf	___aomod@divisor+5,w
  8403  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  8404  0FB9  0826               	movf	___aomod@divisor+6,w
  8405  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  8406  0FBB  0827               	movf	___aomod@divisor+7,w
  8407  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  8408  0FBD                     l3227:
  8409  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  8410  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  8411  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  8412  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  8413  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  8414  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  8415  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  8416  0FC4  0CA0               	rrf	___aomod@divisor,f
  8417  0FC5  3001               	movlw	1
  8418  0FC6  02F4               	subwf	___aomod@counter,f
  8419  0FC7  1D03               	btfss	3,2
  8420  0FC8  2FCA               	goto	u2631
  8421  0FC9  2FCB               	goto	u2630
  8422  0FCA                     u2631:
  8423  0FCA  2F8B               	goto	l3223
  8424  0FCB                     u2630:
  8425  0FCB                     l3229:
  8426  0FCB  0875               	movf	___aomod@sign,w
  8427  0FCC  1903               	btfsc	3,2
  8428  0FCD  2FCF               	goto	u2641
  8429  0FCE  2FD0               	goto	u2640
  8430  0FCF                     u2641:
  8431  0FCF  2FEE               	goto	l788
  8432  0FD0                     u2640:
  8433  0FD0                     l3231:
  8434  0FD0  09A8               	comf	___aomod@dividend,f
  8435  0FD1  09A9               	comf	___aomod@dividend+1,f
  8436  0FD2  09AA               	comf	___aomod@dividend+2,f
  8437  0FD3  09AB               	comf	___aomod@dividend+3,f
  8438  0FD4  09AC               	comf	___aomod@dividend+4,f
  8439  0FD5  09AD               	comf	___aomod@dividend+5,f
  8440  0FD6  09AE               	comf	___aomod@dividend+6,f
  8441  0FD7  09AF               	comf	___aomod@dividend+7,f
  8442  0FD8  0AA8               	incf	___aomod@dividend,f
  8443  0FD9  1D03               	skipz
  8444  0FDA  2FEE               	goto	u265lld
  8445  0FDB  0AA9               	incf	___aomod@dividend+1,f
  8446  0FDC  1D03               	skipz
  8447  0FDD  2FEE               	goto	u265lld
  8448  0FDE  0AAA               	incf	___aomod@dividend+2,f
  8449  0FDF  1D03               	skipz
  8450  0FE0  2FEE               	goto	u265lld
  8451  0FE1  0AAB               	incf	___aomod@dividend+3,f
  8452  0FE2  1D03               	skipz
  8453  0FE3  2FEE               	goto	u265lld
  8454  0FE4  0AAC               	incf	___aomod@dividend+4,f
  8455  0FE5  1D03               	skipz
  8456  0FE6  2FEE               	goto	u265lld
  8457  0FE7  0AAD               	incf	___aomod@dividend+5,f
  8458  0FE8  1D03               	skipz
  8459  0FE9  2FEE               	goto	u265lld
  8460  0FEA  0AAE               	incf	___aomod@dividend+6,f
  8461  0FEB  1D03               	skipz
  8462  0FEC  2FEE               	goto	u265lld
  8463  0FED  0AAF               	incf	___aomod@dividend+7,f
  8464  0FEE                     u265lld:
  8465  0FEE                     l788:
  8466  0FEE  0020               	movlb	0	; select bank0
  8467  0FEF  0828               	movf	___aomod@dividend,w
  8468  0FF0  00A0               	movwf	?___aomod
  8469  0FF1  0829               	movf	___aomod@dividend+1,w
  8470  0FF2  00A1               	movwf	?___aomod+1
  8471  0FF3  082A               	movf	___aomod@dividend+2,w
  8472  0FF4  00A2               	movwf	?___aomod+2
  8473  0FF5  082B               	movf	___aomod@dividend+3,w
  8474  0FF6  00A3               	movwf	?___aomod+3
  8475  0FF7  082C               	movf	___aomod@dividend+4,w
  8476  0FF8  00A4               	movwf	?___aomod+4
  8477  0FF9  082D               	movf	___aomod@dividend+5,w
  8478  0FFA  00A5               	movwf	?___aomod+5
  8479  0FFB  082E               	movf	___aomod@dividend+6,w
  8480  0FFC  00A6               	movwf	?___aomod+6
  8481  0FFD  082F               	movf	___aomod@dividend+7,w
  8482  0FFE  00A7               	movwf	?___aomod+7
  8483  0FFF                     l789:
  8484  0FFF  0008               	return
  8485  1000                     __end_of___aomod:
  8486                           
  8487                           	psect	text13
  8488  06F0                     __ptext13:	
  8489 ;; *************** function ___aodiv *****************
  8490 ;; Defined at:
  8491 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  divisor         8    0[BANK0 ] long long 
  8494 ;;  dividend        8    8[BANK0 ] long long 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  quotient        8   18[BANK0 ] long long 
  8497 ;;  sign            1   17[BANK0 ] unsigned char 
  8498 ;;  counter         1   16[BANK0 ] unsigned char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  8    0[BANK0 ] long long 
  8501 ;; Registers used:
  8502 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8508 ;;      Params:         0      16       0       0       0       0       0       0
  8509 ;;      Locals:         0      10       0       0       0       0       0       0
  8510 ;;      Temps:          1       0       0       0       0       0       0       0
  8511 ;;      Totals:         1      26       0       0       0       0       0       0
  8512 ;;Total ram usage:       27 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    4
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_dtoa
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function ___aodiv
  8524  06F0                     ___aodiv:
  8525  06F0                     l3165:	
  8526                           ;incstack = 0
  8527                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8528                           
  8529  06F0  0020               	movlb	0	; select bank0
  8530  06F1  01B1               	clrf	___aodiv@sign
  8531  06F2                     l3167:
  8532  06F2  3020               	movlw	low ___aodiv@divisor
  8533  06F3  0086               	movwf	6
  8534  06F4  3000               	movlw	high ___aodiv@divisor
  8535  06F5  0087               	movwf	7
  8536  06F6  3F47               	moviw [7]fsr1
  8537  06F7  00F3               	movwf	??___aodiv
  8538  06F8  1FF3               	btfss	??___aodiv,7
  8539  06F9  2EFB               	goto	u2451
  8540  06FA  2EFC               	goto	u2450
  8541  06FB                     u2451:
  8542  06FB  2F1E               	goto	l3171
  8543  06FC                     u2450:
  8544  06FC                     l3169:
  8545  06FC  0020               	movlb	0	; select bank0
  8546  06FD  09A0               	comf	___aodiv@divisor,f
  8547  06FE  09A1               	comf	___aodiv@divisor+1,f
  8548  06FF  09A2               	comf	___aodiv@divisor+2,f
  8549  0700  09A3               	comf	___aodiv@divisor+3,f
  8550  0701  09A4               	comf	___aodiv@divisor+4,f
  8551  0702  09A5               	comf	___aodiv@divisor+5,f
  8552  0703  09A6               	comf	___aodiv@divisor+6,f
  8553  0704  09A7               	comf	___aodiv@divisor+7,f
  8554  0705  0AA0               	incf	___aodiv@divisor,f
  8555  0706  1D03               	skipz
  8556  0707  2F1B               	goto	u246lld
  8557  0708  0AA1               	incf	___aodiv@divisor+1,f
  8558  0709  1D03               	skipz
  8559  070A  2F1B               	goto	u246lld
  8560  070B  0AA2               	incf	___aodiv@divisor+2,f
  8561  070C  1D03               	skipz
  8562  070D  2F1B               	goto	u246lld
  8563  070E  0AA3               	incf	___aodiv@divisor+3,f
  8564  070F  1D03               	skipz
  8565  0710  2F1B               	goto	u246lld
  8566  0711  0AA4               	incf	___aodiv@divisor+4,f
  8567  0712  1D03               	skipz
  8568  0713  2F1B               	goto	u246lld
  8569  0714  0AA5               	incf	___aodiv@divisor+5,f
  8570  0715  1D03               	skipz
  8571  0716  2F1B               	goto	u246lld
  8572  0717  0AA6               	incf	___aodiv@divisor+6,f
  8573  0718  1D03               	skipz
  8574  0719  2F1B               	goto	u246lld
  8575  071A  0AA7               	incf	___aodiv@divisor+7,f
  8576  071B                     u246lld:
  8577  071B  0020               	movlb	0	; select bank0
  8578  071C  01B1               	clrf	___aodiv@sign
  8579  071D  0AB1               	incf	___aodiv@sign,f
  8580  071E                     l3171:
  8581  071E  3028               	movlw	low ___aodiv@dividend
  8582  071F  0086               	movwf	6
  8583  0720  3000               	movlw	high ___aodiv@dividend
  8584  0721  0087               	movwf	7
  8585  0722  3F47               	moviw [7]fsr1
  8586  0723  00F3               	movwf	??___aodiv
  8587  0724  1FF3               	btfss	??___aodiv,7
  8588  0725  2F27               	goto	u2471
  8589  0726  2F28               	goto	u2470
  8590  0727                     u2471:
  8591  0727  2F4C               	goto	l3177
  8592  0728                     u2470:
  8593  0728                     l3173:
  8594  0728  0020               	movlb	0	; select bank0
  8595  0729  09A8               	comf	___aodiv@dividend,f
  8596  072A  09A9               	comf	___aodiv@dividend+1,f
  8597  072B  09AA               	comf	___aodiv@dividend+2,f
  8598  072C  09AB               	comf	___aodiv@dividend+3,f
  8599  072D  09AC               	comf	___aodiv@dividend+4,f
  8600  072E  09AD               	comf	___aodiv@dividend+5,f
  8601  072F  09AE               	comf	___aodiv@dividend+6,f
  8602  0730  09AF               	comf	___aodiv@dividend+7,f
  8603  0731  0AA8               	incf	___aodiv@dividend,f
  8604  0732  1D03               	skipz
  8605  0733  2F47               	goto	u248lld
  8606  0734  0AA9               	incf	___aodiv@dividend+1,f
  8607  0735  1D03               	skipz
  8608  0736  2F47               	goto	u248lld
  8609  0737  0AAA               	incf	___aodiv@dividend+2,f
  8610  0738  1D03               	skipz
  8611  0739  2F47               	goto	u248lld
  8612  073A  0AAB               	incf	___aodiv@dividend+3,f
  8613  073B  1D03               	skipz
  8614  073C  2F47               	goto	u248lld
  8615  073D  0AAC               	incf	___aodiv@dividend+4,f
  8616  073E  1D03               	skipz
  8617  073F  2F47               	goto	u248lld
  8618  0740  0AAD               	incf	___aodiv@dividend+5,f
  8619  0741  1D03               	skipz
  8620  0742  2F47               	goto	u248lld
  8621  0743  0AAE               	incf	___aodiv@dividend+6,f
  8622  0744  1D03               	skipz
  8623  0745  2F47               	goto	u248lld
  8624  0746  0AAF               	incf	___aodiv@dividend+7,f
  8625  0747                     u248lld:
  8626  0747                     l3175:
  8627  0747  3001               	movlw	1
  8628  0748  00F3               	movwf	??___aodiv
  8629  0749  0873               	movf	??___aodiv,w
  8630  074A  0020               	movlb	0	; select bank0
  8631  074B  06B1               	xorwf	___aodiv@sign,f
  8632  074C                     l3177:
  8633  074C  3032               	movlw	low ___aodiv@quotient
  8634  074D  0086               	movwf	6
  8635  074E  3000               	movlw	high ___aodiv@quotient
  8636  074F  0087               	movwf	7
  8637  0750  3008               	movlw	8
  8638  0751  00F3               	movwf	??___aodiv
  8639  0752  3000               	movlw	0
  8640  0753                     u2490:
  8641  0753  001E               	movwi fsr1++
  8642  0754  0BF3               	decfsz	??___aodiv,f
  8643  0755  2F53               	goto	u2490
  8644  0756                     l3179:
  8645  0756  0020               	movlb	0	; select bank0
  8646  0757  0820               	movf	___aodiv@divisor,w
  8647  0758  0421               	iorwf	___aodiv@divisor+1,w
  8648  0759  0422               	iorwf	___aodiv@divisor+2,w
  8649  075A  0423               	iorwf	___aodiv@divisor+3,w
  8650  075B  0424               	iorwf	___aodiv@divisor+4,w
  8651  075C  0425               	iorwf	___aodiv@divisor+5,w
  8652  075D  0426               	iorwf	___aodiv@divisor+6,w
  8653  075E  0427               	iorwf	___aodiv@divisor+7,w
  8654  075F  1903               	skipnz
  8655  0760  2F62               	goto	u2501
  8656  0761  2F63               	goto	u2500
  8657  0762                     u2501:
  8658  0762  2FBF               	goto	l3199
  8659  0763                     u2500:
  8660  0763                     l3181:
  8661  0763  01B0               	clrf	___aodiv@counter
  8662  0764  0AB0               	incf	___aodiv@counter,f
  8663  0765  2F72               	goto	l3187
  8664  0766                     l3183:
  8665  0766  35A0               	lslf	___aodiv@divisor,f
  8666  0767  0DA1               	rlf	___aodiv@divisor+1,f
  8667  0768  0DA2               	rlf	___aodiv@divisor+2,f
  8668  0769  0DA3               	rlf	___aodiv@divisor+3,f
  8669  076A  0DA4               	rlf	___aodiv@divisor+4,f
  8670  076B  0DA5               	rlf	___aodiv@divisor+5,f
  8671  076C  0DA6               	rlf	___aodiv@divisor+6,f
  8672  076D  0DA7               	rlf	___aodiv@divisor+7,f
  8673  076E                     l3185:
  8674  076E  3001               	movlw	1
  8675  076F  00F3               	movwf	??___aodiv
  8676  0770  0873               	movf	??___aodiv,w
  8677  0771  07B0               	addwf	___aodiv@counter,f
  8678  0772                     l3187:
  8679  0772  1FA7               	btfss	___aodiv@divisor+7,7
  8680  0773  2F75               	goto	u2511
  8681  0774  2F76               	goto	u2510
  8682  0775                     u2511:
  8683  0775  2F66               	goto	l3183
  8684  0776                     u2510:
  8685  0776                     l3189:
  8686  0776  35B2               	lslf	___aodiv@quotient,f
  8687  0777  0DB3               	rlf	___aodiv@quotient+1,f
  8688  0778  0DB4               	rlf	___aodiv@quotient+2,f
  8689  0779  0DB5               	rlf	___aodiv@quotient+3,f
  8690  077A  0DB6               	rlf	___aodiv@quotient+4,f
  8691  077B  0DB7               	rlf	___aodiv@quotient+5,f
  8692  077C  0DB8               	rlf	___aodiv@quotient+6,f
  8693  077D  0DB9               	rlf	___aodiv@quotient+7,f
  8694  077E                     l3191:
  8695  077E  0827               	movf	___aodiv@divisor+7,w
  8696  077F  022F               	subwf	___aodiv@dividend+7,w
  8697  0780  1D03               	skipz
  8698  0781  2F9C               	goto	u2525
  8699  0782  0826               	movf	___aodiv@divisor+6,w
  8700  0783  022E               	subwf	___aodiv@dividend+6,w
  8701  0784  1D03               	skipz
  8702  0785  2F9C               	goto	u2525
  8703  0786  0825               	movf	___aodiv@divisor+5,w
  8704  0787  022D               	subwf	___aodiv@dividend+5,w
  8705  0788  1D03               	skipz
  8706  0789  2F9C               	goto	u2525
  8707  078A  0824               	movf	___aodiv@divisor+4,w
  8708  078B  022C               	subwf	___aodiv@dividend+4,w
  8709  078C  1D03               	skipz
  8710  078D  2F9C               	goto	u2525
  8711  078E  0823               	movf	___aodiv@divisor+3,w
  8712  078F  022B               	subwf	___aodiv@dividend+3,w
  8713  0790  1D03               	skipz
  8714  0791  2F9C               	goto	u2525
  8715  0792  0822               	movf	___aodiv@divisor+2,w
  8716  0793  022A               	subwf	___aodiv@dividend+2,w
  8717  0794  1D03               	skipz
  8718  0795  2F9C               	goto	u2525
  8719  0796  0821               	movf	___aodiv@divisor+1,w
  8720  0797  0229               	subwf	___aodiv@dividend+1,w
  8721  0798  1D03               	skipz
  8722  0799  2F9C               	goto	u2525
  8723  079A  0820               	movf	___aodiv@divisor,w
  8724  079B  0228               	subwf	___aodiv@dividend,w
  8725  079C                     u2525:
  8726  079C  1C03               	skipc
  8727  079D  2F9F               	goto	u2521
  8728  079E  2FA0               	goto	u2520
  8729  079F                     u2521:
  8730  079F  2FB1               	goto	l3197
  8731  07A0                     u2520:
  8732  07A0                     l3193:
  8733  07A0  0820               	movf	___aodiv@divisor,w
  8734  07A1  02A8               	subwf	___aodiv@dividend,f
  8735  07A2  0821               	movf	___aodiv@divisor+1,w
  8736  07A3  3BA9               	subwfb	___aodiv@dividend+1,f
  8737  07A4  0822               	movf	___aodiv@divisor+2,w
  8738  07A5  3BAA               	subwfb	___aodiv@dividend+2,f
  8739  07A6  0823               	movf	___aodiv@divisor+3,w
  8740  07A7  3BAB               	subwfb	___aodiv@dividend+3,f
  8741  07A8  0824               	movf	___aodiv@divisor+4,w
  8742  07A9  3BAC               	subwfb	___aodiv@dividend+4,f
  8743  07AA  0825               	movf	___aodiv@divisor+5,w
  8744  07AB  3BAD               	subwfb	___aodiv@dividend+5,f
  8745  07AC  0826               	movf	___aodiv@divisor+6,w
  8746  07AD  3BAE               	subwfb	___aodiv@dividend+6,f
  8747  07AE  0827               	movf	___aodiv@divisor+7,w
  8748  07AF  3BAF               	subwfb	___aodiv@dividend+7,f
  8749  07B0                     l3195:
  8750  07B0  1432               	bsf	___aodiv@quotient,0
  8751  07B1                     l3197:
  8752  07B1  36A7               	lsrf	___aodiv@divisor+7,f
  8753  07B2  0CA6               	rrf	___aodiv@divisor+6,f
  8754  07B3  0CA5               	rrf	___aodiv@divisor+5,f
  8755  07B4  0CA4               	rrf	___aodiv@divisor+4,f
  8756  07B5  0CA3               	rrf	___aodiv@divisor+3,f
  8757  07B6  0CA2               	rrf	___aodiv@divisor+2,f
  8758  07B7  0CA1               	rrf	___aodiv@divisor+1,f
  8759  07B8  0CA0               	rrf	___aodiv@divisor,f
  8760  07B9  3001               	movlw	1
  8761  07BA  02B0               	subwf	___aodiv@counter,f
  8762  07BB  1D03               	btfss	3,2
  8763  07BC  2FBE               	goto	u2531
  8764  07BD  2FBF               	goto	u2530
  8765  07BE                     u2531:
  8766  07BE  2F76               	goto	l3189
  8767  07BF                     u2530:
  8768  07BF                     l3199:
  8769  07BF  0831               	movf	___aodiv@sign,w
  8770  07C0  1903               	btfsc	3,2
  8771  07C1  2FC3               	goto	u2541
  8772  07C2  2FC4               	goto	u2540
  8773  07C3                     u2541:
  8774  07C3  2FE2               	goto	l775
  8775  07C4                     u2540:
  8776  07C4                     l3201:
  8777  07C4  09B2               	comf	___aodiv@quotient,f
  8778  07C5  09B3               	comf	___aodiv@quotient+1,f
  8779  07C6  09B4               	comf	___aodiv@quotient+2,f
  8780  07C7  09B5               	comf	___aodiv@quotient+3,f
  8781  07C8  09B6               	comf	___aodiv@quotient+4,f
  8782  07C9  09B7               	comf	___aodiv@quotient+5,f
  8783  07CA  09B8               	comf	___aodiv@quotient+6,f
  8784  07CB  09B9               	comf	___aodiv@quotient+7,f
  8785  07CC  0AB2               	incf	___aodiv@quotient,f
  8786  07CD  1D03               	skipz
  8787  07CE  2FE2               	goto	u255lld
  8788  07CF  0AB3               	incf	___aodiv@quotient+1,f
  8789  07D0  1D03               	skipz
  8790  07D1  2FE2               	goto	u255lld
  8791  07D2  0AB4               	incf	___aodiv@quotient+2,f
  8792  07D3  1D03               	skipz
  8793  07D4  2FE2               	goto	u255lld
  8794  07D5  0AB5               	incf	___aodiv@quotient+3,f
  8795  07D6  1D03               	skipz
  8796  07D7  2FE2               	goto	u255lld
  8797  07D8  0AB6               	incf	___aodiv@quotient+4,f
  8798  07D9  1D03               	skipz
  8799  07DA  2FE2               	goto	u255lld
  8800  07DB  0AB7               	incf	___aodiv@quotient+5,f
  8801  07DC  1D03               	skipz
  8802  07DD  2FE2               	goto	u255lld
  8803  07DE  0AB8               	incf	___aodiv@quotient+6,f
  8804  07DF  1D03               	skipz
  8805  07E0  2FE2               	goto	u255lld
  8806  07E1  0AB9               	incf	___aodiv@quotient+7,f
  8807  07E2                     u255lld:
  8808  07E2                     l775:
  8809  07E2  0020               	movlb	0	; select bank0
  8810  07E3  0832               	movf	___aodiv@quotient,w
  8811  07E4  00A0               	movwf	?___aodiv
  8812  07E5  0833               	movf	___aodiv@quotient+1,w
  8813  07E6  00A1               	movwf	?___aodiv+1
  8814  07E7  0834               	movf	___aodiv@quotient+2,w
  8815  07E8  00A2               	movwf	?___aodiv+2
  8816  07E9  0835               	movf	___aodiv@quotient+3,w
  8817  07EA  00A3               	movwf	?___aodiv+3
  8818  07EB  0836               	movf	___aodiv@quotient+4,w
  8819  07EC  00A4               	movwf	?___aodiv+4
  8820  07ED  0837               	movf	___aodiv@quotient+5,w
  8821  07EE  00A5               	movwf	?___aodiv+5
  8822  07EF  0838               	movf	___aodiv@quotient+6,w
  8823  07F0  00A6               	movwf	?___aodiv+6
  8824  07F1  0839               	movf	___aodiv@quotient+7,w
  8825  07F2  00A7               	movwf	?___aodiv+7
  8826  07F3                     l776:
  8827  07F3  0008               	return
  8828  07F4                     __end_of___aodiv:
  8829                           
  8830                           	psect	text14
  8831  0B5A                     __ptext14:	
  8832 ;; *************** function ___lwmod *****************
  8833 ;; Defined at:
  8834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  divisor         2    3[COMMON] unsigned int 
  8837 ;;  dividend        2    5[COMMON] unsigned int 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  counter         1    0[BANK0 ] unsigned char 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  2    3[COMMON] unsigned int 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2, status,0
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8849 ;;      Params:         4       0       0       0       0       0       0       0
  8850 ;;      Locals:         0       1       0       0       0       0       0       0
  8851 ;;      Temps:          1       0       0       0       0       0       0       0
  8852 ;;      Totals:         5       1       0       0       0       0       0       0
  8853 ;;Total ram usage:        6 bytes
  8854 ;; Hardware stack levels used:    1
  8855 ;; Hardware stack levels required when called:    4
  8856 ;; This function calls:
  8857 ;;		Nothing
  8858 ;; This function is called by:
  8859 ;;		_main
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function ___lwmod
  8865  0B5A                     ___lwmod:
  8866  0B5A                     l3703:	
  8867                           ;incstack = 0
  8868                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8869                           
  8870  0B5A  0873               	movf	___lwmod@divisor,w
  8871  0B5B  0474               	iorwf	___lwmod@divisor+1,w
  8872  0B5C  1903               	btfsc	3,2
  8873  0B5D  2B5F               	goto	u3141
  8874  0B5E  2B60               	goto	u3140
  8875  0B5F                     u3141:
  8876  0B5F  2B8A               	goto	l3721
  8877  0B60                     u3140:
  8878  0B60                     l3705:
  8879  0B60  0020               	movlb	0	; select bank0
  8880  0B61  01A0               	clrf	___lwmod@counter
  8881  0B62  0AA0               	incf	___lwmod@counter,f
  8882  0B63  2B6D               	goto	l3711
  8883  0B64                     l3707:
  8884  0B64  3001               	movlw	1
  8885  0B65                     u3155:
  8886  0B65  35F3               	lslf	___lwmod@divisor,f
  8887  0B66  0DF4               	rlf	___lwmod@divisor+1,f
  8888  0B67  0B89               	decfsz	9,f
  8889  0B68  2B65               	goto	u3155
  8890  0B69                     l3709:
  8891  0B69  3001               	movlw	1
  8892  0B6A  00F7               	movwf	??___lwmod
  8893  0B6B  0877               	movf	??___lwmod,w
  8894  0B6C  07A0               	addwf	___lwmod@counter,f
  8895  0B6D                     l3711:
  8896  0B6D  1FF4               	btfss	___lwmod@divisor+1,7
  8897  0B6E  2B70               	goto	u3161
  8898  0B6F  2B71               	goto	u3160
  8899  0B70                     u3161:
  8900  0B70  2B64               	goto	l3707
  8901  0B71                     u3160:
  8902  0B71                     l3713:
  8903  0B71  0874               	movf	___lwmod@divisor+1,w
  8904  0B72  0276               	subwf	___lwmod@dividend+1,w
  8905  0B73  1D03               	skipz
  8906  0B74  2B77               	goto	u3175
  8907  0B75  0873               	movf	___lwmod@divisor,w
  8908  0B76  0275               	subwf	___lwmod@dividend,w
  8909  0B77                     u3175:
  8910  0B77  1C03               	skipc
  8911  0B78  2B7A               	goto	u3171
  8912  0B79  2B7B               	goto	u3170
  8913  0B7A                     u3171:
  8914  0B7A  2B7F               	goto	l3717
  8915  0B7B                     u3170:
  8916  0B7B                     l3715:
  8917  0B7B  0873               	movf	___lwmod@divisor,w
  8918  0B7C  02F5               	subwf	___lwmod@dividend,f
  8919  0B7D  0874               	movf	___lwmod@divisor+1,w
  8920  0B7E  3BF6               	subwfb	___lwmod@dividend+1,f
  8921  0B7F                     l3717:
  8922  0B7F  3001               	movlw	1
  8923  0B80                     u3185:
  8924  0B80  36F4               	lsrf	___lwmod@divisor+1,f
  8925  0B81  0CF3               	rrf	___lwmod@divisor,f
  8926  0B82  0B89               	decfsz	9,f
  8927  0B83  2B80               	goto	u3185
  8928  0B84                     l3719:
  8929  0B84  3001               	movlw	1
  8930  0B85  02A0               	subwf	___lwmod@counter,f
  8931  0B86  1D03               	btfss	3,2
  8932  0B87  2B89               	goto	u3191
  8933  0B88  2B8A               	goto	u3190
  8934  0B89                     u3191:
  8935  0B89  2B71               	goto	l3713
  8936  0B8A                     u3190:
  8937  0B8A                     l3721:
  8938  0B8A  0876               	movf	___lwmod@dividend+1,w
  8939  0B8B  00F4               	movwf	?___lwmod+1
  8940  0B8C  0875               	movf	___lwmod@dividend,w
  8941  0B8D  00F3               	movwf	?___lwmod
  8942  0B8E                     l965:
  8943  0B8E  0008               	return
  8944  0B8F                     __end_of___lwmod:
  8945                           
  8946                           	psect	text15
  8947  08F9                     __ptext15:	
  8948 ;; *************** function _TMR0_ReadTimer *****************
  8949 ;; Defined at:
  8950 ;;		line 92 in file "mcc_generated_files/tmr0.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  readVal         1    4[COMMON] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      unsigned char 
  8957 ;; Registers used:
  8958 ;;		wreg
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8964 ;;      Params:         0       0       0       0       0       0       0       0
  8965 ;;      Locals:         1       0       0       0       0       0       0       0
  8966 ;;      Temps:          1       0       0       0       0       0       0       0
  8967 ;;      Totals:         2       0       0       0       0       0       0       0
  8968 ;;Total ram usage:        2 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    4
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_main
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function _TMR0_ReadTimer
  8980  08F9                     _TMR0_ReadTimer:
  8981  08F9                     l3583:	
  8982                           ;incstack = 0
  8983                           ; Regs used in _TMR0_ReadTimer: [wreg]
  8984                           
  8985                           
  8986                           ;mcc_generated_files/tmr0.c: 94:     uint8_t readVal;;mcc_generated_files/tmr0.c: 97:   
      +                            readVal = TMR0L;
  8987  08F9  0020               	movlb	0	; select bank0
  8988  08FA  081C               	movf	28,w	;volatile
  8989  08FB  00F3               	movwf	??_TMR0_ReadTimer
  8990  08FC  0873               	movf	??_TMR0_ReadTimer,w
  8991  08FD  00F4               	movwf	TMR0_ReadTimer@readVal
  8992                           
  8993                           ;mcc_generated_files/tmr0.c: 99:     return readVal;
  8994  08FE  0874               	movf	TMR0_ReadTimer@readVal,w
  8995  08FF                     l274:
  8996  08FF  0008               	return
  8997  0900                     __end_of_TMR0_ReadTimer:
  8998                           
  8999                           	psect	text16
  9000  0981                     __ptext16:	
  9001 ;; *************** function _SYSTEM_Initialize *****************
  9002 ;; Defined at:
  9003 ;;		line 5 in file "mcc_generated_files/mcc.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9017 ;;      Params:         0       0       0       0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    6
  9024 ;; This function calls:
  9025 ;;		_EUSART_Initialize
  9026 ;;		_OSCILLATOR_Initialize
  9027 ;;		_PIN_MANAGER_Initialize
  9028 ;;		_PMD_Initialize
  9029 ;;		_TMR0_Initialize
  9030 ;;		_master_init
  9031 ;; This function is called by:
  9032 ;;		_main
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _SYSTEM_Initialize
  9038  0981                     _SYSTEM_Initialize:
  9039  0981                     l3571:	
  9040                           ;incstack = 0
  9041                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9042                           
  9043                           
  9044                           ;mcc_generated_files/mcc.c: 7:     PMD_Initialize();
  9045  0981  3189  2100  3189   	fcall	_PMD_Initialize
  9046  0984                     l3573:
  9047                           
  9048                           ;mcc_generated_files/mcc.c: 8:     PIN_MANAGER_Initialize();
  9049  0984  318B  238F  3189   	fcall	_PIN_MANAGER_Initialize
  9050  0987                     l3575:
  9051                           
  9052                           ;mcc_generated_files/mcc.c: 9:     OSCILLATOR_Initialize();
  9053  0987  3189  2110  3189   	fcall	_OSCILLATOR_Initialize
  9054  098A                     l3577:
  9055                           
  9056                           ;mcc_generated_files/mcc.c: 10:     TMR0_Initialize();
  9057  098A  3189  2152  3189   	fcall	_TMR0_Initialize
  9058  098D                     l3579:
  9059                           
  9060                           ;mcc_generated_files/mcc.c: 11:     EUSART_Initialize();
  9061  098D  318A  22F9  3189   	fcall	_EUSART_Initialize
  9062  0990                     l3581:
  9063                           
  9064                           ;mcc_generated_files/mcc.c: 12:     master_init();
  9065  0990  3189  2123  3189   	fcall	_master_init
  9066  0993                     l175:
  9067  0993  0008               	return
  9068  0994                     __end_of_SYSTEM_Initialize:
  9069                           
  9070                           	psect	text17
  9071  0923                     __ptext17:	
  9072 ;; *************** function _master_init *****************
  9073 ;; Defined at:
  9074 ;;		line 44 in file "mcc_generated_files/mcc.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9088 ;;      Params:         0       0       0       0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    4
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_SYSTEM_Initialize
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function _master_init
  9104  0923                     _master_init:
  9105  0923                     l3465:	
  9106                           ;incstack = 0
  9107                           ; Regs used in _master_init: [wreg+status,2]
  9108                           
  9109                           
  9110                           ;mcc_generated_files/mcc.c: 45:     SSP1CON1=0x28;
  9111  0923  3028               	movlw	40
  9112  0924  0023               	movlb	3	; select bank3
  9113  0925  0090               	movwf	16	;volatile
  9114  0926                     l3467:
  9115                           
  9116                           ;mcc_generated_files/mcc.c: 46:     SSP1CON2=0x00;
  9117  0926  0191               	clrf	17	;volatile
  9118  0927                     l3469:
  9119                           
  9120                           ;mcc_generated_files/mcc.c: 47:     SSP1STATbits.SMP=1;
  9121  0927  178F               	bsf	15,7	;volatile
  9122  0928                     l3471:
  9123                           
  9124                           ;mcc_generated_files/mcc.c: 48:     SSP1STATbits.CKE=1;
  9125  0928  170F               	bsf	15,6	;volatile
  9126  0929                     l3473:
  9127                           
  9128                           ;mcc_generated_files/mcc.c: 49:     SSP1ADD=0x06;
  9129  0929  3006               	movlw	6
  9130  092A  008D               	movwf	13	;volatile
  9131  092B                     l3475:
  9132                           
  9133                           ;mcc_generated_files/mcc.c: 50:     SSP1MSK=0xFF;
  9134  092B  30FF               	movlw	255
  9135  092C  008E               	movwf	14	;volatile
  9136  092D                     l184:
  9137  092D  0008               	return
  9138  092E                     __end_of_master_init:
  9139                           
  9140                           	psect	text18
  9141  0952                     __ptext18:	
  9142 ;; *************** function _TMR0_Initialize *****************
  9143 ;; Defined at:
  9144 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9158 ;;      Params:         0       0       0       0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0
  9161 ;;      Totals:         0       0       0       0       0       0       0       0
  9162 ;;Total ram usage:        0 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    4
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_SYSTEM_Initialize
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _TMR0_Initialize
  9174  0952                     _TMR0_Initialize:
  9175  0952                     l3457:	
  9176                           ;incstack = 0
  9177                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  9178                           
  9179                           
  9180                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x6E;
  9181  0952  306E               	movlw	110
  9182  0953  0020               	movlb	0	; select bank0
  9183  0954  009F               	movwf	31	;volatile
  9184                           
  9185                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x79;
  9186  0955  3079               	movlw	121
  9187  0956  009D               	movwf	29	;volatile
  9188  0957                     l3459:
  9189                           
  9190                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  9191  0957  019C               	clrf	28	;volatile
  9192  0958                     l3461:
  9193                           
  9194                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
  9195  0958  002E               	movlb	14	; select bank14
  9196  0959  128C               	bcf	12,5	;volatile
  9197  095A                     l3463:
  9198                           
  9199                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
  9200  095A  3080               	movlw	128
  9201  095B  0020               	movlb	0	; select bank0
  9202  095C  009E               	movwf	30	;volatile
  9203  095D                     l265:
  9204  095D  0008               	return
  9205  095E                     __end_of_TMR0_Initialize:
  9206                           
  9207                           	psect	text19
  9208  0900                     __ptext19:	
  9209 ;; *************** function _PMD_Initialize *****************
  9210 ;; Defined at:
  9211 ;;		line 29 in file "mcc_generated_files/mcc.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		status,2
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9225 ;;      Params:         0       0       0       0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    4
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_SYSTEM_Initialize
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           
  9240                           ;psect for function _PMD_Initialize
  9241  0900                     _PMD_Initialize:
  9242  0900                     l3407:	
  9243                           ;incstack = 0
  9244                           ; Regs used in _PMD_Initialize: [status,2]
  9245                           
  9246                           
  9247                           ;mcc_generated_files/mcc.c: 32:     PMD0 = 0x00;
  9248  0900  002F               	movlb	15	; select bank15
  9249  0901  0196               	clrf	22	;volatile
  9250                           
  9251                           ;mcc_generated_files/mcc.c: 34:     PMD1 = 0x00;
  9252  0902  0197               	clrf	23	;volatile
  9253                           
  9254                           ;mcc_generated_files/mcc.c: 36:     PMD2 = 0x00;
  9255  0903  0198               	clrf	24	;volatile
  9256                           
  9257                           ;mcc_generated_files/mcc.c: 38:     PMD3 = 0x00;
  9258  0904  0199               	clrf	25	;volatile
  9259                           
  9260                           ;mcc_generated_files/mcc.c: 40:     PMD4 = 0x00;
  9261  0905  019A               	clrf	26	;volatile
  9262                           
  9263                           ;mcc_generated_files/mcc.c: 42:     PMD5 = 0x00;
  9264  0906  019B               	clrf	27	;volatile
  9265  0907                     l181:
  9266  0907  0008               	return
  9267  0908                     __end_of_PMD_Initialize:
  9268                           
  9269                           	psect	text20
  9270  0B8F                     __ptext20:	
  9271 ;; *************** function _PIN_MANAGER_Initialize *****************
  9272 ;; Defined at:
  9273 ;;		line 2 in file "mcc_generated_files/pin_manager.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9287 ;;      Params:         0       0       0       0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    4
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_SYSTEM_Initialize
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           
  9302                           ;psect for function _PIN_MANAGER_Initialize
  9303  0B8F                     _PIN_MANAGER_Initialize:
  9304  0B8F                     l3409:	
  9305                           ;incstack = 0
  9306                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9307                           
  9308                           
  9309                           ;mcc_generated_files/pin_manager.c: 4:     PORTA = 0x00;
  9310  0B8F  0020               	movlb	0	; select bank0
  9311  0B90  018C               	clrf	12	;volatile
  9312                           
  9313                           ;mcc_generated_files/pin_manager.c: 8:     LATA = 0x00;
  9314  0B91  0196               	clrf	22	;volatile
  9315                           
  9316                           ;mcc_generated_files/pin_manager.c: 9:     LATB = 0x00;
  9317  0B92  0197               	clrf	23	;volatile
  9318                           
  9319                           ;mcc_generated_files/pin_manager.c: 10:     LATC = 0x00;
  9320  0B93  0198               	clrf	24	;volatile
  9321  0B94                     l3411:
  9322                           
  9323                           ;mcc_generated_files/pin_manager.c: 15:     TRISA = 0xF1;
  9324  0B94  30F1               	movlw	241
  9325  0B95  0091               	movwf	17	;volatile
  9326  0B96                     l3413:
  9327                           
  9328                           ;mcc_generated_files/pin_manager.c: 16:     TRISB = 0xFF;
  9329  0B96  30FF               	movlw	255
  9330  0B97  0092               	movwf	18	;volatile
  9331  0B98                     l3415:
  9332                           
  9333                           ;mcc_generated_files/pin_manager.c: 17:     TRISC = 0xBF;
  9334  0B98  30BF               	movlw	191
  9335  0B99  0093               	movwf	19	;volatile
  9336  0B9A                     l3417:
  9337                           
  9338                           ;mcc_generated_files/pin_manager.c: 22:     ANSELC = 0x27;
  9339  0B9A  3027               	movlw	39
  9340  0B9B  003E               	movlb	30	; select bank30
  9341  0B9C  00CE               	movwf	78	;volatile
  9342  0B9D                     l3419:
  9343                           
  9344                           ;mcc_generated_files/pin_manager.c: 23:     ANSELB = 0xFF;
  9345  0B9D  30FF               	movlw	255
  9346  0B9E  00C3               	movwf	67	;volatile
  9347  0B9F                     l3421:
  9348                           
  9349                           ;mcc_generated_files/pin_manager.c: 24:     ANSELA = 0xF1;
  9350  0B9F  30F1               	movlw	241
  9351  0BA0  00B8               	movwf	56	;volatile
  9352                           
  9353                           ;mcc_generated_files/pin_manager.c: 29:     WPUE = 0x00;
  9354  0BA1  01E5               	clrf	101	;volatile
  9355                           
  9356                           ;mcc_generated_files/pin_manager.c: 30:     WPUB = 0x00;
  9357  0BA2  01C4               	clrf	68	;volatile
  9358                           
  9359                           ;mcc_generated_files/pin_manager.c: 31:     WPUA = 0x00;
  9360  0BA3  01B9               	clrf	57	;volatile
  9361                           
  9362                           ;mcc_generated_files/pin_manager.c: 32:     WPUC = 0x00;
  9363  0BA4  01CF               	clrf	79	;volatile
  9364                           
  9365                           ;mcc_generated_files/pin_manager.c: 37:     ODCONA = 0x00;
  9366  0BA5  01BA               	clrf	58	;volatile
  9367                           
  9368                           ;mcc_generated_files/pin_manager.c: 38:     ODCONB = 0x00;
  9369  0BA6  01C5               	clrf	69	;volatile
  9370                           
  9371                           ;mcc_generated_files/pin_manager.c: 39:     ODCONC = 0x00;
  9372  0BA7  01D0               	clrf	80	;volatile
  9373  0BA8                     l3423:
  9374                           
  9375                           ;mcc_generated_files/pin_manager.c: 44:     SLRCONA = 0xFF;
  9376  0BA8  30FF               	movlw	255
  9377  0BA9  00BB               	movwf	59	;volatile
  9378  0BAA                     l3425:
  9379                           
  9380                           ;mcc_generated_files/pin_manager.c: 45:     SLRCONB = 0xFF;
  9381  0BAA  30FF               	movlw	255
  9382  0BAB  00C6               	movwf	70	;volatile
  9383  0BAC                     l3427:
  9384                           
  9385                           ;mcc_generated_files/pin_manager.c: 46:     SLRCONC = 0xFF;
  9386  0BAC  30FF               	movlw	255
  9387  0BAD  00D1               	movwf	81	;volatile
  9388  0BAE                     l3429:
  9389                           
  9390                           ;mcc_generated_files/pin_manager.c: 51:     INLVLA = 0xFF;
  9391  0BAE  30FF               	movlw	255
  9392  0BAF  00BC               	movwf	60	;volatile
  9393  0BB0                     l3431:
  9394                           
  9395                           ;mcc_generated_files/pin_manager.c: 52:     INLVLB = 0xFF;
  9396  0BB0  30FF               	movlw	255
  9397  0BB1  00C7               	movwf	71	;volatile
  9398  0BB2                     l3433:
  9399                           
  9400                           ;mcc_generated_files/pin_manager.c: 53:     INLVLC = 0xFF;
  9401  0BB2  30FF               	movlw	255
  9402  0BB3  00D2               	movwf	82	;volatile
  9403  0BB4                     l3435:
  9404                           
  9405                           ;mcc_generated_files/pin_manager.c: 54:     INLVLE = 0x08;
  9406  0BB4  3008               	movlw	8
  9407  0BB5  00E8               	movwf	104	;volatile
  9408  0BB6                     l3437:
  9409                           
  9410                           ;mcc_generated_files/pin_manager.c: 56:     RXPPS = 0x17;
  9411  0BB6  3017               	movlw	23
  9412  0BB7  003D               	movlb	29	; select bank29
  9413  0BB8  00CB               	movwf	75	;volatile
  9414  0BB9                     l3439:
  9415                           
  9416                           ;mcc_generated_files/pin_manager.c: 57:     RC6PPS = 0x10;
  9417  0BB9  3010               	movlw	16
  9418  0BBA  003E               	movlb	30	; select bank30
  9419  0BBB  00A6               	movwf	38	;volatile
  9420  0BBC                     l3441:
  9421                           
  9422                           ;mcc_generated_files/pin_manager.c: 58:     SSP1CLKPPS = 0x13;
  9423  0BBC  3013               	movlw	19
  9424  0BBD  003D               	movlb	29	; select bank29
  9425  0BBE  00C5               	movwf	69	;volatile
  9426  0BBF                     l3443:
  9427                           
  9428                           ;mcc_generated_files/pin_manager.c: 59:     RC3PPS = 0x14;
  9429  0BBF  3014               	movlw	20
  9430  0BC0  003E               	movlb	30	; select bank30
  9431  0BC1  00A3               	movwf	35	;volatile
  9432  0BC2                     l3445:
  9433                           
  9434                           ;mcc_generated_files/pin_manager.c: 60:     RC4PPS = 0x15;
  9435  0BC2  3015               	movlw	21
  9436  0BC3  00A4               	movwf	36	;volatile
  9437  0BC4                     l3447:
  9438                           
  9439                           ;mcc_generated_files/pin_manager.c: 61:     SSP1DATPPS = 0x14;
  9440  0BC4  3014               	movlw	20
  9441  0BC5  003D               	movlb	29	; select bank29
  9442  0BC6  00C6               	movwf	70	;volatile
  9443  0BC7                     l247:
  9444  0BC7  0008               	return
  9445  0BC8                     __end_of_PIN_MANAGER_Initialize:
  9446                           
  9447                           	psect	text21
  9448  0910                     __ptext21:	
  9449 ;; *************** function _OSCILLATOR_Initialize *****************
  9450 ;; Defined at:
  9451 ;;		line 15 in file "mcc_generated_files/mcc.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, status,2
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9465 ;;      Params:         0       0       0       0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0
  9468 ;;      Totals:         0       0       0       0       0       0       0       0
  9469 ;;Total ram usage:        0 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    4
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_SYSTEM_Initialize
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _OSCILLATOR_Initialize
  9481  0910                     _OSCILLATOR_Initialize:
  9482  0910                     l3449:	
  9483                           ;incstack = 0
  9484                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9485                           
  9486                           
  9487                           ;mcc_generated_files/mcc.c: 18:     OSCCON1 = 0x62;
  9488  0910  3062               	movlw	98
  9489  0911  0031               	movlb	17	; select bank17
  9490  0912  008D               	movwf	13	;volatile
  9491  0913                     l3451:
  9492                           
  9493                           ;mcc_generated_files/mcc.c: 20:     OSCCON3 = 0x00;
  9494  0913  018F               	clrf	15	;volatile
  9495  0914                     l3453:
  9496                           
  9497                           ;mcc_generated_files/mcc.c: 22:     OSCEN = 0x00;
  9498  0914  0191               	clrf	17	;volatile
  9499                           
  9500                           ;mcc_generated_files/mcc.c: 24:     OSCFRQ = 0x02;
  9501  0915  3002               	movlw	2
  9502  0916  0093               	movwf	19	;volatile
  9503  0917                     l3455:
  9504                           
  9505                           ;mcc_generated_files/mcc.c: 26:     OSCTUNE = 0x00;
  9506  0917  0192               	clrf	18	;volatile
  9507  0918                     l178:
  9508  0918  0008               	return
  9509  0919                     __end_of_OSCILLATOR_Initialize:
  9510                           
  9511                           	psect	text22
  9512  0AF9                     __ptext22:	
  9513 ;; *************** function _EUSART_Initialize *****************
  9514 ;; Defined at:
  9515 ;;		line 29 in file "mcc_generated_files/eusart.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9529 ;;      Params:         0       0       0       0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0
  9532 ;;      Totals:         0       0       0       0       0       0       0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    5
  9536 ;; This function calls:
  9537 ;;		_EUSART_SetErrorHandler
  9538 ;;		_EUSART_SetFramingErrorHandler
  9539 ;;		_EUSART_SetOverrunErrorHandler
  9540 ;;		_EUSART_SetRxInterruptHandler
  9541 ;; This function is called by:
  9542 ;;		_SYSTEM_Initialize
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function _EUSART_Initialize
  9548  0AF9                     _EUSART_Initialize:
  9549  0AF9                     l3385:	
  9550                           ;incstack = 0
  9551                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9552                           
  9553                           
  9554                           ;mcc_generated_files/eusart.c: 32:     PIE3bits.RCIE = 0;
  9555  0AF9  002E               	movlb	14	; select bank14
  9556  0AFA  1299               	bcf	25,5	;volatile
  9557  0AFB                     l3387:
  9558                           
  9559                           ;mcc_generated_files/eusart.c: 33:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  9560  0AFB  30C8               	movlw	low _EUSART_Receive_ISR
  9561  0AFC  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9562  0AFD  300B               	movlw	high _EUSART_Receive_ISR
  9563  0AFE  00F4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9564  0AFF  3188  20ED  318A   	fcall	_EUSART_SetRxInterruptHandler
  9565  0B02                     l3389:
  9566                           
  9567                           ;mcc_generated_files/eusart.c: 37:     BAUD1CON = 0x08;
  9568  0B02  3008               	movlw	8
  9569  0B03  0022               	movlb	2	; select bank2
  9570  0B04  009F               	movwf	31	;volatile
  9571  0B05                     l3391:
  9572                           
  9573                           ;mcc_generated_files/eusart.c: 40:     RC1STA = 0x90;
  9574  0B05  3090               	movlw	144
  9575  0B06  009D               	movwf	29	;volatile
  9576  0B07                     l3393:
  9577                           
  9578                           ;mcc_generated_files/eusart.c: 43:     TX1STA = 0x24;
  9579  0B07  3024               	movlw	36
  9580  0B08  009E               	movwf	30	;volatile
  9581  0B09                     l3395:
  9582                           
  9583                           ;mcc_generated_files/eusart.c: 46:     SP1BRGL = 0x19;
  9584  0B09  3019               	movlw	25
  9585  0B0A  009B               	movwf	27	;volatile
  9586  0B0B                     l3397:
  9587                           
  9588                           ;mcc_generated_files/eusart.c: 49:     SP1BRGH = 0x00;
  9589  0B0B  019C               	clrf	28	;volatile
  9590  0B0C                     l3399:
  9591                           
  9592                           ;mcc_generated_files/eusart.c: 52:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9593  0B0C  3002               	movlw	low _EUSART_DefaultFramingErrorHandler
  9594  0B0D  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9595  0B0E  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  9596  0B0F  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9597  0B10  3188  20E1  318A   	fcall	_EUSART_SetFramingErrorHandler
  9598  0B13                     l3401:
  9599                           
  9600                           ;mcc_generated_files/eusart.c: 53:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9601  0B13  30CB               	movlw	low _EUSART_DefaultOverrunErrorHandler
  9602  0B14  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9603  0B15  3008               	movlw	high _EUSART_DefaultOverrunErrorHandler
  9604  0B16  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9605  0B17  3188  20E7  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9606  0B1A                     l3403:
  9607                           
  9608                           ;mcc_generated_files/eusart.c: 54:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9609  0B1A  30C7               	movlw	low _EUSART_DefaultErrorHandler
  9610  0B1B  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  9611  0B1C  3008               	movlw	high _EUSART_DefaultErrorHandler
  9612  0B1D  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9613  0B1E  3188  20DB  318A   	fcall	_EUSART_SetErrorHandler
  9614                           
  9615                           ;mcc_generated_files/eusart.c: 56:     eusartRxLastError.status = 0;
  9616  0B21  0022               	movlb	2	; select bank2
  9617  0B22  01E7               	clrf	_eusartRxLastError^(0+256)	;volatile
  9618                           
  9619                           ;mcc_generated_files/eusart.c: 59:     eusartRxHead = 0;
  9620  0B23  01FA               	clrf	_eusartRxHead	;volatile
  9621                           
  9622                           ;mcc_generated_files/eusart.c: 60:     eusartRxTail = 0;
  9623  0B24  01F9               	clrf	_eusartRxTail	;volatile
  9624                           
  9625                           ;mcc_generated_files/eusart.c: 61:     eusartRxCount = 0;
  9626  0B25  01F8               	clrf	_eusartRxCount	;volatile
  9627  0B26                     l3405:
  9628                           
  9629                           ;mcc_generated_files/eusart.c: 64:     PIE3bits.RCIE = 1;
  9630  0B26  002E               	movlb	14	; select bank14
  9631  0B27  1699               	bsf	25,5	;volatile
  9632  0B28                     l63:
  9633  0B28  0008               	return
  9634  0B29                     __end_of_EUSART_Initialize:
  9635                           
  9636                           	psect	text23
  9637  08ED                     __ptext23:	
  9638 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9639 ;; Defined at:
  9640 ;;		line 191 in file "mcc_generated_files/eusart.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9643 ;;		 -> EUSART_Receive_ISR(1), 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;		None
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9655 ;;      Params:         2       0       0       0       0       0       0       0
  9656 ;;      Locals:         0       0       0       0       0       0       0       0
  9657 ;;      Temps:          0       0       0       0       0       0       0       0
  9658 ;;      Totals:         2       0       0       0       0       0       0       0
  9659 ;;Total ram usage:        2 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    4
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_EUSART_Initialize
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           
  9670                           ;psect for function _EUSART_SetRxInterruptHandler
  9671  08ED                     _EUSART_SetRxInterruptHandler:
  9672  08ED                     l3325:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9675                           
  9676                           
  9677                           ;mcc_generated_files/eusart.c: 192:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  9678  08ED  0874               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9679  08EE  0024               	movlb	4	; select bank4
  9680  08EF  00CE               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512)
  9681  08F0  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9682  08F1  00CD               	movwf	_EUSART_RxDefaultInterruptHandler^(0+512)
  9683  08F2                     l128:
  9684  08F2  0008               	return
  9685  08F3                     __end_of_EUSART_SetRxInterruptHandler:
  9686                           
  9687                           	psect	text24
  9688  08E7                     __ptext24:	
  9689 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9690 ;; Defined at:
  9691 ;;		line 182 in file "mcc_generated_files/eusart.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9694 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9706 ;;      Params:         2       0       0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0
  9709 ;;      Totals:         2       0       0       0       0       0       0       0
  9710 ;;Total ram usage:        2 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    4
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_EUSART_Initialize
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _EUSART_SetOverrunErrorHandler
  9722  08E7                     _EUSART_SetOverrunErrorHandler:
  9723  08E7                     l3329:	
  9724                           ;incstack = 0
  9725                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9726                           
  9727                           
  9728                           ;mcc_generated_files/eusart.c: 183:     EUSART_OverrunErrorHandler = interruptHandler;
  9729  08E7  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9730  08E8  0024               	movlb	4	; select bank4
  9731  08E9  00CA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+512)
  9732  08EA  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9733  08EB  00C9               	movwf	_EUSART_OverrunErrorHandler^(0+512)
  9734  08EC                     l122:
  9735  08EC  0008               	return
  9736  08ED                     __end_of_EUSART_SetOverrunErrorHandler:
  9737                           
  9738                           	psect	text25
  9739  08E1                     __ptext25:	
  9740 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9741 ;; Defined at:
  9742 ;;		line 178 in file "mcc_generated_files/eusart.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9745 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9757 ;;      Params:         2       0       0       0       0       0       0       0
  9758 ;;      Locals:         0       0       0       0       0       0       0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0       0
  9760 ;;      Totals:         2       0       0       0       0       0       0       0
  9761 ;;Total ram usage:        2 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    4
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_EUSART_Initialize
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           
  9772                           ;psect for function _EUSART_SetFramingErrorHandler
  9773  08E1                     _EUSART_SetFramingErrorHandler:
  9774  08E1                     l3327:	
  9775                           ;incstack = 0
  9776                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9777                           
  9778                           
  9779                           ;mcc_generated_files/eusart.c: 179:     EUSART_FramingErrorHandler = interruptHandler;
  9780  08E1  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9781  08E2  0024               	movlb	4	; select bank4
  9782  08E3  00CC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+512)
  9783  08E4  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9784  08E5  00CB               	movwf	_EUSART_FramingErrorHandler^(0+512)
  9785  08E6                     l119:
  9786  08E6  0008               	return
  9787  08E7                     __end_of_EUSART_SetFramingErrorHandler:
  9788                           
  9789                           	psect	text26
  9790  08DB                     __ptext26:	
  9791 ;; *************** function _EUSART_SetErrorHandler *****************
  9792 ;; Defined at:
  9793 ;;		line 186 in file "mcc_generated_files/eusart.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  9796 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		wreg
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9808 ;;      Params:         2       0       0       0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0       0       0
  9810 ;;      Temps:          0       0       0       0       0       0       0       0
  9811 ;;      Totals:         2       0       0       0       0       0       0       0
  9812 ;;Total ram usage:        2 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    4
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_EUSART_Initialize
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           
  9823                           ;psect for function _EUSART_SetErrorHandler
  9824  08DB                     _EUSART_SetErrorHandler:
  9825  08DB                     l3331:	
  9826                           ;incstack = 0
  9827                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9828                           
  9829                           
  9830                           ;mcc_generated_files/eusart.c: 187:     EUSART_ErrorHandler = interruptHandler;
  9831  08DB  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9832  08DC  0024               	movlb	4	; select bank4
  9833  08DD  00C8               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
  9834  08DE  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9835  08DF  00C7               	movwf	_EUSART_ErrorHandler^(0+512)
  9836  08E0                     l125:
  9837  08E0  0008               	return
  9838  08E1                     __end_of_EUSART_SetErrorHandler:
  9839                           
  9840                           	psect	text27
  9841  0A2D                     __ptext27:	
  9842 ;; *************** function _LCD_Write_String *****************
  9843 ;; Defined at:
  9844 ;;		line 106 in file "I2C_LCD.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  Str             2    1[BANK0 ] PTR unsigned char 
  9847 ;;		 -> STR_15(2), STR_13(3), STR_12(2), STR_11(2), 
  9848 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  9849 ;;		 -> ShowbadBettery(4), STR_3(2), no(1), STR_1(3), 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;  i               2    4[BANK0 ] int 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9861 ;;      Params:         0       2       0       0       0       0       0       0
  9862 ;;      Locals:         0       2       0       0       0       0       0       0
  9863 ;;      Temps:          0       1       0       0       0       0       0       0
  9864 ;;      Totals:         0       5       0       0       0       0       0       0
  9865 ;;Total ram usage:        5 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    9
  9868 ;; This function calls:
  9869 ;;		_LCD_Write_Char
  9870 ;; This function is called by:
  9871 ;;		_main
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           
  9876                           ;psect for function _LCD_Write_String
  9877  0A2D                     _LCD_Write_String:
  9878  0A2D                     l3683:	
  9879                           ;incstack = 0
  9880                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9881                           
  9882                           
  9883                           ;I2C_LCD.c: 106: void LCD_Write_String(char* Str);I2C_LCD.c: 107: {;I2C_LCD.c: 108:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
  9884  0A2D  0020               	movlb	0	; select bank0
  9885  0A2E  01A4               	clrf	LCD_Write_String@i
  9886  0A2F  01A5               	clrf	LCD_Write_String@i+1
  9887  0A30  2A40               	goto	l3689
  9888  0A31                     l3685:
  9889                           
  9890                           ;I2C_LCD.c: 109:     LCD_Write_Char(Str[i]);
  9891  0A31  0821               	movf	LCD_Write_String@Str,w
  9892  0A32  0724               	addwf	LCD_Write_String@i,w
  9893  0A33  0084               	movwf	4
  9894  0A34  0822               	movf	LCD_Write_String@Str+1,w
  9895  0A35  3D25               	addwfc	LCD_Write_String@i+1,w
  9896  0A36  0085               	movwf	5
  9897  0A37  0800               	movf	0,w	;code access
  9898  0A38  3189  21C4  318A   	fcall	_LCD_Write_Char
  9899  0A3B                     l3687:
  9900  0A3B  3001               	movlw	1
  9901  0A3C  0020               	movlb	0	; select bank0
  9902  0A3D  07A4               	addwf	LCD_Write_String@i,f
  9903  0A3E  3000               	movlw	0
  9904  0A3F  3DA5               	addwfc	LCD_Write_String@i+1,f
  9905  0A40                     l3689:
  9906  0A40  0821               	movf	LCD_Write_String@Str,w
  9907  0A41  0724               	addwf	LCD_Write_String@i,w
  9908  0A42  0084               	movwf	4
  9909  0A43  0822               	movf	LCD_Write_String@Str+1,w
  9910  0A44  3D25               	addwfc	LCD_Write_String@i+1,w
  9911  0A45  0085               	movwf	5
  9912  0A46  0012               	moviw fsr0++
  9913  0A47  1D03               	btfss	3,2
  9914  0A48  2A4A               	goto	u3131
  9915  0A49  2A4B               	goto	u3130
  9916  0A4A                     u3131:
  9917  0A4A  2A31               	goto	l3685
  9918  0A4B                     u3130:
  9919  0A4B                     l493:
  9920  0A4B  0008               	return
  9921  0A4C                     __end_of_LCD_Write_String:
  9922                           
  9923                           	psect	text28
  9924  09C4                     __ptext28:	
  9925 ;; *************** function _LCD_Write_Char *****************
  9926 ;; Defined at:
  9927 ;;		line 100 in file "I2C_LCD.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  Data            1    wreg     unsigned char 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  Data            1    0[BANK0 ] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, status,2, status,0, pclath, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9941 ;;      Params:         0       0       0       0       0       0       0       0
  9942 ;;      Locals:         0       1       0       0       0       0       0       0
  9943 ;;      Temps:          1       0       0       0       0       0       0       0
  9944 ;;      Totals:         1       1       0       0       0       0       0       0
  9945 ;;Total ram usage:        2 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    8
  9948 ;; This function calls:
  9949 ;;		_LCD_Write_4Bit
  9950 ;; This function is called by:
  9951 ;;		_LCD_Write_String
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _LCD_Write_Char
  9957  09C4                     _LCD_Write_Char:
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9961                           ;LCD_Write_Char@Data stored from wreg
  9962  09C4  0020               	movlb	0	; select bank0
  9963  09C5  00A0               	movwf	LCD_Write_Char@Data
  9964  09C6                     l3507:
  9965                           
  9966                           ;I2C_LCD.c: 100: void LCD_Write_Char(char Data);I2C_LCD.c: 101: {;I2C_LCD.c: 102:   RS =
      +                           1;
  9967  09C6  0023               	movlb	3	; select bank3
  9968  09C7  01CE               	clrf	_RS^(0+384)
  9969  09C8  0ACE               	incf	_RS^(0+384),f
  9970  09C9                     l3509:
  9971                           
  9972                           ;I2C_LCD.c: 103:   LCD_Write_4Bit(Data & 0xF0);
  9973  09C9  0020               	movlb	0	; select bank0
  9974  09CA  0820               	movf	LCD_Write_Char@Data,w
  9975  09CB  39F0               	andlw	240
  9976  09CC  3189  2194  3189   	fcall	_LCD_Write_4Bit
  9977                           
  9978                           ;I2C_LCD.c: 104:   LCD_Write_4Bit((Data << 4) & 0xF0);
  9979  09CF  0020               	movlb	0	; select bank0
  9980  09D0  0820               	movf	LCD_Write_Char@Data,w
  9981  09D1  00F7               	movwf	??_LCD_Write_Char
  9982  09D2  3003               	movlw	3
  9983  09D3                     u2965:
  9984  09D3  35F7               	lslf	??_LCD_Write_Char,f
  9985  09D4  3EFF               	addlw	-1
  9986  09D5  1D03               	skipz
  9987  09D6  29D3               	goto	u2965
  9988  09D7  3577               	lslf	??_LCD_Write_Char,w
  9989  09D8  39F0               	andlw	240
  9990  09D9  3189  2194  3189   	fcall	_LCD_Write_4Bit
  9991  09DC                     l487:
  9992  09DC  0008               	return
  9993  09DD                     __end_of_LCD_Write_Char:
  9994                           
  9995                           	psect	text29
  9996  0ACA                     __ptext29:	
  9997 ;; *************** function _LCD_Set_Cursor *****************
  9998 ;; Defined at:
  9999 ;;		line 111 in file "I2C_LCD.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  ROW             1    wreg     unsigned char 
 10002 ;;  COL             1    1[BANK0 ] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  ROW             1    4[BANK0 ] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10014 ;;      Params:         0       1       0       0       0       0       0       0
 10015 ;;      Locals:         0       1       0       0       0       0       0       0
 10016 ;;      Temps:          0       2       0       0       0       0       0       0
 10017 ;;      Totals:         0       4       0       0       0       0       0       0
 10018 ;;Total ram usage:        4 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:    9
 10021 ;; This function calls:
 10022 ;;		_LCD_CMD
 10023 ;; This function is called by:
 10024 ;;		_main
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           
 10029                           ;psect for function _LCD_Set_Cursor
 10030  0ACA                     _LCD_Set_Cursor:
 10031                           
 10032                           ;incstack = 0
 10033                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10034                           ;LCD_Set_Cursor@ROW stored from wreg
 10035  0ACA  0020               	movlb	0	; select bank0
 10036  0ACB  00A4               	movwf	LCD_Set_Cursor@ROW
 10037  0ACC                     l3665:
 10038                           
 10039                           ;I2C_LCD.c: 111: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          2: {;I2C_LCD.c: 113:   switch(ROW)
 10040  0ACC  2AE5               	goto	l3675
 10041  0ACD                     l3667:
 10042                           
 10043                           ;I2C_LCD.c: 116:       LCD_CMD(0xC0 + COL-1);
 10044  0ACD  0821               	movf	LCD_Set_Cursor@COL,w
 10045  0ACE  3EBF               	addlw	191
 10046  0ACF  3189  21AC  318A   	fcall	_LCD_CMD
 10047                           
 10048                           ;I2C_LCD.c: 117:       break;
 10049  0AD2  2AF8               	goto	l502
 10050  0AD3                     l3669:
 10051                           
 10052                           ;I2C_LCD.c: 119:       LCD_CMD(0x94 + COL-1);
 10053  0AD3  0821               	movf	LCD_Set_Cursor@COL,w
 10054  0AD4  3E93               	addlw	147
 10055  0AD5  3189  21AC  318A   	fcall	_LCD_CMD
 10056                           
 10057                           ;I2C_LCD.c: 120:       break;
 10058  0AD8  2AF8               	goto	l502
 10059  0AD9                     l3671:
 10060                           
 10061                           ;I2C_LCD.c: 122:       LCD_CMD(0xD4 + COL-1);
 10062  0AD9  0821               	movf	LCD_Set_Cursor@COL,w
 10063  0ADA  3ED3               	addlw	211
 10064  0ADB  3189  21AC  318A   	fcall	_LCD_CMD
 10065                           
 10066                           ;I2C_LCD.c: 123:       break;
 10067  0ADE  2AF8               	goto	l502
 10068  0ADF                     l3673:
 10069                           
 10070                           ;I2C_LCD.c: 126:       LCD_CMD(0x80 + COL-1);
 10071  0ADF  0821               	movf	LCD_Set_Cursor@COL,w
 10072  0AE0  3E7F               	addlw	127
 10073  0AE1  3189  21AC  318A   	fcall	_LCD_CMD
 10074                           
 10075                           ;I2C_LCD.c: 127:   }
 10076  0AE4  2AF8               	goto	l502
 10077  0AE5                     l3675:
 10078  0AE5  0824               	movf	LCD_Set_Cursor@ROW,w
 10079  0AE6  00A2               	movwf	??_LCD_Set_Cursor
 10080  0AE7  01A3               	clrf	??_LCD_Set_Cursor+1
 10081                           
 10082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10083                           ; Switch size 1, requested type "simple"
 10084                           ; Number of cases is 1, Range of values is 0 to 0
 10085                           ; switch strategies available:
 10086                           ; Name         Instructions Cycles
 10087                           ; simple_byte            4     3 (average)
 10088                           ; direct_byte            8     6 (fixed)
 10089                           ; jumptable            260     6 (fixed)
 10090                           ;	Chosen strategy is simple_byte
 10091  0AE8  0823               	movf	??_LCD_Set_Cursor+1,w
 10092  0AE9  3A00               	xorlw	0	; case 0
 10093  0AEA  1903               	skipnz
 10094  0AEB  2AED               	goto	l3987
 10095  0AEC  2ADF               	goto	l3673
 10096  0AED                     l3987:
 10097                           
 10098                           ; Switch size 1, requested type "simple"
 10099                           ; Number of cases is 3, Range of values is 2 to 4
 10100                           ; switch strategies available:
 10101                           ; Name         Instructions Cycles
 10102                           ; simple_byte           10     6 (average)
 10103                           ; direct_byte           15     9 (fixed)
 10104                           ; jumptable            263     9 (fixed)
 10105                           ;	Chosen strategy is simple_byte
 10106  0AED  0822               	movf	??_LCD_Set_Cursor,w
 10107  0AEE  3A02               	xorlw	2	; case 2
 10108  0AEF  1903               	skipnz
 10109  0AF0  2ACD               	goto	l3667
 10110  0AF1  3A01               	xorlw	1	; case 3
 10111  0AF2  1903               	skipnz
 10112  0AF3  2AD3               	goto	l3669
 10113  0AF4  3A07               	xorlw	7	; case 4
 10114  0AF5  1903               	skipnz
 10115  0AF6  2AD9               	goto	l3671
 10116  0AF7  2ADF               	goto	l3673
 10117  0AF8                     l502:
 10118  0AF8  0008               	return
 10119  0AF9                     __end_of_LCD_Set_Cursor:
 10120                           
 10121                           	psect	text30
 10122  0D5D                     __ptext30:	
 10123 ;; *************** function _LCD_Init *****************
 10124 ;; Defined at:
 10125 ;;		line 57 in file "I2C_LCD.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  I2C_Add         1    wreg     unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  I2C_Add         1    2[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0, pclath, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10139 ;;      Params:         0       0       0       0       0       0       0       0
 10140 ;;      Locals:         0       1       0       0       0       0       0       0
 10141 ;;      Temps:          0       1       0       0       0       0       0       0
 10142 ;;      Totals:         0       2       0       0       0       0       0       0
 10143 ;;Total ram usage:        2 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    9
 10146 ;; This function calls:
 10147 ;;		_Delay
 10148 ;;		_IO_Expander_Write
 10149 ;;		_LCD_CMD
 10150 ;; This function is called by:
 10151 ;;		_main
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _LCD_Init
 10157  0D5D                     _LCD_Init:
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10161                           ;LCD_Init@I2C_Add stored from wreg
 10162  0D5D  0020               	movlb	0	; select bank0
 10163  0D5E  00A2               	movwf	LCD_Init@I2C_Add
 10164  0D5F                     l3625:
 10165                           
 10166                           ;I2C_LCD.c: 57: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 58: {;I2C_LCD.c: 59:   i
      +                          2c_add = I2C_Add;
 10167  0D5F  0822               	movf	LCD_Init@I2C_Add,w
 10168  0D60  00A1               	movwf	??_LCD_Init
 10169  0D61  0821               	movf	??_LCD_Init,w
 10170  0D62  0023               	movlb	3	; select bank3
 10171  0D63  00CD               	movwf	_i2c_add^(0+384)
 10172  0D64                     l3627:
 10173                           
 10174                           ;I2C_LCD.c: 60:   IO_Expander_Write(0x00);
 10175  0D64  3000               	movlw	0
 10176  0D65  3189  216E  318D   	fcall	_IO_Expander_Write
 10177  0D68                     l3629:
 10178                           
 10179                           ;I2C_LCD.c: 61:   Delay(3000);
 10180  0D68  30B8               	movlw	184
 10181  0D69  00F3               	movwf	Delay@counter
 10182  0D6A  300B               	movlw	11
 10183  0D6B  00F4               	movwf	Delay@counter+1
 10184  0D6C  3189  212E  318D   	fcall	_Delay
 10185  0D6F                     l3631:
 10186                           
 10187                           ;I2C_LCD.c: 62:   LCD_CMD(0x03);
 10188  0D6F  3003               	movlw	3
 10189  0D70  3189  21AC  318D   	fcall	_LCD_CMD
 10190  0D73                     l3633:
 10191                           
 10192                           ;I2C_LCD.c: 63:   Delay(500);
 10193  0D73  30F4               	movlw	244
 10194  0D74  00F3               	movwf	Delay@counter
 10195  0D75  3001               	movlw	1
 10196  0D76  00F4               	movwf	Delay@counter+1
 10197  0D77  3189  212E  318D   	fcall	_Delay
 10198  0D7A                     l3635:
 10199                           
 10200                           ;I2C_LCD.c: 64:   LCD_CMD(0x03);
 10201  0D7A  3003               	movlw	3
 10202  0D7B  3189  21AC  318D   	fcall	_LCD_CMD
 10203  0D7E                     l3637:
 10204                           
 10205                           ;I2C_LCD.c: 65:   Delay(500);
 10206  0D7E  30F4               	movlw	244
 10207  0D7F  00F3               	movwf	Delay@counter
 10208  0D80  3001               	movlw	1
 10209  0D81  00F4               	movwf	Delay@counter+1
 10210  0D82  3189  212E  318D   	fcall	_Delay
 10211  0D85                     l3639:
 10212                           
 10213                           ;I2C_LCD.c: 66:   LCD_CMD(0x03);
 10214  0D85  3003               	movlw	3
 10215  0D86  3189  21AC  318D   	fcall	_LCD_CMD
 10216  0D89                     l3641:
 10217                           
 10218                           ;I2C_LCD.c: 67:   Delay(500);
 10219  0D89  30F4               	movlw	244
 10220  0D8A  00F3               	movwf	Delay@counter
 10221  0D8B  3001               	movlw	1
 10222  0D8C  00F4               	movwf	Delay@counter+1
 10223  0D8D  3189  212E  318D   	fcall	_Delay
 10224  0D90                     l3643:
 10225                           
 10226                           ;I2C_LCD.c: 68:   LCD_CMD(0x02);
 10227  0D90  3002               	movlw	2
 10228  0D91  3189  21AC  318D   	fcall	_LCD_CMD
 10229  0D94                     l3645:
 10230                           
 10231                           ;I2C_LCD.c: 69:   Delay(500);
 10232  0D94  30F4               	movlw	244
 10233  0D95  00F3               	movwf	Delay@counter
 10234  0D96  3001               	movlw	1
 10235  0D97  00F4               	movwf	Delay@counter+1
 10236  0D98  3189  212E  318D   	fcall	_Delay
 10237  0D9B                     l3647:
 10238                           
 10239                           ;I2C_LCD.c: 70:   LCD_CMD(0x20 | (2 << 2));
 10240  0D9B  3028               	movlw	40
 10241  0D9C  3189  21AC  318D   	fcall	_LCD_CMD
 10242  0D9F                     l3649:
 10243                           
 10244                           ;I2C_LCD.c: 71:   Delay(5000);
 10245  0D9F  3088               	movlw	136
 10246  0DA0  00F3               	movwf	Delay@counter
 10247  0DA1  3013               	movlw	19
 10248  0DA2  00F4               	movwf	Delay@counter+1
 10249  0DA3  3189  212E  318D   	fcall	_Delay
 10250  0DA6                     l3651:
 10251                           
 10252                           ;I2C_LCD.c: 72:   LCD_CMD(0x0C);
 10253  0DA6  300C               	movlw	12
 10254  0DA7  3189  21AC  318D   	fcall	_LCD_CMD
 10255  0DAA                     l3653:
 10256                           
 10257                           ;I2C_LCD.c: 73:   Delay(5000);
 10258  0DAA  3088               	movlw	136
 10259  0DAB  00F3               	movwf	Delay@counter
 10260  0DAC  3013               	movlw	19
 10261  0DAD  00F4               	movwf	Delay@counter+1
 10262  0DAE  3189  212E  318D   	fcall	_Delay
 10263  0DB1                     l3655:
 10264                           
 10265                           ;I2C_LCD.c: 74:   LCD_CMD(0x01);
 10266  0DB1  3001               	movlw	1
 10267  0DB2  3189  21AC  318D   	fcall	_LCD_CMD
 10268  0DB5                     l3657:
 10269                           
 10270                           ;I2C_LCD.c: 75:   Delay(5000);
 10271  0DB5  3088               	movlw	136
 10272  0DB6  00F3               	movwf	Delay@counter
 10273  0DB7  3013               	movlw	19
 10274  0DB8  00F4               	movwf	Delay@counter+1
 10275  0DB9  3189  212E  318D   	fcall	_Delay
 10276  0DBC                     l3659:
 10277                           
 10278                           ;I2C_LCD.c: 76:   LCD_CMD(0x04 | 0x02);
 10279  0DBC  3006               	movlw	6
 10280  0DBD  3189  21AC  318D   	fcall	_LCD_CMD
 10281  0DC0                     l3661:
 10282                           
 10283                           ;I2C_LCD.c: 77:   Delay(5000);
 10284  0DC0  3088               	movlw	136
 10285  0DC1  00F3               	movwf	Delay@counter
 10286  0DC2  3013               	movlw	19
 10287  0DC3  00F4               	movwf	Delay@counter+1
 10288  0DC4  3189  212E  318D   	fcall	_Delay
 10289  0DC7                     l475:
 10290  0DC7  0008               	return
 10291  0DC8                     __end_of_LCD_Init:
 10292                           
 10293                           	psect	text31
 10294  0946                     __ptext31:	
 10295 ;; *************** function _LCD_Clear *****************
 10296 ;; Defined at:
 10297 ;;		line 149 in file "I2C_LCD.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;		None
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;		None
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      void 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, pclath, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10311 ;;      Params:         0       0       0       0       0       0       0       0
 10312 ;;      Locals:         0       0       0       0       0       0       0       0
 10313 ;;      Temps:          0       0       0       0       0       0       0       0
 10314 ;;      Totals:         0       0       0       0       0       0       0       0
 10315 ;;Total ram usage:        0 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:    9
 10318 ;; This function calls:
 10319 ;;		_Delay
 10320 ;;		_LCD_CMD
 10321 ;; This function is called by:
 10322 ;;		_main
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           
 10327                           ;psect for function _LCD_Clear
 10328  0946                     _LCD_Clear:
 10329  0946                     l3663:	
 10330                           ;incstack = 0
 10331                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10332                           
 10333                           
 10334                           ;I2C_LCD.c: 151:   LCD_CMD(0x01);
 10335  0946  3001               	movlw	1
 10336  0947  3189  21AC  3189   	fcall	_LCD_CMD
 10337                           
 10338                           ;I2C_LCD.c: 152:   Delay(40);
 10339  094A  3028               	movlw	40
 10340  094B  00F3               	movwf	Delay@counter
 10341  094C  3000               	movlw	0
 10342  094D  00F4               	movwf	Delay@counter+1
 10343  094E  3189  212E  3189   	fcall	_Delay
 10344  0951                     l517:
 10345  0951  0008               	return
 10346  0952                     __end_of_LCD_Clear:
 10347                           
 10348                           	psect	text32
 10349  09AC                     __ptext32:	
 10350 ;; *************** function _LCD_CMD *****************
 10351 ;; Defined at:
 10352 ;;		line 94 in file "I2C_LCD.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  CMD             1    wreg     unsigned char 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  CMD             1    0[BANK0 ] unsigned char 
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, status,2, status,0, pclath, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10366 ;;      Params:         0       0       0       0       0       0       0       0
 10367 ;;      Locals:         0       1       0       0       0       0       0       0
 10368 ;;      Temps:          1       0       0       0       0       0       0       0
 10369 ;;      Totals:         1       1       0       0       0       0       0       0
 10370 ;;Total ram usage:        2 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    8
 10373 ;; This function calls:
 10374 ;;		_LCD_Write_4Bit
 10375 ;; This function is called by:
 10376 ;;		_LCD_Init
 10377 ;;		_LCD_Set_Cursor
 10378 ;;		_LCD_Clear
 10379 ;;		_LCD_SL
 10380 ;;		_LCD_SR
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           
 10385                           ;psect for function _LCD_CMD
 10386  09AC                     _LCD_CMD:
 10387                           
 10388                           ;incstack = 0
 10389                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 10390                           ;LCD_CMD@CMD stored from wreg
 10391  09AC  0020               	movlb	0	; select bank0
 10392  09AD  00A0               	movwf	LCD_CMD@CMD
 10393  09AE                     l3501:
 10394                           
 10395                           ;I2C_LCD.c: 94: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 95: {;I2C_LCD.c: 96:   RS = 0
      +                          ;
 10396  09AE  0023               	movlb	3	; select bank3
 10397  09AF  01CE               	clrf	_RS^(0+384)
 10398  09B0                     l3503:
 10399                           
 10400                           ;I2C_LCD.c: 97:   LCD_Write_4Bit(CMD & 0xF0);
 10401  09B0  0020               	movlb	0	; select bank0
 10402  09B1  0820               	movf	LCD_CMD@CMD,w
 10403  09B2  39F0               	andlw	240
 10404  09B3  3189  2194  3189   	fcall	_LCD_Write_4Bit
 10405  09B6                     l3505:
 10406                           
 10407                           ;I2C_LCD.c: 98:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 10408  09B6  0020               	movlb	0	; select bank0
 10409  09B7  0820               	movf	LCD_CMD@CMD,w
 10410  09B8  00F7               	movwf	??_LCD_CMD
 10411  09B9  3003               	movlw	3
 10412  09BA                     u2955:
 10413  09BA  35F7               	lslf	??_LCD_CMD,f
 10414  09BB  3EFF               	addlw	-1
 10415  09BC  1D03               	skipz
 10416  09BD  29BA               	goto	u2955
 10417  09BE  3577               	lslf	??_LCD_CMD,w
 10418  09BF  39F0               	andlw	240
 10419  09C0  3189  2194  3189   	fcall	_LCD_Write_4Bit
 10420  09C3                     l484:
 10421  09C3  0008               	return
 10422  09C4                     __end_of_LCD_CMD:
 10423                           
 10424                           	psect	text33
 10425  0994                     __ptext33:	
 10426 ;; *************** function _LCD_Write_4Bit *****************
 10427 ;; Defined at:
 10428 ;;		line 86 in file "I2C_LCD.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  Nibble          1    wreg     unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  Nibble          1    6[COMMON] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2, status,0, pclath, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10442 ;;      Params:         0       0       0       0       0       0       0       0
 10443 ;;      Locals:         1       0       0       0       0       0       0       0
 10444 ;;      Temps:          1       0       0       0       0       0       0       0
 10445 ;;      Totals:         2       0       0       0       0       0       0       0
 10446 ;;Total ram usage:        2 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:    7
 10449 ;; This function calls:
 10450 ;;		_Delay
 10451 ;;		_IO_Expander_Write
 10452 ;; This function is called by:
 10453 ;;		_LCD_CMD
 10454 ;;		_LCD_Write_Char
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           
 10459                           ;psect for function _LCD_Write_4Bit
 10460  0994                     _LCD_Write_4Bit:
 10461                           
 10462                           ;incstack = 0
 10463                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 10464                           ;LCD_Write_4Bit@Nibble stored from wreg
 10465  0994  00F6               	movwf	LCD_Write_4Bit@Nibble
 10466  0995                     l3333:
 10467                           
 10468                           ;I2C_LCD.c: 86: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 87: {;I2C_LCD.c: 89
      +                          :   Nibble |= RS;
 10469  0995  0023               	movlb	3	; select bank3
 10470  0996  084E               	movf	_RS^(0+384),w
 10471  0997  00F5               	movwf	??_LCD_Write_4Bit
 10472  0998  0875               	movf	??_LCD_Write_4Bit,w
 10473  0999  04F6               	iorwf	LCD_Write_4Bit@Nibble,f
 10474  099A                     l3335:
 10475                           
 10476                           ;I2C_LCD.c: 90:   IO_Expander_Write(Nibble | 0x04);
 10477  099A  0876               	movf	LCD_Write_4Bit@Nibble,w
 10478  099B  3804               	iorlw	4
 10479  099C  3189  216E  3189   	fcall	_IO_Expander_Write
 10480  099F                     l3337:
 10481                           
 10482                           ;I2C_LCD.c: 91:   IO_Expander_Write(Nibble & 0xFB);
 10483  099F  0876               	movf	LCD_Write_4Bit@Nibble,w
 10484  09A0  39FB               	andlw	251
 10485  09A1  3189  216E  3189   	fcall	_IO_Expander_Write
 10486  09A4                     l3339:
 10487                           
 10488                           ;I2C_LCD.c: 92:   Delay(50);
 10489  09A4  3032               	movlw	50
 10490  09A5  00F3               	movwf	Delay@counter
 10491  09A6  3000               	movlw	0
 10492  09A7  00F4               	movwf	Delay@counter+1
 10493  09A8  3189  212E  3189   	fcall	_Delay
 10494  09AB                     l481:
 10495  09AB  0008               	return
 10496  09AC                     __end_of_LCD_Write_4Bit:
 10497                           
 10498                           	psect	text34
 10499  096E                     __ptext34:	
 10500 ;; *************** function _IO_Expander_Write *****************
 10501 ;; Defined at:
 10502 ;;		line 79 in file "I2C_LCD.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  Data            1    wreg     unsigned char 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  Data            1    4[COMMON] unsigned char 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0, pclath, cstack
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10516 ;;      Params:         0       0       0       0       0       0       0       0
 10517 ;;      Locals:         1       0       0       0       0       0       0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0
 10519 ;;      Totals:         1       0       0       0       0       0       0       0
 10520 ;;Total ram usage:        1 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    6
 10523 ;; This function calls:
 10524 ;;		_I2C_Master_Start
 10525 ;;		_I2C_Master_Stop
 10526 ;;		_I2C_Master_Write
 10527 ;; This function is called by:
 10528 ;;		_LCD_Init
 10529 ;;		_LCD_Write_4Bit
 10530 ;;		_Backlight
 10531 ;;		_noBacklight
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           
 10536                           ;psect for function _IO_Expander_Write
 10537  096E                     _IO_Expander_Write:
 10538                           
 10539                           ;incstack = 0
 10540                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 10541                           ;IO_Expander_Write@Data stored from wreg
 10542  096E  00F4               	movwf	IO_Expander_Write@Data
 10543  096F                     l3265:
 10544                           
 10545                           ;I2C_LCD.c: 79: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 80: {;I2C_LCD.c: 8
      +                          1:   I2C_Master_Start();
 10546  096F  3188  20CF  3189   	fcall	_I2C_Master_Start
 10547                           
 10548                           ;I2C_LCD.c: 82:   I2C_Master_Write(i2c_add);
 10549  0972  0023               	movlb	3	; select bank3
 10550  0973  084D               	movf	_i2c_add^(0+384),w
 10551  0974  3189  215E  3189   	fcall	_I2C_Master_Write
 10552                           
 10553                           ;I2C_LCD.c: 83:   I2C_Master_Write(Data | BackLight_State);
 10554  0977  0874               	movf	IO_Expander_Write@Data,w
 10555  0978  0024               	movlb	4	; select bank4
 10556  0979  0451               	iorwf	_BackLight_State^(0+512),w
 10557  097A  3189  215E  3189   	fcall	_I2C_Master_Write
 10558                           
 10559                           ;I2C_LCD.c: 84:   I2C_Master_Stop();
 10560  097D  3188  20D5  3189   	fcall	_I2C_Master_Stop
 10561  0980                     l478:
 10562  0980  0008               	return
 10563  0981                     __end_of_IO_Expander_Write:
 10564                           
 10565                           	psect	text35
 10566  095E                     __ptext35:	
 10567 ;; *************** function _I2C_Master_Write *****************
 10568 ;; Defined at:
 10569 ;;		line 37 in file "I2C_LCD.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  data            1    wreg     unsigned char 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  data            1    3[COMMON] unsigned char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      unsigned char 
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10583 ;;      Params:         0       0       0       0       0       0       0       0
 10584 ;;      Locals:         1       0       0       0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0
 10586 ;;      Totals:         1       0       0       0       0       0       0       0
 10587 ;;Total ram usage:        1 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    5
 10590 ;; This function calls:
 10591 ;;		_I2C_Master_Wait
 10592 ;; This function is called by:
 10593 ;;		_IO_Expander_Write
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           
 10598                           ;psect for function _I2C_Master_Write
 10599  095E                     _I2C_Master_Write:
 10600                           
 10601                           ;incstack = 0
 10602                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10603                           ;I2C_Master_Write@data stored from wreg
 10604  095E  00F3               	movwf	I2C_Master_Write@data
 10605  095F                     l3157:
 10606                           
 10607                           ;I2C_LCD.c: 38:   I2C_Master_Wait();
 10608  095F  3189  213A  3189   	fcall	_I2C_Master_Wait
 10609  0962                     l3159:
 10610                           
 10611                           ;I2C_LCD.c: 39:   SSP1BUF = data;
 10612  0962  0873               	movf	I2C_Master_Write@data,w
 10613  0963  0023               	movlb	3	; select bank3
 10614  0964  008C               	movwf	12	;volatile
 10615  0965                     l463:	
 10616                           ;I2C_LCD.c: 40:   while(!PIR3bits.SSP1IF);
 10617                           
 10618  0965  002E               	movlb	14	; select bank14
 10619  0966  1C0F               	btfss	15,0	;volatile
 10620  0967  2969               	goto	u2441
 10621  0968  296A               	goto	u2440
 10622  0969                     u2441:
 10623  0969  2965               	goto	l463
 10624  096A                     u2440:
 10625  096A                     l465:
 10626                           
 10627                           ;I2C_LCD.c: 41:   PIR3bits.SSP1IF = 0;
 10628  096A  100F               	bcf	15,0	;volatile
 10629  096B                     l3161:
 10630                           
 10631                           ;I2C_LCD.c: 42:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
 10632  096B  0023               	movlb	3	; select bank3
 10633  096C  0811               	movf	17,w	;volatile
 10634  096D                     l466:
 10635  096D  0008               	return
 10636  096E                     __end_of_I2C_Master_Write:
 10637                           
 10638                           	psect	text36
 10639  08D5                     __ptext36:	
 10640 ;; *************** function _I2C_Master_Stop *****************
 10641 ;; Defined at:
 10642 ;;		line 20 in file "I2C_LCD.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, pclath, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10656 ;;      Params:         0       0       0       0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0
 10659 ;;      Totals:         0       0       0       0       0       0       0       0
 10660 ;;Total ram usage:        0 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    5
 10663 ;; This function calls:
 10664 ;;		_I2C_Master_Wait
 10665 ;; This function is called by:
 10666 ;;		_IO_Expander_Write
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           
 10671                           ;psect for function _I2C_Master_Stop
 10672  08D5                     _I2C_Master_Stop:
 10673  08D5                     l3153:	
 10674                           ;incstack = 0
 10675                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10676                           
 10677                           
 10678                           ;I2C_LCD.c: 22:   I2C_Master_Wait();
 10679  08D5  3189  213A  3188   	fcall	_I2C_Master_Wait
 10680  08D8                     l3155:
 10681                           
 10682                           ;I2C_LCD.c: 23:   SSP1CON2bits.PEN = 1;
 10683  08D8  0023               	movlb	3	; select bank3
 10684  08D9  1511               	bsf	17,2	;volatile
 10685  08DA                     l454:
 10686  08DA  0008               	return
 10687  08DB                     __end_of_I2C_Master_Stop:
 10688                           
 10689                           	psect	text37
 10690  08CF                     __ptext37:	
 10691 ;; *************** function _I2C_Master_Start *****************
 10692 ;; Defined at:
 10693 ;;		line 10 in file "I2C_LCD.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;		None
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;		None
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, status,2, status,0, pclath, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10707 ;;      Params:         0       0       0       0       0       0       0       0
 10708 ;;      Locals:         0       0       0       0       0       0       0       0
 10709 ;;      Temps:          0       0       0       0       0       0       0       0
 10710 ;;      Totals:         0       0       0       0       0       0       0       0
 10711 ;;Total ram usage:        0 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    5
 10714 ;; This function calls:
 10715 ;;		_I2C_Master_Wait
 10716 ;; This function is called by:
 10717 ;;		_IO_Expander_Write
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _I2C_Master_Start
 10723  08CF                     _I2C_Master_Start:
 10724  08CF                     l3149:	
 10725                           ;incstack = 0
 10726                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10727                           
 10728                           
 10729                           ;I2C_LCD.c: 12:   I2C_Master_Wait();
 10730  08CF  3189  213A  3188   	fcall	_I2C_Master_Wait
 10731  08D2                     l3151:
 10732                           
 10733                           ;I2C_LCD.c: 13:   SSP1CON2bits.SEN = 1;
 10734  08D2  0023               	movlb	3	; select bank3
 10735  08D3  1411               	bsf	17,0	;volatile
 10736  08D4                     l448:
 10737  08D4  0008               	return
 10738  08D5                     __end_of_I2C_Master_Start:
 10739                           
 10740                           	psect	text38
 10741  093A                     __ptext38:	
 10742 ;; *************** function _I2C_Master_Wait *****************
 10743 ;; Defined at:
 10744 ;;		line 6 in file "I2C_LCD.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10758 ;;      Params:         0       0       0       0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    4
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_I2C_Master_Start
 10769 ;;		_I2C_Master_Stop
 10770 ;;		_I2C_Master_Write
 10771 ;;		_I2C_Master_RepeatedStart
 10772 ;;		_I2C_ACK
 10773 ;;		_I2C_NACK
 10774 ;;		_I2C_Read_Byte
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           
 10779                           ;psect for function _I2C_Master_Wait
 10780  093A                     _I2C_Master_Wait:
 10781  093A                     l3127:	
 10782                           ;incstack = 0
 10783                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10784                           
 10785  093A                     l442:	
 10786                           ;I2C_LCD.c: 8:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 10787                           
 10788  093A  0023               	movlb	3	; select bank3
 10789  093B  190F               	btfsc	15,2	;volatile
 10790  093C  293E               	goto	u2401
 10791  093D  293F               	goto	u2400
 10792  093E                     u2401:
 10793  093E  293A               	goto	l442
 10794  093F                     u2400:
 10795  093F                     l3129:
 10796  093F  0811               	movf	17,w	;volatile
 10797  0940  391F               	andlw	31
 10798  0941  1D03               	btfss	3,2
 10799  0942  2944               	goto	u2411
 10800  0943  2945               	goto	u2410
 10801  0944                     u2411:
 10802  0944  293A               	goto	l442
 10803  0945                     u2410:
 10804  0945                     l445:
 10805  0945  0008               	return
 10806  0946                     __end_of_I2C_Master_Wait:
 10807                           
 10808                           	psect	text39
 10809  092E                     __ptext39:	
 10810 ;; *************** function _Delay *****************
 10811 ;; Defined at:
 10812 ;;		line 192 in file "I2C_LCD.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  counter         2    3[COMMON] unsigned int 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg, status,2, status,0
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10826 ;;      Params:         2       0       0       0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0
 10829 ;;      Totals:         2       0       0       0       0       0       0       0
 10830 ;;Total ram usage:        2 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    4
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;;		_LCD_Init
 10838 ;;		_LCD_Write_4Bit
 10839 ;;		_LCD_Clear
 10840 ;;		_LCD_SL
 10841 ;;		_LCD_SR
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           
 10846                           ;psect for function _Delay
 10847  092E                     _Delay:
 10848  092E                     l3259:	
 10849                           ;incstack = 0
 10850                           ; Regs used in _Delay: [wreg+status,2+status,0]
 10851                           
 10852                           
 10853                           ;I2C_LCD.c: 193:   while(counter>0) counter--;
 10854  092E  2933               	goto	l3263
 10855  092F                     l3261:
 10856  092F  3001               	movlw	1
 10857  0930  02F3               	subwf	Delay@counter,f
 10858  0931  3000               	movlw	0
 10859  0932  3BF4               	subwfb	Delay@counter+1,f
 10860  0933                     l3263:
 10861  0933  0873               	movf	Delay@counter,w
 10862  0934  0474               	iorwf	Delay@counter+1,w
 10863  0935  1D03               	btfss	3,2
 10864  0936  2938               	goto	u2711
 10865  0937  2939               	goto	u2710
 10866  0938                     u2711:
 10867  0938  292F               	goto	l3261
 10868  0939                     u2710:
 10869  0939                     l523:
 10870  0939  0008               	return
 10871  093A                     __end_of_Delay:
 10872                           
 10873                           	psect	text40
 10874  05BD                     __ptext40:	
 10875 ;; *************** function _Get_Voltage *****************
 10876 ;; Defined at:
 10877 ;;		line 157 in file "main.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  k               2    3[BANK0 ] int 
 10880 ;; Auto vars:     Size  Location     Type
 10881 ;;		None
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  1    wreg      void 
 10884 ;; Registers used:
 10885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10886 ;; Tracked objects:
 10887 ;;		On entry : 0/0
 10888 ;;		On exit  : 0/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10891 ;;      Params:         0       2       0       0       0       0       0       0
 10892 ;;      Locals:         0       0       0       0       0       0       0       0
 10893 ;;      Temps:          0      17       0       0       0       0       0       0
 10894 ;;      Totals:         0      19       0       0       0       0       0       0
 10895 ;;Total ram usage:       19 bytes
 10896 ;; Hardware stack levels used:    1
 10897 ;; Hardware stack levels required when called:    5
 10898 ;; This function calls:
 10899 ;;		___lwdiv
 10900 ;; This function is called by:
 10901 ;;		_main
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           
 10906                           ;psect for function _Get_Voltage
 10907  05BD                     _Get_Voltage:
 10908  05BD                     l3587:	
 10909                           ;incstack = 0
 10910                           ; Regs used in _Get_Voltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10911                           
 10912                           
 10913                           ;main.c: 158:     Coulomb_Data.Voltage[k] = (Coulomb_Data.Voltage_H[k] << 8) + Coulomb_D
      +                          ata.Voltage_L[k];
 10914  05BD  0020               	movlb	0	; select bank0
 10915  05BE  0824               	movf	Get_Voltage@k+1,w
 10916  05BF  00A6               	movwf	??_Get_Voltage+1
 10917  05C0  0823               	movf	Get_Voltage@k,w
 10918  05C1  00A5               	movwf	??_Get_Voltage
 10919  05C2  35A5               	lslf	??_Get_Voltage,f
 10920  05C3  0DA6               	rlf	??_Get_Voltage+1,f
 10921  05C4  30A4               	movlw	164
 10922  05C5  00A7               	movwf	??_Get_Voltage+2
 10923  05C6  3021               	movlw	33
 10924  05C7  00A8               	movwf	??_Get_Voltage+3
 10925  05C8  0825               	movf	??_Get_Voltage,w
 10926  05C9  0727               	addwf	??_Get_Voltage+2,w
 10927  05CA  0086               	movwf	6
 10928  05CB  0826               	movf	??_Get_Voltage+1,w
 10929  05CC  3D28               	addwfc	??_Get_Voltage+3,w
 10930  05CD  0087               	movwf	7
 10931  05CE  0824               	movf	Get_Voltage@k+1,w
 10932  05CF  00AA               	movwf	??_Get_Voltage+5
 10933  05D0  0823               	movf	Get_Voltage@k,w
 10934  05D1  00A9               	movwf	??_Get_Voltage+4
 10935  05D2  35A9               	lslf	??_Get_Voltage+4,f
 10936  05D3  0DAA               	rlf	??_Get_Voltage+5,f
 10937  05D4  3082               	movlw	130
 10938  05D5  00AB               	movwf	??_Get_Voltage+6
 10939  05D6  3021               	movlw	33
 10940  05D7  00AC               	movwf	??_Get_Voltage+7
 10941  05D8  0829               	movf	??_Get_Voltage+4,w
 10942  05D9  072B               	addwf	??_Get_Voltage+6,w
 10943  05DA  0084               	movwf	4
 10944  05DB  082A               	movf	??_Get_Voltage+5,w
 10945  05DC  3D2C               	addwfc	??_Get_Voltage+7,w
 10946  05DD  0085               	movwf	5
 10947  05DE  3F00               	moviw [0]fsr0
 10948  05DF  00AD               	movwf	??_Get_Voltage+8
 10949  05E0  3F01               	moviw [1]fsr0
 10950  05E1  00AE               	movwf	??_Get_Voltage+9
 10951  05E2  082D               	movf	??_Get_Voltage+8,w
 10952  05E3  00AE               	movwf	??_Get_Voltage+9
 10953  05E4  01AD               	clrf	??_Get_Voltage+8
 10954  05E5  3F40               	moviw [0]fsr1
 10955  05E6  072D               	addwf	??_Get_Voltage+8,w
 10956  05E7  00B0               	movwf	??_Get_Voltage+11
 10957  05E8  3F41               	moviw [1]fsr1
 10958  05E9  3D2E               	addwfc	??_Get_Voltage+9,w
 10959  05EA  00B1               	movwf	??_Get_Voltage+12
 10960  05EB  0824               	movf	Get_Voltage@k+1,w
 10961  05EC  00B3               	movwf	??_Get_Voltage+14
 10962  05ED  0823               	movf	Get_Voltage@k,w
 10963  05EE  00B2               	movwf	??_Get_Voltage+13
 10964  05EF  35B2               	lslf	??_Get_Voltage+13,f
 10965  05F0  0DB3               	rlf	??_Get_Voltage+14,f
 10966  05F1  30CE               	movlw	206
 10967  05F2  00B4               	movwf	??_Get_Voltage+15
 10968  05F3  3021               	movlw	33
 10969  05F4  00B5               	movwf	??_Get_Voltage+16
 10970  05F5  0832               	movf	??_Get_Voltage+13,w
 10971  05F6  0734               	addwf	??_Get_Voltage+15,w
 10972  05F7  0086               	movwf	6
 10973  05F8  0833               	movf	??_Get_Voltage+14,w
 10974  05F9  3D35               	addwfc	??_Get_Voltage+16,w
 10975  05FA  0087               	movwf	7
 10976  05FB  0830               	movf	??_Get_Voltage+11,w
 10977  05FC  3FC0               	movwi [0]fsr1
 10978  05FD  0831               	movf	??_Get_Voltage+12,w
 10979  05FE  3FC1               	movwi [1]fsr1
 10980  05FF                     l3589:
 10981                           
 10982                           ;main.c: 159:     if(Coulomb_Data.Voltage_Point==4) Coulomb_Data.Voltage[k] = Coulomb_Da
      +                          ta.Voltage[k]/10000;
 10983  05FF  30CA               	movlw	202
 10984  0600  0086               	movwf	6
 10985  0601  3021               	movlw	33
 10986  0602  0087               	movwf	7
 10987  0603  0801               	movf	1,w
 10988  0604  390F               	andlw	15
 10989  0605  3A04               	xorlw	4
 10990  0606  1D03               	skipz
 10991  0607  2E09               	goto	u3071
 10992  0608  2E0A               	goto	u3070
 10993  0609                     u3071:
 10994  0609  2E3B               	goto	l3593
 10995  060A                     u3070:
 10996  060A                     l3591:
 10997  060A  3010               	movlw	16
 10998  060B  00F3               	movwf	___lwdiv@divisor
 10999  060C  3027               	movlw	39
 11000  060D  00F4               	movwf	___lwdiv@divisor+1
 11001  060E  0824               	movf	Get_Voltage@k+1,w
 11002  060F  00A6               	movwf	??_Get_Voltage+1
 11003  0610  0823               	movf	Get_Voltage@k,w
 11004  0611  00A5               	movwf	??_Get_Voltage
 11005  0612  35A5               	lslf	??_Get_Voltage,f
 11006  0613  0DA6               	rlf	??_Get_Voltage+1,f
 11007  0614  30CE               	movlw	206
 11008  0615  00A7               	movwf	??_Get_Voltage+2
 11009  0616  3021               	movlw	33
 11010  0617  00A8               	movwf	??_Get_Voltage+3
 11011  0618  0825               	movf	??_Get_Voltage,w
 11012  0619  0727               	addwf	??_Get_Voltage+2,w
 11013  061A  0086               	movwf	6
 11014  061B  0826               	movf	??_Get_Voltage+1,w
 11015  061C  3D28               	addwfc	??_Get_Voltage+3,w
 11016  061D  0087               	movwf	7
 11017  061E  3F40               	moviw [0]fsr1
 11018  061F  00F5               	movwf	___lwdiv@dividend
 11019  0620  3F41               	moviw [1]fsr1
 11020  0621  00F6               	movwf	___lwdiv@dividend+1
 11021  0622  318C  2405  3185   	fcall	___lwdiv
 11022  0625  0020               	movlb	0	; select bank0
 11023  0626  0824               	movf	Get_Voltage@k+1,w
 11024  0627  00AA               	movwf	??_Get_Voltage+5
 11025  0628  0823               	movf	Get_Voltage@k,w
 11026  0629  00A9               	movwf	??_Get_Voltage+4
 11027  062A  35A9               	lslf	??_Get_Voltage+4,f
 11028  062B  0DAA               	rlf	??_Get_Voltage+5,f
 11029  062C  30CE               	movlw	206
 11030  062D  00AB               	movwf	??_Get_Voltage+6
 11031  062E  3021               	movlw	33
 11032  062F  00AC               	movwf	??_Get_Voltage+7
 11033  0630  0829               	movf	??_Get_Voltage+4,w
 11034  0631  072B               	addwf	??_Get_Voltage+6,w
 11035  0632  0086               	movwf	6
 11036  0633  082A               	movf	??_Get_Voltage+5,w
 11037  0634  3D2C               	addwfc	??_Get_Voltage+7,w
 11038  0635  0087               	movwf	7
 11039  0636  0873               	movf	?___lwdiv,w
 11040  0637  3FC0               	movwi [0]fsr1
 11041  0638  0874               	movf	?___lwdiv+1,w
 11042  0639  3FC1               	movwi [1]fsr1
 11043  063A  2EEF               	goto	l402
 11044  063B                     l3593:
 11045  063B  30CA               	movlw	202
 11046  063C  0086               	movwf	6
 11047  063D  3021               	movlw	33
 11048  063E  0087               	movwf	7
 11049  063F  0801               	movf	1,w
 11050  0640  390F               	andlw	15
 11051  0641  3A03               	xorlw	3
 11052  0642  1D03               	skipz
 11053  0643  2E45               	goto	u3081
 11054  0644  2E46               	goto	u3080
 11055  0645                     u3081:
 11056  0645  2E77               	goto	l3597
 11057  0646                     u3080:
 11058  0646                     l3595:
 11059  0646  30E8               	movlw	232
 11060  0647  00F3               	movwf	___lwdiv@divisor
 11061  0648  3003               	movlw	3
 11062  0649  00F4               	movwf	___lwdiv@divisor+1
 11063  064A  0824               	movf	Get_Voltage@k+1,w
 11064  064B  00A6               	movwf	??_Get_Voltage+1
 11065  064C  0823               	movf	Get_Voltage@k,w
 11066  064D  00A5               	movwf	??_Get_Voltage
 11067  064E  35A5               	lslf	??_Get_Voltage,f
 11068  064F  0DA6               	rlf	??_Get_Voltage+1,f
 11069  0650  30CE               	movlw	206
 11070  0651  00A7               	movwf	??_Get_Voltage+2
 11071  0652  3021               	movlw	33
 11072  0653  00A8               	movwf	??_Get_Voltage+3
 11073  0654  0825               	movf	??_Get_Voltage,w
 11074  0655  0727               	addwf	??_Get_Voltage+2,w
 11075  0656  0086               	movwf	6
 11076  0657  0826               	movf	??_Get_Voltage+1,w
 11077  0658  3D28               	addwfc	??_Get_Voltage+3,w
 11078  0659  0087               	movwf	7
 11079  065A  3F40               	moviw [0]fsr1
 11080  065B  00F5               	movwf	___lwdiv@dividend
 11081  065C  3F41               	moviw [1]fsr1
 11082  065D  00F6               	movwf	___lwdiv@dividend+1
 11083  065E  318C  2405  3185   	fcall	___lwdiv
 11084  0661  0020               	movlb	0	; select bank0
 11085  0662  0824               	movf	Get_Voltage@k+1,w
 11086  0663  00AA               	movwf	??_Get_Voltage+5
 11087  0664  0823               	movf	Get_Voltage@k,w
 11088  0665  00A9               	movwf	??_Get_Voltage+4
 11089  0666  35A9               	lslf	??_Get_Voltage+4,f
 11090  0667  0DAA               	rlf	??_Get_Voltage+5,f
 11091  0668  30CE               	movlw	206
 11092  0669  00AB               	movwf	??_Get_Voltage+6
 11093  066A  3021               	movlw	33
 11094  066B  00AC               	movwf	??_Get_Voltage+7
 11095  066C  0829               	movf	??_Get_Voltage+4,w
 11096  066D  072B               	addwf	??_Get_Voltage+6,w
 11097  066E  0086               	movwf	6
 11098  066F  082A               	movf	??_Get_Voltage+5,w
 11099  0670  3D2C               	addwfc	??_Get_Voltage+7,w
 11100  0671  0087               	movwf	7
 11101  0672  0873               	movf	?___lwdiv,w
 11102  0673  3FC0               	movwi [0]fsr1
 11103  0674  0874               	movf	?___lwdiv+1,w
 11104  0675  3FC1               	movwi [1]fsr1
 11105  0676  2EEF               	goto	l402
 11106  0677                     l3597:
 11107  0677  30CA               	movlw	202
 11108  0678  0086               	movwf	6
 11109  0679  3021               	movlw	33
 11110  067A  0087               	movwf	7
 11111  067B  0801               	movf	1,w
 11112  067C  390F               	andlw	15
 11113  067D  3A02               	xorlw	2
 11114  067E  1D03               	skipz
 11115  067F  2E81               	goto	u3091
 11116  0680  2E82               	goto	u3090
 11117  0681                     u3091:
 11118  0681  2EB3               	goto	l3601
 11119  0682                     u3090:
 11120  0682                     l3599:
 11121  0682  3064               	movlw	100
 11122  0683  00F3               	movwf	___lwdiv@divisor
 11123  0684  3000               	movlw	0
 11124  0685  00F4               	movwf	___lwdiv@divisor+1
 11125  0686  0824               	movf	Get_Voltage@k+1,w
 11126  0687  00A6               	movwf	??_Get_Voltage+1
 11127  0688  0823               	movf	Get_Voltage@k,w
 11128  0689  00A5               	movwf	??_Get_Voltage
 11129  068A  35A5               	lslf	??_Get_Voltage,f
 11130  068B  0DA6               	rlf	??_Get_Voltage+1,f
 11131  068C  30CE               	movlw	206
 11132  068D  00A7               	movwf	??_Get_Voltage+2
 11133  068E  3021               	movlw	33
 11134  068F  00A8               	movwf	??_Get_Voltage+3
 11135  0690  0825               	movf	??_Get_Voltage,w
 11136  0691  0727               	addwf	??_Get_Voltage+2,w
 11137  0692  0086               	movwf	6
 11138  0693  0826               	movf	??_Get_Voltage+1,w
 11139  0694  3D28               	addwfc	??_Get_Voltage+3,w
 11140  0695  0087               	movwf	7
 11141  0696  3F40               	moviw [0]fsr1
 11142  0697  00F5               	movwf	___lwdiv@dividend
 11143  0698  3F41               	moviw [1]fsr1
 11144  0699  00F6               	movwf	___lwdiv@dividend+1
 11145  069A  318C  2405  3185   	fcall	___lwdiv
 11146  069D  0020               	movlb	0	; select bank0
 11147  069E  0824               	movf	Get_Voltage@k+1,w
 11148  069F  00AA               	movwf	??_Get_Voltage+5
 11149  06A0  0823               	movf	Get_Voltage@k,w
 11150  06A1  00A9               	movwf	??_Get_Voltage+4
 11151  06A2  35A9               	lslf	??_Get_Voltage+4,f
 11152  06A3  0DAA               	rlf	??_Get_Voltage+5,f
 11153  06A4  30CE               	movlw	206
 11154  06A5  00AB               	movwf	??_Get_Voltage+6
 11155  06A6  3021               	movlw	33
 11156  06A7  00AC               	movwf	??_Get_Voltage+7
 11157  06A8  0829               	movf	??_Get_Voltage+4,w
 11158  06A9  072B               	addwf	??_Get_Voltage+6,w
 11159  06AA  0086               	movwf	6
 11160  06AB  082A               	movf	??_Get_Voltage+5,w
 11161  06AC  3D2C               	addwfc	??_Get_Voltage+7,w
 11162  06AD  0087               	movwf	7
 11163  06AE  0873               	movf	?___lwdiv,w
 11164  06AF  3FC0               	movwi [0]fsr1
 11165  06B0  0874               	movf	?___lwdiv+1,w
 11166  06B1  3FC1               	movwi [1]fsr1
 11167  06B2  2EEF               	goto	l402
 11168  06B3                     l3601:
 11169  06B3  30CA               	movlw	202
 11170  06B4  0086               	movwf	6
 11171  06B5  3021               	movlw	33
 11172  06B6  0087               	movwf	7
 11173  06B7  0801               	movf	1,w
 11174  06B8  390F               	andlw	15
 11175  06B9  3A01               	xorlw	1
 11176  06BA  1D03               	skipz
 11177  06BB  2EBD               	goto	u3101
 11178  06BC  2EBE               	goto	u3100
 11179  06BD                     u3101:
 11180  06BD  2EEF               	goto	l400
 11181  06BE                     u3100:
 11182  06BE                     l3603:
 11183  06BE  300A               	movlw	10
 11184  06BF  00F3               	movwf	___lwdiv@divisor
 11185  06C0  3000               	movlw	0
 11186  06C1  00F4               	movwf	___lwdiv@divisor+1
 11187  06C2  0824               	movf	Get_Voltage@k+1,w
 11188  06C3  00A6               	movwf	??_Get_Voltage+1
 11189  06C4  0823               	movf	Get_Voltage@k,w
 11190  06C5  00A5               	movwf	??_Get_Voltage
 11191  06C6  35A5               	lslf	??_Get_Voltage,f
 11192  06C7  0DA6               	rlf	??_Get_Voltage+1,f
 11193  06C8  30CE               	movlw	206
 11194  06C9  00A7               	movwf	??_Get_Voltage+2
 11195  06CA  3021               	movlw	33
 11196  06CB  00A8               	movwf	??_Get_Voltage+3
 11197  06CC  0825               	movf	??_Get_Voltage,w
 11198  06CD  0727               	addwf	??_Get_Voltage+2,w
 11199  06CE  0086               	movwf	6
 11200  06CF  0826               	movf	??_Get_Voltage+1,w
 11201  06D0  3D28               	addwfc	??_Get_Voltage+3,w
 11202  06D1  0087               	movwf	7
 11203  06D2  3F40               	moviw [0]fsr1
 11204  06D3  00F5               	movwf	___lwdiv@dividend
 11205  06D4  3F41               	moviw [1]fsr1
 11206  06D5  00F6               	movwf	___lwdiv@dividend+1
 11207  06D6  318C  2405  3185   	fcall	___lwdiv
 11208  06D9  0020               	movlb	0	; select bank0
 11209  06DA  0824               	movf	Get_Voltage@k+1,w
 11210  06DB  00AA               	movwf	??_Get_Voltage+5
 11211  06DC  0823               	movf	Get_Voltage@k,w
 11212  06DD  00A9               	movwf	??_Get_Voltage+4
 11213  06DE  35A9               	lslf	??_Get_Voltage+4,f
 11214  06DF  0DAA               	rlf	??_Get_Voltage+5,f
 11215  06E0  30CE               	movlw	206
 11216  06E1  00AB               	movwf	??_Get_Voltage+6
 11217  06E2  3021               	movlw	33
 11218  06E3  00AC               	movwf	??_Get_Voltage+7
 11219  06E4  0829               	movf	??_Get_Voltage+4,w
 11220  06E5  072B               	addwf	??_Get_Voltage+6,w
 11221  06E6  0086               	movwf	6
 11222  06E7  082A               	movf	??_Get_Voltage+5,w
 11223  06E8  3D2C               	addwfc	??_Get_Voltage+7,w
 11224  06E9  0087               	movwf	7
 11225  06EA  0873               	movf	?___lwdiv,w
 11226  06EB  3FC0               	movwi [0]fsr1
 11227  06EC  0874               	movf	?___lwdiv+1,w
 11228  06ED  3FC1               	movwi [1]fsr1
 11229  06EE  2EEF               	goto	l402
 11230  06EF                     l400:
 11231  06EF                     l402:
 11232  06EF  0008               	return
 11233  06F0                     __end_of_Get_Voltage:
 11234                           
 11235                           	psect	text41
 11236  0C05                     __ptext41:	
 11237 ;; *************** function ___lwdiv *****************
 11238 ;; Defined at:
 11239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  divisor         2    3[COMMON] unsigned int 
 11242 ;;  dividend        2    5[COMMON] unsigned int 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  quotient        2    1[BANK0 ] unsigned int 
 11245 ;;  counter         1    0[BANK0 ] unsigned char 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  2    3[COMMON] unsigned int 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11255 ;;      Params:         4       0       0       0       0       0       0       0
 11256 ;;      Locals:         0       3       0       0       0       0       0       0
 11257 ;;      Temps:          1       0       0       0       0       0       0       0
 11258 ;;      Totals:         5       3       0       0       0       0       0       0
 11259 ;;Total ram usage:        8 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    4
 11262 ;; This function calls:
 11263 ;;		Nothing
 11264 ;; This function is called by:
 11265 ;;		_main
 11266 ;;		_Get_Voltage
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           
 11271                           ;psect for function ___lwdiv
 11272  0C05                     ___lwdiv:
 11273  0C05                     l3511:	
 11274                           ;incstack = 0
 11275                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11276                           
 11277  0C05  0020               	movlb	0	; select bank0
 11278  0C06  01A1               	clrf	___lwdiv@quotient
 11279  0C07  01A2               	clrf	___lwdiv@quotient+1
 11280  0C08                     l3513:
 11281  0C08  0873               	movf	___lwdiv@divisor,w
 11282  0C09  0474               	iorwf	___lwdiv@divisor+1,w
 11283  0C0A  1903               	btfsc	3,2
 11284  0C0B  2C0D               	goto	u2971
 11285  0C0C  2C0E               	goto	u2970
 11286  0C0D                     u2971:
 11287  0C0D  2C3D               	goto	l3533
 11288  0C0E                     u2970:
 11289  0C0E                     l3515:
 11290  0C0E  01A0               	clrf	___lwdiv@counter
 11291  0C0F  0AA0               	incf	___lwdiv@counter,f
 11292  0C10  2C1A               	goto	l3521
 11293  0C11                     l3517:
 11294  0C11  3001               	movlw	1
 11295  0C12                     u2985:
 11296  0C12  35F3               	lslf	___lwdiv@divisor,f
 11297  0C13  0DF4               	rlf	___lwdiv@divisor+1,f
 11298  0C14  0B89               	decfsz	9,f
 11299  0C15  2C12               	goto	u2985
 11300  0C16                     l3519:
 11301  0C16  3001               	movlw	1
 11302  0C17  00F7               	movwf	??___lwdiv
 11303  0C18  0877               	movf	??___lwdiv,w
 11304  0C19  07A0               	addwf	___lwdiv@counter,f
 11305  0C1A                     l3521:
 11306  0C1A  1FF4               	btfss	___lwdiv@divisor+1,7
 11307  0C1B  2C1D               	goto	u2991
 11308  0C1C  2C1E               	goto	u2990
 11309  0C1D                     u2991:
 11310  0C1D  2C11               	goto	l3517
 11311  0C1E                     u2990:
 11312  0C1E                     l3523:
 11313  0C1E  3001               	movlw	1
 11314  0C1F                     u3005:
 11315  0C1F  35A1               	lslf	___lwdiv@quotient,f
 11316  0C20  0DA2               	rlf	___lwdiv@quotient+1,f
 11317  0C21  0B89               	decfsz	9,f
 11318  0C22  2C1F               	goto	u3005
 11319  0C23  0874               	movf	___lwdiv@divisor+1,w
 11320  0C24  0276               	subwf	___lwdiv@dividend+1,w
 11321  0C25  1D03               	skipz
 11322  0C26  2C29               	goto	u3015
 11323  0C27  0873               	movf	___lwdiv@divisor,w
 11324  0C28  0275               	subwf	___lwdiv@dividend,w
 11325  0C29                     u3015:
 11326  0C29  1C03               	skipc
 11327  0C2A  2C2C               	goto	u3011
 11328  0C2B  2C2D               	goto	u3010
 11329  0C2C                     u3011:
 11330  0C2C  2C32               	goto	l3529
 11331  0C2D                     u3010:
 11332  0C2D                     l3525:
 11333  0C2D  0873               	movf	___lwdiv@divisor,w
 11334  0C2E  02F5               	subwf	___lwdiv@dividend,f
 11335  0C2F  0874               	movf	___lwdiv@divisor+1,w
 11336  0C30  3BF6               	subwfb	___lwdiv@dividend+1,f
 11337  0C31                     l3527:
 11338  0C31  1421               	bsf	___lwdiv@quotient,0
 11339  0C32                     l3529:
 11340  0C32  3001               	movlw	1
 11341  0C33                     u3025:
 11342  0C33  36F4               	lsrf	___lwdiv@divisor+1,f
 11343  0C34  0CF3               	rrf	___lwdiv@divisor,f
 11344  0C35  0B89               	decfsz	9,f
 11345  0C36  2C33               	goto	u3025
 11346  0C37                     l3531:
 11347  0C37  3001               	movlw	1
 11348  0C38  02A0               	subwf	___lwdiv@counter,f
 11349  0C39  1D03               	btfss	3,2
 11350  0C3A  2C3C               	goto	u3031
 11351  0C3B  2C3D               	goto	u3030
 11352  0C3C                     u3031:
 11353  0C3C  2C1E               	goto	l3523
 11354  0C3D                     u3030:
 11355  0C3D                     l3533:
 11356  0C3D  0822               	movf	___lwdiv@quotient+1,w
 11357  0C3E  00F4               	movwf	?___lwdiv+1
 11358  0C3F  0821               	movf	___lwdiv@quotient,w
 11359  0C40  00F3               	movwf	?___lwdiv
 11360  0C41                     l955:
 11361  0C41  0008               	return
 11362  0C42                     __end_of___lwdiv:
 11363                           
 11364                           	psect	text42
 11365  0A75                     __ptext42:	
 11366 ;; *************** function _EUSART_Read *****************
 11367 ;; Defined at:
 11368 ;;		line 86 in file "mcc_generated_files/eusart.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;		None
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  readValue       1    4[COMMON] unsigned char 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      unsigned char 
 11375 ;; Registers used:
 11376 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11382 ;;      Params:         0       0       0       0       0       0       0       0
 11383 ;;      Locals:         1       0       0       0       0       0       0       0
 11384 ;;      Temps:          1       0       0       0       0       0       0       0
 11385 ;;      Totals:         2       0       0       0       0       0       0       0
 11386 ;;Total ram usage:        2 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    4
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		_main
 11393 ;;		_getch
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           
 11398                           ;psect for function _EUSART_Read
 11399  0A75                     _EUSART_Read:
 11400  0A75                     l3549:	
 11401                           ;incstack = 0
 11402                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11403                           
 11404  0A75                     l3551:	
 11405                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 11406                           
 11407                           
 11408                           ;mcc_generated_files/eusart.c: 90:     while(0 == eusartRxCount)
 11409  0A75  0878               	movf	_eusartRxCount,w	;volatile
 11410  0A76  1903               	btfsc	3,2
 11411  0A77  2A79               	goto	u3051
 11412  0A78  2A7A               	goto	u3050
 11413  0A79                     u3051:
 11414  0A79  2A75               	goto	l3551
 11415  0A7A                     u3050:
 11416  0A7A                     l3553:
 11417                           
 11418                           ;mcc_generated_files/eusart.c: 94:     eusartRxLastError = eusartRxStatusBuffer[eusartRx
      +                          Tail];
 11419  0A7A  0879               	movf	_eusartRxTail,w	;volatile
 11420  0A7B  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11421  0A7C  0086               	movwf	6
 11422  0A7D  3001               	movlw	1	; select bank3/4
 11423  0A7E  0087               	movwf	7
 11424  0A7F  0801               	movf	1,w
 11425  0A80  00F3               	movwf	??_EUSART_Read
 11426  0A81  0873               	movf	??_EUSART_Read,w
 11427  0A82  0022               	movlb	2	; select bank2
 11428  0A83  00E7               	movwf	_eusartRxLastError^(0+256)	;volatile
 11429                           
 11430                           ;mcc_generated_files/eusart.c: 96:     readValue = eusartRxBuffer[eusartRxTail++];
 11431  0A84  0879               	movf	_eusartRxTail,w
 11432  0A85  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11433  0A86  0086               	movwf	6
 11434  0A87  3002               	movlw	2	; select bank4/5
 11435  0A88  0087               	movwf	7
 11436  0A89  0801               	movf	1,w
 11437  0A8A  00F3               	movwf	??_EUSART_Read
 11438  0A8B  0873               	movf	??_EUSART_Read,w
 11439  0A8C  00F4               	movwf	EUSART_Read@readValue
 11440  0A8D                     l3555:
 11441  0A8D  3001               	movlw	1
 11442  0A8E  00F3               	movwf	??_EUSART_Read
 11443  0A8F  0873               	movf	??_EUSART_Read,w
 11444  0A90  07F9               	addwf	_eusartRxTail,f	;volatile
 11445  0A91                     l3557:
 11446                           
 11447                           ;mcc_generated_files/eusart.c: 97:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11448  0A91  3027               	movlw	39
 11449  0A92  0279               	subwf	_eusartRxTail,w	;volatile
 11450  0A93  1C03               	skipc
 11451  0A94  2A96               	goto	u3061
 11452  0A95  2A97               	goto	u3060
 11453  0A96                     u3061:
 11454  0A96  2A98               	goto	l3561
 11455  0A97                     u3060:
 11456  0A97                     l3559:
 11457                           
 11458                           ;mcc_generated_files/eusart.c: 98:     {;mcc_generated_files/eusart.c: 99:         eusar
      +                          tRxTail = 0;
 11459  0A97  01F9               	clrf	_eusartRxTail	;volatile
 11460  0A98                     l3561:
 11461                           
 11462                           ;mcc_generated_files/eusart.c: 101:     PIE3bits.RCIE = 0;
 11463  0A98  002E               	movlb	14	; select bank14
 11464  0A99  1299               	bcf	25,5	;volatile
 11465  0A9A                     l3563:
 11466                           
 11467                           ;mcc_generated_files/eusart.c: 102:     eusartRxCount--;
 11468  0A9A  3001               	movlw	1
 11469  0A9B  02F8               	subwf	_eusartRxCount,f	;volatile
 11470  0A9C                     l3565:
 11471                           
 11472                           ;mcc_generated_files/eusart.c: 103:     PIE3bits.RCIE = 1;
 11473  0A9C  1699               	bsf	25,5	;volatile
 11474  0A9D                     l3567:
 11475                           
 11476                           ;mcc_generated_files/eusart.c: 105:     return readValue;
 11477  0A9D  0874               	movf	EUSART_Read@readValue,w
 11478  0A9E                     l84:
 11479  0A9E  0008               	return
 11480  0A9F                     __end_of_EUSART_Read:
 11481                           
 11482                           	psect	text43
 11483  0CF2                     __ptext43:	
 11484 ;; *************** function _BadBetteryFilter *****************
 11485 ;; Defined at:
 11486 ;;		line 178 in file "main.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;		None
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;  k               2   14[BANK0 ] int 
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11500 ;;      Params:         0       0       0       0       0       0       0       0
 11501 ;;      Locals:         0       2       0       0       0       0       0       0
 11502 ;;      Temps:          0       6       0       0       0       0       0       0
 11503 ;;      Totals:         0       8       0       0       0       0       0       0
 11504 ;;Total ram usage:        8 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:    5
 11507 ;; This function calls:
 11508 ;;		_Sort
 11509 ;; This function is called by:
 11510 ;;		_main
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _BadBetteryFilter
 11516  0CF2                     _BadBetteryFilter:
 11517  0CF2                     l3607:	
 11518                           ;incstack = 0
 11519                           ; Regs used in _BadBetteryFilter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11520                           
 11521                           
 11522                           ;main.c: 179:     Sort();
 11523  0CF2  318D  25C8  318C   	fcall	_Sort
 11524  0CF5                     l3609:
 11525                           
 11526                           ;main.c: 180:     for(int k=0;k<=16;k++){
 11527  0CF5  0020               	movlb	0	; select bank0
 11528  0CF6  01AE               	clrf	BadBetteryFilter@k
 11529  0CF7  01AF               	clrf	BadBetteryFilter@k+1
 11530  0CF8                     l3615:
 11531                           
 11532                           ;main.c: 181:         if((Voltage_sort[16]-Coulomb_Data.Voltage[k])>=150) badBettery[k]=
      +                          1;
 11533  0CF8  0020               	movlb	0	; select bank0
 11534  0CF9  082F               	movf	BadBetteryFilter@k+1,w
 11535  0CFA  00A9               	movwf	??_BadBetteryFilter+1
 11536  0CFB  082E               	movf	BadBetteryFilter@k,w
 11537  0CFC  00A8               	movwf	??_BadBetteryFilter
 11538  0CFD  35A8               	lslf	??_BadBetteryFilter,f
 11539  0CFE  0DA9               	rlf	??_BadBetteryFilter+1,f
 11540  0CFF  30CE               	movlw	206
 11541  0D00  00AA               	movwf	??_BadBetteryFilter+2
 11542  0D01  3021               	movlw	33
 11543  0D02  00AB               	movwf	??_BadBetteryFilter+3
 11544  0D03  0828               	movf	??_BadBetteryFilter,w
 11545  0D04  072A               	addwf	??_BadBetteryFilter+2,w
 11546  0D05  0086               	movwf	6
 11547  0D06  0829               	movf	??_BadBetteryFilter+1,w
 11548  0D07  3D2B               	addwfc	??_BadBetteryFilter+3,w
 11549  0D08  0087               	movwf	7
 11550  0D09  3020               	movlw	32
 11551  0D0A  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11552  0D0B  0084               	movwf	4
 11553  0D0C  3001               	movlw	1	; select bank2/3
 11554  0D0D  0085               	movwf	5
 11555  0D0E  3F40               	moviw [0]fsr1
 11556  0D0F  0200               	subwf	0,w
 11557  0D10  00AC               	movwf	??_BadBetteryFilter+4
 11558  0D11  3101               	addfsr 0,1
 11559  0D12  3F41               	moviw [1]fsr1
 11560  0D13  3B00               	subwfb	0,w
 11561  0D14  00AD               	movwf	??_BadBetteryFilter+5
 11562  0D15  3000               	movlw	0
 11563  0D16  022D               	subwf	??_BadBetteryFilter+5,w
 11564  0D17  3096               	movlw	150
 11565  0D18  1903               	skipnz
 11566  0D19  022C               	subwf	??_BadBetteryFilter+4,w
 11567  0D1A  1C03               	skipc
 11568  0D1B  2D1D               	goto	u3111
 11569  0D1C  2D1E               	goto	u3110
 11570  0D1D                     u3111:
 11571  0D1D  2D26               	goto	l3619
 11572  0D1E                     u3110:
 11573  0D1E                     l3617:
 11574  0D1E  352E               	lslf	BadBetteryFilter@k,w
 11575  0D1F  3EA0               	addlw	(low (_badBettery| 0))& (0+255)
 11576  0D20  0086               	movwf	6
 11577  0D21  0187               	clrf	7
 11578  0D22  3001               	movlw	1
 11579  0D23  3FC0               	movwi [0]fsr1
 11580  0D24  3000               	movlw	0
 11581  0D25  3FC1               	movwi [1]fsr1
 11582  0D26                     l3619:
 11583                           
 11584                           ;main.c: 182:         diffBettery[k]=Voltage_sort[16]-Coulomb_Data.Voltage[k];
 11585  0D26  082F               	movf	BadBetteryFilter@k+1,w
 11586  0D27  00A9               	movwf	??_BadBetteryFilter+1
 11587  0D28  082E               	movf	BadBetteryFilter@k,w
 11588  0D29  00A8               	movwf	??_BadBetteryFilter
 11589  0D2A  35A8               	lslf	??_BadBetteryFilter,f
 11590  0D2B  0DA9               	rlf	??_BadBetteryFilter+1,f
 11591  0D2C  30CE               	movlw	206
 11592  0D2D  00AA               	movwf	??_BadBetteryFilter+2
 11593  0D2E  3021               	movlw	33
 11594  0D2F  00AB               	movwf	??_BadBetteryFilter+3
 11595  0D30  0828               	movf	??_BadBetteryFilter,w
 11596  0D31  072A               	addwf	??_BadBetteryFilter+2,w
 11597  0D32  0086               	movwf	6
 11598  0D33  0829               	movf	??_BadBetteryFilter+1,w
 11599  0D34  3D2B               	addwfc	??_BadBetteryFilter+3,w
 11600  0D35  0087               	movwf	7
 11601  0D36  3020               	movlw	32
 11602  0D37  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11603  0D38  0084               	movwf	4
 11604  0D39  3001               	movlw	1	; select bank2/3
 11605  0D3A  0085               	movwf	5
 11606  0D3B  3F40               	moviw [0]fsr1
 11607  0D3C  0200               	subwf	0,w
 11608  0D3D  00AC               	movwf	??_BadBetteryFilter+4
 11609  0D3E  3101               	addfsr 0,1
 11610  0D3F  3F41               	moviw [1]fsr1
 11611  0D40  3B00               	subwfb	0,w
 11612  0D41  00AD               	movwf	??_BadBetteryFilter+5
 11613  0D42  352E               	lslf	BadBetteryFilter@k,w
 11614  0D43  3E20               	addlw	(low (_diffBettery| (0+256)))& (0+255)
 11615  0D44  0086               	movwf	6
 11616  0D45  3001               	movlw	1	; select bank2/3
 11617  0D46  0087               	movwf	7
 11618  0D47  082C               	movf	??_BadBetteryFilter+4,w
 11619  0D48  3FC0               	movwi [0]fsr1
 11620  0D49  082D               	movf	??_BadBetteryFilter+5,w
 11621  0D4A  3FC1               	movwi [1]fsr1
 11622  0D4B                     l3621:
 11623                           
 11624                           ;main.c: 183:     }
 11625  0D4B  3001               	movlw	1
 11626  0D4C  07AE               	addwf	BadBetteryFilter@k,f
 11627  0D4D  3000               	movlw	0
 11628  0D4E  3DAF               	addwfc	BadBetteryFilter@k+1,f
 11629  0D4F                     l3623:
 11630  0D4F  082F               	movf	BadBetteryFilter@k+1,w
 11631  0D50  3A80               	xorlw	128
 11632  0D51  00A8               	movwf	??_BadBetteryFilter
 11633  0D52  3080               	movlw	128
 11634  0D53  0228               	subwf	??_BadBetteryFilter,w
 11635  0D54  1D03               	skipz
 11636  0D55  2D58               	goto	u3125
 11637  0D56  3011               	movlw	17
 11638  0D57  022E               	subwf	BadBetteryFilter@k,w
 11639  0D58                     u3125:
 11640  0D58  1C03               	skipc
 11641  0D59  2D5B               	goto	u3121
 11642  0D5A  2D5C               	goto	u3120
 11643  0D5B                     u3121:
 11644  0D5B  2CF8               	goto	l3615
 11645  0D5C                     u3120:
 11646  0D5C                     l417:
 11647  0D5C  0008               	return
 11648  0D5D                     __end_of_BadBetteryFilter:
 11649                           
 11650                           	psect	text44
 11651  0DC8                     __ptext44:	
 11652 ;; *************** function _Sort *****************
 11653 ;; Defined at:
 11654 ;;		line 165 in file "main.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;		None
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  j               2    6[BANK0 ] int 
 11659 ;;  i               2    4[BANK0 ] int 
 11660 ;;  n               2    0        int 
 11661 ;;  tmp             2    0[BANK0 ] int 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1    wreg      void 
 11664 ;; Registers used:
 11665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11671 ;;      Params:         0       0       0       0       0       0       0       0
 11672 ;;      Locals:         0       8       0       0       0       0       0       0
 11673 ;;      Temps:          4       0       0       0       0       0       0       0
 11674 ;;      Totals:         4       8       0       0       0       0       0       0
 11675 ;;Total ram usage:       12 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:    4
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_BadBetteryFilter
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           
 11686                           ;psect for function _Sort
 11687  0DC8                     _Sort:
 11688  0DC8                     l3477:	
 11689                           ;incstack = 0
 11690                           ; Regs used in _Sort: [wreg-fsr1h+status,2+status,0]
 11691                           
 11692  0DC8                     l3479:
 11693                           
 11694                           ;main.c: 168:     for(i = n-1; i > 0; i--){
 11695  0DC8  3010               	movlw	16
 11696  0DC9  0020               	movlb	0	; select bank0
 11697  0DCA  00A4               	movwf	Sort@i
 11698  0DCB  3000               	movlw	0
 11699  0DCC  00A5               	movwf	Sort@i+1
 11700  0DCD                     l3485:
 11701                           
 11702                           ;main.c: 169:         for(j = 0; j <= i-1; j++){
 11703  0DCD  0020               	movlb	0	; select bank0
 11704  0DCE  01A6               	clrf	Sort@j
 11705  0DCF  01A7               	clrf	Sort@j+1
 11706  0DD0  2E12               	goto	l3497
 11707  0DD1                     l3487:
 11708                           
 11709                           ;main.c: 170:             if( Voltage_sort[j] > Voltage_sort[j+1]){
 11710  0DD1  0020               	movlb	0	; select bank0
 11711  0DD2  3526               	lslf	Sort@j,w
 11712  0DD3  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11713  0DD4  0086               	movwf	6
 11714  0DD5  3001               	movlw	1	; select bank2/3
 11715  0DD6  0087               	movwf	7
 11716  0DD7  3F40               	moviw [0]fsr1
 11717  0DD8  00F3               	movwf	??_Sort
 11718  0DD9  3F41               	moviw [1]fsr1
 11719  0DDA  00F4               	movwf	??_Sort+1
 11720  0DDB  3526               	lslf	Sort@j,w
 11721  0DDC  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11722  0DDD  0086               	movwf	6
 11723  0DDE  3001               	movlw	1	; select bank2/3
 11724  0DDF  0087               	movwf	7
 11725  0DE0  3F40               	moviw [0]fsr1
 11726  0DE1  00F5               	movwf	??_Sort+2
 11727  0DE2  3F41               	moviw [1]fsr1
 11728  0DE3  00F6               	movwf	??_Sort+3
 11729  0DE4  0874               	movf	??_Sort+1,w
 11730  0DE5  0276               	subwf	??_Sort+3,w
 11731  0DE6  1D03               	skipz
 11732  0DE7  2DEA               	goto	u2925
 11733  0DE8  0873               	movf	??_Sort,w
 11734  0DE9  0275               	subwf	??_Sort+2,w
 11735  0DEA                     u2925:
 11736  0DEA  1803               	skipnc
 11737  0DEB  2DED               	goto	u2921
 11738  0DEC  2DEE               	goto	u2920
 11739  0DED                     u2921:
 11740  0DED  2E0E               	goto	l3495
 11741  0DEE                     u2920:
 11742  0DEE                     l3489:
 11743                           
 11744                           ;main.c: 171:                 tmp = Voltage_sort [j];
 11745  0DEE  3526               	lslf	Sort@j,w
 11746  0DEF  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11747  0DF0  0086               	movwf	6
 11748  0DF1  3001               	movlw	1	; select bank2/3
 11749  0DF2  0087               	movwf	7
 11750  0DF3  3F40               	moviw [0]fsr1
 11751  0DF4  00A0               	movwf	Sort@tmp
 11752  0DF5  3F41               	moviw [1]fsr1
 11753  0DF6  00A1               	movwf	Sort@tmp+1
 11754  0DF7                     l3491:
 11755                           
 11756                           ;main.c: 172:                 Voltage_sort[j] = Voltage_sort[j+1];
 11757  0DF7  3526               	lslf	Sort@j,w
 11758  0DF8  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11759  0DF9  0086               	movwf	6
 11760  0DFA  3001               	movlw	1	; select bank2/3
 11761  0DFB  0087               	movwf	7
 11762  0DFC  3526               	lslf	Sort@j,w
 11763  0DFD  3E42               	addlw	(low (_Voltage_sort| (0+256)))& (0+255)
 11764  0DFE  0084               	movwf	4
 11765  0DFF  3001               	movlw	1	; select bank2/3
 11766  0E00  0085               	movwf	5
 11767  0E01  3F40               	moviw [0]fsr1
 11768  0E02  3F80               	movwi [0]fsr0
 11769  0E03  3F41               	moviw [1]fsr1
 11770  0E04  3F81               	movwi [1]fsr0
 11771  0E05                     l3493:
 11772                           
 11773                           ;main.c: 173:                 Voltage_sort[j+1] = tmp;
 11774  0E05  3526               	lslf	Sort@j,w
 11775  0E06  3E44               	addlw	(low ((_Voltage_sort| (0+256)+2)))& (0+255)
 11776  0E07  0086               	movwf	6
 11777  0E08  3001               	movlw	1	; select bank2/3
 11778  0E09  0087               	movwf	7
 11779  0E0A  0820               	movf	Sort@tmp,w
 11780  0E0B  3FC0               	movwi [0]fsr1
 11781  0E0C  0821               	movf	Sort@tmp+1,w
 11782  0E0D  3FC1               	movwi [1]fsr1
 11783  0E0E                     l3495:
 11784                           
 11785                           ;main.c: 175:         }
 11786  0E0E  3001               	movlw	1
 11787  0E0F  07A6               	addwf	Sort@j,f
 11788  0E10  3000               	movlw	0
 11789  0E11  3DA7               	addwfc	Sort@j+1,f
 11790  0E12                     l3497:
 11791  0E12  0824               	movf	Sort@i,w
 11792  0E13  3EFF               	addlw	255
 11793  0E14  00F3               	movwf	??_Sort
 11794  0E15  30FF               	movlw	255
 11795  0E16  3D25               	addwfc	Sort@i+1,w
 11796  0E17  00F4               	movwf	??_Sort+1
 11797  0E18  0874               	movf	??_Sort+1,w
 11798  0E19  3A80               	xorlw	128
 11799  0E1A  00F5               	movwf	??_Sort+2
 11800  0E1B  0827               	movf	Sort@j+1,w
 11801  0E1C  3A80               	xorlw	128
 11802  0E1D  0275               	subwf	??_Sort+2,w
 11803  0E1E  1D03               	skipz
 11804  0E1F  2E22               	goto	u2935
 11805  0E20  0826               	movf	Sort@j,w
 11806  0E21  0273               	subwf	??_Sort,w
 11807  0E22                     u2935:
 11808  0E22  1803               	skipnc
 11809  0E23  2E25               	goto	u2931
 11810  0E24  2E26               	goto	u2930
 11811  0E25                     u2931:
 11812  0E25  2DD1               	goto	l3487
 11813  0E26                     u2930:
 11814  0E26                     l3499:
 11815                           
 11816                           ;main.c: 176:     }
 11817  0E26  30FF               	movlw	255
 11818  0E27  0020               	movlb	0	; select bank0
 11819  0E28  07A4               	addwf	Sort@i,f
 11820  0E29  30FF               	movlw	255
 11821  0E2A  3DA5               	addwfc	Sort@i+1,f
 11822  0E2B  0825               	movf	Sort@i+1,w
 11823  0E2C  3A80               	xorlw	128
 11824  0E2D  00F3               	movwf	??_Sort
 11825  0E2E  3080               	movlw	128
 11826  0E2F  0273               	subwf	??_Sort,w
 11827  0E30  1D03               	skipz
 11828  0E31  2E34               	goto	u2945
 11829  0E32  3001               	movlw	1
 11830  0E33  0224               	subwf	Sort@i,w
 11831  0E34                     u2945:
 11832  0E34  1803               	skipnc
 11833  0E35  2E37               	goto	u2941
 11834  0E36  2E38               	goto	u2940
 11835  0E37                     u2941:
 11836  0E37  2DCD               	goto	l3485
 11837  0E38                     u2940:
 11838  0E38                     l411:
 11839  0E38  0008               	return
 11840  0E39                     __end_of_Sort:
 11841                           
 11842                           	psect	intentry
 11843  0004                     __pintentry:	
 11844 ;; *************** function _INTERRUPT_InterruptManager *****************
 11845 ;; Defined at:
 11846 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;		None
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11860 ;;      Params:         0       0       0       0       0       0       0       0
 11861 ;;      Locals:         0       0       0       0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0
 11863 ;;      Totals:         0       0       0       0       0       0       0       0
 11864 ;;Total ram usage:        0 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    3
 11867 ;; This function calls:
 11868 ;;		Absolute function
 11869 ;;		_EUSART_Receive_ISR
 11870 ;; This function is called by:
 11871 ;;		Interrupt level 1
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875  0004                     _INTERRUPT_InterruptManager:
 11876                           
 11877                           ;incstack = 0
 11878  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11879                           
 11880                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11881  0005  3180               	pagesel	$
 11882  0006                     i1l2847:
 11883                           
 11884                           ;mcc_generated_files/interrupt_manager.c: 59:     if(INTCONbits.PEIE == 1)
 11885  0006  1F0B               	btfss	11,6	;volatile
 11886  0007  2809               	goto	u208_21
 11887  0008  280A               	goto	u208_20
 11888  0009                     u208_21:
 11889  0009  2825               	goto	i1l308
 11890  000A                     u208_20:
 11891  000A                     i1l2849:
 11892                           
 11893                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 11894  000A  002E               	movlb	14	; select bank14
 11895  000B  1E99               	btfss	25,5	;volatile
 11896  000C  280E               	goto	u209_21
 11897  000D  280F               	goto	u209_20
 11898  000E                     u209_21:
 11899  000E  2825               	goto	i1l308
 11900  000F                     u209_20:
 11901  000F                     i1l2851:
 11902  000F  1E8F               	btfss	15,5	;volatile
 11903  0010  2812               	goto	u210_21
 11904  0011  2813               	goto	u210_20
 11905  0012                     u210_21:
 11906  0012  2825               	goto	i1l308
 11907  0013                     u210_20:
 11908  0013                     i1l2853:
 11909                           
 11910                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 11911  0013  0024               	movlb	4	; select bank4
 11912  0014  084E               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512),w
 11913  0015  008A               	movwf	10
 11914  0016  084D               	movf	_EUSART_RxDefaultInterruptHandler^(0+512),w
 11915  0017  000A               	callw
 11916  0018  3180               	pagesel	$
 11917  0019                     i1l2855:
 11918  0019  1003               	clrc
 11919  001A  0020               	movlb	0	; select bank0
 11920  001B  1C96               	btfss	22,1	;volatile
 11921  001C  1403               	setc
 11922  001D  1803               	btfsc	3,0
 11923  001E  2820               	goto	u211_21
 11924  001F  2823               	goto	u211_20
 11925  0020                     u211_21:
 11926  0020  0020               	movlb	0	; select bank0
 11927  0021  1496               	bsf	22,1	;volatile
 11928  0022  2825               	goto	u212_24
 11929  0023                     u211_20:
 11930  0023  0020               	movlb	0	; select bank0
 11931  0024  1096               	bcf	22,1	;volatile
 11932  0025                     u212_24:
 11933  0025                     i1l308:
 11934  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11935  0026  0009               	retfie
 11936  0027                     __end_of_INTERRUPT_InterruptManager:
 11937                           
 11938                           	psect	text46
 11939  0BC8                     __ptext46:	
 11940 ;; *************** function _EUSART_Receive_ISR *****************
 11941 ;; Defined at:
 11942 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      void 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11956 ;;      Params:         0       0       0       0       0       0       0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    2
 11963 ;; This function calls:
 11964 ;;		Absolute function
 11965 ;;		_EUSART_DefaultErrorHandler
 11966 ;;		_EUSART_DefaultFramingErrorHandler
 11967 ;;		_EUSART_DefaultOverrunErrorHandler
 11968 ;;		_EUSART_RxDataHandler
 11969 ;; This function is called by:
 11970 ;;		_EUSART_Initialize
 11971 ;;		_INTERRUPT_InterruptManager
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           
 11976                           ;psect for function _EUSART_Receive_ISR
 11977  0BC8                     _EUSART_Receive_ISR:
 11978  0BC8                     i1l2671:	
 11979                           ;incstack = 0
 11980                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11981                           
 11982                           
 11983                           ;mcc_generated_files/eusart.c: 131:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11984  0BC8  087A               	movf	_eusartRxHead,w	;volatile
 11985  0BC9  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11986  0BCA  0086               	movwf	6
 11987  0BCB  3001               	movlw	1	; select bank3/4
 11988  0BCC  0087               	movwf	7
 11989  0BCD  0181               	clrf	1
 11990  0BCE                     i1l2673:
 11991                           
 11992                           ;mcc_generated_files/eusart.c: 133:     if(RC1STAbits.FERR){
 11993  0BCE  0022               	movlb	2	; select bank2
 11994  0BCF  1D1D               	btfss	29,2	;volatile
 11995  0BD0  2BD2               	goto	u192_21
 11996  0BD1  2BD3               	goto	u192_20
 11997  0BD2                     u192_21:
 11998  0BD2  2BDF               	goto	i1l2679
 11999  0BD3                     u192_20:
 12000  0BD3                     i1l2675:
 12001                           
 12002                           ;mcc_generated_files/eusart.c: 134:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 12003  0BD3  087A               	movf	_eusartRxHead,w	;volatile
 12004  0BD4  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12005  0BD5  0086               	movwf	6
 12006  0BD6  3001               	movlw	1	; select bank3/4
 12007  0BD7  0087               	movwf	7
 12008  0BD8  1481               	bsf	1,1
 12009  0BD9                     i1l2677:
 12010                           
 12011                           ;mcc_generated_files/eusart.c: 135:         EUSART_FramingErrorHandler();
 12012  0BD9  0024               	movlb	4	; select bank4
 12013  0BDA  084C               	movf	(_EUSART_FramingErrorHandler+1)^(0+512),w
 12014  0BDB  008A               	movwf	10
 12015  0BDC  084B               	movf	_EUSART_FramingErrorHandler^(0+512),w
 12016  0BDD  000A               	callw
 12017  0BDE  318B               	pagesel	$
 12018  0BDF                     i1l2679:
 12019                           
 12020                           ;mcc_generated_files/eusart.c: 138:     if(RC1STAbits.OERR){
 12021  0BDF  0022               	movlb	2	; select bank2
 12022  0BE0  1C9D               	btfss	29,1	;volatile
 12023  0BE1  2BE3               	goto	u193_21
 12024  0BE2  2BE4               	goto	u193_20
 12025  0BE3                     u193_21:
 12026  0BE3  2BF0               	goto	i1l2685
 12027  0BE4                     u193_20:
 12028  0BE4                     i1l2681:
 12029                           
 12030                           ;mcc_generated_files/eusart.c: 139:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 12031  0BE4  087A               	movf	_eusartRxHead,w	;volatile
 12032  0BE5  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12033  0BE6  0086               	movwf	6
 12034  0BE7  3001               	movlw	1	; select bank3/4
 12035  0BE8  0087               	movwf	7
 12036  0BE9  1501               	bsf	1,2
 12037  0BEA                     i1l2683:
 12038                           
 12039                           ;mcc_generated_files/eusart.c: 140:         EUSART_OverrunErrorHandler();
 12040  0BEA  0024               	movlb	4	; select bank4
 12041  0BEB  084A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+512),w
 12042  0BEC  008A               	movwf	10
 12043  0BED  0849               	movf	_EUSART_OverrunErrorHandler^(0+512),w
 12044  0BEE  000A               	callw
 12045  0BEF  318B               	pagesel	$
 12046  0BF0                     i1l2685:
 12047                           
 12048                           ;mcc_generated_files/eusart.c: 143:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12049  0BF0  087A               	movf	_eusartRxHead,w	;volatile
 12050  0BF1  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 12051  0BF2  0086               	movwf	6
 12052  0BF3  3001               	movlw	1	; select bank3/4
 12053  0BF4  0087               	movwf	7
 12054  0BF5  0801               	movf	1,w
 12055  0BF6  1903               	btfsc	3,2
 12056  0BF7  2BF9               	goto	u194_21
 12057  0BF8  2BFA               	goto	u194_20
 12058  0BF9                     u194_21:
 12059  0BF9  2C01               	goto	i1l2689
 12060  0BFA                     u194_20:
 12061  0BFA                     i1l2687:
 12062                           
 12063                           ;mcc_generated_files/eusart.c: 144:         EUSART_ErrorHandler();
 12064  0BFA  0024               	movlb	4	; select bank4
 12065  0BFB  0848               	movf	(_EUSART_ErrorHandler+1)^(0+512),w
 12066  0BFC  008A               	movwf	10
 12067  0BFD  0847               	movf	_EUSART_ErrorHandler^(0+512),w
 12068  0BFE  000A               	callw
 12069  0BFF  318B               	pagesel	$
 12070                           
 12071                           ;mcc_generated_files/eusart.c: 145:     } else {
 12072  0C00  2C04               	goto	i1l103
 12073  0C01                     i1l2689:
 12074                           
 12075                           ;mcc_generated_files/eusart.c: 146:         EUSART_RxDataHandler();
 12076  0C01  3189  21DD  318B   	fcall	_EUSART_RxDataHandler
 12077  0C04                     i1l103:
 12078  0C04  0008               	return
 12079  0C05                     __end_of_EUSART_Receive_ISR:
 12080                           
 12081                           	psect	text47
 12082  08CB                     __ptext47:	
 12083 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12084 ;; Defined at:
 12085 ;;		line 166 in file "mcc_generated_files/eusart.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		None
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12099 ;;      Params:         0       0       0       0       0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0
 12102 ;;      Totals:         0       0       0       0       0       0       0       0
 12103 ;;Total ram usage:        0 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_EUSART_Initialize
 12109 ;;		_EUSART_Receive_ISR
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           
 12114                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 12115  08CB                     _EUSART_DefaultOverrunErrorHandler:
 12116  08CB                     i1l2503:	
 12117                           ;incstack = 0
 12118                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 12119                           
 12120                           
 12121                           ;mcc_generated_files/eusart.c: 169:     RC1STAbits.CREN = 0;
 12122  08CB  0022               	movlb	2	; select bank2
 12123  08CC  121D               	bcf	29,4	;volatile
 12124                           
 12125                           ;mcc_generated_files/eusart.c: 170:     RC1STAbits.CREN = 1;
 12126  08CD  161D               	bsf	29,4	;volatile
 12127  08CE                     i1l113:
 12128  08CE  0008               	return
 12129  08CF                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12130                           
 12131                           	psect	text48
 12132  0002                     __ptext48:	
 12133 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12134 ;; Defined at:
 12135 ;;		line 164 in file "mcc_generated_files/eusart.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;		None
 12138 ;; Auto vars:     Size  Location     Type
 12139 ;;		None
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  1    wreg      void 
 12142 ;; Registers used:
 12143 ;;		None
 12144 ;; Tracked objects:
 12145 ;;		On entry : 0/0
 12146 ;;		On exit  : 0/0
 12147 ;;		Unchanged: 0/0
 12148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12149 ;;      Params:         0       0       0       0       0       0       0       0
 12150 ;;      Locals:         0       0       0       0       0       0       0       0
 12151 ;;      Temps:          0       0       0       0       0       0       0       0
 12152 ;;      Totals:         0       0       0       0       0       0       0       0
 12153 ;;Total ram usage:        0 bytes
 12154 ;; Hardware stack levels used:    1
 12155 ;; This function calls:
 12156 ;;		Nothing
 12157 ;; This function is called by:
 12158 ;;		_EUSART_Initialize
 12159 ;;		_EUSART_Receive_ISR
 12160 ;; This function uses a non-reentrant model
 12161 ;;
 12162                           
 12163                           
 12164                           ;psect for function _EUSART_DefaultFramingErrorHandler
 12165  0002                     _EUSART_DefaultFramingErrorHandler:
 12166  0002                     i1l110:	
 12167                           ;incstack = 0
 12168                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12169                           
 12170  0002  0008               	return
 12171  0003                     __end_of_EUSART_DefaultFramingErrorHandler:
 12172                           
 12173                           	psect	text49
 12174  08C7                     __ptext49:	
 12175 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12176 ;; Defined at:
 12177 ;;		line 174 in file "mcc_generated_files/eusart.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12191 ;;      Params:         0       0       0       0       0       0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:    1
 12198 ;; This function calls:
 12199 ;;		_EUSART_RxDataHandler
 12200 ;; This function is called by:
 12201 ;;		_EUSART_Initialize
 12202 ;;		_EUSART_Receive_ISR
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           
 12207                           ;psect for function _EUSART_DefaultErrorHandler
 12208  08C7                     _EUSART_DefaultErrorHandler:
 12209  08C7                     i1l2505:	
 12210                           ;incstack = 0
 12211                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12212                           
 12213                           
 12214                           ;mcc_generated_files/eusart.c: 175:     EUSART_RxDataHandler();
 12215  08C7  3189  21DD  3188   	fcall	_EUSART_RxDataHandler
 12216  08CA                     i1l116:
 12217  08CA  0008               	return
 12218  08CB                     __end_of_EUSART_DefaultErrorHandler:
 12219                           
 12220                           	psect	text50
 12221  09DD                     __ptext50:	
 12222 ;; *************** function _EUSART_RxDataHandler *****************
 12223 ;; Defined at:
 12224 ;;		line 152 in file "mcc_generated_files/eusart.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;		None
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;  test            2    0        int 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12238 ;;      Params:         0       0       0       0       0       0       0       0
 12239 ;;      Locals:         2       0       0       0       0       0       0       0
 12240 ;;      Temps:          1       0       0       0       0       0       0       0
 12241 ;;      Totals:         3       0       0       0       0       0       0       0
 12242 ;;Total ram usage:        3 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_EUSART_Receive_ISR
 12248 ;;		_EUSART_DefaultErrorHandler
 12249 ;; This function uses a non-reentrant model
 12250 ;;
 12251                           
 12252                           
 12253                           ;psect for function _EUSART_RxDataHandler
 12254  09DD                     _EUSART_RxDataHandler:
 12255  09DD                     i1l2417:	
 12256                           ;incstack = 0
 12257                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12258                           
 12259                           
 12260                           ;mcc_generated_files/eusart.c: 154:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12261  09DD  0022               	movlb	2	; select bank2
 12262  09DE  0819               	movf	25,w	;volatile
 12263  09DF  00F0               	movwf	??_EUSART_RxDataHandler
 12264  09E0  087A               	movf	_eusartRxHead,w
 12265  09E1  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 12266  09E2  0086               	movwf	6
 12267  09E3  3002               	movlw	2	; select bank4/5
 12268  09E4  0087               	movwf	7
 12269  09E5  0870               	movf	??_EUSART_RxDataHandler,w
 12270  09E6  0081               	movwf	1
 12271  09E7                     i1l2419:
 12272  09E7  3001               	movlw	1
 12273  09E8  00F0               	movwf	??_EUSART_RxDataHandler
 12274  09E9  0870               	movf	??_EUSART_RxDataHandler,w
 12275  09EA  07FA               	addwf	_eusartRxHead,f	;volatile
 12276  09EB                     i1l2421:
 12277  09EB                     i1l2423:
 12278                           
 12279                           ;mcc_generated_files/eusart.c: 156:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12280  09EB  3027               	movlw	39
 12281  09EC  027A               	subwf	_eusartRxHead,w	;volatile
 12282  09ED  1C03               	skipc
 12283  09EE  29F0               	goto	u172_21
 12284  09EF  29F1               	goto	u172_20
 12285  09F0                     u172_21:
 12286  09F0  29F2               	goto	i1l2427
 12287  09F1                     u172_20:
 12288  09F1                     i1l2425:
 12289                           
 12290                           ;mcc_generated_files/eusart.c: 157:     {;mcc_generated_files/eusart.c: 158:         eus
      +                          artRxHead = 0;
 12291  09F1  01FA               	clrf	_eusartRxHead	;volatile
 12292  09F2                     i1l2427:
 12293                           
 12294                           ;mcc_generated_files/eusart.c: 160:     eusartRxCount++;
 12295  09F2  3001               	movlw	1
 12296  09F3  00F0               	movwf	??_EUSART_RxDataHandler
 12297  09F4  0870               	movf	??_EUSART_RxDataHandler,w
 12298  09F5  07F8               	addwf	_eusartRxCount,f	;volatile
 12299  09F6                     i1l107:
 12300  09F6  0008               	return
 12301  09F7                     __end_of_EUSART_RxDataHandler:
 12302  007E                     btemp	set	126	;btemp
 12303  007E                     int$flags	set	126
 12304  007E                     wtemp0	set	126
 12305  217C                     
 12306                           	psect	config
 12307                           
 12308                           ;Config register CONFIG1 @ 0x8007
 12309                           ;	External Oscillator mode selection bits
 12310                           ;	FEXTOSC = OFF, Oscillator not enabled
 12311                           ;	Power-up default value for COSC bits
 12312                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12313                           ;	Clock Out Enable bit
 12314                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12315                           ;	Clock Switch Enable bit
 12316                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12317                           ;	Fail-Safe Clock Monitor Enable bit
 12318                           ;	FCMEN = ON, FSCM timer enabled
 12319  8007                     	org	32775
 12320  8007  3FEC               	dw	16364
 12321                           
 12322                           ;Config register CONFIG2 @ 0x8008
 12323                           ;	Master Clear Enable bit
 12324                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12325                           ;	Power-up Timer Enable bit
 12326                           ;	PWRTE = OFF, PWRT disabled
 12327                           ;	Low-Power BOR enable bit
 12328                           ;	LPBOREN = OFF, ULPBOR disabled
 12329                           ;	Brown-out reset enable bits
 12330                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12331                           ;	Brown-out Reset Voltage Selection
 12332                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12333                           ;	Zero-cross detect disable
 12334                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12335                           ;	Peripheral Pin Select one-way control
 12336                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12337                           ;	Stack Overflow/Underflow Reset Enable bit
 12338                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12339                           ;	Background Debugger
 12340                           ;	DEBUG = OFF, Background Debugger disabled
 12341  8008                     	org	32776
 12342  8008  3FFF               	dw	16383
 12343                           
 12344                           ;Config register CONFIG3 @ 0x8009
 12345                           ;	WDT Period Select bits
 12346                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12347                           ;	WDT operating mode
 12348                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12349                           ;	WDT Window Select bits
 12350                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12351                           ;	WDT input clock selector
 12352                           ;	WDTCCS = SC, Software Control
 12353  8009                     	org	32777
 12354  8009  3F9F               	dw	16287
 12355                           
 12356                           ;Config register CONFIG4 @ 0x800A
 12357                           ;	UserNVM self-write protection bits
 12358                           ;	WRT = OFF, Write protection off
 12359                           ;	Scanner Enable bit
 12360                           ;	SCANE = available, Scanner module is available for use
 12361                           ;	Low Voltage Programming Enable bit
 12362                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12363  800A                     	org	32778
 12364  800A  3FFF               	dw	16383
 12365                           
 12366                           ;Config register CONFIG5 @ 0x800B
 12367                           ;	UserNVM Program memory code protection bit
 12368                           ;	CP = OFF, Program Memory code protection disabled
 12369                           ;	DataNVM code protection bit
 12370                           ;	CPD = OFF, Data EEPROM code protection disabled
 12371  800B                     	org	32779
 12372  800B  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        9
    BSS         234
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80     40      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            60      2      50
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_10(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1416_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> ShowbadBettery(BANK1[4]), no(BANK3[1]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[2]), STR_13(CODE[3]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> ShowbadBettery(BANK1[4]), STR_3(CODE[2]), no(BANK3[1]), STR_1(CODE[3]), 

    main@index_V_L	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_L(BIGRAM[34]), Coulomb_Data(BIGRAM[116]), 

    main@index_V_H	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_H(BIGRAM[34]), Coulomb_Data(BIGRAM[116]), 

    main@index	PTR unsigned int  size(2) Largest target is 116
		 -> Coulomb_Data.Voltage_L(BIGRAM[34]), Coulomb_Data.Voltage_H(BIGRAM[34]), Coulomb_Data.ID(BIGRAM[2]), Coulomb_Data(BIGRAM[116]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->___lwmod
    _sprintf->___lwdiv
    _sprintf->___lwmod
    _vfpfcnvrt->_fputc
    _dtoa->_abs
    _pad->_fputc
    _pad->_strlen
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_Delay
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _Get_Voltage->___lwdiv
    _BadBetteryFilter->_Sort

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   29765
                                             16 BANK1     24    24      0
                                              0 BANK4      2     2      0
                   _BadBetteryFilter
                              _Delay
                        _EUSART_Read
                       _EUSART_Write
                        _Get_Voltage
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8695
                                              0 BANK1     16    10      6
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7739
                                             72 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7320
                                             56 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5537
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3325
                                             13 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1491
                                              5 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1099
                                              5 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMMON     2     0      2
                                             16 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     592
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       2     2      0      34
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                        _master_init
 ---------------------------------------------------------------------------------
 (2) _master_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     484
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    3053
                                              1 BANK0      5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1    2898
                                              1 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2870
                                              1 BANK0      2     2      0
                              _Delay
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    2777
                              _Delay
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0    1483
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0    1421
                                              5 COMMON     2     2      0
                              _Delay
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              4 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              3 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     0      2    1294
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Get_Voltage                                         19    17      2    2832
                                              3 BANK0     19    17      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    2401
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      37
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BadBetteryFilter                                     8     8      0     582
                                              8 BANK0      8     8      0
                               _Sort
 ---------------------------------------------------------------------------------
 (2) _Sort                                                12    12      0     390
                                              3 COMMON     4     4      0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       2
                   Absolute function *
                 _EUSART_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       2
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       1
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                3     3      0       1
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BadBetteryFilter
     _Sort
   _Delay
   _EUSART_Read
   _EUSART_Write
   _Get_Voltage
     ___lwdiv
   _LCD_Clear
     _Delay
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _Delay
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _Delay
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _master_init
   _TMR0_ReadTimer
   ___lwdiv
   ___lwmod
   _sprintf
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     17D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     28      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               3C      2      32      14       83.3%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     17D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Feb 24 16:49:08 2021

                ?_EUSART_SetRxInterruptHandler 0073                                              _i 00C2  
                    __size_of_BadBetteryFilter 006B                                             l63 0B28  
                                           l90 0922                                             l84 0A9E  
                                           l87 091A                                             l96 08F8  
                                           _RS 01CE                                             _ch 0166  
                                           _no 01EF                                            l122 08EC  
                                          l125 08E0                                            l119 08E6  
                                          l400 06EF                                            l128 08F2  
                                          l402 06EF                                            l411 0E38  
                                          l181 0907                                            l502 0AF8  
                                          l247 0BC7                                            l175 0993  
                                          l184 092D                                            l417 0D5C  
                                          l265 095D                                            l442 093A  
                                          l178 0918                                            l274 08FF  
                                          l523 0939                                            l372 011F  
                                          l445 0945                                            l517 0951  
                                          l454 08DA                                            l463 0965  
                                          l448 08D4                                            l465 096A  
                                          l481 09AB                                            l466 096D  
                                          l475 0DC7                                            l484 09C3  
                                          l493 0A4B                                            l478 0980  
                                          l487 09DC                                            l775 07E2  
                                          l776 07F3                                            l955 0C41  
                                          l788 0FEE                                            l965 0B8E  
                                          l789 0FFF                                            _abs 0A11  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0C99  
               ?_EUSART_SetFramingErrorHandler 0073                        __size_of_PMD_Initialize 0008  
                                          wreg 0009                                __end_of_LCD_CMD 09C4  
                                 ?_EUSART_Read 0070                            LCD_Write_String@Str 0021  
                               _LCD_Set_Cursor 0ACA                                           l1210 0B59  
                                         l1203 0F15                                           ?_abs 0076  
                                         l1214 0A2C                                           l1217 0A2C  
                                         l1170 0CF1                                           l1138 0AC9  
                                         l1243 0A10                                           l1229 0C98  
                                         l1237 0A74                                           l1165 0CB5  
                                         l1173 0494                                           l1182 0545  
                                         l1174 049E                                           l3111 0C42  
                                         l1168 0CD7                                           l3201 07C4  
                                         l3105 091A                                           l3121 0C7A  
                                         l3113 0C47                                           l1178 04BC  
                                         l3211 0F4C                                           l3203 0F16  
                                         l3107 091F                                           l3123 0C8F  
                                         l3115 0C4C                                           l3131 0A4E  
                                         l1179 04D4                                           l1196 05BC  
                                         l3221 0F87                                           l3213 0F6B  
                                         l3205 0F17                                           l3109 08F4  
                                         l3117 0C51                                           l3133 0A51  
                                         l3141 09FD                                           l3301 0560  
                                         l3127 093A                                           l3151 08D2  
                                         l3231 0FD0                                           l3223 0F8B  
                                         l3215 0F78                                           l3207 0F21  
                                         l3119 0C5B                                           l3135 0A5F  
                                         l3143 0A01                                           l3311 058C  
                                         l3303 056D                                           l3129 093F  
                                         l3153 08D5                                           l3161 096B  
                                         l3401 0B13                                           l3225 0FAD  
                                         l3217 0F7B                                           l3209 0F42  
                                         l3137 0A64                                           l3145 0A0A  
                                         l3241 0CB3                                           l3233 0C9B  
                                         l3313 0591                                           l3321 05A9  
                                         l3305 057B                                           l3155 08D8  
                                         l3331 08DB                                           l3403 0B1A  
                                         l3411 0B94                                           l3171 071E  
                                         l3227 0FBD                                           l3219 0F83  
                                         l3139 09F8                                           l3251 0CE5  
                                         l3243 0CB8                                           l3235 0CA0  
                                         l3315 0597                                           l3307 0580  
                                         l3261 092F                                           l3149 08CF  
                                         l3157 095F                                           l3333 0995  
                                         l3501 09AE                                           l3325 08ED  
                                         l3405 0B26                                           l3421 0B9F  
                                         l3413 0B96                                           l3181 0763  
                                         l3173 0728                                           l3165 06F0  
                                         l3229 0FCB                                           l3245 0CC4  
                                         l3237 0CA9                                           l3317 059C  
                                         l3309 0587                                           l3341 0E3B  
                                         l3511 0C05                                           l3263 0933  
                                         l3159 0962                                           l3335 099A  
                                         l3503 09B0                                           l3327 08E1  
                                         l3431 0BB0                                           l3423 0BA8  
                                         l3415 0B98                                           l3407 0900  
                                         l3191 077E                                           l3183 0766  
                                         l3175 0747                                           l3167 06F2  
                                         l3255 0A11                                           l3247 0CC9  
                                         l3239 0CAE                                           l3319 05A0  
                                         l3271 0470                                           l3351 0E71  
                                         l3343 0E4C                                           l3521 0C1A  
                                         l3513 0C08                                           l3601 06B3  
                                         l3265 096F                                           l3337 099F  
                                         l3505 09B6                                           l3329 08E7  
                                         l3441 0BBC                                           l3433 0BB2  
                                         l3425 0BAA                                           l3417 0B9A  
                                         l3409 0B8F                                           l3193 07A0  
                                         l3185 076E                                           l3177 074C  
                                         l3169 06FC                                           l3257 0A1F  
                                         l3249 0CDC                                           l3281 04C4  
                                         l3273 0476                                           l3361 0EBD  
                                         l3353 0E82                                           l3345 0E54  
                                         l3531 0C37                                           l3523 0C1E  
                                         l3515 0C0E                                           l3603 06BE  
                                         l3259 092E                                           l3339 09A4  
                                         l3507 09C6                                           l3451 0913  
                                         l3443 0BBF                                           l3435 0BB4  
                                         l3427 0BAC                                           l3419 0B9D  
                                         l3195 07B0                                           l3187 0772  
                                         l3179 0756                                           l3291 04E1  
                                         l3283 04CA                                           l3275 0499  
                                         l3267 044D                                           l3363 0ECE  
                                         l3371 0EE7                                           l3355 0E8A  
                                         l3347 0E5A                                           l3621 0D4B  
                                         l3525 0C2D                                           l3517 0C11  
                                         l3533 0C3D                                           l3509 09C9  
                                         l3453 0914                                           l3445 0BC2  
                                         l3437 0BB6                                           l3429 0BAE  
                                         l3461 0958                                           l3197 07B1  
                                         l3189 0776                                           l3293 0510  
                                         l3285 04CF                                           l3277 04AE  
                                         l3269 045D                                           l3373 0EEF  
                                         l3365 0ED6                                           l3357 0EA3  
                                         l3349 0E5F                                           l3541 0B33  
                                         l3623 0D4F                                           l3615 0CF8  
                                         l3607 0CF2                                           l3551 0A75  
                                         l3527 0C31                                           l3519 0C16  
                                         l3631 0D6F                                           l3391 0B05  
                                         l3455 0917                                           l3447 0BC4  
                                         l3439 0BB9                                           l3463 095A  
                                         l3471 0928                                           l3711 0B6D  
                                         l3703 0B5A                                           l3199 07BF  
                                         l3295 0514                                           l3287 04D9  
                                         l3279 04B4                                           l3367 0EE1  
                                         l3543 0B47                                           l3617 0D1E  
                                         l3609 0CF5                                           l3561 0A98  
                                         l3553 0A7A                                           l3529 0C32  
                                         l3641 0D89                                           l3633 0D73  
                                         l3625 0D5F                                           l3393 0B07  
                                         l3385 0AF9                                           l3449 0910  
                                         l3457 0952                                           l3473 0929  
                                         l3465 0923                                           l3713 0B71  
                                         l3705 0B60                                           l3721 0B8A  
                                         l3297 0518                                           l3289 04DC  
                                         l3377 0EF2                                           l3545 0B51  
                                         l3537 0B2B                                           l3801 0169  
                                         l3491 0DF7                                           l3619 0D26  
                                         l3563 0A9A                                           l3555 0A8D  
                                         l3651 0DA6                                           l3643 0D90  
                                         l3635 0D7A                                           l3627 0D64  
                                         l3395 0B09                                           l3387 0AFB  
                                         l3459 0957                                           l3475 092B  
                                         l3467 0926                                           l3571 0981  
                                         l3715 0B7B                                           l3707 0B64  
                                         l3299 0553                                           l3379 0F0B  
                                         l3539 0B2F                                           l3811 019C  
                                         l3803 0178                                           l3731 0084  
                                         l3493 0E05                                           l3485 0DCD  
                                         l3477 0DC8                                           l3565 0A9C  
                                         l3557 0A91                                           l3549 0A75  
                                         l3661 0DC0                                           l3653 0DAA  
                                         l3645 0D94                                           l3637 0D7E  
                                         l3629 0D68                                           l3397 0B0B  
                                         l3389 0B02                                           l3469 0927  
                                         l3581 0990                                           l3573 0984  
                                         l3717 0B7F                                           l3709 0B69  
                                         l3901 03D2                                           l3821 01D8  
                                         l3813 019E                                           l3741 0098  
                                         l3733 0085                                           ?_pad 002D  
                                         l3495 0E0E                                           l3487 0DD1  
                                         l3479 0DC8                                           l3567 0A9D  
                                         l3559 0A97                                           l3591 060A  
                                         l3663 0946                                           l3655 0DB1  
                                         l3647 0D9B                                           l3639 0D85  
                                         l3671 0AD9                                           l3399 0B0C  
                                         l3575 0987                                           l3583 08F9  
                                         l3719 0B84                                           l3911 0425  
                                         l3903 03E9                                           l3831 01E4  
                                         l3823 01DC                                           l3815 01BF  
                                         l3751 00AC                                           l3743 00A0  
                                         l3735 0086                                           l3489 0DEE  
                                         l3497 0E12                                           l3593 063B  
                                         l3657 0DB5                                           l3649 0D9F  
                                         l3673 0ADF                                           l3665 0ACC  
                                         l3577 098A                                           l3913 042D  
                                         l3905 03F1                                           l3841 0219  
                                         l3833 01EB                                           l3817 01C1  
                                         l3809 017B                                           l3761 00CA  
                                         l3753 00AD                                           l3737 0095  
                                         l3729 0081                                           l3499 0E26  
                                         l3595 0646                                           l3587 05BD  
                                         l3659 0DBC                                           l3667 0ACD  
                                         l3675 0AE5                                           l3683 0A2D  
                                         l3579 098D                                           l3691 0A9F  
                                         l3915 0434                                           l3907 0413  
                                         l3851 026D                                           l3843 0223  
                                         l3835 01F3                                           l3819 01D5  
                                         l3771 00F2                                           l3763 00CE  
                                         l3755 00B2                                           l3739 0095  
                                         l3597 0677                                           l3589 05FF  
                                         l3669 0AD3                                           l3685 0A31  
                                         l3693 0AA8                                           l3917 0439  
                                         l3909 041B                                           l3861 02C1  
                                         l3853 0277                                           l3845 022B  
                                         l3837 01FD                                           l3829 01E1  
                                         l3781 011A                                           l3773 0100  
                                         l3765 00D3                                           l3749 00A3  
                                         l3757 00BF                                           l3599 0682  
                                         l3687 0A3B                                           l3695 0AAA  
                                         l3871 02EC                                           l3863 02CB  
                                         l3855 027F                                           l3847 0235  
                                         l3839 0211                                           l3783 0123  
                                         l3775 0106                                           l3767 00E1  
                                         l3759 00C5                                           l3689 0A40  
                                         l3697 0AAC                                           l3881 0332  
                                         l3873 02F4                                           l3865 02D3  
                                         l3857 0289                                           l3849 0265  
                                         l3785 012C                                           l3777 010E  
                                         l3769 00E5                                           l3699 0ABD  
                                         l3891 036D                                           l3883 033A  
                                         l3875 02FE                                           l3867 02DA  
                                         l3859 02B9                                           l3795 013C  
                                         l3779 0113                                           l3787 0134  
                                         l3893 0384                                           l3885 0344  
                                         l3877 0306                                           l3869 02E2  
                                         l3797 0147                                           l3789 0139  
                                         l3895 039B                                           l3887 034C  
                                         l3879 0310                                           l3799 0165  
                                         l3897 03A4                                           l3889 0356  
                                         l3987 0AED                                           l3899 03BB  
                                         STR_1 0806                                           STR_2 0803  
                                         STR_3 080B                                           STR_4 0803  
                                         STR_5 0809                                           STR_6 0803  
                                         STR_7 080F                                           STR_8 080D  
                                         STR_9 080B                                           u3010 0C2D  
                                         u3011 0C2C                                           u3100 06BE  
                                         u3005 0C1F                                           u3101 06BD  
                                         _LATA 0016                                           u3110 0D1E  
                                         u3030 0C3D                                           _LATB 0017  
                                         u3111 0D1D                                           u3031 0C3C  
                                         u3015 0C29                                           _LATC 0018  
                                         u3120 0D5C                                           u2400 093F  
                                         u3040 0B51                                           u3200 0091  
                                         u3121 0D5B                                           u3025 0C33  
                                         u2401 093E                                           u3041 0B50  
                                         u3050 0A7A                                           u2410 0945  
                                         u3130 0A4B                                           u3210 00A0  
                                         u3051 0A79                                           u2411 0944  
                                         u3131 0A4A                                           u3211 009F  
                                         u3060 0A97                                           u3140 0B60  
                                         u2500 0763                                           u2420 0A74  
                                         u3300 0178                                           u3220 00BF  
                                         u3125 0D58                                           u3061 0A96  
                                         u3141 0B5F                                           u2501 0762  
                                         u2421 0A73                                           u3301 0177  
                                         u3221 00BE                                           u3070 060A  
                                         u2510 0776                                           u2350 091F  
                                         u2430 0A0A                                           u3310 019C  
                                         u3230 00C5                                           u3071 0609  
                                         u2511 0775                                           u2351 091E  
                                         u2431 0A09                                           u3311 019B  
                                         u3231 00C4                                           u3080 0646  
                                         u2440 096A                                           u3160 0B71  
                                         u2520 07A0                                           u2600 0F78  
                                         u2360 0C47                                           u3400 0448  
                                         u3320 01BF                                           u3240 00F2  
                                         u3081 0645                                           u2441 0969  
                                         u3161 0B70                                           u2521 079F  
                                         u2601 0F77                                           u2361 0C46  
                                         u3401 0447                                           u3321 01BE  
                                         u3305 0174                                           u3241 00F1  
                                         u3225 00BB                                           u3090 0682  
                                         u3170 0B7B                                           u2530 07BF  
                                         u2450 06FC                                           u2610 0F8B  
                                         u2370 0C4C                                           u3330 01D5  
                                         u3250 0100                                           u3091 0681  
                                         u3171 0B7A                                           u3155 0B65  
                                         u2531 07BE                                           u2451 06FB  
                                         u2611 0F8A                                           u2371 0C4B  
                                         u3331 01D4                                           u3251 00FF  
                                         u2540 07C4                                           u2620 0FAD  
                                         u2700 0A1F                                           u2380 0C5B  
                                         u3340 036D                                           u3260 010E  
                                         u2541 07C3                                           u2525 079C  
                                         u2621 0FAC                                           u2701 0A1E  
                                         u2381 0C5A                                           u3405 0444  
                                         u3341 036C                                           u3261 010D  
                                         u3245 00EE                                           u2710 0939  
                                         u3190 0B8A                                           u2470 0728  
                                         u2630 0FCB                                           u2390 0C7A  
                                         u3350 0384                                           u3270 011A  
                                         u2711 0938                                           u3191 0B89  
                                         u3175 0B77                                           u2471 0727  
                                         u2631 0FCA                                           u2391 0C79  
                                         u3351 0383                                           u3335 01D1  
                                         u3271 0119                                           u3255 00FC  
                                         u2640 0FD0                                           u2560 0F21  
                                         u2800 0553                                           u2720 0468  
                                         u3360 039B                                           u3280 0123  
                                         u3185 0B80                                           u2641 0FCF  
                                         u2625 0FA9                                           u2561 0F20  
                                         u2705 0A1B                                           u2801 0552  
                                         u2721 0466                                           u3361 039A  
                                         u3281 0122                                           u2490 0753  
                                         u2810 0560                                           u2730 0469  
                                         u3370 03BB                                           u3290 0139  
                                         u2395 0C76                                           u2811 055F  
                                         u3371 03BA                                           u3291 0138  
                                         u2580 0F4C                                           u2660 0CA0  
                                         u2820 056D                                           u2740 0476  
                                         u2900 0E82                                           u3380 03D2  
                                         u2581 0F4B                                           u2661 0C9F  
                                         u2821 056C                                           u2805 054F  
                                         u2741 0475                                           u2901 0E81  
                                         u3381 03D1                                           u2670 0CAE  
                                         u2830 057B                                           u2910 0ECE  
                                         u3390 03E9                                           u2671 0CAD  
                                         u2831 057A                                           u2911 0ECD  
                                         u3391 03E8                                           u2920 0DEE  
                                         u2680 0CD7                                           u2840 0580  
                                         u2760 0499                                           u2921 0DED  
                                         u2681 0CD6                                           u2841 057F  
                                         u2825 0569                                           u2761 0498  
                                         u2930 0E26                                           u2690 0CDC  
                                         u2850 0587                                           u2770 04AE  
                                         u2931 0E25                                           u2691 0CDB  
                                         u2851 0586                                           u2835 0577  
                                         u2771 04AD                                           u2940 0E38  
                                         u2860 058C                                           u2780 04CA  
                                         _PMD0 0796                                           u2941 0E37  
                                         u2925 0DEA                                           u2685 0CD3  
                                         u2861 058B                                           u2781 04C9  
                                         _PMD1 0797                                           u2870 0597  
                                         u2790 04CF                                           _PMD2 0798  
                                         u2935 0E22                                           u2871 0596  
                                         u2791 04CE                                           u2775 04AA  
                                         _PMD3 0799                                           u2880 0E4C  
                                         _PMD4 079A                                           u2945 0E34  
                                         u2881 0E4B                                           _PMD5 079B  
                                         u2970 0C0E                                           u2890 0E71  
                                         u2971 0C0D                                           u2955 09BA  
                                         u2891 0E70                                           u2965 09D3  
                                         u2990 0C1E                                           u2991 0C1D  
                                         u2985 0C12                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUE 0F65                                   _Voltage_sort 0142  
                                         _Sort 0DC8                              ?_LCD_Write_String 0021  
                                         abs@a 0076                                           _dbuf 01CF  
                                         _main 0081                                           _dtoa 044B  
                           __size_of_LCD_Clear 000C                            __end_of_Get_Voltage 06F0  
                                         _prec 01CB                                           _nout 01C7  
                                         pad@i 0031                                           pad@p 002E  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 0033                                           btemp 007E  
                                         start 0027                             ??_LCD_Write_String 0023  
                         LCD_Write_4Bit@Nibble 0076                                          ??_abs 0030  
                                        ??_pad 0030                        __end_of_TMR0_Initialize 095E  
                             __end_of_LCD_Init 0DC8                               ?_I2C_Master_Wait 0070  
                                ?_EUSART_Write 0070                               ?_I2C_Master_Stop 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0919  
                                        ?_Sort 0070                                __end_of___aodiv 07F4  
                                        ?_main 0070                                          ?_dtoa 003A  
                              __end_of___aomod 1000                                          STR_10 0803  
                                        STR_11 0809                                          STR_12 0801  
                                        STR_13 0800                                          STR_14 0803  
                                        STR_15 080F                                __end_of___lwdiv 0C42  
                                        i1l110 0002                                          i1l103 0C04  
                                        i1l113 08CE                                          i1l107 09F6  
                                        i1l116 08CA                                          i1l308 0025  
                              __end_of___lwmod 0B8F                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 0058                                          _TMR0H 001D  
                                        _TMR0L 001C                                          _PORTA 000C  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                                          _RXPPS 0ECB  
                                        _Delay 092E                         __end_of_LCD_Set_Cursor 0AF9  
                                 ?_master_init 0070                                          Sort@i 0024  
                                        Sort@j 0026                                          _flags 0164  
                                        _fputc 0C42                                          _fputs 0A4C  
                                        pad@fp 0035                                          _width 01C9  
                                        _putch 08F3                                          main@i 00EC  
                                        main@j 024F                                          dtoa@d 003A  
                                        dtoa@i 0056                                          dtoa@n 004E  
                                        dtoa@p 0048                                          dtoa@s 004C  
                                        dtoa@w 004A                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 0ACA                                 _LCD_Write_4Bit 0994  
                               _LCD_Write_Char 09C4                                __initialization 0029  
                                 __end_of_Sort 0E39                                   __end_of_main 044B  
                                 __end_of_dtoa 05BD                              _IO_Expander_Write 096E  
                               ??_EUSART_Write 0073                    ?_INTERRUPT_InterruptManager 0070  
                           ?_IO_Expander_Write 0070                                         ??_Sort 0073  
               ??_EUSART_SetRxInterruptHandler 0075                                         ??_main 00D8  
                                       ??_dtoa 0042                              BadBetteryFilter@k 002E  
                            __end_of_LCD_Clear 0952                                      ??_LCD_CMD 0077  
                                       ?_Delay 0073                              ?_I2C_Master_Start 0070  
                            ?_I2C_Master_Write 0070                            ??_IO_Expander_Write 0074  
                              ?_LCD_Set_Cursor 0021                             ??_I2C_Master_Start 0073  
    __end_of_EUSART_DefaultFramingErrorHandler 0003     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0002                                    _Get_Voltage 05BD  
                           ??_I2C_Master_Write 0073                     _EUSART_OverrunErrorHandler 0249  
                                       ?_fputc 0075                                         ?_fputs 0025  
                                       _ANSELA 0F38                                         ?_putch 0070  
                                       _ANSELB 0F43                                         _ANSELC 0F4E  
                                       _T0CON0 001E                                         _T0CON1 001F  
                                       _RC1REG 0119                                         _RC1STA 011D  
                                       _RC3PPS 0F23                                         _RC4PPS 0F24  
                                main@index_V_H 00E6                                  main@index_V_L 00E8  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       _ODCONC 0F50                                         _RC6PPS 0F26  
                                       i1l2421 09EB                                         i1l2423 09EB  
                                       i1l2503 08CB                                         i1l2425 09F1  
                                       i1l2417 09DD                                         i1l2505 08C7  
                                       i1l2427 09F2                                         i1l2419 09E7  
                                       u210_20 0013                                         u210_21 0012  
                                       i1l2671 0BC8                                         u211_20 0023  
                                       i1l2681 0BE4                                         i1l2673 0BCE  
                                       u211_21 0020                                         i1l2683 0BEA  
                                       i1l2675 0BD3                                         i1l2851 000F  
                                       i1l2685 0BF0                                         i1l2677 0BD9  
                                       i1l2853 0013                                         i1l2687 0BFA  
                                       i1l2679 0BDF                                         i1l2855 0019  
                                       i1l2847 0006                                         i1l2689 0C01  
                                       i1l2849 000A                                         u212_24 0025  
                                       u208_20 000A                                         u208_21 0009  
                                       _INLVLA 0F3C                                         _INLVLB 0F47  
                                       _INLVLC 0F52                                         _INLVLE 0F68  
                                       u209_20 000F                                         u209_21 000E  
                                       u172_20 09F1                                         u172_21 09F0  
                                       u192_20 0BD3                                         u192_21 0BD2  
                                       u193_20 0BE4                                         u193_21 0BE3  
                                       u194_20 0BFA                                         u194_21 0BF9  
                                       _OSCFRQ 0893                                         u246lld 071B  
                                       _TX1REG 011A                                         u255lld 07E2  
                                       u248lld 0747                                         u265lld 0FEE  
                                       u257lld 0F40                                         _TX1STA 011E  
                                       u259lld 0F6B                                         u275lld 0494  
                       __end_of_LCD_Write_4Bit 09AC                         __end_of_LCD_Write_Char 09DD  
                    __end_of_IO_Expander_Write 0981                                   vfprintf@cfmt 006E  
                                    ??___aodiv 0073                                      ??___aomod 0073  
                             _BadBetteryFilter 0CF2                                      ??___lwdiv 0077  
                                    ??___lwmod 0077                               ?_TMR0_Initialize 0070  
                                       pad@buf 002D                                         dtoa@fp 0045  
                                       _strlen 09F7                                         fputc@c 0075  
                               _PMD_Initialize 0900                                         fputs@c 0029  
                                       fputs@i 002A                                         fputs@s 002C  
                             __end_of_vfprintf 0B5A                                      ??_sprintf 00CE  
                                   _badBettery 00A0                           __size_of_EUSART_Read 002A  
                            _SYSTEM_Initialize 0981                        __end_of__initialization 007D  
                                    ?_LCD_Init 0070                                ?_LCD_Write_4Bit 0070  
                           ?_SYSTEM_Initialize 0070                                ?_LCD_Write_Char 0070  
                                __end_of_Delay 093A                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0908                                   __pidataBANK4 0003  
                          ??_SYSTEM_Initialize 0075                                  __end_of_fputc 0C99  
                                __end_of_fputs 0A75                                  __end_of_putch 08F9  
                      __size_of_TMR0_ReadTimer 0007                         __end_of_PMD_Initialize 0908  
                                      ??_Delay 0075                           _eusartRxStatusBuffer 01A0  
              ??_EUSART_SetOverrunErrorHandler 0075                                        ??_fputc 0020  
                    __end_of_SYSTEM_Initialize 0994                                        ??_fputs 0026  
                                      ??_putch 0074                           __size_of_master_init 000B  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                         __end_of_EUSART_Write 0923                                     ??_LCD_Init 0021  
                  __size_of_EUSART_Receive_ISR 003D                     __size_of_IO_Expander_Write 0013  
                                   __pmaintext 0081                                     __pintentry 0004  
                    __size_of_LCD_Write_String 001F                   ??_EUSART_DefaultErrorHandler 0073  
                              ?_PMD_Initialize 0070                                        ?_strlen 0073  
                                      _LCD_CMD 09AC                                  _eusartRxCount 0078  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                           __size_of_vfpfcnvrt 00DD                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCTUNE 0892                                        _SSP1ADD 018D  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                                        _SSP1BUF 018C  
                                      _SSP1MSK 018E                       ??_EUSART_SetErrorHandler 0075  
                                      _i2c_add 01CD            __size_of_EUSART_DefaultErrorHandler 0004  
                                      ___aodiv 06F0                                        ___aomod 0F16  
                                      Sort@tmp 0020                                        ___lwdiv 0C05  
                                      ___lwmod 0B5A                                      ?_vfprintf 0068  
                             ??_LCD_Set_Cursor 0022                                 _ShowbadBettery 00C4  
                                      __ptext1 0A9F                                        __ptext2 0B29  
                                      __ptext3 0E39                                        __ptext4 044B  
                                      __ptext5 0C99                                        __ptext6 09F7  
                                      __ptext7 0A4C                                        __ptext8 0C42  
                                      __ptext9 08F3                                __size_of_strlen 001A  
                        _OSCILLATOR_Initialize 0910                                   __size_of_abs 001C  
                                 __size_of_pad 0059                       ??_PIN_MANAGER_Initialize 0073  
                     __size_of_I2C_Master_Wait 000C                       __size_of_I2C_Master_Stop 0006  
                                    _LCD_Clear 0946                                   ?_Get_Voltage 0023  
                   __size_of_SYSTEM_Initialize 0013                                        _sprintf 0A9F  
                                      clrloop0 07F5                                        main@out 00DE  
                     __end_of_BadBetteryFilter 0D5D                           end_of_initialization 007D  
        __end_of_EUSART_SetOverrunErrorHandler 08ED         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 08E7                                        fputc@fp 0077  
                                      fputs@fp 0025                              _EUSART_Initialize 0AF9  
                    __size_of_I2C_Master_Start 0006                      __size_of_I2C_Master_Write 0010  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0F16  
                        TMR0_ReadTimer@readVal 0074                                     main@F12104 0168  
                                 _Coulomb_Data 217C                                     ??_vfprintf 006B  
                               _TMR0_ReadTimer 08F9                                        strlen@a 0076  
                                      strlen@s 0077                            ??_EUSART_Initialize 0075  
                                    _PORTAbits 000C                                     LCD_CMD@CMD 0020  
                        __size_of_EUSART_Write 000A                                     ?_LCD_Clear 0070  
                             ??_LCD_Write_4Bit 0075                __size_of_EUSART_SetErrorHandler 0006  
                            LCD_Write_String@i 0024                               ??_LCD_Write_Char 0077  
                    __end_of_EUSART_Initialize 0B29                              __size_of_LCD_Init 006B  
                       __end_of_TMR0_ReadTimer 0900                                   Delay@counter 0073  
           __end_of_EUSART_DefaultErrorHandler 08CB                     _EUSART_DefaultErrorHandler 08C7  
                                  vfpfcnvrt@ap 0059                                    vfpfcnvrt@fp 0067  
                                  vfpfcnvrt@ll 005F                               _LCD_Write_String 0A2D  
                                 _EUSART_Write 0919                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_strlen 0A11                            start_initialization 0029  
                     __size_of_TMR0_Initialize 000C                __size_of_PIN_MANAGER_Initialize 0039  
                                  __end_of_abs 0A2D                                    __end_of_pad 0CF2  
                                ??_EUSART_Read 0073   EUSART_SetRxInterruptHandler@interruptHandler 0073  
                                  putch@txData 0074                              ??_I2C_Master_Wait 0073  
                            ??_I2C_Master_Stop 0073                 ?_EUSART_SetOverrunErrorHandler 0073  
                                  vfprintf@fmt 0068                     _EUSART_FramingErrorHandler 024B  
                             ??_PMD_Initialize 0073                                ?_TMR0_ReadTimer 0070  
                       _EUSART_SetErrorHandler 08DB                                    __pdataBANK2 0168  
                                  __pdataBANK4 0251                                       ??_strlen 0075  
                                     ?_LCD_CMD 0070                                    __pbssBIGRAM 217C  
                                  _diffBettery 0120                                    __pbssCOMMON 0078  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C8                                  __pcstackBANK4 024F  
                                ??_master_init 0073                               ___aodiv@dividend 0028  
                                  ??_LCD_Clear 0078                           __size_of_Get_Voltage 0133  
                   __end_of_EUSART_Receive_ISR 0C05                     __size_of_EUSART_Initialize 0030  
             _EUSART_RxDefaultInterruptHandler 024D                            __end_of_EUSART_Read 0A9F  
                                    __pnvBANK4 0247                               _I2C_Master_Start 08CF  
                             _I2C_Master_Write 095E                   __end_of_EUSART_RxDataHandler 09F7  
                             ___lwdiv@dividend 0075                         _PIN_MANAGER_Initialize 0B8F  
                                    _dtoa$1489 0046                          IO_Expander_Write@Data 0074  
                         EUSART_Read@readValue 0074                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0032  
                                     ?___lwdiv 0073                                       ?___lwmod 0073  
                                 _eusartRxHead 007A                                   _eusartRxTail 0079  
                         I2C_Master_Write@data 0073                   ??_INTERRUPT_InterruptManager 0073  
                            __size_of_vfprintf 0031                                       _BAUD1CON 011F  
                               __size_of_Delay 000C                               ___lwdiv@quotient 0021  
                                     ?_sprintf 00C8                                 __size_of_fputc 0057  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                            ?_BadBetteryFilter 0070                                 _eusartRxBuffer 0220  
                          __end_of_master_init 092E                              ??_TMR0_Initialize 0073  
                                     _LCD_Init 0D5D                             ??_BadBetteryFilter 0028  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0073  
                                    clear_ram0 07F4                                       _PIE3bits 0719  
                            _eusartRxLastError 0167            __size_of_INTERRUPT_InterruptManager 0023  
                                     _PIR0bits 070C                ??_EUSART_SetFramingErrorHandler 0075  
                                     _PIR3bits 070F                                       _SSP1CON1 0190  
                                     _SSP1CON2 0191      __end_of_EUSART_DefaultOverrunErrorHandler 08CF  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 08CB  
                                     _SSP1STAT 018F                                      _vfpfcnvrt 0E39  
                                    main@index 00EA                               __size_of_LCD_CMD 0018  
                                  _EUSART_Read 0A75                       __end_of_LCD_Write_String 0A4C  
                                   vfprintf@ap 006A                                     vfprintf@fp 006D  
                      ??_OSCILLATOR_Initialize 0073                            _EUSART_ErrorHandler 0247  
                             __size_of___aodiv 0104                               __size_of___aomod 00EA  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0058  
                             __size_of___lwdiv 003D                               __size_of___lwmod 0035  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0030  
                                 Get_Voltage@k 0023                                     sprintf@fmt 00CA  
                                   _T0CON0bits 001E                                _I2C_Master_Wait 093A  
                              _I2C_Master_Stop 08D5                                ___lwdiv@divisor 0073  
                         _EUSART_RxDataHandler 09DD                                    _master_init 0923  
                              ___lwdiv@counter 0020                                       __ptext10 0919  
                                     __ptext11 0A11                                       __ptext20 0B8F  
                                     __ptext12 0F16                                       __ptext21 0910  
                                     __ptext13 06F0                                       __ptext30 0D5D  
                                     __ptext22 0AF9                                       __ptext14 0B5A  
                                     __ptext31 0946                                       __ptext23 08ED  
                                     __ptext15 08F9                                       __ptext40 05BD  
                                     __ptext32 09AC                                       __ptext24 08E7  
                                     __ptext16 0981                                       __ptext41 0C05  
                                     __ptext33 0994                                       __ptext25 08E1  
                                     __ptext17 0923                                       __ptext50 09DD  
                                     __ptext42 0A75                                       __ptext34 096E  
                                     __ptext26 08DB                                       __ptext18 0952  
                                     __ptext43 0CF2                                       __ptext35 095E  
                                     __ptext27 0A2D                                       __ptext19 0900  
                                     __ptext44 0DC8                                       __ptext36 08D5  
                                     __ptext28 09C4                                       __ptext37 08CF  
                                     __ptext29 0ACA                                       __ptext46 0BC8  
                                     __ptext38 093A                                       __ptext47 08CB  
                                     __ptext39 092E                                       __ptext48 0002  
                                     __ptext49 08C7                                   _SSP1CON2bits 0191  
                      __size_of_LCD_Set_Cursor 002F                               __size_of_sprintf 002B  
                                __size_of_Sort 0071                                _BackLight_State 0251  
                                __size_of_main 03CA                                  __size_of_dtoa 0172  
                             ??_TMR0_ReadTimer 0073                        ?_EUSART_SetErrorHandler 0073  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0073  
                                     int$flags 007E                                       _vfprintf 0B29  
           __end_of_INTERRUPT_InterruptManager 0027                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 08E7         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 08E1                                   _SSP1STATbits 018F  
                             ___aomod@dividend 0028                       __end_of_I2C_Master_Start 08D5  
                     __end_of_I2C_Master_Write 096E                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                             LCD_Write_Char@Data 0020  
                                     intlevel1 0000                                      sprintf@ap 00D1  
                              main@H_L_counter 00EE                               ___lwmod@dividend 0075  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 08E1  
         __end_of_EUSART_SetRxInterruptHandler 08F3          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 08ED                        __size_of_LCD_Write_4Bit 0018  
                      __size_of_LCD_Write_Char 0019                             _EUSART_Receive_ISR 0BC8  
EUSART_SetFramingErrorHandler@interruptHandler 0073                                ___aomod@divisor 0020  
                      __end_of_I2C_Master_Wait 0946                        __end_of_I2C_Master_Stop 08DB  
                                  ??_vfpfcnvrt 005A                                ___aomod@counter 0074  
                              LCD_Init@I2C_Add 0022                                  __pstringtext1 0800  
                                __pstringtext2 0803                                  __pstringtext3 0806  
                                __pstringtext4 0809                                  __pstringtext5 080B  
                                __pstringtext6 080D                                  __pstringtext7 080F  
                                __pstringtext8 0000                                       sprintf@f 00D2  
                                     sprintf@s 00C8                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0EC6                                     _SSP1CLKPPS 0EC5  
                              ___lwmod@divisor 0073                                _TMR0_Initialize 0952  
                              ___lwmod@counter 0020                              LCD_Set_Cursor@COL 0021  
                            LCD_Set_Cursor@ROW 0024                                  ??_Get_Voltage 0025  
                                   _TX1STAbits 011E                             EUSART_Write@txData 0073  
                                 ___aodiv@sign 0031                 __end_of_PIN_MANAGER_Initialize 0BC8  
                         ??_EUSART_Receive_ISR 0073                                   ___aomod@sign 0075  
